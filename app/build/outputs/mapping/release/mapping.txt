android.net.compatibility.WebAddress -> android.net.compatibility.WebAddress:
    java.lang.String toString() -> toString
    void setScheme(java.lang.String) -> setScheme
    java.lang.String getScheme() -> getScheme
    void setHost(java.lang.String) -> setHost
    java.lang.String getHost() -> getHost
    void setPort(int) -> setPort
    int getPort() -> getPort
    void setPath(java.lang.String) -> setPath
    java.lang.String getPath() -> getPath
    void setAuthInfo(java.lang.String) -> setAuthInfo
    java.lang.String getAuthInfo() -> getAuthInfo
android.net.http.AndroidHttpClient -> android.net.http.AndroidHttpClient:
    long DEFAULT_SYNC_MIN_GZIP_BYTES -> DEFAULT_SYNC_MIN_GZIP_BYTES
    android.net.http.AndroidHttpClient newInstance(java.lang.String,android.content.Context) -> newInstance
    android.net.http.AndroidHttpClient newInstance(java.lang.String) -> newInstance
    void finalize() -> finalize
    void modifyRequestToAcceptGzipResponse(org.apache.http.HttpRequest) -> modifyRequestToAcceptGzipResponse
    java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity) -> getUngzippedContent
    void close() -> close
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.entity.AbstractHttpEntity getCompressedEntity(byte[],android.content.ContentResolver) -> getCompressedEntity
    long getMinGzipSize(android.content.ContentResolver) -> getMinGzipSize
    void enableCurlLogging(java.lang.String,int) -> enableCurlLogging
    void disableCurlLogging() -> disableCurlLogging
    long parseDate(java.lang.String) -> parseDate
android.net.http.AndroidHttpClientConnection -> android.net.http.AndroidHttpClientConnection:
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    java.lang.String toString() -> toString
    boolean isOpen() -> isOpen
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    void doFlush() -> doFlush
    void flush() -> flush
    org.apache.http.StatusLine parseResponseHeader(android.net.http.Headers) -> parseResponseHeader
    org.apache.http.HttpEntity receiveResponseEntity(android.net.http.Headers) -> receiveResponseEntity
    boolean isStale() -> isStale
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
android.net.http.CertificateChainValidator -> android.net.http.CertificateChainValidator:
    android.net.http.CertificateChainValidator getInstance() -> getInstance
    android.net.http.SslError doHandshakeAndValidateServerCertificates(android.net.http.HttpsConnection,javax.net.ssl.SSLSocket,java.lang.String) -> doHandshakeAndValidateServerCertificates
    android.net.http.SslError verifyServerCertificates(byte[][],java.lang.String,java.lang.String) -> verifyServerCertificates
    void handleTrustStorageUpdate() -> handleTrustStorageUpdate
android.net.http.Connection -> android.net.http.Connection:
    android.net.http.SslCertificate mCertificate -> mCertificate
    android.net.http.AndroidHttpClientConnection mHttpClientConnection -> mHttpClientConnection
    java.lang.String toString() -> toString
android.net.http.DelegatingSSLSession -> android.net.http.DelegatingSSLSession:
    int getApplicationBufferSize() -> getApplicationBufferSize
    java.lang.String getCipherSuite() -> getCipherSuite
    long getCreationTime() -> getCreationTime
    byte[] getId() -> getId
    long getLastAccessedTime() -> getLastAccessedTime
    java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    int getPacketBufferSize() -> getPacketBufferSize
    javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    java.lang.String getPeerHost() -> getPeerHost
    int getPeerPort() -> getPeerPort
    java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    java.lang.String getProtocol() -> getProtocol
    javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    java.lang.Object getValue(java.lang.String) -> getValue
    java.lang.String[] getValueNames() -> getValueNames
    void invalidate() -> invalidate
    boolean isValid() -> isValid
    void putValue(java.lang.String,java.lang.Object) -> putValue
    void removeValue(java.lang.String) -> removeValue
android.net.http.DelegatingSSLSession$CertificateWrap -> android.net.http.DelegatingSSLSession$CertificateWrap:
    java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
android.net.http.EventHandler -> android.net.http.EventHandler:
    int ERROR -> ERROR
    int ERROR_AUTH -> ERROR_AUTH
    int ERROR_BAD_URL -> ERROR_BAD_URL
    int ERROR_CONNECT -> ERROR_CONNECT
    int ERROR_FAILED_SSL_HANDSHAKE -> ERROR_FAILED_SSL_HANDSHAKE
    int ERROR_IO -> ERROR_IO
    int ERROR_LOOKUP -> ERROR_LOOKUP
    int ERROR_PROXYAUTH -> ERROR_PROXYAUTH
    int ERROR_REDIRECT_LOOP -> ERROR_REDIRECT_LOOP
    int ERROR_TIMEOUT -> ERROR_TIMEOUT
    int ERROR_UNSUPPORTED_AUTH_SCHEME -> ERROR_UNSUPPORTED_AUTH_SCHEME
    int ERROR_UNSUPPORTED_SCHEME -> ERROR_UNSUPPORTED_SCHEME
    int FILE_ERROR -> FILE_ERROR
    int FILE_NOT_FOUND_ERROR -> FILE_NOT_FOUND_ERROR
    int OK -> OK
    int TOO_MANY_REQUESTS_ERROR -> TOO_MANY_REQUESTS_ERROR
    void status(int,int,int,java.lang.String) -> status
    void headers(android.net.http.Headers) -> headers
    void data(byte[],int) -> data
    void endData() -> endData
    void certificate(android.net.http.SslCertificate) -> certificate
    void error(int,java.lang.String) -> error
    boolean handleSslErrorRequest(android.net.http.SslError) -> handleSslErrorRequest
android.net.http.Headers -> android.net.http.Headers:
    java.lang.String ACCEPT_RANGES -> ACCEPT_RANGES
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    int CONN_CLOSE -> CONN_CLOSE
    java.lang.String CONN_DIRECTIVE -> CONN_DIRECTIVE
    int CONN_KEEP_ALIVE -> CONN_KEEP_ALIVE
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LEN -> CONTENT_LEN
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String ETAG -> ETAG
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String LOCATION -> LOCATION
    int NO_CONN_TYPE -> NO_CONN_TYPE
    long NO_CONTENT_LENGTH -> NO_CONTENT_LENGTH
    long NO_TRANSFER_ENCODING -> NO_TRANSFER_ENCODING
    java.lang.String PRAGMA -> PRAGMA
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String PROXY_CONNECTION -> PROXY_CONNECTION
    java.lang.String REFRESH -> REFRESH
    java.lang.String SET_COOKIE -> SET_COOKIE
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
    java.lang.String X_PERMITTED_CROSS_DOMAIN_POLICIES -> X_PERMITTED_CROSS_DOMAIN_POLICIES
    void parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
    long getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
    int getConnectionType() -> getConnectionType
    java.lang.String getContentType() -> getContentType
    java.lang.String getContentEncoding() -> getContentEncoding
    java.lang.String getLocation() -> getLocation
    java.lang.String getWwwAuthenticate() -> getWwwAuthenticate
    java.lang.String getProxyAuthenticate() -> getProxyAuthenticate
    java.lang.String getContentDisposition() -> getContentDisposition
    java.lang.String getAcceptRanges() -> getAcceptRanges
    java.lang.String getExpires() -> getExpires
    java.lang.String getCacheControl() -> getCacheControl
    java.lang.String getLastModified() -> getLastModified
    java.lang.String getEtag() -> getEtag
    java.util.ArrayList getSetCookie() -> getSetCookie
    java.lang.String getPragma() -> getPragma
    java.lang.String getRefresh() -> getRefresh
    java.lang.String getXPermittedCrossDomainPolicies() -> getXPermittedCrossDomainPolicies
    void setContentLength(long) -> setContentLength
    void setContentType(java.lang.String) -> setContentType
    void setContentEncoding(java.lang.String) -> setContentEncoding
    void setLocation(java.lang.String) -> setLocation
    void setWwwAuthenticate(java.lang.String) -> setWwwAuthenticate
    void setProxyAuthenticate(java.lang.String) -> setProxyAuthenticate
    void setContentDisposition(java.lang.String) -> setContentDisposition
    void setAcceptRanges(java.lang.String) -> setAcceptRanges
    void setExpires(java.lang.String) -> setExpires
    void setCacheControl(java.lang.String) -> setCacheControl
    void setLastModified(java.lang.String) -> setLastModified
    void setEtag(java.lang.String) -> setEtag
    void setXPermittedCrossDomainPolicies(java.lang.String) -> setXPermittedCrossDomainPolicies
    void getHeaders(android.net.http.Headers$HeaderCallback) -> getHeaders
android.net.http.Headers$HeaderCallback -> android.net.http.Headers$HeaderCallback:
    void header(java.lang.String,java.lang.String) -> header
android.net.http.HttpAuthHeader -> android.net.http.HttpAuthHeader:
    int BASIC -> BASIC
    java.lang.String BASIC_TOKEN -> BASIC_TOKEN
    int DIGEST -> DIGEST
    java.lang.String DIGEST_TOKEN -> DIGEST_TOKEN
    int UNKNOWN -> UNKNOWN
    boolean isProxy() -> isProxy
    void setProxy() -> setProxy
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    boolean isBasic() -> isBasic
    boolean isDigest() -> isDigest
    int getScheme() -> getScheme
    boolean getStale() -> getStale
    java.lang.String getRealm() -> getRealm
    java.lang.String getNonce() -> getNonce
    java.lang.String getOpaque() -> getOpaque
    java.lang.String getQop() -> getQop
    java.lang.String getAlgorithm() -> getAlgorithm
    boolean isSupportedScheme() -> isSupportedScheme
android.net.http.HttpsConnection -> android.net.http.HttpsConnection:
    android.net.http.SslCertificate mCertificate -> mCertificate
    android.net.http.AndroidHttpClientConnection mHttpClientConnection -> mHttpClientConnection
    void initializeEngine(java.io.File) -> initializeEngine
    java.lang.String toString() -> toString
android.net.http.LoggingEventHandler -> android.net.http.LoggingEventHandler:
    void requestSent() -> requestSent
    void status(int,int,int,java.lang.String) -> status
    void headers(android.net.http.Headers) -> headers
    void locationChanged(java.lang.String,boolean) -> locationChanged
    void data(byte[],int) -> data
    void endData() -> endData
    void certificate(android.net.http.SslCertificate) -> certificate
    void error(int,java.lang.String) -> error
    boolean handleSslErrorRequest(android.net.http.SslError) -> handleSslErrorRequest
android.net.http.Request -> android.net.http.Request:
    java.lang.String toString() -> toString
    void handleSslErrorResponse(boolean) -> handleSslErrorResponse
android.net.http.RequestFeeder -> android.net.http.RequestFeeder:
    android.net.http.Request getRequest() -> getRequest
    android.net.http.Request getRequest(org.apache.http.HttpHost) -> getRequest
    boolean haveRequest(org.apache.http.HttpHost) -> haveRequest
    void requeueRequest(android.net.http.Request) -> requeueRequest
android.net.http.RequestHandle -> android.net.http.RequestHandle:
    int MAX_REDIRECT_COUNT -> MAX_REDIRECT_COUNT
    void cancel() -> cancel
    void pauseRequest(boolean) -> pauseRequest
    void handleSslErrorResponse(boolean) -> handleSslErrorResponse
    boolean isRedirectMax() -> isRedirectMax
    int getRedirectCount() -> getRedirectCount
    void setRedirectCount(int) -> setRedirectCount
    boolean setupRedirect(java.lang.String,int,java.util.Map) -> setupRedirect
    void setupBasicAuthResponse(boolean,java.lang.String,java.lang.String) -> setupBasicAuthResponse
    void setupDigestAuthResponse(boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> setupDigestAuthResponse
    java.lang.String getMethod() -> getMethod
    java.lang.String computeBasicAuthResponse(java.lang.String,java.lang.String) -> computeBasicAuthResponse
    void waitUntilComplete() -> waitUntilComplete
    void processRequest() -> processRequest
    java.lang.String authorizationHeader(boolean) -> authorizationHeader
android.net.http.RequestQueue -> android.net.http.RequestQueue:
    void enablePlatformNotifications() -> enablePlatformNotifications
    void disablePlatformNotifications() -> disablePlatformNotifications
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    android.net.http.RequestHandle queueRequest(java.lang.String,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int) -> queueRequest
    android.net.http.RequestHandle queueRequest(java.lang.String,android.net.compatibility.WebAddress,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int) -> queueRequest
    android.net.http.RequestHandle queueSynchronousRequest(java.lang.String,android.net.compatibility.WebAddress,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int) -> queueSynchronousRequest
    android.net.http.Request getRequest() -> getRequest
    android.net.http.Request getRequest(org.apache.http.HttpHost) -> getRequest
    boolean haveRequest(org.apache.http.HttpHost) -> haveRequest
    void requeueRequest(android.net.http.Request) -> requeueRequest
    void shutdown() -> shutdown
    void queueRequest(android.net.http.Request,boolean) -> queueRequest
    void startTiming() -> startTiming
    void stopTiming() -> stopTiming
android.net.http.SslCertificate -> android.net.http.SslCertificate:
    android.os.Bundle saveState(android.net.http.SslCertificate) -> saveState
    android.net.http.SslCertificate restoreState(android.os.Bundle) -> restoreState
    java.util.Date getValidNotBeforeDate() -> getValidNotBeforeDate
    java.lang.String getValidNotBefore() -> getValidNotBefore
    java.util.Date getValidNotAfterDate() -> getValidNotAfterDate
    java.lang.String getValidNotAfter() -> getValidNotAfter
    android.net.http.SslCertificate$DName getIssuedTo() -> getIssuedTo
    android.net.http.SslCertificate$DName getIssuedBy() -> getIssuedBy
    java.lang.String toString() -> toString
android.net.http.SslCertificate$DName -> android.net.http.SslCertificate$DName:
    android.net.http.SslCertificate this$0 -> this$0
    java.lang.String getDName() -> getDName
    java.lang.String getCName() -> getCName
    java.lang.String getOName() -> getOName
    java.lang.String getUName() -> getUName
android.net.http.SslError -> android.net.http.SslError:
    int SSL_DATE_INVALID -> SSL_DATE_INVALID
    int SSL_EXPIRED -> SSL_EXPIRED
    int SSL_IDMISMATCH -> SSL_IDMISMATCH
    int SSL_INVALID -> SSL_INVALID
    int SSL_MAX_ERROR -> SSL_MAX_ERROR
    int SSL_NOTYETVALID -> SSL_NOTYETVALID
    int SSL_UNTRUSTED -> SSL_UNTRUSTED
    android.net.http.SslCertificate getCertificate() -> getCertificate
    java.lang.String getUrl() -> getUrl
    boolean addError(int) -> addError
    boolean hasError(int) -> hasError
    int getPrimaryError() -> getPrimaryError
    java.lang.String toString() -> toString
android.support.annotation.AnimRes -> android.support.annotation.AnimRes:
android.support.annotation.AnimatorRes -> android.support.annotation.AnimatorRes:
android.support.annotation.AnyRes -> android.support.annotation.AnyRes:
android.support.annotation.ArrayRes -> android.support.annotation.ArrayRes:
android.support.annotation.AttrRes -> android.support.annotation.AttrRes:
android.support.annotation.BinderThread -> android.support.annotation.BinderThread:
android.support.annotation.BoolRes -> android.support.annotation.BoolRes:
android.support.annotation.CallSuper -> android.support.annotation.CallSuper:
android.support.annotation.CheckResult -> android.support.annotation.CheckResult:
    java.lang.String suggest() -> suggest
android.support.annotation.ColorInt -> android.support.annotation.ColorInt:
android.support.annotation.ColorRes -> android.support.annotation.ColorRes:
android.support.annotation.DimenRes -> android.support.annotation.DimenRes:
android.support.annotation.DrawableRes -> android.support.annotation.DrawableRes:
android.support.annotation.FloatRange -> android.support.annotation.FloatRange:
    double from() -> from
    double to() -> to
    boolean fromInclusive() -> fromInclusive
    boolean toInclusive() -> toInclusive
android.support.annotation.FractionRes -> android.support.annotation.FractionRes:
android.support.annotation.IdRes -> android.support.annotation.IdRes:
android.support.annotation.IntDef -> android.support.annotation.IntDef:
    long[] value() -> value
    boolean flag() -> flag
android.support.annotation.IntRange -> android.support.annotation.IntRange:
    long from() -> from
    long to() -> to
android.support.annotation.IntegerRes -> android.support.annotation.IntegerRes:
android.support.annotation.InterpolatorRes -> android.support.annotation.InterpolatorRes:
android.support.annotation.Keep -> android.support.annotation.Keep:
android.support.annotation.LayoutRes -> android.support.annotation.LayoutRes:
android.support.annotation.MainThread -> android.support.annotation.MainThread:
android.support.annotation.MenuRes -> android.support.annotation.MenuRes:
android.support.annotation.NonNull -> android.support.annotation.NonNull:
android.support.annotation.Nullable -> android.support.annotation.Nullable:
android.support.annotation.PluralsRes -> android.support.annotation.PluralsRes:
android.support.annotation.RawRes -> android.support.annotation.RawRes:
android.support.annotation.RequiresPermission -> android.support.annotation.RequiresPermission:
    java.lang.String value() -> value
    java.lang.String[] allOf() -> allOf
    java.lang.String[] anyOf() -> anyOf
    boolean conditional() -> conditional
android.support.annotation.RequiresPermission$Read -> android.support.annotation.RequiresPermission$Read:
    android.support.annotation.RequiresPermission value() -> value
android.support.annotation.RequiresPermission$Write -> android.support.annotation.RequiresPermission$Write:
    android.support.annotation.RequiresPermission value() -> value
android.support.annotation.Size -> android.support.annotation.Size:
    long value() -> value
    long min() -> min
    long max() -> max
    long multiple() -> multiple
android.support.annotation.StringDef -> android.support.annotation.StringDef:
    java.lang.String[] value() -> value
android.support.annotation.StringRes -> android.support.annotation.StringRes:
android.support.annotation.StyleRes -> android.support.annotation.StyleRes:
android.support.annotation.StyleableRes -> android.support.annotation.StyleableRes:
android.support.annotation.TransitionRes -> android.support.annotation.TransitionRes:
android.support.annotation.UiThread -> android.support.annotation.UiThread:
android.support.annotation.VisibleForTesting -> android.support.annotation.VisibleForTesting:
android.support.annotation.WorkerThread -> android.support.annotation.WorkerThread:
android.support.annotation.XmlRes -> android.support.annotation.XmlRes:
android.support.v4.BuildConfig -> android.support.v4.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.animation.AnimatorCompatHelper -> android.support.v4.animation.AnimatorCompatHelper:
    android.support.v4.animation.AnimatorProvider IMPL -> IMPL
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
android.support.v4.animation.AnimatorListenerCompat -> android.support.v4.animation.AnimatorListenerCompat:
    void onAnimationStart(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationStart
    void onAnimationEnd(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationEnd
    void onAnimationCancel(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationCancel
    void onAnimationRepeat(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationRepeat
android.support.v4.animation.AnimatorProvider -> android.support.v4.animation.AnimatorProvider:
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
android.support.v4.animation.AnimatorUpdateListenerCompat -> android.support.v4.animation.AnimatorUpdateListenerCompat:
    void onAnimationUpdate(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationUpdate
android.support.v4.animation.DonutAnimatorCompatProvider -> android.support.v4.animation.DonutAnimatorCompatProvider:
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator -> android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator:
    java.util.List mListeners -> mListeners
    java.util.List mUpdateListeners -> mUpdateListeners
    android.view.View mTarget -> mTarget
    long mStartTime -> mStartTime
    long mDuration -> mDuration
    float mFraction -> mFraction
    boolean mStarted -> mStarted
    boolean mEnded -> mEnded
    java.lang.Runnable mLoopRunnable -> mLoopRunnable
    void notifyUpdateListeners() -> notifyUpdateListeners
    void setTarget(android.view.View) -> setTarget
    void addListener(android.support.v4.animation.AnimatorListenerCompat) -> addListener
    void setDuration(long) -> setDuration
    void start() -> start
    long getTime() -> getTime
    void dispatchStart() -> dispatchStart
    void dispatchEnd() -> dispatchEnd
    void dispatchCancel() -> dispatchCancel
    void cancel() -> cancel
    void addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat) -> addUpdateListener
    float getAnimatedFraction() -> getAnimatedFraction
    long access$000(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$000
    long access$100(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$100
    long access$200(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$200
    float access$302(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator,float) -> access$302
    void access$400(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$400
    float access$300(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$300
    void access$500(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$500
    java.lang.Runnable access$600(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$600
android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$1 -> android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$1:
    android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator this$0 -> this$0
    void run() -> run
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider:
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$AnimatorListenerCompatWrapper -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$AnimatorListenerCompatWrapper:
    android.support.v4.animation.AnimatorListenerCompat mWrapped -> mWrapped
    android.support.v4.animation.ValueAnimatorCompat mValueAnimatorCompat -> mValueAnimatorCompat
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat:
    android.animation.Animator mWrapped -> mWrapped
    void setTarget(android.view.View) -> setTarget
    void addListener(android.support.v4.animation.AnimatorListenerCompat) -> addListener
    void setDuration(long) -> setDuration
    void start() -> start
    void cancel() -> cancel
    void addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat) -> addUpdateListener
    float getAnimatedFraction() -> getAnimatedFraction
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$1 -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$1:
    android.support.v4.animation.AnimatorUpdateListenerCompat val$animatorUpdateListener -> val$animatorUpdateListener
    android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat this$0 -> this$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.animation.ValueAnimatorCompat -> android.support.v4.animation.ValueAnimatorCompat:
    void setTarget(android.view.View) -> setTarget
    void addListener(android.support.v4.animation.AnimatorListenerCompat) -> addListener
    void setDuration(long) -> setDuration
    void start() -> start
    void cancel() -> cancel
    void addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat) -> addUpdateListener
    float getAnimatedFraction() -> getAnimatedFraction
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    boolean mHasCustomUpIndicator -> mHasCustomUpIndicator
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> mHomeAsUpIndicator
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    boolean assumeMaterial(android.content.Context) -> assumeMaterial
    void syncState() -> syncState
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> access$400
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 createCallback(android.support.v4.app.SharedElementCallback) -> createCallback
android.support.v4.app.ActivityCompat$SharedElementCallback21Impl -> android.support.v4.app.ActivityCompat$SharedElementCallback21Impl:
    android.support.v4.app.SharedElementCallback mCallback -> mCallback
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat21 -> android.support.v4.app.ActivityCompat21:
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    android.app.SharedElementCallback createCallback(android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> createCallback
android.support.v4.app.ActivityCompat21$SharedElementCallback21 -> android.support.v4.app.ActivityCompat21$SharedElementCallback21:
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl -> android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl:
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 mCallback -> mCallback
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityManagerCompat -> android.support.v4.app.ActivityManagerCompat:
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
android.support.v4.app.ActivityManagerCompatKitKat -> android.support.v4.app.ActivityManagerCompatKitKat:
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.support.v4.util.Pair[]) -> makeSceneTransitionAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21 -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21:
    android.support.v4.app.ActivityOptionsCompat21 mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat21 -> android.support.v4.app.ActivityOptionsCompat21:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View[],java.lang.String[]) -> makeSceneTransitionAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat21) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    boolean SUPPORTS_TRANSITIONS -> SUPPORTS_TRANSITIONS
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment) -> setFirstOut
    void setLastIn(android.util.SparseArray,android.support.v4.app.Fragment) -> setLastIn
    void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> calculateFragments
    void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> calculateBackFragments
    android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
    android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> beginTransition
    java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> getEnterTransition
    java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> getExitTransition
    java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> getSharedElementTransition
    java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap,android.view.View) -> captureExitingViews
    android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> remapSharedElements
    boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> configureTransitions
    void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList) -> prepareSharedElementTransition
    void callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> callSharedElementEnd
    void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> setEpicenterIn
    android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> mapSharedElementsIn
    android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> remapNames
    android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> mapEnteringSharedElements
    void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragmentsAfterEnter
    void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragments
    void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> setNameOverride
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList) -> setNameOverrides
    void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setBackNameOverrides
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setNameOverrides
    android.support.v4.util.ArrayMap access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> access$000
    void access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> access$100
    void access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> access$200
    void access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> access$300
android.support.v4.app.BackStackRecord$1 -> android.support.v4.app.BackStackRecord$1:
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.BackStackRecord this$0 -> this$0
    android.view.View getView() -> getView
android.support.v4.app.BackStackRecord$2 -> android.support.v4.app.BackStackRecord$2:
    android.view.View val$sceneRoot -> val$sceneRoot
    java.lang.Object val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    boolean val$isBack -> val$isBack
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.Fragment val$outFragment -> val$outFragment
    android.support.v4.app.BackStackRecord this$0 -> this$0
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$3 -> android.support.v4.app.BackStackRecord$3:
    android.view.View val$sceneRoot -> val$sceneRoot
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    int val$containerId -> val$containerId
    java.lang.Object val$transition -> val$transition
    android.support.v4.app.BackStackRecord this$0 -> this$0
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.app.BackStackRecord$TransitionState:
    android.support.v4.util.ArrayMap nameOverrides -> nameOverrides
    java.util.ArrayList hiddenFragmentViews -> hiddenFragmentViews
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> enteringEpicenterView
    android.view.View nonExistentView -> nonExistentView
    android.support.v4.app.BackStackRecord this$0 -> this$0
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BundleUtil -> android.support.v4.app.BundleUtil:
    android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    java.lang.Object USE_DEFAULT_TRANSITION -> USE_DEFAULT_TRANSITION
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    java.lang.Object mEnterTransition -> mEnterTransition
    java.lang.Object mReturnTransition -> mReturnTransition
    java.lang.Object mExitTransition -> mExitTransition
    java.lang.Object mReenterTransition -> mReenterTransition
    java.lang.Object mSharedElementEnterTransition -> mSharedElementEnterTransition
    java.lang.Object mSharedElementReturnTransition -> mSharedElementReturnTransition
    java.lang.Boolean mAllowReturnTransitionOverlap -> mAllowReturnTransitionOverlap
    java.lang.Boolean mAllowEnterTransitionOverlap -> mAllowEnterTransitionOverlap
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> mEnterTransitionCallback
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> mExitTransitionCallback
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void setEnterTransition(java.lang.Object) -> setEnterTransition
    java.lang.Object getEnterTransition() -> getEnterTransition
    void setReturnTransition(java.lang.Object) -> setReturnTransition
    java.lang.Object getReturnTransition() -> getReturnTransition
    void setExitTransition(java.lang.Object) -> setExitTransition
    java.lang.Object getExitTransition() -> getExitTransition
    void setReenterTransition(java.lang.Object) -> setReenterTransition
    java.lang.Object getReenterTransition() -> getReenterTransition
    void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void supportFinishAfterTransition() -> supportFinishAfterTransition
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory() -> getLayoutInflaterFactory
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.FragmentManagerImpl$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.FragmentTransitionCompat21:
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map,android.view.View) -> captureExitingViews
    void excludeTarget(java.lang.Object,android.view.View,boolean) -> excludeTarget
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.ArrayList) -> addTransitionTargets
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> mergeTransitions
    void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> setSharedElementEpicenter
    android.graphics.Rect getBoundsOnScreen(android.view.View) -> getBoundsOnScreen
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> cleanupTransitions
    void removeTargets(java.lang.Object,java.util.ArrayList) -> removeTargets
    void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    void access$000(java.util.ArrayList,android.view.View) -> access$000
    android.graphics.Rect access$100(android.view.View) -> access$100
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.FragmentTransitionCompat21$1:
    android.graphics.Rect val$epicenter -> val$epicenter
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.FragmentTransitionCompat21$2:
    android.view.View val$container -> val$container
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> val$inFragment
    java.util.Map val$nameOverrides -> val$nameOverrides
    java.util.Map val$renamedViews -> val$renamedViews
    android.transition.Transition val$enterTransition -> val$enterTransition
    java.util.ArrayList val$enteringViews -> val$enteringViews
    android.view.View val$nonExistentView -> val$nonExistentView
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.FragmentTransitionCompat21$3:
    android.graphics.Rect mEpicenter -> mEpicenter
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> val$epicenterView
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.FragmentTransitionCompat21$4:
    android.view.View val$sceneRoot -> val$sceneRoot
    android.transition.Transition val$enterTransition -> val$enterTransition
    android.view.View val$nonExistentView -> val$nonExistentView
    java.util.ArrayList val$enteringViews -> val$enteringViews
    android.transition.Transition val$exitTransition -> val$exitTransition
    java.util.ArrayList val$exitingViews -> val$exitingViews
    android.transition.Transition val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    java.util.Map val$renamedViews -> val$renamedViews
    java.util.ArrayList val$hiddenViews -> val$hiddenViews
    android.transition.Transition val$overallTransition -> val$overallTransition
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.app.FragmentTransitionCompat21$EpicenterView:
    android.view.View epicenter -> epicenter
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.app.FragmentTransitionCompat21$ViewRetriever:
    android.view.View getView() -> getView
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_notify -> TRANSACTION_notify
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_cancelAll -> TRANSACTION_cancelAll
    android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.NotificationBuilderWithActions:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.NotificationBuilderWithBuilderAccessor:
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int DEFAULT_ALL -> DEFAULT_ALL
    int DEFAULT_SOUND -> DEFAULT_SOUND
    int DEFAULT_VIBRATE -> DEFAULT_VIBRATE
    int DEFAULT_LIGHTS -> DEFAULT_LIGHTS
    int STREAM_DEFAULT -> STREAM_DEFAULT
    int FLAG_SHOW_LIGHTS -> FLAG_SHOW_LIGHTS
    int FLAG_ONGOING_EVENT -> FLAG_ONGOING_EVENT
    int FLAG_INSISTENT -> FLAG_INSISTENT
    int FLAG_ONLY_ALERT_ONCE -> FLAG_ONLY_ALERT_ONCE
    int FLAG_AUTO_CANCEL -> FLAG_AUTO_CANCEL
    int FLAG_NO_CLEAR -> FLAG_NO_CLEAR
    int FLAG_FOREGROUND_SERVICE -> FLAG_FOREGROUND_SERVICE
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int FLAG_LOCAL_ONLY -> FLAG_LOCAL_ONLY
    int FLAG_GROUP_SUMMARY -> FLAG_GROUP_SUMMARY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_TITLE_BIG -> EXTRA_TITLE_BIG
    java.lang.String EXTRA_TEXT -> EXTRA_TEXT
    java.lang.String EXTRA_SUB_TEXT -> EXTRA_SUB_TEXT
    java.lang.String EXTRA_INFO_TEXT -> EXTRA_INFO_TEXT
    java.lang.String EXTRA_SUMMARY_TEXT -> EXTRA_SUMMARY_TEXT
    java.lang.String EXTRA_BIG_TEXT -> EXTRA_BIG_TEXT
    java.lang.String EXTRA_SMALL_ICON -> EXTRA_SMALL_ICON
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_LARGE_ICON_BIG -> EXTRA_LARGE_ICON_BIG
    java.lang.String EXTRA_PROGRESS -> EXTRA_PROGRESS
    java.lang.String EXTRA_PROGRESS_MAX -> EXTRA_PROGRESS_MAX
    java.lang.String EXTRA_PROGRESS_INDETERMINATE -> EXTRA_PROGRESS_INDETERMINATE
    java.lang.String EXTRA_SHOW_CHRONOMETER -> EXTRA_SHOW_CHRONOMETER
    java.lang.String EXTRA_SHOW_WHEN -> EXTRA_SHOW_WHEN
    java.lang.String EXTRA_PICTURE -> EXTRA_PICTURE
    java.lang.String EXTRA_TEXT_LINES -> EXTRA_TEXT_LINES
    java.lang.String EXTRA_TEMPLATE -> EXTRA_TEMPLATE
    java.lang.String EXTRA_PEOPLE -> EXTRA_PEOPLE
    java.lang.String EXTRA_BACKGROUND_IMAGE_URI -> EXTRA_BACKGROUND_IMAGE_URI
    java.lang.String EXTRA_MEDIA_SESSION -> EXTRA_MEDIA_SESSION
    java.lang.String EXTRA_COMPACT_ACTIONS -> EXTRA_COMPACT_ACTIONS
    int COLOR_DEFAULT -> COLOR_DEFAULT
    int VISIBILITY_PUBLIC -> VISIBILITY_PUBLIC
    int VISIBILITY_PRIVATE -> VISIBILITY_PRIVATE
    int VISIBILITY_SECRET -> VISIBILITY_SECRET
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> addActionsToBuilder
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> addStyleToBuilderJellybean
    android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> access$000
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> access$100
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> access$200
    android.app.Notification[] access$500(android.os.Bundle,java.lang.String) -> access$500
android.support.v4.app.NotificationCompat$1 -> android.support.v4.app.NotificationCompat$1:
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput[] mRemoteInputs -> mRemoteInputs
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> FACTORY
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.os.Bundle access$300(android.support.v4.app.NotificationCompat$Action) -> access$300
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.NotificationCompat$Action$1:
    android.support.v4.app.NotificationCompat$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompat$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    int mIcon -> mIcon
    java.lang.CharSequence mTitle -> mTitle
    android.app.PendingIntent mIntent -> mIntent
    android.os.Bundle mExtras -> mExtras
    java.util.ArrayList mRemoteInputs -> mRemoteInputs
    android.support.v4.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Extender) -> extend
    android.support.v4.app.NotificationCompat$Action build() -> build
android.support.v4.app.NotificationCompat$Action$Extender -> android.support.v4.app.NotificationCompat$Action$Extender:
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
android.support.v4.app.NotificationCompat$Action$WearableExtender -> android.support.v4.app.NotificationCompat$Action$WearableExtender:
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_IN_PROGRESS_LABEL -> KEY_IN_PROGRESS_LABEL
    java.lang.String KEY_CONFIRM_LABEL -> KEY_CONFIRM_LABEL
    java.lang.String KEY_CANCEL_LABEL -> KEY_CANCEL_LABEL
    int FLAG_AVAILABLE_OFFLINE -> FLAG_AVAILABLE_OFFLINE
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int mFlags -> mFlags
    java.lang.CharSequence mInProgressLabel -> mInProgressLabel
    java.lang.CharSequence mConfirmLabel -> mConfirmLabel
    java.lang.CharSequence mCancelLabel -> mCancelLabel
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
    android.support.v4.app.NotificationCompat$Action$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    boolean isAvailableOffline() -> isAvailableOffline
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence) -> setInProgressLabel
    java.lang.CharSequence getInProgressLabel() -> getInProgressLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence) -> setConfirmLabel
    java.lang.CharSequence getConfirmLabel() -> getConfirmLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence) -> setCancelLabel
    java.lang.CharSequence getCancelLabel() -> getCancelLabel
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    int MAX_CHARSEQUENCE_LENGTH -> MAX_CHARSEQUENCE_LENGTH
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mShowWhen -> mShowWhen
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.lang.String mGroupKey -> mGroupKey
    boolean mGroupSummary -> mGroupSummary
    java.lang.String mSortKey -> mSortKey
    java.util.ArrayList mActions -> mActions
    boolean mLocalOnly -> mLocalOnly
    java.lang.String mCategory -> mCategory
    android.os.Bundle mExtras -> mExtras
    int mColor -> mColor
    int mVisibility -> mVisibility
    android.app.Notification mPublicVersion -> mPublicVersion
    android.app.Notification mNotification -> mNotification
    java.util.ArrayList mPeople -> mPeople
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    android.support.v4.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    android.support.v4.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    android.support.v4.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.support.v4.app.NotificationCompat$Builder setColor(int) -> setColor
    android.support.v4.app.NotificationCompat$Builder setVisibility(int) -> setVisibility
    android.support.v4.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> setPublicVersion
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
    android.support.v4.app.NotificationCompat$BuilderExtender getExtender() -> getExtender
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
android.support.v4.app.NotificationCompat$BuilderExtender -> android.support.v4.app.NotificationCompat$BuilderExtender:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> build
android.support.v4.app.NotificationCompat$CarExtender -> android.support.v4.app.NotificationCompat$CarExtender:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_CAR_EXTENDER -> EXTRA_CAR_EXTENDER
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_CONVERSATION -> EXTRA_CONVERSATION
    java.lang.String EXTRA_COLOR -> EXTRA_COLOR
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation mUnreadConversation -> mUnreadConversation
    int mColor -> mColor
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$CarExtender setColor(int) -> setColor
    int getColor() -> getColor
    android.support.v4.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.graphics.Bitmap getLargeIcon() -> getLargeIcon
    android.support.v4.app.NotificationCompat$CarExtender setUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation) -> setUnreadConversation
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation() -> getUnreadConversation
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation:
    java.lang.String[] mMessages -> mMessages
    android.support.v4.app.RemoteInput mRemoteInput -> mRemoteInput
    android.app.PendingIntent mReplyPendingIntent -> mReplyPendingIntent
    android.app.PendingIntent mReadPendingIntent -> mReadPendingIntent
    java.lang.String[] mParticipants -> mParticipants
    long mLatestTimestamp -> mLatestTimestamp
    android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory FACTORY -> FACTORY
    java.lang.String[] getMessages() -> getMessages
    android.support.v4.app.RemoteInput getRemoteInput() -> getRemoteInput
    android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
    android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    java.lang.String[] getParticipants() -> getParticipants
    java.lang.String getParticipant() -> getParticipant
    long getLatestTimestamp() -> getLatestTimestamp
    android.support.v4.app.RemoteInputCompatBase$RemoteInput getRemoteInput() -> getRemoteInput
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1 -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1:
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
    android.support.v4.app.NotificationCompatBase$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder:
    java.util.List mMessages -> mMessages
    java.lang.String mParticipant -> mParticipant
    android.support.v4.app.RemoteInput mRemoteInput -> mRemoteInput
    android.app.PendingIntent mReadPendingIntent -> mReadPendingIntent
    android.app.PendingIntent mReplyPendingIntent -> mReplyPendingIntent
    long mLatestTimestamp -> mLatestTimestamp
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String) -> addMessage
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,android.support.v4.app.RemoteInput) -> setReplyAction
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent) -> setReadPendingIntent
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long) -> setLatestTimestamp
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation build() -> build
android.support.v4.app.NotificationCompat$Extender -> android.support.v4.app.NotificationCompat$Extender:
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi20:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi21:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    java.lang.String getCategory(android.app.Notification) -> getCategory
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    int UNSET_ACTION_INDEX -> UNSET_ACTION_INDEX
    int SIZE_DEFAULT -> SIZE_DEFAULT
    int SIZE_XSMALL -> SIZE_XSMALL
    int SIZE_SMALL -> SIZE_SMALL
    int SIZE_MEDIUM -> SIZE_MEDIUM
    int SIZE_LARGE -> SIZE_LARGE
    int SIZE_FULL_SCREEN -> SIZE_FULL_SCREEN
    int SCREEN_TIMEOUT_SHORT -> SCREEN_TIMEOUT_SHORT
    int SCREEN_TIMEOUT_LONG -> SCREEN_TIMEOUT_LONG
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_ACTIONS -> KEY_ACTIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_DISPLAY_INTENT -> KEY_DISPLAY_INTENT
    java.lang.String KEY_PAGES -> KEY_PAGES
    java.lang.String KEY_BACKGROUND -> KEY_BACKGROUND
    java.lang.String KEY_CONTENT_ICON -> KEY_CONTENT_ICON
    java.lang.String KEY_CONTENT_ICON_GRAVITY -> KEY_CONTENT_ICON_GRAVITY
    java.lang.String KEY_CONTENT_ACTION_INDEX -> KEY_CONTENT_ACTION_INDEX
    java.lang.String KEY_CUSTOM_SIZE_PRESET -> KEY_CUSTOM_SIZE_PRESET
    java.lang.String KEY_CUSTOM_CONTENT_HEIGHT -> KEY_CUSTOM_CONTENT_HEIGHT
    java.lang.String KEY_GRAVITY -> KEY_GRAVITY
    java.lang.String KEY_HINT_SCREEN_TIMEOUT -> KEY_HINT_SCREEN_TIMEOUT
    int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE -> FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE
    int FLAG_HINT_HIDE_ICON -> FLAG_HINT_HIDE_ICON
    int FLAG_HINT_SHOW_BACKGROUND_ONLY -> FLAG_HINT_SHOW_BACKGROUND_ONLY
    int FLAG_START_SCROLL_BOTTOM -> FLAG_START_SCROLL_BOTTOM
    int FLAG_HINT_AVOID_BACKGROUND_CLIPPING -> FLAG_HINT_AVOID_BACKGROUND_CLIPPING
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int DEFAULT_CONTENT_ICON_GRAVITY -> DEFAULT_CONTENT_ICON_GRAVITY
    int DEFAULT_GRAVITY -> DEFAULT_GRAVITY
    java.util.ArrayList mActions -> mActions
    int mFlags -> mFlags
    android.app.PendingIntent mDisplayIntent -> mDisplayIntent
    java.util.ArrayList mPages -> mPages
    android.graphics.Bitmap mBackground -> mBackground
    int mContentIcon -> mContentIcon
    int mContentIconGravity -> mContentIconGravity
    int mContentActionIndex -> mContentActionIndex
    int mCustomSizePreset -> mCustomSizePreset
    int mCustomContentHeight -> mCustomContentHeight
    int mGravity -> mGravity
    int mHintScreenTimeout -> mHintScreenTimeout
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    android.support.v4.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    java.util.List getActions() -> getActions
    android.support.v4.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    android.support.v4.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    android.support.v4.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    android.support.v4.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    java.util.List getPages() -> getPages
    android.support.v4.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    android.graphics.Bitmap getBackground() -> getBackground
    android.support.v4.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    int getContentIcon() -> getContentIcon
    android.support.v4.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    int getContentIconGravity() -> getContentIconGravity
    android.support.v4.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    int getContentAction() -> getContentAction
    android.support.v4.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    int getGravity() -> getGravity
    android.support.v4.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    int getCustomSizePreset() -> getCustomSizePreset
    android.support.v4.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    int getCustomContentHeight() -> getCustomContentHeight
    android.support.v4.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
    boolean getStartScrollBottom() -> getStartScrollBottom
    android.support.v4.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    android.support.v4.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    boolean getHintHideIcon() -> getHintHideIcon
    android.support.v4.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    android.support.v4.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean) -> setHintAvoidBackgroundClipping
    boolean getHintAvoidBackgroundClipping() -> getHintAvoidBackgroundClipping
    android.support.v4.app.NotificationCompat$WearableExtender setHintScreenTimeout(int) -> setHintScreenTimeout
    int getHintScreenTimeout() -> getHintScreenTimeout
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.NotificationCompatApi20:
    void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionCompatFromAction
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> getActionFromActionCompat
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.NotificationCompatApi20$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatApi21 -> android.support.v4.app.NotificationCompatApi21:
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    java.lang.String KEY_AUTHOR -> KEY_AUTHOR
    java.lang.String KEY_TEXT -> KEY_TEXT
    java.lang.String KEY_MESSAGES -> KEY_MESSAGES
    java.lang.String KEY_REMOTE_INPUT -> KEY_REMOTE_INPUT
    java.lang.String KEY_ON_REPLY -> KEY_ON_REPLY
    java.lang.String KEY_ON_READ -> KEY_ON_READ
    java.lang.String KEY_PARTICIPANTS -> KEY_PARTICIPANTS
    java.lang.String KEY_TIMESTAMP -> KEY_TIMESTAMP
    java.lang.String getCategory(android.app.Notification) -> getCategory
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
    android.app.RemoteInput fromCompatRemoteInput(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> fromCompatRemoteInput
    android.support.v4.app.RemoteInputCompatBase$RemoteInput toCompatRemoteInput(android.app.RemoteInput,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompatRemoteInput
android.support.v4.app.NotificationCompatApi21$Builder -> android.support.v4.app.NotificationCompatApi21$Builder:
    android.app.Notification$Builder b -> b
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.NotificationCompatBase:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.NotificationCompatBase$Action:
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.NotificationCompatBase$Action$Factory:
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.app.NotificationCompatBase$UnreadConversation -> android.support.v4.app.NotificationCompatBase$UnreadConversation:
    java.lang.String[] getParticipants() -> getParticipants
    java.lang.String getParticipant() -> getParticipant
    java.lang.String[] getMessages() -> getMessages
    android.support.v4.app.RemoteInputCompatBase$RemoteInput getRemoteInput() -> getRemoteInput
    android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
    android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    long getLatestTimestamp() -> getLatestTimestamp
android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory -> android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory:
    android.support.v4.app.NotificationCompatBase$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
android.support.v4.app.NotificationCompatExtras -> android.support.v4.app.NotificationCompatExtras:
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
android.support.v4.app.NotificationCompatIceCreamSandwich$Builder -> android.support.v4.app.NotificationCompatIceCreamSandwich$Builder:
    android.app.Notification$Builder b -> b
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String KEY_ICON -> KEY_ICON
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String KEY_ACTION_INTENT -> KEY_ACTION_INTENT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    java.lang.String KEY_REMOTE_INPUTS -> KEY_REMOTE_INPUTS
    java.lang.Object sExtrasLock -> sExtrasLock
    java.lang.reflect.Field sExtrasField -> sExtrasField
    boolean sExtrasFieldAccessFailed -> sExtrasFieldAccessFailed
    java.lang.Object sActionsLock -> sActionsLock
    java.lang.Class sActionClass -> sActionClass
    java.lang.reflect.Field sActionsField -> sActionsField
    java.lang.reflect.Field sActionIconField -> sActionIconField
    java.lang.reflect.Field sActionTitleField -> sActionTitleField
    java.lang.reflect.Field sActionIntentField -> sActionIntentField
    boolean sActionsAccessFailed -> sActionsAccessFailed
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    android.support.v4.app.NotificationCompatBase$Action readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> writeActionAndGetExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    android.support.v4.app.NotificationCompatBase$Action getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionFromBundle
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    android.os.Bundle getBundleForAction(android.support.v4.app.NotificationCompatBase$Action) -> getBundleForAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.NotificationCompatJellybean$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.NotificationCompatKitKat:
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.NotificationCompatKitKat$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void checkPermission(int,java.lang.String) -> checkPermission
    void access$100(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String) -> access$100
android.support.v4.app.NotificationCompatSideChannelService$1 -> android.support.v4.app.NotificationCompatSideChannelService$1:
android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    android.support.v4.app.NotificationCompatSideChannelService this$0 -> this$0
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String ACTION_BIND_SIDE_CHANNEL -> ACTION_BIND_SIDE_CHANNEL
    int MAX_SIDE_CHANNEL_SDK_VERSION -> MAX_SIDE_CHANNEL_SDK_VERSION
    int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS -> SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
    int SIDE_CHANNEL_RETRY_MAX_COUNT -> SIDE_CHANNEL_RETRY_MAX_COUNT
    java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS -> SETTING_ENABLED_NOTIFICATION_LISTENERS
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
    java.lang.Object sEnabledNotificationListenersLock -> sEnabledNotificationListenersLock
    java.lang.String sEnabledNotificationListeners -> sEnabledNotificationListeners
    java.util.Set sEnabledNotificationListenerPackages -> sEnabledNotificationListenerPackages
    android.content.Context mContext -> mContext
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    java.lang.Object sLock -> sLock
    android.support.v4.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> sSideChannelManager
    android.support.v4.app.NotificationManagerCompat$Impl IMPL -> IMPL
    android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    void cancel(int) -> cancel
    void cancel(java.lang.String,int) -> cancel
    void cancelAll() -> cancelAll
    void notify(int,android.app.Notification) -> notify
    void notify(java.lang.String,int,android.app.Notification) -> notify
    java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
    void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    int access$000() -> access$000
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    boolean all -> all
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$Impl -> android.support.v4.app.NotificationManagerCompat$Impl:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplBase -> android.support.v4.app.NotificationManagerCompat$ImplBase:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplEclair -> android.support.v4.app.NotificationManagerCompat$ImplEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich -> android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich:
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    android.app.Notification notif -> notif
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    android.content.ComponentName componentName -> componentName
    android.os.IBinder iBinder -> iBinder
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    int MSG_QUEUE_TASK -> MSG_QUEUE_TASK
    int MSG_SERVICE_CONNECTED -> MSG_SERVICE_CONNECTED
    int MSG_SERVICE_DISCONNECTED -> MSG_SERVICE_DISCONNECTED
    int MSG_RETRY_LISTENER_QUEUE -> MSG_RETRY_LISTENER_QUEUE
    java.lang.String KEY_BINDER -> KEY_BINDER
    android.content.Context mContext -> mContext
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    android.os.Handler mHandler -> mHandler
    java.util.Map mRecordMap -> mRecordMap
    java.util.Set mCachedEnabledPackages -> mCachedEnabledPackages
    void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    boolean handleMessage(android.os.Message) -> handleMessage
    void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task) -> handleQueueTask
    void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void updateListenerMap() -> updateListenerMap
    boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    android.content.ComponentName componentName -> componentName
    boolean bound -> bound
    android.support.v4.app.INotificationSideChannel service -> service
    java.util.LinkedList taskQueue -> taskQueue
    int retryCount -> retryCount
android.support.v4.app.NotificationManagerCompat$Task -> android.support.v4.app.NotificationManagerCompat$Task:
    void send(android.support.v4.app.INotificationSideChannel) -> send
android.support.v4.app.NotificationManagerCompatEclair -> android.support.v4.app.NotificationManagerCompatEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompatIceCreamSandwich -> android.support.v4.app.NotificationManagerCompatIceCreamSandwich:
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    java.lang.String TAG -> TAG
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Impl IMPL -> IMPL
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> FACTORY
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.RemoteInput$1:
    android.support.v4.app.RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
    android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput build() -> build
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.RemoteInput$Impl:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.RemoteInput$ImplApi20:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.RemoteInput$ImplBase:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.RemoteInput$ImplJellybean:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.RemoteInputCompatApi20:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompat
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> fromCompat
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.RemoteInputCompatBase:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.RemoteInputCompatBase$RemoteInput:
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.RemoteInputCompatJellybean:
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String KEY_RESULT_KEY -> KEY_RESULT_KEY
    java.lang.String KEY_LABEL -> KEY_LABEL
    java.lang.String KEY_CHOICES -> KEY_CHOICES
    java.lang.String KEY_ALLOW_FREE_FORM_INPUT -> KEY_ALLOW_FREE_FORM_INPUT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundle
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> toBundle
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundleArray
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> toBundleArray
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SharedElementCallback -> android.support.v4.app.SharedElementCallback:
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    int MAX_IMAGE_SIZE -> MAX_IMAGE_SIZE
    java.lang.String BUNDLE_SNAPSHOT_BITMAP -> BUNDLE_SNAPSHOT_BITMAP
    java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE -> BUNDLE_SNAPSHOT_IMAGE_SCALETYPE
    java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX -> BUNDLE_SNAPSHOT_IMAGE_MATRIX
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable) -> createDrawableBitmap
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String TAG -> TAG
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    java.io.File createFilesDir(java.io.File) -> createFilesDir
android.support.v4.content.ContextCompatApi21 -> android.support.v4.content.ContextCompatApi21:
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.content.res.ResourcesCompat -> android.support.v4.content.res.ResourcesCompat:
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
android.support.v4.content.res.ResourcesCompatApi21 -> android.support.v4.content.res.ResourcesCompatApi21:
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
android.support.v4.content.res.ResourcesCompatIcsMr1 -> android.support.v4.content.res.ResourcesCompatIcsMr1:
    android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int) -> getDrawableForDensity
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.BitmapCompat -> android.support.v4.graphics.BitmapCompat:
    android.support.v4.graphics.BitmapCompat$BitmapImpl IMPL -> IMPL
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$BaseBitmapImpl -> android.support.v4.graphics.BitmapCompat$BaseBitmapImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$BitmapImpl -> android.support.v4.graphics.BitmapCompat$BitmapImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompatHoneycombMr1 -> android.support.v4.graphics.BitmapCompatHoneycombMr1:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompatJellybeanMR2 -> android.support.v4.graphics.BitmapCompatJellybeanMR2:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.graphics.BitmapCompatKitKat -> android.support.v4.graphics.BitmapCompatKitKat:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.ColorUtils -> android.support.v4.graphics.ColorUtils:
    int MIN_ALPHA_SEARCH_MAX_ITERATIONS -> MIN_ALPHA_SEARCH_MAX_ITERATIONS
    int MIN_ALPHA_SEARCH_PRECISION -> MIN_ALPHA_SEARCH_PRECISION
    int compositeColors(int,int) -> compositeColors
    int compositeAlpha(int,int) -> compositeAlpha
    int compositeComponent(int,int,int,int,int) -> compositeComponent
    double calculateLuminance(int) -> calculateLuminance
    double calculateContrast(int,int) -> calculateContrast
    int calculateMinimumAlpha(int,int,float) -> calculateMinimumAlpha
    void RGBToHSL(int,int,int,float[]) -> RGBToHSL
    void colorToHSL(int,float[]) -> colorToHSL
    int HSLToColor(float[]) -> HSLToColor
    int setAlphaComponent(int,int) -> setAlphaComponent
    float constrain(float,float,float) -> constrain
    int constrain(int,int,int) -> constrain
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
    android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl:
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl:
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompatApi22 -> android.support.v4.graphics.drawable.DrawableCompatApi22:
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.graphics.drawable.DrawableCompatBase -> android.support.v4.graphics.drawable.DrawableCompatBase:
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.graphics.drawable.DrawableCompatLollipop -> android.support.v4.graphics.drawable.DrawableCompatLollipop:
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.graphics.drawable.DrawableWrapper -> android.support.v4.graphics.drawable.DrawableWrapper:
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
android.support.v4.graphics.drawable.DrawableWrapperDonut -> android.support.v4.graphics.drawable.DrawableWrapperDonut:
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> DEFAULT_MODE
    android.content.res.ColorStateList mTintList -> mTintList
    android.graphics.PorterDuff$Mode mTintMode -> mTintMode
    int mCurrentColor -> mCurrentColor
    android.graphics.PorterDuff$Mode mCurrentMode -> mCurrentMode
    boolean mColorFilterSet -> mColorFilterSet
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable mutate() -> mutate
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    boolean onLevelChange(int) -> onLevelChange
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean updateTint(int[]) -> updateTint
    android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
android.support.v4.graphics.drawable.DrawableWrapperHoneycomb -> android.support.v4.graphics.drawable.DrawableWrapperHoneycomb:
    void jumpToCurrentState() -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableWrapperKitKat -> android.support.v4.graphics.drawable.DrawableWrapperKitKat:
    void setAutoMirrored(boolean) -> setAutoMirrored
    boolean isAutoMirrored() -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableWrapperLollipop -> android.support.v4.graphics.drawable.DrawableWrapperLollipop:
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    void getOutline(android.graphics.Outline) -> getOutline
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    boolean canApplyTheme() -> canApplyTheme
    android.graphics.Rect getDirtyBounds() -> getDirtyBounds
android.support.v4.graphics.drawable.RoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawable:
    int DEFAULT_PAINT_FLAGS -> DEFAULT_PAINT_FLAGS
    android.graphics.Bitmap mBitmap -> mBitmap
    int mTargetDensity -> mTargetDensity
    int mGravity -> mGravity
    android.graphics.Paint mPaint -> mPaint
    android.graphics.BitmapShader mBitmapShader -> mBitmapShader
    float mCornerRadius -> mCornerRadius
    android.graphics.Rect mDstRect -> mDstRect
    android.graphics.RectF mDstRectF -> mDstRectF
    boolean mApplyGravity -> mApplyGravity
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    android.graphics.Paint getPaint() -> getPaint
    android.graphics.Bitmap getBitmap() -> getBitmap
    void computeBitmapSize() -> computeBitmapSize
    void setTargetDensity(android.graphics.Canvas) -> setTargetDensity
    void setTargetDensity(android.util.DisplayMetrics) -> setTargetDensity
    void setTargetDensity(int) -> setTargetDensity
    int getGravity() -> getGravity
    void setGravity(int) -> setGravity
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void setAntiAlias(boolean) -> setAntiAlias
    boolean hasAntiAlias() -> hasAntiAlias
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setDither(boolean) -> setDither
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    void updateDstRect() -> updateDstRect
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    void setCornerRadius(float) -> setCornerRadius
    float getCornerRadius() -> getCornerRadius
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getOpacity() -> getOpacity
    boolean isGreaterThanZero(float) -> isGreaterThanZero
android.support.v4.graphics.drawable.RoundedBitmapDrawable21 -> android.support.v4.graphics.drawable.RoundedBitmapDrawable21:
    void getOutline(android.graphics.Outline) -> getOutline
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory:
    java.lang.String TAG -> TAG
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream) -> create
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable:
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    java.lang.String mMediaId -> mMediaId
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    java.lang.CharSequence mDescription -> mDescription
    android.graphics.Bitmap mIcon -> mIcon
    android.net.Uri mIconUri -> mIconUri
    android.os.Bundle mExtras -> mExtras
    java.lang.Object mDescriptionObj -> mDescriptionObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getMediaId() -> getMediaId
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    java.lang.CharSequence getDescription() -> getDescription
    android.graphics.Bitmap getIconBitmap() -> getIconBitmap
    android.net.Uri getIconUri() -> getIconUri
    android.os.Bundle getExtras() -> getExtras
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    java.lang.Object getMediaDescription() -> getMediaDescription
    android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$1:
    android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    java.lang.String mMediaId -> mMediaId
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    java.lang.CharSequence mDescription -> mDescription
    android.graphics.Bitmap mIcon -> mIcon
    android.net.Uri mIconUri -> mIconUri
    android.os.Bundle mExtras -> mExtras
    android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
    android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
    android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.support.v4.media.MediaDescriptionCompat build() -> build
android.support.v4.media.MediaDescriptionCompatApi21 -> android.support.v4.media.MediaDescriptionCompatApi21:
    java.lang.String getMediaId(java.lang.Object) -> getMediaId
    java.lang.CharSequence getTitle(java.lang.Object) -> getTitle
    java.lang.CharSequence getSubtitle(java.lang.Object) -> getSubtitle
    java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    android.graphics.Bitmap getIconBitmap(java.lang.Object) -> getIconBitmap
    android.net.Uri getIconUri(java.lang.Object) -> getIconUri
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
    java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> android.support.v4.media.MediaDescriptionCompatApi21$Builder:
    java.lang.Object newInstance() -> newInstance
    void setMediaId(java.lang.Object,java.lang.String) -> setMediaId
    void setTitle(java.lang.Object,java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.Object,java.lang.CharSequence) -> setSubtitle
    void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
    void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> setIconBitmap
    void setIconUri(java.lang.Object,android.net.Uri) -> setIconUri
    void setExtras(java.lang.Object,android.os.Bundle) -> setExtras
    java.lang.Object build(java.lang.Object) -> build
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    java.lang.String TAG -> TAG
    java.lang.String METADATA_KEY_TITLE -> METADATA_KEY_TITLE
    java.lang.String METADATA_KEY_ARTIST -> METADATA_KEY_ARTIST
    java.lang.String METADATA_KEY_DURATION -> METADATA_KEY_DURATION
    java.lang.String METADATA_KEY_ALBUM -> METADATA_KEY_ALBUM
    java.lang.String METADATA_KEY_AUTHOR -> METADATA_KEY_AUTHOR
    java.lang.String METADATA_KEY_WRITER -> METADATA_KEY_WRITER
    java.lang.String METADATA_KEY_COMPOSER -> METADATA_KEY_COMPOSER
    java.lang.String METADATA_KEY_COMPILATION -> METADATA_KEY_COMPILATION
    java.lang.String METADATA_KEY_DATE -> METADATA_KEY_DATE
    java.lang.String METADATA_KEY_YEAR -> METADATA_KEY_YEAR
    java.lang.String METADATA_KEY_GENRE -> METADATA_KEY_GENRE
    java.lang.String METADATA_KEY_TRACK_NUMBER -> METADATA_KEY_TRACK_NUMBER
    java.lang.String METADATA_KEY_NUM_TRACKS -> METADATA_KEY_NUM_TRACKS
    java.lang.String METADATA_KEY_DISC_NUMBER -> METADATA_KEY_DISC_NUMBER
    java.lang.String METADATA_KEY_ALBUM_ARTIST -> METADATA_KEY_ALBUM_ARTIST
    java.lang.String METADATA_KEY_ART -> METADATA_KEY_ART
    java.lang.String METADATA_KEY_ART_URI -> METADATA_KEY_ART_URI
    java.lang.String METADATA_KEY_ALBUM_ART -> METADATA_KEY_ALBUM_ART
    java.lang.String METADATA_KEY_ALBUM_ART_URI -> METADATA_KEY_ALBUM_ART_URI
    java.lang.String METADATA_KEY_USER_RATING -> METADATA_KEY_USER_RATING
    java.lang.String METADATA_KEY_RATING -> METADATA_KEY_RATING
    java.lang.String METADATA_KEY_DISPLAY_TITLE -> METADATA_KEY_DISPLAY_TITLE
    java.lang.String METADATA_KEY_DISPLAY_SUBTITLE -> METADATA_KEY_DISPLAY_SUBTITLE
    java.lang.String METADATA_KEY_DISPLAY_DESCRIPTION -> METADATA_KEY_DISPLAY_DESCRIPTION
    java.lang.String METADATA_KEY_DISPLAY_ICON -> METADATA_KEY_DISPLAY_ICON
    java.lang.String METADATA_KEY_DISPLAY_ICON_URI -> METADATA_KEY_DISPLAY_ICON_URI
    java.lang.String METADATA_KEY_MEDIA_ID -> METADATA_KEY_MEDIA_ID
    int METADATA_TYPE_LONG -> METADATA_TYPE_LONG
    int METADATA_TYPE_TEXT -> METADATA_TYPE_TEXT
    int METADATA_TYPE_BITMAP -> METADATA_TYPE_BITMAP
    int METADATA_TYPE_RATING -> METADATA_TYPE_RATING
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> METADATA_KEYS_TYPE
    java.lang.String[] PREFERRED_DESCRIPTION_ORDER -> PREFERRED_DESCRIPTION_ORDER
    java.lang.String[] PREFERRED_BITMAP_ORDER -> PREFERRED_BITMAP_ORDER
    java.lang.String[] PREFERRED_URI_ORDER -> PREFERRED_URI_ORDER
    android.os.Bundle mBundle -> mBundle
    java.lang.Object mMetadataObj -> mMetadataObj
    android.support.v4.media.MediaDescriptionCompat mDescription -> mDescription
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean containsKey(java.lang.String) -> containsKey
    java.lang.CharSequence getText(java.lang.String) -> getText
    java.lang.String getString(java.lang.String) -> getString
    long getLong(java.lang.String) -> getLong
    android.support.v4.media.RatingCompat getRating(java.lang.String) -> getRating
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int size() -> size
    java.util.Set keySet() -> keySet
    android.os.Bundle getBundle() -> getBundle
    android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    java.lang.Object getMediaMetadata() -> getMediaMetadata
    android.os.Bundle access$100(android.support.v4.media.MediaMetadataCompat) -> access$100
    android.support.v4.util.ArrayMap access$200() -> access$200
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaMetadataCompat$Builder -> android.support.v4.media.MediaMetadataCompat$Builder:
    android.os.Bundle mBundle -> mBundle
    android.support.v4.media.MediaMetadataCompat$Builder putText(java.lang.String,java.lang.CharSequence) -> putText
    android.support.v4.media.MediaMetadataCompat$Builder putString(java.lang.String,java.lang.String) -> putString
    android.support.v4.media.MediaMetadataCompat$Builder putLong(java.lang.String,long) -> putLong
    android.support.v4.media.MediaMetadataCompat$Builder putRating(java.lang.String,android.support.v4.media.RatingCompat) -> putRating
    android.support.v4.media.MediaMetadataCompat$Builder putBitmap(java.lang.String,android.graphics.Bitmap) -> putBitmap
    android.support.v4.media.MediaMetadataCompat build() -> build
android.support.v4.media.MediaMetadataCompatApi21 -> android.support.v4.media.MediaMetadataCompatApi21:
    java.util.Set keySet(java.lang.Object) -> keySet
    android.graphics.Bitmap getBitmap(java.lang.Object,java.lang.String) -> getBitmap
    long getLong(java.lang.Object,java.lang.String) -> getLong
    java.lang.Object getRating(java.lang.Object,java.lang.String) -> getRating
    java.lang.CharSequence getText(java.lang.Object,java.lang.String) -> getText
android.support.v4.media.MediaMetadataCompatApi21$Builder -> android.support.v4.media.MediaMetadataCompatApi21$Builder:
    java.lang.Object newInstance() -> newInstance
    void putBitmap(java.lang.Object,java.lang.String,android.graphics.Bitmap) -> putBitmap
    void putLong(java.lang.Object,java.lang.String,long) -> putLong
    void putRating(java.lang.Object,java.lang.String,java.lang.Object) -> putRating
    void putText(java.lang.Object,java.lang.String,java.lang.CharSequence) -> putText
    void putString(java.lang.Object,java.lang.String,java.lang.String) -> putString
    java.lang.Object build(java.lang.Object) -> build
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    java.lang.String TAG -> TAG
    int RATING_NONE -> RATING_NONE
    int RATING_HEART -> RATING_HEART
    int RATING_THUMB_UP_DOWN -> RATING_THUMB_UP_DOWN
    int RATING_3_STARS -> RATING_3_STARS
    int RATING_4_STARS -> RATING_4_STARS
    int RATING_5_STARS -> RATING_5_STARS
    int RATING_PERCENTAGE -> RATING_PERCENTAGE
    float RATING_NOT_RATED -> RATING_NOT_RATED
    int mRatingStyle -> mRatingStyle
    float mRatingValue -> mRatingValue
    java.lang.Object mRatingObj -> mRatingObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.support.v4.media.RatingCompat newUnratedRating(int) -> newUnratedRating
    android.support.v4.media.RatingCompat newHeartRating(boolean) -> newHeartRating
    android.support.v4.media.RatingCompat newThumbRating(boolean) -> newThumbRating
    android.support.v4.media.RatingCompat newStarRating(int,float) -> newStarRating
    android.support.v4.media.RatingCompat newPercentageRating(float) -> newPercentageRating
    boolean isRated() -> isRated
    int getRatingStyle() -> getRatingStyle
    boolean hasHeart() -> hasHeart
    boolean isThumbUp() -> isThumbUp
    float getStarRating() -> getStarRating
    float getPercentRating() -> getPercentRating
    android.support.v4.media.RatingCompat fromRating(java.lang.Object) -> fromRating
    java.lang.Object getRating() -> getRating
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.RatingCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.RatingCompatApi21 -> android.support.v4.media.RatingCompatApi21:
    java.lang.Object newUnratedRating(int) -> newUnratedRating
    java.lang.Object newHeartRating(boolean) -> newHeartRating
    java.lang.Object newThumbRating(boolean) -> newThumbRating
    java.lang.Object newStarRating(int,float) -> newStarRating
    java.lang.Object newPercentageRating(float) -> newPercentageRating
    boolean isRated(java.lang.Object) -> isRated
    int getRatingStyle(java.lang.Object) -> getRatingStyle
    boolean hasHeart(java.lang.Object) -> hasHeart
    boolean isThumbUp(java.lang.Object) -> isThumbUp
    float getStarRating(java.lang.Object) -> getStarRating
    float getPercentRating(java.lang.Object) -> getPercentRating
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.media.VolumeProviderCompat -> android.support.v4.media.VolumeProviderCompat:
    int VOLUME_CONTROL_FIXED -> VOLUME_CONTROL_FIXED
    int VOLUME_CONTROL_RELATIVE -> VOLUME_CONTROL_RELATIVE
    int VOLUME_CONTROL_ABSOLUTE -> VOLUME_CONTROL_ABSOLUTE
    int mControlType -> mControlType
    int mMaxVolume -> mMaxVolume
    int mCurrentVolume -> mCurrentVolume
    android.support.v4.media.VolumeProviderCompat$Callback mCallback -> mCallback
    java.lang.Object mVolumeProviderObj -> mVolumeProviderObj
    int getCurrentVolume() -> getCurrentVolume
    int getVolumeControl() -> getVolumeControl
    int getMaxVolume() -> getMaxVolume
    void setCurrentVolume(int) -> setCurrentVolume
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
    void setCallback(android.support.v4.media.VolumeProviderCompat$Callback) -> setCallback
    java.lang.Object getVolumeProvider() -> getVolumeProvider
android.support.v4.media.VolumeProviderCompat$1 -> android.support.v4.media.VolumeProviderCompat$1:
    android.support.v4.media.VolumeProviderCompat this$0 -> this$0
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.VolumeProviderCompat$Callback -> android.support.v4.media.VolumeProviderCompat$Callback:
    void onVolumeChanged(android.support.v4.media.VolumeProviderCompat) -> onVolumeChanged
android.support.v4.media.VolumeProviderCompatApi21 -> android.support.v4.media.VolumeProviderCompatApi21:
    java.lang.Object createVolumeProvider(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate) -> createVolumeProvider
    void setCurrentVolume(java.lang.Object,int) -> setCurrentVolume
android.support.v4.media.VolumeProviderCompatApi21$1 -> android.support.v4.media.VolumeProviderCompatApi21$1:
    android.support.v4.media.VolumeProviderCompatApi21$Delegate val$delegate -> val$delegate
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.VolumeProviderCompatApi21$Delegate -> android.support.v4.media.VolumeProviderCompatApi21$Delegate:
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.routing.MediaRouterJellybean -> android.support.v4.media.routing.MediaRouterJellybean:
    java.lang.String TAG -> TAG
    int ROUTE_TYPE_LIVE_AUDIO -> ROUTE_TYPE_LIVE_AUDIO
    int ROUTE_TYPE_LIVE_VIDEO -> ROUTE_TYPE_LIVE_VIDEO
    int ROUTE_TYPE_USER -> ROUTE_TYPE_USER
    int ALL_ROUTE_TYPES -> ALL_ROUTE_TYPES
    java.lang.Object getMediaRouter(android.content.Context) -> getMediaRouter
    java.util.List getRoutes(java.lang.Object) -> getRoutes
    java.util.List getCategories(java.lang.Object) -> getCategories
    java.lang.Object getSelectedRoute(java.lang.Object,int) -> getSelectedRoute
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
    void addCallback(java.lang.Object,int,java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object,java.lang.Object) -> removeCallback
    java.lang.Object createRouteCategory(java.lang.Object,java.lang.String,boolean) -> createRouteCategory
    java.lang.Object createUserRoute(java.lang.Object,java.lang.Object) -> createUserRoute
    void addUserRoute(java.lang.Object,java.lang.Object) -> addUserRoute
    void removeUserRoute(java.lang.Object,java.lang.Object) -> removeUserRoute
    java.lang.Object createCallback(android.support.v4.media.routing.MediaRouterJellybean$Callback) -> createCallback
    java.lang.Object createVolumeCallback(android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback) -> createVolumeCallback
android.support.v4.media.routing.MediaRouterJellybean$Callback -> android.support.v4.media.routing.MediaRouterJellybean$Callback:
    void onRouteSelected(int,java.lang.Object) -> onRouteSelected
    void onRouteUnselected(int,java.lang.Object) -> onRouteUnselected
    void onRouteAdded(java.lang.Object) -> onRouteAdded
    void onRouteRemoved(java.lang.Object) -> onRouteRemoved
    void onRouteChanged(java.lang.Object) -> onRouteChanged
    void onRouteGrouped(java.lang.Object,java.lang.Object,int) -> onRouteGrouped
    void onRouteUngrouped(java.lang.Object,java.lang.Object) -> onRouteUngrouped
    void onRouteVolumeChanged(java.lang.Object) -> onRouteVolumeChanged
android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy -> android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy:
    android.support.v4.media.routing.MediaRouterJellybean$Callback mCallback -> mCallback
    void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteSelected
    void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteUnselected
    void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteAdded
    void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteRemoved
    void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteChanged
    void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup,int) -> onRouteGrouped
    void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup) -> onRouteUngrouped
    void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteVolumeChanged
android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround -> android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround:
    java.lang.reflect.Method mGetSystemAudioRouteMethod -> mGetSystemAudioRouteMethod
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
android.support.v4.media.routing.MediaRouterJellybean$RouteCategory -> android.support.v4.media.routing.MediaRouterJellybean$RouteCategory:
    java.lang.CharSequence getName(java.lang.Object,android.content.Context) -> getName
    java.util.List getRoutes(java.lang.Object) -> getRoutes
    int getSupportedTypes(java.lang.Object) -> getSupportedTypes
    boolean isGroupable(java.lang.Object) -> isGroupable
android.support.v4.media.routing.MediaRouterJellybean$RouteGroup -> android.support.v4.media.routing.MediaRouterJellybean$RouteGroup:
    java.util.List getGroupedRoutes(java.lang.Object) -> getGroupedRoutes
android.support.v4.media.routing.MediaRouterJellybean$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybean$RouteInfo:
    java.lang.CharSequence getName(java.lang.Object,android.content.Context) -> getName
    java.lang.CharSequence getStatus(java.lang.Object) -> getStatus
    int getSupportedTypes(java.lang.Object) -> getSupportedTypes
    java.lang.Object getCategory(java.lang.Object) -> getCategory
    android.graphics.drawable.Drawable getIconDrawable(java.lang.Object) -> getIconDrawable
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    int getPlaybackStream(java.lang.Object) -> getPlaybackStream
    int getVolume(java.lang.Object) -> getVolume
    int getVolumeMax(java.lang.Object) -> getVolumeMax
    int getVolumeHandling(java.lang.Object) -> getVolumeHandling
    java.lang.Object getTag(java.lang.Object) -> getTag
    void setTag(java.lang.Object,java.lang.Object) -> setTag
    void requestSetVolume(java.lang.Object,int) -> requestSetVolume
    void requestUpdateVolume(java.lang.Object,int) -> requestUpdateVolume
    java.lang.Object getGroup(java.lang.Object) -> getGroup
    boolean isGroup(java.lang.Object) -> isGroup
android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround -> android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround:
    java.lang.reflect.Method mSelectRouteIntMethod -> mSelectRouteIntMethod
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo -> android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo:
    void setName(java.lang.Object,java.lang.CharSequence) -> setName
    void setStatus(java.lang.Object,java.lang.CharSequence) -> setStatus
    void setIconDrawable(java.lang.Object,android.graphics.drawable.Drawable) -> setIconDrawable
    void setPlaybackType(java.lang.Object,int) -> setPlaybackType
    void setPlaybackStream(java.lang.Object,int) -> setPlaybackStream
    void setVolume(java.lang.Object,int) -> setVolume
    void setVolumeMax(java.lang.Object,int) -> setVolumeMax
    void setVolumeHandling(java.lang.Object,int) -> setVolumeHandling
    void setVolumeCallback(java.lang.Object,java.lang.Object) -> setVolumeCallback
    void setRemoteControlClient(java.lang.Object,java.lang.Object) -> setRemoteControlClient
android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback -> android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback:
    void onVolumeSetRequest(java.lang.Object,int) -> onVolumeSetRequest
    void onVolumeUpdateRequest(java.lang.Object,int) -> onVolumeUpdateRequest
android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy -> android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy:
    android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback mCallback -> mCallback
    void onVolumeSetRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeSetRequest
    void onVolumeUpdateRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeUpdateRequest
android.support.v4.media.routing.MediaRouterJellybeanMr1 -> android.support.v4.media.routing.MediaRouterJellybeanMr1:
    java.lang.String TAG -> TAG
    java.lang.Object createCallback(android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback) -> createCallback
android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround -> android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround:
    int WIFI_DISPLAY_SCAN_INTERVAL -> WIFI_DISPLAY_SCAN_INTERVAL
    android.hardware.display.DisplayManager mDisplayManager -> mDisplayManager
    android.os.Handler mHandler -> mHandler
    java.lang.reflect.Method mScanWifiDisplaysMethod -> mScanWifiDisplaysMethod
    boolean mActivelyScanningWifiDisplays -> mActivelyScanningWifiDisplays
    void setActiveScanRouteTypes(int) -> setActiveScanRouteTypes
    void run() -> run
android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback -> android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback:
    void onRoutePresentationDisplayChanged(java.lang.Object) -> onRoutePresentationDisplayChanged
android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy -> android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy:
    void onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRoutePresentationDisplayChanged
android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround -> android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround:
    java.lang.reflect.Method mGetStatusCodeMethod -> mGetStatusCodeMethod
    int mStatusConnecting -> mStatusConnecting
    boolean isConnecting(java.lang.Object) -> isConnecting
android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo:
    boolean isEnabled(java.lang.Object) -> isEnabled
    android.view.Display getPresentationDisplay(java.lang.Object) -> getPresentationDisplay
android.support.v4.media.routing.MediaRouterJellybeanMr2 -> android.support.v4.media.routing.MediaRouterJellybeanMr2:
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
    void addCallback(java.lang.Object,int,java.lang.Object,int) -> addCallback
android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo:
    java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    boolean isConnecting(java.lang.Object) -> isConnecting
android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo:
    void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
android.support.v4.media.session.IMediaControllerCallback -> android.support.v4.media.session.IMediaControllerCallback:
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onEvent -> TRANSACTION_onEvent
    int TRANSACTION_onSessionDestroyed -> TRANSACTION_onSessionDestroyed
    int TRANSACTION_onPlaybackStateChanged -> TRANSACTION_onPlaybackStateChanged
    int TRANSACTION_onMetadataChanged -> TRANSACTION_onMetadataChanged
    int TRANSACTION_onQueueChanged -> TRANSACTION_onQueueChanged
    int TRANSACTION_onQueueTitleChanged -> TRANSACTION_onQueueTitleChanged
    int TRANSACTION_onExtrasChanged -> TRANSACTION_onExtrasChanged
    int TRANSACTION_onVolumeInfoChanged -> TRANSACTION_onVolumeInfoChanged
    android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy -> android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.IMediaSession -> android.support.v4.media.session.IMediaSession:
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
    boolean isTransportControlEnabled() -> isTransportControlEnabled
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getTag() -> getTag
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    long getFlags() -> getFlags
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void next() -> next
    void previous() -> previous
    void fastForward() -> fastForward
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void rate(android.support.v4.media.RatingCompat) -> rate
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_sendCommand -> TRANSACTION_sendCommand
    int TRANSACTION_sendMediaButton -> TRANSACTION_sendMediaButton
    int TRANSACTION_registerCallbackListener -> TRANSACTION_registerCallbackListener
    int TRANSACTION_unregisterCallbackListener -> TRANSACTION_unregisterCallbackListener
    int TRANSACTION_isTransportControlEnabled -> TRANSACTION_isTransportControlEnabled
    int TRANSACTION_getPackageName -> TRANSACTION_getPackageName
    int TRANSACTION_getTag -> TRANSACTION_getTag
    int TRANSACTION_getLaunchPendingIntent -> TRANSACTION_getLaunchPendingIntent
    int TRANSACTION_getFlags -> TRANSACTION_getFlags
    int TRANSACTION_getVolumeAttributes -> TRANSACTION_getVolumeAttributes
    int TRANSACTION_adjustVolume -> TRANSACTION_adjustVolume
    int TRANSACTION_setVolumeTo -> TRANSACTION_setVolumeTo
    int TRANSACTION_play -> TRANSACTION_play
    int TRANSACTION_playFromMediaId -> TRANSACTION_playFromMediaId
    int TRANSACTION_playFromSearch -> TRANSACTION_playFromSearch
    int TRANSACTION_skipToQueueItem -> TRANSACTION_skipToQueueItem
    int TRANSACTION_pause -> TRANSACTION_pause
    int TRANSACTION_stop -> TRANSACTION_stop
    int TRANSACTION_next -> TRANSACTION_next
    int TRANSACTION_previous -> TRANSACTION_previous
    int TRANSACTION_fastForward -> TRANSACTION_fastForward
    int TRANSACTION_rewind -> TRANSACTION_rewind
    int TRANSACTION_seekTo -> TRANSACTION_seekTo
    int TRANSACTION_rate -> TRANSACTION_rate
    int TRANSACTION_sendCustomAction -> TRANSACTION_sendCustomAction
    int TRANSACTION_getMetadata -> TRANSACTION_getMetadata
    int TRANSACTION_getPlaybackState -> TRANSACTION_getPlaybackState
    int TRANSACTION_getQueue -> TRANSACTION_getQueue
    int TRANSACTION_getQueueTitle -> TRANSACTION_getQueueTitle
    int TRANSACTION_getExtras -> TRANSACTION_getExtras
    int TRANSACTION_getRatingType -> TRANSACTION_getRatingType
    android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
    boolean isTransportControlEnabled() -> isTransportControlEnabled
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getTag() -> getTag
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    long getFlags() -> getFlags
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void next() -> next
    void previous() -> previous
    void fastForward() -> fastForward
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void rate(android.support.v4.media.RatingCompat) -> rate
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
android.support.v4.media.session.MediaControllerCompat -> android.support.v4.media.session.MediaControllerCompat:
    java.lang.String TAG -> TAG
    android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl -> mImpl
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> registerCallback
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$1 -> android.support.v4.media.session.MediaControllerCompat$1:
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler -> mHandler
    boolean mRegistered -> mRegistered
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo) -> onAudioInfoChanged
    void binderDied() -> binderDied
    void setHandler(android.os.Handler) -> setHandler
    android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler access$200(android.support.v4.media.session.MediaControllerCompat$Callback) -> access$200
    boolean access$300(android.support.v4.media.session.MediaControllerCompat$Callback) -> access$300
    java.lang.Object access$400(android.support.v4.media.session.MediaControllerCompat$Callback) -> access$400
    void access$500(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> access$500
    boolean access$302(android.support.v4.media.session.MediaControllerCompat$Callback,boolean) -> access$302
android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler -> android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler:
    int MSG_EVENT -> MSG_EVENT
    int MSG_UPDATE_PLAYBACK_STATE -> MSG_UPDATE_PLAYBACK_STATE
    int MSG_UPDATE_METADATA -> MSG_UPDATE_METADATA
    int MSG_UPDATE_VOLUME -> MSG_UPDATE_VOLUME
    int MSG_UPDATE_QUEUE -> MSG_UPDATE_QUEUE
    int MSG_UPDATE_QUEUE_TITLE -> MSG_UPDATE_QUEUE_TITLE
    int MSG_UPDATE_EXTRAS -> MSG_UPDATE_EXTRAS
    int MSG_DESTROYED -> MSG_DESTROYED
    android.support.v4.media.session.MediaControllerCompat$Callback this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
    void post(int,java.lang.Object,android.os.Bundle) -> post
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21:
    android.support.v4.media.session.MediaControllerCompat$Callback this$0 -> this$0
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat:
    android.support.v4.media.session.MediaControllerCompat$Callback this$0 -> this$0
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl:
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    java.lang.Object mControllerObj -> mControllerObj
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase:
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    android.support.v4.media.session.IMediaSession mBinder -> mBinder
    android.support.v4.media.session.MediaControllerCompat$TransportControls mTransportControls -> mTransportControls
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    int PLAYBACK_TYPE_LOCAL -> PLAYBACK_TYPE_LOCAL
    int PLAYBACK_TYPE_REMOTE -> PLAYBACK_TYPE_REMOTE
    int mPlaybackType -> mPlaybackType
    int mAudioStream -> mAudioStream
    int mVolumeControl -> mVolumeControl
    int mMaxVolume -> mMaxVolume
    int mCurrentVolume -> mCurrentVolume
    int getPlaybackType() -> getPlaybackType
    int getAudioStream() -> getAudioStream
    int getVolumeControl() -> getVolumeControl
    int getMaxVolume() -> getMaxVolume
    int getCurrentVolume() -> getCurrentVolume
android.support.v4.media.session.MediaControllerCompat$TransportControls -> android.support.v4.media.session.MediaControllerCompat$TransportControls:
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void skipToNext() -> skipToNext
    void rewind() -> rewind
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
    void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21:
    java.lang.Object mControlsObj -> mControlsObj
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void rewind() -> rewind
    void skipToNext() -> skipToNext
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(long) -> skipToQueueItem
    void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaControllerCompat$TransportControlsBase -> android.support.v4.media.session.MediaControllerCompat$TransportControlsBase:
    android.support.v4.media.session.IMediaSession mBinder -> mBinder
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void skipToNext() -> skipToNext
    void rewind() -> rewind
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
    void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaControllerCompatApi21 -> android.support.v4.media.session.MediaControllerCompatApi21:
    java.lang.Object fromToken(android.content.Context,java.lang.Object) -> fromToken
    java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> createCallback
    void registerCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> registerCallback
    void unregisterCallback(java.lang.Object,java.lang.Object) -> unregisterCallback
    java.lang.Object getTransportControls(java.lang.Object) -> getTransportControls
    java.lang.Object getPlaybackState(java.lang.Object) -> getPlaybackState
    java.lang.Object getMetadata(java.lang.Object) -> getMetadata
    java.util.List getQueue(java.lang.Object) -> getQueue
    java.lang.CharSequence getQueueTitle(java.lang.Object) -> getQueueTitle
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    int getRatingType(java.lang.Object) -> getRatingType
    long getFlags(java.lang.Object) -> getFlags
    java.lang.Object getPlaybackInfo(java.lang.Object) -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity(java.lang.Object) -> getSessionActivity
    boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent) -> dispatchMediaButtonEvent
    void setVolumeTo(java.lang.Object,int,int) -> setVolumeTo
    void adjustVolume(java.lang.Object,int,int) -> adjustVolume
    void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName(java.lang.Object) -> getPackageName
android.support.v4.media.session.MediaControllerCompatApi21$Callback -> android.support.v4.media.session.MediaControllerCompatApi21$Callback:
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback -> mCallback
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    int FLAG_SCO -> FLAG_SCO
    int STREAM_BLUETOOTH_SCO -> STREAM_BLUETOOTH_SCO
    int STREAM_SYSTEM_ENFORCED -> STREAM_SYSTEM_ENFORCED
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    android.media.AudioAttributes getAudioAttributes(java.lang.Object) -> getAudioAttributes
    int getLegacyAudioStream(java.lang.Object) -> getLegacyAudioStream
    int getVolumeControl(java.lang.Object) -> getVolumeControl
    int getMaxVolume(java.lang.Object) -> getMaxVolume
    int getCurrentVolume(java.lang.Object) -> getCurrentVolume
    int toLegacyStreamType(android.media.AudioAttributes) -> toLegacyStreamType
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi21$TransportControls:
    void play(java.lang.Object) -> play
    void pause(java.lang.Object) -> pause
    void stop(java.lang.Object) -> stop
    void seekTo(java.lang.Object,long) -> seekTo
    void fastForward(java.lang.Object) -> fastForward
    void rewind(java.lang.Object) -> rewind
    void skipToNext(java.lang.Object) -> skipToNext
    void skipToPrevious(java.lang.Object) -> skipToPrevious
    void setRating(java.lang.Object,java.lang.Object) -> setRating
    void playFromMediaId(java.lang.Object,java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.Object,java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(java.lang.Object,long) -> skipToQueueItem
    void sendCustomAction(java.lang.Object,java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl -> mImpl
    android.support.v4.media.session.MediaControllerCompat mController -> mController
    java.util.ArrayList mActiveListeners -> mActiveListeners
    int FLAG_HANDLES_MEDIA_BUTTONS -> FLAG_HANDLES_MEDIA_BUTTONS
    int FLAG_HANDLES_TRANSPORT_CONTROLS -> FLAG_HANDLES_TRANSPORT_CONTROLS
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback) -> setCallback
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    android.support.v4.media.session.MediaControllerCompat getController() -> getController
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setExtras(android.os.Bundle) -> setExtras
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) -> addOnActiveChangeListener
    void removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) -> removeOnActiveChangeListener
    android.support.v4.media.session.MediaSessionCompat obtain(android.content.Context,java.lang.Object) -> obtain
android.support.v4.media.session.MediaSessionCompat$1 -> android.support.v4.media.session.MediaSessionCompat$1:
android.support.v4.media.session.MediaSessionCompat$Callback -> android.support.v4.media.session.MediaSessionCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.support.v4.media.RatingCompat) -> onSetRating
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21:
    android.support.v4.media.session.MediaSessionCompat$Callback this$0 -> this$0
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl:
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setExtras(android.os.Bundle) -> setExtras
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21:
    java.lang.Object mSessionObj -> mSessionObj
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    android.app.PendingIntent mMediaButtonIntent -> mMediaButtonIntent
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setExtras(android.os.Bundle) -> setExtras
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase:
    android.content.Context mContext -> mContext
    android.content.ComponentName mComponentName -> mComponentName
    android.app.PendingIntent mMediaButtonEventReceiver -> mMediaButtonEventReceiver
    java.lang.Object mRccObj -> mRccObj
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub -> mStub
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler -> mHandler
    java.lang.String mPackageName -> mPackageName
    java.lang.String mTag -> mTag
    android.media.AudioManager mAudioManager -> mAudioManager
    java.lang.Object mLock -> mLock
    android.os.RemoteCallbackList mControllerCallbacks -> mControllerCallbacks
    boolean mDestroyed -> mDestroyed
    boolean mIsActive -> mIsActive
    boolean mIsRccRegistered -> mIsRccRegistered
    boolean mIsMbrRegistered -> mIsMbrRegistered
    android.support.v4.media.session.MediaSessionCompat$Callback mCallback -> mCallback
    int mFlags -> mFlags
    android.support.v4.media.MediaMetadataCompat mMetadata -> mMetadata
    android.support.v4.media.session.PlaybackStateCompat mState -> mState
    android.app.PendingIntent mSessionActivity -> mSessionActivity
    java.util.List mQueue -> mQueue
    java.lang.CharSequence mQueueTitle -> mQueueTitle
    int mRatingType -> mRatingType
    android.os.Bundle mExtras -> mExtras
    int mVolumeType -> mVolumeType
    int mLocalStream -> mLocalStream
    android.support.v4.media.VolumeProviderCompat mVolumeProvider -> mVolumeProvider
    android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback -> mVolumeCallback
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void setRatingType(int) -> setRatingType
    void setExtras(android.os.Bundle) -> setExtras
    boolean update() -> update
    void adjustVolume(int,int) -> adjustVolume
    void setVolumeTo(int,int) -> setVolumeTo
    android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition() -> getStateWithUpdatedPosition
    void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> sendVolumeInfoChanged
    void sendSessionDestroyed() -> sendSessionDestroyed
    void sendEvent(java.lang.String,android.os.Bundle) -> sendEvent
    void sendState(android.support.v4.media.session.PlaybackStateCompat) -> sendState
    void sendMetadata(android.support.v4.media.MediaMetadataCompat) -> sendMetadata
    void sendQueue(java.util.List) -> sendQueue
    void sendQueueTitle(java.lang.CharSequence) -> sendQueueTitle
    android.support.v4.media.VolumeProviderCompat access$200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$200
    int access$300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$300
    int access$400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$400
    void access$500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.support.v4.media.session.ParcelableVolumeInfo) -> access$500
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler access$700(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$700
    int access$800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$800
    boolean access$900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$900
    android.os.RemoteCallbackList access$1000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1000
    java.lang.String access$1100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1100
    java.lang.String access$1200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1200
    java.lang.Object access$1300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1300
    android.app.PendingIntent access$1400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1400
    android.media.AudioManager access$1500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1500
    void access$1600(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,int,int) -> access$1600
    void access$1700(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,int,int) -> access$1700
    android.support.v4.media.MediaMetadataCompat access$1800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1800
    android.support.v4.media.session.PlaybackStateCompat access$1900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1900
    java.util.List access$2000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2000
    java.lang.CharSequence access$2100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2100
    android.os.Bundle access$2200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2200
    int access$2300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2300
    android.support.v4.media.session.MediaSessionCompat$Callback access$2400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2400
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> this$0
    void onVolumeChanged(android.support.v4.media.VolumeProviderCompat) -> onVolumeChanged
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2:
    android.support.v4.media.session.MediaSessionCompat$Callback val$callback -> val$callback
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> this$0
    void onStop() -> onStop
    void onSkipToPrevious() -> onSkipToPrevious
    void onSkipToNext() -> onSkipToNext
    void onSetRating(java.lang.Object) -> onSetRating
    void onSeekTo(long) -> onSeekTo
    void onRewind() -> onRewind
    void onPlay() -> onPlay
    void onPause() -> onPause
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onFastForward() -> onFastForward
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command:
    java.lang.String command -> command
    android.os.Bundle extras -> extras
    android.os.ResultReceiver stub -> stub
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> this$0
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getTag() -> getTag
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    long getFlags() -> getFlags
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void next() -> next
    void previous() -> previous
    void fastForward() -> fastForward
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void rate(android.support.v4.media.RatingCompat) -> rate
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    boolean isTransportControlEnabled() -> isTransportControlEnabled
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler:
    int MSG_PLAY -> MSG_PLAY
    int MSG_PLAY_MEDIA_ID -> MSG_PLAY_MEDIA_ID
    int MSG_PLAY_SEARCH -> MSG_PLAY_SEARCH
    int MSG_SKIP_TO_ITEM -> MSG_SKIP_TO_ITEM
    int MSG_PAUSE -> MSG_PAUSE
    int MSG_STOP -> MSG_STOP
    int MSG_NEXT -> MSG_NEXT
    int MSG_PREVIOUS -> MSG_PREVIOUS
    int MSG_FAST_FORWARD -> MSG_FAST_FORWARD
    int MSG_REWIND -> MSG_REWIND
    int MSG_SEEK_TO -> MSG_SEEK_TO
    int MSG_RATE -> MSG_RATE
    int MSG_CUSTOM_ACTION -> MSG_CUSTOM_ACTION
    int MSG_MEDIA_BUTTON -> MSG_MEDIA_BUTTON
    int MSG_COMMAND -> MSG_COMMAND
    int MSG_ADJUST_VOLUME -> MSG_ADJUST_VOLUME
    int MSG_SET_VOLUME -> MSG_SET_VOLUME
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> this$0
    void post(int,java.lang.Object,android.os.Bundle) -> post
    void post(int,java.lang.Object) -> post
    void post(int) -> post
    void post(int,java.lang.Object,int) -> post
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener -> android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener:
    void onActiveChanged() -> onActiveChanged
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    int UNKNOWN_ID -> UNKNOWN_ID
    android.support.v4.media.MediaDescriptionCompat mDescription -> mDescription
    long mId -> mId
    java.lang.Object mItem -> mItem
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    long getQueueId() -> getQueueId
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.lang.Object getQueueItem() -> getQueueItem
    android.support.v4.media.session.MediaSessionCompat$QueueItem obtain(java.lang.Object) -> obtain
    java.lang.String toString() -> toString
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
    android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    android.os.ResultReceiver mResultReceiver -> mResultReceiver
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.os.ResultReceiver access$600(android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> access$600
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    java.lang.Object mInner -> mInner
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object) -> fromToken
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object getToken() -> getToken
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompatApi14 -> android.support.v4.media.session.MediaSessionCompatApi14:
    int RCC_PLAYSTATE_NONE -> RCC_PLAYSTATE_NONE
    int STATE_NONE -> STATE_NONE
    int STATE_STOPPED -> STATE_STOPPED
    int STATE_PAUSED -> STATE_PAUSED
    int STATE_PLAYING -> STATE_PLAYING
    int STATE_FAST_FORWARDING -> STATE_FAST_FORWARDING
    int STATE_REWINDING -> STATE_REWINDING
    int STATE_BUFFERING -> STATE_BUFFERING
    int STATE_ERROR -> STATE_ERROR
    int STATE_CONNECTING -> STATE_CONNECTING
    int STATE_SKIPPING_TO_PREVIOUS -> STATE_SKIPPING_TO_PREVIOUS
    int STATE_SKIPPING_TO_NEXT -> STATE_SKIPPING_TO_NEXT
    int STATE_SKIPPING_TO_QUEUE_ITEM -> STATE_SKIPPING_TO_QUEUE_ITEM
    long ACTION_STOP -> ACTION_STOP
    long ACTION_PAUSE -> ACTION_PAUSE
    long ACTION_PLAY -> ACTION_PLAY
    long ACTION_REWIND -> ACTION_REWIND
    long ACTION_SKIP_TO_PREVIOUS -> ACTION_SKIP_TO_PREVIOUS
    long ACTION_SKIP_TO_NEXT -> ACTION_SKIP_TO_NEXT
    long ACTION_FAST_FORWARD -> ACTION_FAST_FORWARD
    long ACTION_PLAY_PAUSE -> ACTION_PLAY_PAUSE
    java.lang.String METADATA_KEY_ART -> METADATA_KEY_ART
    java.lang.String METADATA_KEY_ALBUM_ART -> METADATA_KEY_ALBUM_ART
    java.lang.String METADATA_KEY_TITLE -> METADATA_KEY_TITLE
    java.lang.String METADATA_KEY_ARTIST -> METADATA_KEY_ARTIST
    java.lang.String METADATA_KEY_DURATION -> METADATA_KEY_DURATION
    java.lang.String METADATA_KEY_ALBUM -> METADATA_KEY_ALBUM
    java.lang.String METADATA_KEY_AUTHOR -> METADATA_KEY_AUTHOR
    java.lang.String METADATA_KEY_WRITER -> METADATA_KEY_WRITER
    java.lang.String METADATA_KEY_COMPOSER -> METADATA_KEY_COMPOSER
    java.lang.String METADATA_KEY_COMPILATION -> METADATA_KEY_COMPILATION
    java.lang.String METADATA_KEY_DATE -> METADATA_KEY_DATE
    java.lang.String METADATA_KEY_GENRE -> METADATA_KEY_GENRE
    java.lang.String METADATA_KEY_TRACK_NUMBER -> METADATA_KEY_TRACK_NUMBER
    java.lang.String METADATA_KEY_DISC_NUMBER -> METADATA_KEY_DISC_NUMBER
    java.lang.String METADATA_KEY_ALBUM_ARTIST -> METADATA_KEY_ALBUM_ARTIST
    java.lang.Object createRemoteControlClient(android.app.PendingIntent) -> createRemoteControlClient
    void setState(java.lang.Object,int) -> setState
    void setTransportControlFlags(java.lang.Object,long) -> setTransportControlFlags
    void setMetadata(java.lang.Object,android.os.Bundle) -> setMetadata
    void registerRemoteControlClient(android.content.Context,java.lang.Object) -> registerRemoteControlClient
    void unregisterRemoteControlClient(android.content.Context,java.lang.Object) -> unregisterRemoteControlClient
    int getRccStateFromState(int) -> getRccStateFromState
    int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
    void buildOldMetadata(android.os.Bundle,android.media.RemoteControlClient$MetadataEditor) -> buildOldMetadata
android.support.v4.media.session.MediaSessionCompatApi14$Callback -> android.support.v4.media.session.MediaSessionCompatApi14$Callback:
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
android.support.v4.media.session.MediaSessionCompatApi18 -> android.support.v4.media.session.MediaSessionCompatApi18:
    long ACTION_SEEK_TO -> ACTION_SEEK_TO
    java.lang.Object createPlaybackPositionUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback) -> createPlaybackPositionUpdateListener
    void registerMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent) -> registerMediaButtonEventReceiver
    void unregisterMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent) -> unregisterMediaButtonEventReceiver
    void setState(java.lang.Object,int,long,float,long) -> setState
    void setTransportControlFlags(java.lang.Object,long) -> setTransportControlFlags
    void setOnPlaybackPositionUpdateListener(java.lang.Object,java.lang.Object) -> setOnPlaybackPositionUpdateListener
    int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener -> android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener:
    android.support.v4.media.session.MediaSessionCompatApi14$Callback mCallback -> mCallback
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
android.support.v4.media.session.MediaSessionCompatApi19 -> android.support.v4.media.session.MediaSessionCompatApi19:
    long ACTION_SET_RATING -> ACTION_SET_RATING
    java.lang.String METADATA_KEY_USER_RATING -> METADATA_KEY_USER_RATING
    java.lang.String METADATA_KEY_RATING -> METADATA_KEY_RATING
    java.lang.String METADATA_KEY_YEAR -> METADATA_KEY_YEAR
    void setTransportControlFlags(java.lang.Object,long) -> setTransportControlFlags
    java.lang.Object createMetadataUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback) -> createMetadataUpdateListener
    void setMetadata(java.lang.Object,android.os.Bundle,long) -> setMetadata
    void setOnMetadataUpdateListener(java.lang.Object,java.lang.Object) -> setOnMetadataUpdateListener
    int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
    void addNewMetadata(android.os.Bundle,android.media.RemoteControlClient$MetadataEditor) -> addNewMetadata
android.support.v4.media.session.MediaSessionCompatApi19$OnMetadataUpdateListener -> android.support.v4.media.session.MediaSessionCompatApi19$OnMetadataUpdateListener:
    android.support.v4.media.session.MediaSessionCompatApi14$Callback mCallback -> mCallback
    void onMetadataUpdate(int,java.lang.Object) -> onMetadataUpdate
android.support.v4.media.session.MediaSessionCompatApi21 -> android.support.v4.media.session.MediaSessionCompatApi21:
    java.lang.Object createSession(android.content.Context,java.lang.String) -> createSession
    java.lang.Object verifySession(java.lang.Object) -> verifySession
    java.lang.Object verifyToken(java.lang.Object) -> verifyToken
    java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi21$Callback) -> createCallback
    void setCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> setCallback
    void setFlags(java.lang.Object,int) -> setFlags
    void setPlaybackToLocal(java.lang.Object,int) -> setPlaybackToLocal
    void setPlaybackToRemote(java.lang.Object,java.lang.Object) -> setPlaybackToRemote
    void setActive(java.lang.Object,boolean) -> setActive
    boolean isActive(java.lang.Object) -> isActive
    void sendSessionEvent(java.lang.Object,java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release(java.lang.Object) -> release
    android.os.Parcelable getSessionToken(java.lang.Object) -> getSessionToken
    void setPlaybackState(java.lang.Object,java.lang.Object) -> setPlaybackState
    void setMetadata(java.lang.Object,java.lang.Object) -> setMetadata
    void setSessionActivity(java.lang.Object,android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(java.lang.Object,android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.lang.Object,java.util.List) -> setQueue
    void setQueueTitle(java.lang.Object,java.lang.CharSequence) -> setQueueTitle
    void setExtras(java.lang.Object,android.os.Bundle) -> setExtras
android.support.v4.media.session.MediaSessionCompatApi21$Callback -> android.support.v4.media.session.MediaSessionCompatApi21$Callback:
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback -> mCallback
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.media.Rating) -> onSetRating
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem -> android.support.v4.media.session.MediaSessionCompatApi21$QueueItem:
    java.lang.Object createItem(java.lang.Object,long) -> createItem
    java.lang.Object getDescription(java.lang.Object) -> getDescription
    long getQueueId(java.lang.Object) -> getQueueId
android.support.v4.media.session.MediaSessionCompatApi22 -> android.support.v4.media.session.MediaSessionCompatApi22:
    void setRatingType(java.lang.Object,int) -> setRatingType
android.support.v4.media.session.MediaSessionCompatApi8 -> android.support.v4.media.session.MediaSessionCompatApi8:
    void registerMediaButtonEventReceiver(android.content.Context,android.content.ComponentName) -> registerMediaButtonEventReceiver
    void unregisterMediaButtonEventReceiver(android.content.Context,android.content.ComponentName) -> unregisterMediaButtonEventReceiver
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    int volumeType -> volumeType
    int audioStream -> audioStream
    int controlType -> controlType
    int maxVolume -> maxVolume
    int currentVolume -> currentVolume
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$1:
    android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    long ACTION_STOP -> ACTION_STOP
    long ACTION_PAUSE -> ACTION_PAUSE
    long ACTION_PLAY -> ACTION_PLAY
    long ACTION_REWIND -> ACTION_REWIND
    long ACTION_SKIP_TO_PREVIOUS -> ACTION_SKIP_TO_PREVIOUS
    long ACTION_SKIP_TO_NEXT -> ACTION_SKIP_TO_NEXT
    long ACTION_FAST_FORWARD -> ACTION_FAST_FORWARD
    long ACTION_SET_RATING -> ACTION_SET_RATING
    long ACTION_SEEK_TO -> ACTION_SEEK_TO
    long ACTION_PLAY_PAUSE -> ACTION_PLAY_PAUSE
    long ACTION_PLAY_FROM_MEDIA_ID -> ACTION_PLAY_FROM_MEDIA_ID
    long ACTION_PLAY_FROM_SEARCH -> ACTION_PLAY_FROM_SEARCH
    long ACTION_SKIP_TO_QUEUE_ITEM -> ACTION_SKIP_TO_QUEUE_ITEM
    int STATE_NONE -> STATE_NONE
    int STATE_STOPPED -> STATE_STOPPED
    int STATE_PAUSED -> STATE_PAUSED
    int STATE_PLAYING -> STATE_PLAYING
    int STATE_FAST_FORWARDING -> STATE_FAST_FORWARDING
    int STATE_REWINDING -> STATE_REWINDING
    int STATE_BUFFERING -> STATE_BUFFERING
    int STATE_ERROR -> STATE_ERROR
    int STATE_CONNECTING -> STATE_CONNECTING
    int STATE_SKIPPING_TO_PREVIOUS -> STATE_SKIPPING_TO_PREVIOUS
    int STATE_SKIPPING_TO_NEXT -> STATE_SKIPPING_TO_NEXT
    int STATE_SKIPPING_TO_QUEUE_ITEM -> STATE_SKIPPING_TO_QUEUE_ITEM
    long PLAYBACK_POSITION_UNKNOWN -> PLAYBACK_POSITION_UNKNOWN
    int mState -> mState
    long mPosition -> mPosition
    long mBufferedPosition -> mBufferedPosition
    float mSpeed -> mSpeed
    long mActions -> mActions
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    long mUpdateTime -> mUpdateTime
    java.util.List mCustomActions -> mCustomActions
    long mActiveItemId -> mActiveItemId
    android.os.Bundle mExtras -> mExtras
    java.lang.Object mStateObj -> mStateObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getState() -> getState
    long getPosition() -> getPosition
    long getBufferedPosition() -> getBufferedPosition
    float getPlaybackSpeed() -> getPlaybackSpeed
    long getActions() -> getActions
    java.util.List getCustomActions() -> getCustomActions
    java.lang.CharSequence getErrorMessage() -> getErrorMessage
    long getLastPositionUpdateTime() -> getLastPositionUpdateTime
    long getActiveQueueItemId() -> getActiveQueueItemId
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    java.lang.Object getPlaybackState() -> getPlaybackState
    int access$300(android.support.v4.media.session.PlaybackStateCompat) -> access$300
    long access$400(android.support.v4.media.session.PlaybackStateCompat) -> access$400
    float access$500(android.support.v4.media.session.PlaybackStateCompat) -> access$500
    long access$600(android.support.v4.media.session.PlaybackStateCompat) -> access$600
    long access$700(android.support.v4.media.session.PlaybackStateCompat) -> access$700
    long access$800(android.support.v4.media.session.PlaybackStateCompat) -> access$800
    java.lang.CharSequence access$900(android.support.v4.media.session.PlaybackStateCompat) -> access$900
    java.util.List access$1000(android.support.v4.media.session.PlaybackStateCompat) -> access$1000
    long access$1100(android.support.v4.media.session.PlaybackStateCompat) -> access$1100
    android.os.Bundle access$1200(android.support.v4.media.session.PlaybackStateCompat) -> access$1200
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat$Builder -> android.support.v4.media.session.PlaybackStateCompat$Builder:
    java.util.List mCustomActions -> mCustomActions
    int mState -> mState
    long mPosition -> mPosition
    long mBufferedPosition -> mBufferedPosition
    float mRate -> mRate
    long mActions -> mActions
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    long mUpdateTime -> mUpdateTime
    long mActiveItemId -> mActiveItemId
    android.os.Bundle mExtras -> mExtras
    android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float) -> setState
    android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long) -> setState
    android.support.v4.media.session.PlaybackStateCompat$Builder setBufferedPosition(long) -> setBufferedPosition
    android.support.v4.media.session.PlaybackStateCompat$Builder setActions(long) -> setActions
    android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(java.lang.String,java.lang.String,int) -> addCustomAction
    android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction) -> addCustomAction
    android.support.v4.media.session.PlaybackStateCompat$Builder setActiveQueueItemId(long) -> setActiveQueueItemId
    android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(java.lang.CharSequence) -> setErrorMessage
    android.support.v4.media.session.PlaybackStateCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.support.v4.media.session.PlaybackStateCompat build() -> build
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    java.lang.String mAction -> mAction
    java.lang.CharSequence mName -> mName
    int mIcon -> mIcon
    android.os.Bundle mExtras -> mExtras
    java.lang.Object mCustomActionObj -> mCustomActionObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> fromCustomAction
    java.lang.Object getCustomAction() -> getCustomAction
    java.lang.String getAction() -> getAction
    java.lang.CharSequence getName() -> getName
    int getIcon() -> getIcon
    android.os.Bundle getExtras() -> getExtras
    java.lang.String toString() -> toString
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
    android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder:
    java.lang.String mAction -> mAction
    java.lang.CharSequence mName -> mName
    int mIcon -> mIcon
    android.os.Bundle mExtras -> mExtras
    android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder setExtras(android.os.Bundle) -> setExtras
    android.support.v4.media.session.PlaybackStateCompat$CustomAction build() -> build
android.support.v4.media.session.PlaybackStateCompatApi21 -> android.support.v4.media.session.PlaybackStateCompatApi21:
    int getState(java.lang.Object) -> getState
    long getPosition(java.lang.Object) -> getPosition
    long getBufferedPosition(java.lang.Object) -> getBufferedPosition
    float getPlaybackSpeed(java.lang.Object) -> getPlaybackSpeed
    long getActions(java.lang.Object) -> getActions
    java.lang.CharSequence getErrorMessage(java.lang.Object) -> getErrorMessage
    long getLastPositionUpdateTime(java.lang.Object) -> getLastPositionUpdateTime
    java.util.List getCustomActions(java.lang.Object) -> getCustomActions
    long getActiveQueueItemId(java.lang.Object) -> getActiveQueueItemId
    java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long) -> newInstance
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction -> android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction:
    java.lang.String getAction(java.lang.Object) -> getAction
    java.lang.CharSequence getName(java.lang.Object) -> getName
    int getIcon(java.lang.Object) -> getIcon
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    java.lang.Object newInstance(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> newInstance
android.support.v4.media.session.PlaybackStateCompatApi22 -> android.support.v4.media.session.PlaybackStateCompatApi22:
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> newInstance
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.AsyncTaskCompat -> android.support.v4.os.AsyncTaskCompat:
    android.os.AsyncTask executeParallel(android.os.AsyncTask,java.lang.Object[]) -> executeParallel
android.support.v4.os.AsyncTaskCompatHoneycomb -> android.support.v4.os.AsyncTaskCompatHoneycomb:
    void executeParallel(android.os.AsyncTask,java.lang.Object[]) -> executeParallel
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.os.TraceCompat -> android.support.v4.os.TraceCompat:
    void beginSection(java.lang.String) -> beginSection
    void endSection() -> endSection
android.support.v4.os.TraceJellybeanMR2 -> android.support.v4.os.TraceJellybeanMR2:
    void beginSection(java.lang.String) -> beginSection
    void endSection() -> endSection
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$OnPrintFinishCallback -> android.support.v4.print.PrintHelper$OnPrintFinishCallback:
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1 -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1:
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelper$PrintHelperKitkatImpl this$0 -> this$0
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2 -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2:
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelper$PrintHelperKitkatImpl this$0 -> this$0
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Matrix access$000(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> access$000
    android.graphics.Bitmap access$200(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> access$200
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> access$300
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void onFinish() -> onFinish
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask mLoadBitmap -> mLoadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback val$callback -> val$callback
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> access$100
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void onCancel() -> onCancel
android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback -> android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback:
    void onFinish() -> onFinish
android.support.v4.provider.DocumentFile -> android.support.v4.provider.DocumentFile:
    java.lang.String TAG -> TAG
    android.support.v4.provider.DocumentFile mParent -> mParent
    android.support.v4.provider.DocumentFile fromFile(java.io.File) -> fromFile
    android.support.v4.provider.DocumentFile fromSingleUri(android.content.Context,android.net.Uri) -> fromSingleUri
    android.support.v4.provider.DocumentFile fromTreeUri(android.content.Context,android.net.Uri) -> fromTreeUri
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    android.support.v4.provider.DocumentFile getParentFile() -> getParentFile
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    android.support.v4.provider.DocumentFile findFile(java.lang.String) -> findFile
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.provider.DocumentsContractApi19 -> android.support.v4.provider.DocumentsContractApi19:
    java.lang.String TAG -> TAG
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    java.lang.String getName(android.content.Context,android.net.Uri) -> getName
    java.lang.String getRawType(android.content.Context,android.net.Uri) -> getRawType
    java.lang.String getType(android.content.Context,android.net.Uri) -> getType
    boolean isDirectory(android.content.Context,android.net.Uri) -> isDirectory
    boolean isFile(android.content.Context,android.net.Uri) -> isFile
    long lastModified(android.content.Context,android.net.Uri) -> lastModified
    long length(android.content.Context,android.net.Uri) -> length
    boolean canRead(android.content.Context,android.net.Uri) -> canRead
    boolean canWrite(android.content.Context,android.net.Uri) -> canWrite
    boolean delete(android.content.Context,android.net.Uri) -> delete
    boolean exists(android.content.Context,android.net.Uri) -> exists
    java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> queryForString
    int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int) -> queryForInt
    long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long) -> queryForLong
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
android.support.v4.provider.DocumentsContractApi21 -> android.support.v4.provider.DocumentsContractApi21:
    java.lang.String TAG -> TAG
    android.net.Uri createFile(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> createFile
    android.net.Uri createDirectory(android.content.Context,android.net.Uri,java.lang.String) -> createDirectory
    android.net.Uri prepareTreeUri(android.net.Uri) -> prepareTreeUri
    android.net.Uri[] listFiles(android.content.Context,android.net.Uri) -> listFiles
    android.net.Uri renameTo(android.content.Context,android.net.Uri,java.lang.String) -> renameTo
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
android.support.v4.provider.RawDocumentFile -> android.support.v4.provider.RawDocumentFile:
    java.io.File mFile -> mFile
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
    java.lang.String getTypeForName(java.lang.String) -> getTypeForName
    boolean deleteContents(java.io.File) -> deleteContents
android.support.v4.provider.SingleDocumentFile -> android.support.v4.provider.SingleDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.provider.TreeDocumentFile -> android.support.v4.provider.TreeDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.speech.tts.TextToSpeechICS -> android.support.v4.speech.tts.TextToSpeechICS:
    java.lang.String TAG -> TAG
    android.speech.tts.TextToSpeech construct(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String) -> construct
android.support.v4.speech.tts.TextToSpeechICSMR1 -> android.support.v4.speech.tts.TextToSpeechICSMR1:
    java.lang.String KEY_FEATURE_EMBEDDED_SYNTHESIS -> KEY_FEATURE_EMBEDDED_SYNTHESIS
    java.lang.String KEY_FEATURE_NETWORK_SYNTHESIS -> KEY_FEATURE_NETWORK_SYNTHESIS
    java.util.Set getFeatures(android.speech.tts.TextToSpeech,java.util.Locale) -> getFeatures
    void setUtteranceProgressListener(android.speech.tts.TextToSpeech,android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1) -> setUtteranceProgressListener
android.support.v4.speech.tts.TextToSpeechICSMR1$1 -> android.support.v4.speech.tts.TextToSpeechICSMR1$1:
    android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 val$listener -> val$listener
    void onStart(java.lang.String) -> onStart
    void onError(java.lang.String) -> onError
    void onDone(java.lang.String) -> onDone
android.support.v4.speech.tts.TextToSpeechICSMR1$2 -> android.support.v4.speech.tts.TextToSpeechICSMR1$2:
    android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 val$listener -> val$listener
    void onUtteranceCompleted(java.lang.String) -> onUtteranceCompleted
android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 -> android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1:
    void onDone(java.lang.String) -> onDone
    void onError(java.lang.String) -> onError
    void onStart(java.lang.String) -> onStart
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.CircularArray -> android.support.v4.util.CircularArray:
    java.lang.Object[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    int mCapacityBitmask -> mCapacityBitmask
    void doubleCapacity() -> doubleCapacity
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.Object popFirst() -> popFirst
    java.lang.Object popLast() -> popLast
    void clear() -> clear
    void removeFromStart(int) -> removeFromStart
    void removeFromEnd(int) -> removeFromEnd
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.CircularIntArray -> android.support.v4.util.CircularIntArray:
    int[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    int mCapacityBitmask -> mCapacityBitmask
    void doubleCapacity() -> doubleCapacity
    void addFirst(int) -> addFirst
    void addLast(int) -> addLast
    int popFirst() -> popFirst
    int popLast() -> popLast
    void clear() -> clear
    void removeFromStart(int) -> removeFromStart
    void removeFromEnd(int) -> removeFromEnd
    int getFirst() -> getFirst
    int getLast() -> getLast
    int get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    void resize(int) -> resize
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Pair -> android.support.v4.util.Pair:
    java.lang.Object first -> first
    java.lang.Object second -> second
    boolean equals(java.lang.Object) -> equals
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    int hashCode() -> hashCode
    android.support.v4.util.Pair create(java.lang.Object,java.lang.Object) -> create
android.support.v4.util.Pools -> android.support.v4.util.Pools:
android.support.v4.util.Pools$Pool -> android.support.v4.util.Pools$Pool:
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    java.lang.Object[] mPool -> mPool
    int mPoolSize -> mPoolSize
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
    boolean isInPool(java.lang.Object) -> isInPool
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> mLock
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfKey(java.lang.Object) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.InputDeviceCompat -> android.support.v4.view.InputDeviceCompat:
    int SOURCE_CLASS_MASK -> SOURCE_CLASS_MASK
    int SOURCE_CLASS_NONE -> SOURCE_CLASS_NONE
    int SOURCE_CLASS_BUTTON -> SOURCE_CLASS_BUTTON
    int SOURCE_CLASS_POINTER -> SOURCE_CLASS_POINTER
    int SOURCE_CLASS_TRACKBALL -> SOURCE_CLASS_TRACKBALL
    int SOURCE_CLASS_POSITION -> SOURCE_CLASS_POSITION
    int SOURCE_CLASS_JOYSTICK -> SOURCE_CLASS_JOYSTICK
    int SOURCE_UNKNOWN -> SOURCE_UNKNOWN
    int SOURCE_KEYBOARD -> SOURCE_KEYBOARD
    int SOURCE_DPAD -> SOURCE_DPAD
    int SOURCE_GAMEPAD -> SOURCE_GAMEPAD
    int SOURCE_TOUCHSCREEN -> SOURCE_TOUCHSCREEN
    int SOURCE_MOUSE -> SOURCE_MOUSE
    int SOURCE_STYLUS -> SOURCE_STYLUS
    int SOURCE_TRACKBALL -> SOURCE_TRACKBALL
    int SOURCE_TOUCHPAD -> SOURCE_TOUCHPAD
    int SOURCE_TOUCH_NAVIGATION -> SOURCE_TOUCH_NAVIGATION
    int SOURCE_JOYSTICK -> SOURCE_JOYSTICK
    int SOURCE_HDMI -> SOURCE_HDMI
    int SOURCE_ANY -> SOURCE_ANY
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.LayoutInflaterCompat -> android.support.v4.view.LayoutInflaterCompat:
    android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl IMPL -> IMPL
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompatBase -> android.support.v4.view.LayoutInflaterCompatBase:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper -> android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper:
    android.support.v4.view.LayoutInflaterFactory mDelegateFactory -> mDelegateFactory
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    java.lang.String toString() -> toString
android.support.v4.view.LayoutInflaterCompatHC -> android.support.v4.view.LayoutInflaterCompatHC:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sLayoutInflaterFactory2Field -> sLayoutInflaterFactory2Field
    boolean sCheckedField -> sCheckedField
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
    void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC -> android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.view.LayoutInflaterCompatLollipop -> android.support.v4.view.LayoutInflaterCompatLollipop:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterFactory -> android.support.v4.view.LayoutInflaterFactory:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int AXIS_X -> AXIS_X
    int AXIS_Y -> AXIS_Y
    int AXIS_PRESSURE -> AXIS_PRESSURE
    int AXIS_SIZE -> AXIS_SIZE
    int AXIS_TOUCH_MAJOR -> AXIS_TOUCH_MAJOR
    int AXIS_TOUCH_MINOR -> AXIS_TOUCH_MINOR
    int AXIS_TOOL_MAJOR -> AXIS_TOOL_MAJOR
    int AXIS_TOOL_MINOR -> AXIS_TOOL_MINOR
    int AXIS_ORIENTATION -> AXIS_ORIENTATION
    int AXIS_VSCROLL -> AXIS_VSCROLL
    int AXIS_HSCROLL -> AXIS_HSCROLL
    int AXIS_Z -> AXIS_Z
    int AXIS_RX -> AXIS_RX
    int AXIS_RY -> AXIS_RY
    int AXIS_RZ -> AXIS_RZ
    int AXIS_HAT_X -> AXIS_HAT_X
    int AXIS_HAT_Y -> AXIS_HAT_Y
    int AXIS_LTRIGGER -> AXIS_LTRIGGER
    int AXIS_RTRIGGER -> AXIS_RTRIGGER
    int AXIS_THROTTLE -> AXIS_THROTTLE
    int AXIS_RUDDER -> AXIS_RUDDER
    int AXIS_WHEEL -> AXIS_WHEEL
    int AXIS_GAS -> AXIS_GAS
    int AXIS_BRAKE -> AXIS_BRAKE
    int AXIS_DISTANCE -> AXIS_DISTANCE
    int AXIS_TILT -> AXIS_TILT
    int AXIS_GENERIC_1 -> AXIS_GENERIC_1
    int AXIS_GENERIC_2 -> AXIS_GENERIC_2
    int AXIS_GENERIC_3 -> AXIS_GENERIC_3
    int AXIS_GENERIC_4 -> AXIS_GENERIC_4
    int AXIS_GENERIC_5 -> AXIS_GENERIC_5
    int AXIS_GENERIC_6 -> AXIS_GENERIC_6
    int AXIS_GENERIC_7 -> AXIS_GENERIC_7
    int AXIS_GENERIC_8 -> AXIS_GENERIC_8
    int AXIS_GENERIC_9 -> AXIS_GENERIC_9
    int AXIS_GENERIC_10 -> AXIS_GENERIC_10
    int AXIS_GENERIC_11 -> AXIS_GENERIC_11
    int AXIS_GENERIC_12 -> AXIS_GENERIC_12
    int AXIS_GENERIC_13 -> AXIS_GENERIC_13
    int AXIS_GENERIC_14 -> AXIS_GENERIC_14
    int AXIS_GENERIC_15 -> AXIS_GENERIC_15
    int AXIS_GENERIC_16 -> AXIS_GENERIC_16
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    int getSource(android.view.MotionEvent) -> getSource
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    int getSource(android.view.MotionEvent) -> getSource
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl:
    int getSource(android.view.MotionEvent) -> getSource
android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl:
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    int getSource(android.view.MotionEvent) -> getSource
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatGingerbread -> android.support.v4.view.MotionEventCompatGingerbread:
    int getSource(android.view.MotionEvent) -> getSource
android.support.v4.view.MotionEventCompatHoneycombMr1 -> android.support.v4.view.MotionEventCompatHoneycombMr1:
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
android.support.v4.view.NestedScrollingChild -> android.support.v4.view.NestedScrollingChild:
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
android.support.v4.view.NestedScrollingChildHelper -> android.support.v4.view.NestedScrollingChildHelper:
    android.view.View mView -> mView
    android.view.ViewParent mNestedScrollingParent -> mNestedScrollingParent
    boolean mIsNestedScrollingEnabled -> mIsNestedScrollingEnabled
    int[] mTempNestedScrollConsumed -> mTempNestedScrollConsumed
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
android.support.v4.view.NestedScrollingParent -> android.support.v4.view.NestedScrollingParent:
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
android.support.v4.view.NestedScrollingParentHelper -> android.support.v4.view.NestedScrollingParentHelper:
    android.view.ViewGroup mViewGroup -> mViewGroup
    int mNestedScrollAxes -> mNestedScrollAxes
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    int getNestedScrollAxes() -> getNestedScrollAxes
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
android.support.v4.view.OnApplyWindowInsetsListener -> android.support.v4.view.OnApplyWindowInsetsListener:
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScrollingView -> android.support.v4.view.ScrollingView:
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
android.support.v4.view.TintableBackgroundView -> android.support.v4.view.TintableBackgroundView:
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    java.lang.String TAG -> TAG
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    int SCROLL_AXIS_NONE -> SCROLL_AXIS_NONE
    int SCROLL_AXIS_HORIZONTAL -> SCROLL_AXIS_HORIZONTAL
    int SCROLL_AXIS_VERTICAL -> SCROLL_AXIS_VERTICAL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean isLaidOut(android.view.View) -> isLaidOut
    float getZ(android.view.View) -> getZ
    void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    java.lang.reflect.Method mDispatchStartTemporaryDetach -> mDispatchStartTemporaryDetach
    java.lang.reflect.Method mDispatchFinishTemporaryDetach -> mDispatchFinishTemporaryDetach
    boolean mTempDetachBound -> mTempDetachBound
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> mViewPropertyAnimatorCompatMap
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    void bindTempDetach() -> bindTempDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int) -> canScrollingViewScrollHorizontally
    boolean canScrollingViewScrollVertically(android.support.v4.view.ScrollingView,int) -> canScrollingViewScrollVertically
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean isLaidOut(android.view.View) -> isLaidOut
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    float getZ(android.view.View) -> getZ
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    int combineMeasuredStates(int,int) -> combineMeasuredStates
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    java.lang.reflect.Field mAccessibilityDelegateField -> mAccessibilityDelegateField
    boolean accessibilityDelegateCheckFailed -> accessibilityDelegateCheckFailed
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean isLaidOut(android.view.View) -> isLaidOut
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompat$LollipopViewCompatImpl -> android.support.v4.view.ViewCompat$LollipopViewCompatImpl:
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    float getZ(android.view.View) -> getZ
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setAlpha(android.view.View,float) -> setAlpha
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean isLaidOut(android.view.View) -> isLaidOut
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    float getZ(android.view.View) -> getZ
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompatBase -> android.support.v4.view.ViewCompatBase:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sMinWidthField -> sMinWidthField
    boolean sMinWidthFieldFetched -> sMinWidthFieldFetched
    java.lang.reflect.Field sMinHeightField -> sMinHeightField
    boolean sMinHeightFieldFetched -> sMinHeightFieldFetched
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    boolean isLaidOut(android.view.View) -> isLaidOut
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sChildrenDrawingOrderMethod -> sChildrenDrawingOrderMethod
    boolean isOpaque(android.view.View) -> isOpaque
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    int combineMeasuredStates(int,int) -> combineMeasuredStates
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    boolean isLaidOut(android.view.View) -> isLaidOut
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompatLollipop -> android.support.v4.view.ViewCompatLollipop:
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    float getZ(android.view.View) -> getZ
android.support.v4.view.ViewCompatLollipop$1 -> android.support.v4.view.ViewCompatLollipop$1:
    android.support.v4.view.OnApplyWindowInsetsListener val$listener -> val$listener
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatICS -> android.support.v4.view.ViewConfigurationCompatICS:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl:
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatLollipop -> android.support.v4.view.ViewGroupCompatLollipop:
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    java.util.List mOnPageChangeListeners -> mOnPageChangeListeners
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    void removeOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    void clearOnPageChangeListeners() -> clearOnPageChangeListeners
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl:
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatKitKat -> android.support.v4.view.ViewParentCompatKitKat:
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewParentCompatLollipop -> android.support.v4.view.ViewParentCompatLollipop:
    java.lang.String TAG -> TAG
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    java.lang.String TAG -> TAG
    java.lang.ref.WeakReference mView -> mView
    java.lang.Runnable mStartAction -> mStartAction
    java.lang.Runnable mEndAction -> mEndAction
    int mOldLayerType -> mOldLayerType
    int LISTENER_TAG_ID -> LISTENER_TAG_ID
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> IMPL
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    android.support.v4.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    long getDuration() -> getDuration
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    android.support.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    android.support.v4.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    android.support.v4.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    android.support.v4.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    android.support.v4.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    android.support.v4.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    void cancel() -> cancel
    android.support.v4.view.ViewPropertyAnimatorCompat x(float) -> x
    android.support.v4.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    android.support.v4.view.ViewPropertyAnimatorCompat y(float) -> y
    android.support.v4.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationZBy(float) -> translationZBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationZ(float) -> translationZ
    android.support.v4.view.ViewPropertyAnimatorCompat z(float) -> z
    android.support.v4.view.ViewPropertyAnimatorCompat zBy(float) -> zBy
    void start() -> start
    android.support.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    android.support.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    java.lang.Runnable access$002(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> access$002
    java.lang.Runnable access$102(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> access$102
    java.lang.Runnable access$100(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$100
    java.lang.Runnable access$000(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$000
    int access$402(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> access$402
    int access$400(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$400
android.support.v4.view.ViewPropertyAnimatorCompat$1 -> android.support.v4.view.ViewPropertyAnimatorCompat$1:
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl:
    java.util.WeakHashMap mStarterMap -> mStarterMap
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> z
    void zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> zBy
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZ
    void translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    void startAnimation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> startAnimation
    void removeStartMessage(android.view.View) -> removeStartMessage
    void postStartMessage(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> postStartMessage
    void access$200(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> access$200
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter:
    java.lang.ref.WeakReference mViewRef -> mViewRef
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl:
    java.util.WeakHashMap mLayerMap -> mLayerMap
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener:
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl:
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl:
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl:
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl:
    void translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZ
    void translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZBy
    void z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> z
    void zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> zBy
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl:
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> z
    void zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> zBy
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZ
    void translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.view.ViewPropertyAnimatorCompatICS:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.view.ViewPropertyAnimatorCompatICS$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.view.ViewPropertyAnimatorCompatJB:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatJB$1 -> android.support.v4.view.ViewPropertyAnimatorCompatJB$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2 -> android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompatKK -> android.support.v4.view.ViewPropertyAnimatorCompatKK:
    void setUpdateListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompatKK$1 -> android.support.v4.view.ViewPropertyAnimatorCompatKK$1:
    android.support.v4.view.ViewPropertyAnimatorUpdateListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.view.ViewPropertyAnimatorCompatLollipop -> android.support.v4.view.ViewPropertyAnimatorCompatLollipop:
    void translationZ(android.view.View,float) -> translationZ
    void translationZBy(android.view.View,float) -> translationZBy
    void z(android.view.View,float) -> z
    void zBy(android.view.View,float) -> zBy
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.ViewPropertyAnimatorListener:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorListenerAdapter -> android.support.v4.view.ViewPropertyAnimatorListenerAdapter:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorUpdateListener -> android.support.v4.view.ViewPropertyAnimatorUpdateListener:
    void onAnimationUpdate(android.view.View) -> onAnimationUpdate
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.WindowInsetsCompat -> android.support.v4.view.WindowInsetsCompat:
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    boolean hasInsets() -> hasInsets
    boolean isConsumed() -> isConsumed
    boolean isRound() -> isRound
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    int getStableInsetTop() -> getStableInsetTop
    int getStableInsetLeft() -> getStableInsetLeft
    int getStableInsetRight() -> getStableInsetRight
    int getStableInsetBottom() -> getStableInsetBottom
    boolean hasStableInsets() -> hasStableInsets
    android.support.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
android.support.v4.view.WindowInsetsCompatApi21 -> android.support.v4.view.WindowInsetsCompatApi21:
    android.view.WindowInsets mSource -> mSource
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    boolean hasInsets() -> hasInsets
    boolean isConsumed() -> isConsumed
    boolean isRound() -> isRound
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    int getStableInsetTop() -> getStableInsetTop
    int getStableInsetLeft() -> getStableInsetLeft
    int getStableInsetRight() -> getStableInsetRight
    int getStableInsetBottom() -> getStableInsetBottom
    boolean hasStableInsets() -> hasStableInsets
    android.support.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    android.view.WindowInsets unwrap() -> unwrap
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int CONTENT_CHANGE_TYPE_UNDEFINED -> CONTENT_CHANGE_TYPE_UNDEFINED
    int CONTENT_CHANGE_TYPE_SUBTREE -> CONTENT_CHANGE_TYPE_SUBTREE
    int CONTENT_CHANGE_TYPE_TEXT -> CONTENT_CHANGE_TYPE_TEXT
    int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION -> CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl:
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    void setScrollable(android.view.accessibility.AccessibilityEvent,boolean) -> setScrollable
android.support.v4.view.accessibility.AccessibilityEventCompatKitKat -> android.support.v4.view.accessibility.AccessibilityEventCompatKitKat:
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    int ACTION_SET_TEXT -> ACTION_SET_TEXT
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE -> ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    void addAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> getCollectionInfo
    void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> getRangeInfo
    java.util.List getActionList() -> getActionList
    void setContentInvalid(boolean) -> setContentInvalid
    boolean isContentInvalid() -> isContentInvalid
    void setError(java.lang.CharSequence) -> setError
    java.lang.CharSequence getError() -> getError
    void setLabelFor(android.view.View) -> setLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    java.lang.Object mAction -> mAction
    int getId() -> getId
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.Object access$100(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> access$100
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl:
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    java.util.List getActionList(java.lang.Object) -> getActionList
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
    java.lang.CharSequence getError(java.lang.Object) -> getError
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore(java.lang.Object) -> getTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter(java.lang.Object) -> getTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.util.List getActionList(java.lang.Object) -> getActionList
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore(java.lang.Object) -> getTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter(java.lang.Object) -> getTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    java.lang.CharSequence getError(java.lang.Object) -> getError
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.util.List getActionList(java.lang.Object) -> getActionList
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore(java.lang.Object) -> getTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter(java.lang.Object) -> getTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    java.lang.CharSequence getError(java.lang.Object) -> getError
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    int SELECTION_MODE_NONE -> SELECTION_MODE_NONE
    int SELECTION_MODE_SINGLE -> SELECTION_MODE_SINGLE
    int SELECTION_MODE_MULTIPLE -> SELECTION_MODE_MULTIPLE
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
    int getColumnCount() -> getColumnCount
    int getRowCount() -> getRowCount
    boolean isHierarchical() -> isHierarchical
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
    int getColumnIndex() -> getColumnIndex
    int getColumnSpan() -> getColumnSpan
    int getRowIndex() -> getRowIndex
    int getRowSpan() -> getRowSpan
    boolean isHeading() -> isHeading
    boolean isSelected() -> isSelected
    java.lang.Object access$300(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) -> access$300
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    int RANGE_TYPE_INT -> RANGE_TYPE_INT
    int RANGE_TYPE_FLOAT -> RANGE_TYPE_FLOAT
    int RANGE_TYPE_PERCENT -> RANGE_TYPE_PERCENT
    java.lang.Object mInfo -> mInfo
    float getCurrent() -> getCurrent
    float getMax() -> getMax
    float getMin() -> getMin
    int getType() -> getType
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21:
    java.util.List getActionList(java.lang.Object) -> getActionList
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    java.lang.CharSequence getError(java.lang.Object) -> getError
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo:
    boolean isSelected(java.lang.Object) -> isSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22:
    java.lang.Object getTraversalBefore(java.lang.Object) -> getTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
    java.lang.Object getTraversalAfter(java.lang.Object) -> getTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean) -> obtainCollectionItemInfo
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo:
    int getColumnCount(java.lang.Object) -> getColumnCount
    int getRowCount(java.lang.Object) -> getRowCount
    boolean isHierarchical(java.lang.Object) -> isHierarchical
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo:
    int getColumnIndex(java.lang.Object) -> getColumnIndex
    int getColumnSpan(java.lang.Object) -> getColumnSpan
    int getRowIndex(java.lang.Object) -> getRowIndex
    int getRowSpan(java.lang.Object) -> getRowSpan
    boolean isHeading(java.lang.Object) -> isHeading
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo:
    float getCurrent(java.lang.Object) -> getCurrent
    float getMax(java.lang.Object) -> getMax
    float getMin(java.lang.Object) -> getMin
    int getType(java.lang.Object) -> getType
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.animation.FastOutLinearInInterpolator -> android.support.v4.view.animation.FastOutLinearInInterpolator:
    float[] VALUES -> VALUES
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.animation.FastOutSlowInInterpolator -> android.support.v4.view.animation.FastOutSlowInInterpolator:
    float[] VALUES -> VALUES
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.animation.LinearOutSlowInInterpolator -> android.support.v4.view.animation.LinearOutSlowInInterpolator:
    float[] VALUES -> VALUES
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.animation.LookupTableInterpolator -> android.support.v4.view.animation.LookupTableInterpolator:
    float[] mValues -> mValues
    float mStepSize -> mStepSize
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.animation.PathInterpolatorCompat -> android.support.v4.view.animation.PathInterpolatorCompat:
    android.view.animation.Interpolator create(android.graphics.Path) -> create
    android.view.animation.Interpolator create(float,float) -> create
    android.view.animation.Interpolator create(float,float,float,float) -> create
android.support.v4.view.animation.PathInterpolatorCompatApi21 -> android.support.v4.view.animation.PathInterpolatorCompatApi21:
    android.view.animation.Interpolator create(android.graphics.Path) -> create
    android.view.animation.Interpolator create(float,float) -> create
    android.view.animation.Interpolator create(float,float,float,float) -> create
android.support.v4.view.animation.PathInterpolatorCompatBase -> android.support.v4.view.animation.PathInterpolatorCompatBase:
    android.view.animation.Interpolator create(android.graphics.Path) -> create
    android.view.animation.Interpolator create(float,float) -> create
    android.view.animation.Interpolator create(float,float,float,float) -> create
android.support.v4.view.animation.PathInterpolatorDonut -> android.support.v4.view.animation.PathInterpolatorDonut:
    float PRECISION -> PRECISION
    float[] mX -> mX
    float[] mY -> mY
    float getInterpolation(float) -> getInterpolation
    android.graphics.Path createQuad(float,float) -> createQuad
    android.graphics.Path createCubic(float,float,float,float) -> createCubic
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.CircleImageView -> android.support.v4.widget.CircleImageView:
    int KEY_SHADOW_COLOR -> KEY_SHADOW_COLOR
    int FILL_SHADOW_COLOR -> FILL_SHADOW_COLOR
    float X_OFFSET -> X_OFFSET
    float Y_OFFSET -> Y_OFFSET
    float SHADOW_RADIUS -> SHADOW_RADIUS
    int SHADOW_ELEVATION -> SHADOW_ELEVATION
    android.view.animation.Animation$AnimationListener mListener -> mListener
    int mShadowRadius -> mShadowRadius
    boolean elevationSupported() -> elevationSupported
    void onMeasure(int,int) -> onMeasure
    void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    void onAnimationStart() -> onAnimationStart
    void onAnimationEnd() -> onAnimationEnd
    void setBackgroundColorRes(int) -> setBackgroundColorRes
    void setBackgroundColor(int) -> setBackgroundColor
    int access$002(android.support.v4.widget.CircleImageView,int) -> access$002
    int access$000(android.support.v4.widget.CircleImageView) -> access$000
android.support.v4.widget.CircleImageView$OvalShadow -> android.support.v4.widget.CircleImageView$OvalShadow:
    android.graphics.RadialGradient mRadialGradient -> mRadialGradient
    android.graphics.Paint mShadowPaint -> mShadowPaint
    int mCircleDiameter -> mCircleDiameter
    android.support.v4.widget.CircleImageView this$0 -> this$0
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    boolean CAN_HIDE_DESCENDANTS -> CAN_HIDE_DESCENDANTS
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> mChildAccessibilityDelegate
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    android.graphics.drawable.Drawable mStatusBarBackground -> mStatusBarBackground
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    java.lang.Object mLastInsets -> mLastInsets
    boolean mDrawStatusBarBackground -> mDrawStatusBarBackground
    android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL -> IMPL
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    void setStatusBarBackground(int) -> setStatusBarBackground
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    int[] access$100() -> access$100
    boolean access$200() -> access$200
    android.view.View access$300(android.support.v4.widget.DrawerLayout) -> access$300
    boolean access$400(android.view.View) -> access$400
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate:
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.DrawerLayoutCompatApi21 -> android.support.v4.widget.DrawerLayoutCompatApi21:
    int[] THEME_ATTRS -> THEME_ATTRS
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener -> android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener:
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.widget.DrawerLayoutImpl -> android.support.v4.widget.DrawerLayoutImpl:
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onPull(float,float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
    boolean onPull(java.lang.Object,float,float) -> onPull
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
    boolean onPull(java.lang.Object,float,float) -> onPull
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
    boolean onPull(java.lang.Object,float,float) -> onPull
android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl:
    boolean onPull(java.lang.Object,float,float) -> onPull
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatLollipop -> android.support.v4.widget.EdgeEffectCompatLollipop:
    boolean onPull(java.lang.Object,float,float) -> onPull
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.MaterialProgressDrawable -> android.support.v4.widget.MaterialProgressDrawable:
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> LINEAR_INTERPOLATOR
    android.view.animation.Interpolator MATERIAL_INTERPOLATOR -> MATERIAL_INTERPOLATOR
    float FULL_ROTATION -> FULL_ROTATION
    int LARGE -> LARGE
    int DEFAULT -> DEFAULT
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    float CENTER_RADIUS -> CENTER_RADIUS
    float STROKE_WIDTH -> STROKE_WIDTH
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    float CENTER_RADIUS_LARGE -> CENTER_RADIUS_LARGE
    float STROKE_WIDTH_LARGE -> STROKE_WIDTH_LARGE
    int[] COLORS -> COLORS
    float COLOR_START_DELAY_OFFSET -> COLOR_START_DELAY_OFFSET
    float END_TRIM_START_DELAY_OFFSET -> END_TRIM_START_DELAY_OFFSET
    float START_TRIM_DURATION_OFFSET -> START_TRIM_DURATION_OFFSET
    int ANIMATION_DURATION -> ANIMATION_DURATION
    float NUM_POINTS -> NUM_POINTS
    java.util.ArrayList mAnimators -> mAnimators
    android.support.v4.widget.MaterialProgressDrawable$Ring mRing -> mRing
    float mRotation -> mRotation
    int ARROW_WIDTH -> ARROW_WIDTH
    int ARROW_HEIGHT -> ARROW_HEIGHT
    float ARROW_OFFSET_ANGLE -> ARROW_OFFSET_ANGLE
    int ARROW_WIDTH_LARGE -> ARROW_WIDTH_LARGE
    int ARROW_HEIGHT_LARGE -> ARROW_HEIGHT_LARGE
    float MAX_PROGRESS_ARC -> MAX_PROGRESS_ARC
    android.content.res.Resources mResources -> mResources
    android.view.View mParent -> mParent
    android.view.animation.Animation mAnimation -> mAnimation
    float mRotationCount -> mRotationCount
    double mWidth -> mWidth
    double mHeight -> mHeight
    boolean mFinishing -> mFinishing
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    void setSizeParameters(double,double,double,double,float,float) -> setSizeParameters
    void updateSizes(int) -> updateSizes
    void showArrow(boolean) -> showArrow
    void setArrowScale(float) -> setArrowScale
    void setStartEndTrim(float,float) -> setStartEndTrim
    void setProgressRotation(float) -> setProgressRotation
    void setBackgroundColor(int) -> setBackgroundColor
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    int getOpacity() -> getOpacity
    boolean isRunning() -> isRunning
    void start() -> start
    void stop() -> stop
    float getMinProgressArc(android.support.v4.widget.MaterialProgressDrawable$Ring) -> getMinProgressArc
    int evaluateColorChange(float,int,int) -> evaluateColorChange
    void updateRingColor(float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> updateRingColor
    void applyFinishTranslation(float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> applyFinishTranslation
    void setupAnimators() -> setupAnimators
    void access$000(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> access$000
    float access$100(android.support.v4.widget.MaterialProgressDrawable,android.support.v4.widget.MaterialProgressDrawable$Ring) -> access$100
    void access$200(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> access$200
    android.view.animation.Interpolator access$300() -> access$300
    float access$400(android.support.v4.widget.MaterialProgressDrawable) -> access$400
    float access$402(android.support.v4.widget.MaterialProgressDrawable,float) -> access$402
android.support.v4.widget.MaterialProgressDrawable$1 -> android.support.v4.widget.MaterialProgressDrawable$1:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.MaterialProgressDrawable$2 -> android.support.v4.widget.MaterialProgressDrawable$2:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.MaterialProgressDrawable$3 -> android.support.v4.widget.MaterialProgressDrawable$3:
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize -> android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize:
android.support.v4.widget.MaterialProgressDrawable$Ring -> android.support.v4.widget.MaterialProgressDrawable$Ring:
    android.graphics.RectF mTempBounds -> mTempBounds
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mArrowPaint -> mArrowPaint
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    float mStartTrim -> mStartTrim
    float mEndTrim -> mEndTrim
    float mRotation -> mRotation
    float mStrokeWidth -> mStrokeWidth
    float mStrokeInset -> mStrokeInset
    int[] mColors -> mColors
    int mColorIndex -> mColorIndex
    float mStartingStartTrim -> mStartingStartTrim
    float mStartingEndTrim -> mStartingEndTrim
    float mStartingRotation -> mStartingRotation
    boolean mShowArrow -> mShowArrow
    android.graphics.Path mArrow -> mArrow
    float mArrowScale -> mArrowScale
    double mRingCenterRadius -> mRingCenterRadius
    int mArrowWidth -> mArrowWidth
    int mArrowHeight -> mArrowHeight
    int mAlpha -> mAlpha
    android.graphics.Paint mCirclePaint -> mCirclePaint
    int mBackgroundColor -> mBackgroundColor
    int mCurrentColor -> mCurrentColor
    void setBackgroundColor(int) -> setBackgroundColor
    void setArrowDimensions(float,float) -> setArrowDimensions
    void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    void drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect) -> drawTriangle
    void setColors(int[]) -> setColors
    void setColor(int) -> setColor
    void setColorIndex(int) -> setColorIndex
    int getNextColor() -> getNextColor
    int getNextColorIndex() -> getNextColorIndex
    void goToNextColor() -> goToNextColor
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStartTrim(float) -> setStartTrim
    float getStartTrim() -> getStartTrim
    float getStartingStartTrim() -> getStartingStartTrim
    float getStartingEndTrim() -> getStartingEndTrim
    int getStartingColor() -> getStartingColor
    void setEndTrim(float) -> setEndTrim
    float getEndTrim() -> getEndTrim
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void setInsets(int,int) -> setInsets
    float getInsets() -> getInsets
    void setCenterRadius(double) -> setCenterRadius
    double getCenterRadius() -> getCenterRadius
    void setShowArrow(boolean) -> setShowArrow
    void setArrowScale(float) -> setArrowScale
    float getStartingRotation() -> getStartingRotation
    void storeOriginals() -> storeOriginals
    void resetOriginals() -> resetOriginals
    void invalidateSelf() -> invalidateSelf
android.support.v4.widget.NestedScrollView -> android.support.v4.widget.NestedScrollView:
    int ANIMATED_SCROLL_GAP -> ANIMATED_SCROLL_GAP
    float MAX_SCROLL_FACTOR -> MAX_SCROLL_FACTOR
    java.lang.String TAG -> TAG
    long mLastScroll -> mLastScroll
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop -> mEdgeGlowTop
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom -> mEdgeGlowBottom
    int mLastMotionY -> mLastMotionY
    boolean mIsLayoutDirty -> mIsLayoutDirty
    boolean mIsLaidOut -> mIsLaidOut
    android.view.View mChildToScrollTo -> mChildToScrollTo
    boolean mIsBeingDragged -> mIsBeingDragged
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    boolean mFillViewport -> mFillViewport
    boolean mSmoothScrollingEnabled -> mSmoothScrollingEnabled
    int mTouchSlop -> mTouchSlop
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mActivePointerId -> mActivePointerId
    int[] mScrollOffset -> mScrollOffset
    int[] mScrollConsumed -> mScrollConsumed
    int mNestedYOffset -> mNestedYOffset
    int INVALID_POINTER -> INVALID_POINTER
    android.support.v4.widget.NestedScrollView$SavedState mSavedState -> mSavedState
    android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> ACCESSIBILITY_DELEGATE
    int[] SCROLLVIEW_STYLEABLE -> SCROLLVIEW_STYLEABLE
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> mParentHelper
    android.support.v4.view.NestedScrollingChildHelper mChildHelper -> mChildHelper
    float mVerticalScrollFactor -> mVerticalScrollFactor
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    int getMaxScrollAmount() -> getMaxScrollAmount
    void initScrollView() -> initScrollView
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean canScroll() -> canScroll
    boolean isFillViewport() -> isFillViewport
    void setFillViewport(boolean) -> setFillViewport
    boolean isSmoothScrollingEnabled() -> isSmoothScrollingEnabled
    void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    void onMeasure(int,int) -> onMeasure
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean inChild(int,int) -> inChild
    void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    void recycleVelocityTracker() -> recycleVelocityTracker
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    int getScrollRange() -> getScrollRange
    android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    boolean pageScroll(int) -> pageScroll
    boolean fullScroll(int) -> fullScroll
    boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    boolean arrowScroll(int) -> arrowScroll
    boolean isOffScreen(android.view.View) -> isOffScreen
    boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    void doScrollY(int) -> doScrollY
    void smoothScrollBy(int,int) -> smoothScrollBy
    void smoothScrollTo(int,int) -> smoothScrollTo
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void measureChild(android.view.View,int,int) -> measureChild
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void computeScroll() -> computeScroll
    void scrollToChild(android.view.View) -> scrollToChild
    boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void requestLayout() -> requestLayout
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAttachedToWindow() -> onAttachedToWindow
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    void fling(int) -> fling
    void flingWithNestedDispatch(int) -> flingWithNestedDispatch
    void endDrag() -> endDrag
    void scrollTo(int,int) -> scrollTo
    void ensureGlows() -> ensureGlows
    void draw(android.graphics.Canvas) -> draw
    int clamp(int,int,int) -> clamp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int access$000(android.support.v4.widget.NestedScrollView) -> access$000
android.support.v4.widget.NestedScrollView$AccessibilityDelegate -> android.support.v4.widget.NestedScrollView$AccessibilityDelegate:
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
android.support.v4.widget.NestedScrollView$SavedState -> android.support.v4.widget.NestedScrollView$SavedState:
    int scrollPosition -> scrollPosition
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.widget.NestedScrollView$SavedState$1 -> android.support.v4.widget.NestedScrollView$SavedState$1:
    android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupWindowCompat -> android.support.v4.widget.PopupWindowCompat:
    android.support.v4.widget.PopupWindowCompat$PopupWindowImpl IMPL -> IMPL
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$PopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$PopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompatKitKat -> android.support.v4.widget.PopupWindowCompatKitKat:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.String TAG -> TAG
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> mImpl
    int CHASE_FRAME_TIME -> CHASE_FRAME_TIME
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawableLeft -> mShadowDrawableLeft
    android.graphics.drawable.Drawable mShadowDrawableRight -> mShadowDrawableRight
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> access$800
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$1000
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> access$1100
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.Space -> android.support.v4.widget.Space:
    void draw(android.graphics.Canvas) -> draw
    int getDefaultSize2(int,int) -> getDefaultSize2
    void onMeasure(int,int) -> onMeasure
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    int COLOR1 -> COLOR1
    int COLOR2 -> COLOR2
    int COLOR3 -> COLOR3
    int COLOR4 -> COLOR4
    int ANIMATION_DURATION_MS -> ANIMATION_DURATION_MS
    int FINISH_ANIMATION_DURATION_MS -> FINISH_ANIMATION_DURATION_MS
    android.view.animation.Interpolator INTERPOLATOR -> INTERPOLATOR
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mClipRect -> mClipRect
    float mTriggerPercentage -> mTriggerPercentage
    long mStartTime -> mStartTime
    long mFinishTime -> mFinishTime
    boolean mRunning -> mRunning
    int mColor1 -> mColor1
    int mColor2 -> mColor2
    int mColor3 -> mColor3
    int mColor4 -> mColor4
    android.view.View mParent -> mParent
    android.graphics.Rect mBounds -> mBounds
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setTriggerPercentage(float) -> setTriggerPercentage
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void draw(android.graphics.Canvas) -> draw
    void drawTrigger(android.graphics.Canvas,int,int) -> drawTrigger
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> drawCircle
    void setBounds(int,int,int,int) -> setBounds
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    int LARGE -> LARGE
    int DEFAULT -> DEFAULT
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_ALPHA -> MAX_ALPHA
    int STARTING_PROGRESS_ALPHA -> STARTING_PROGRESS_ALPHA
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    int INVALID_POINTER -> INVALID_POINTER
    float DRAG_RATE -> DRAG_RATE
    float MAX_PROGRESS_ANGLE -> MAX_PROGRESS_ANGLE
    int SCALE_DOWN_DURATION -> SCALE_DOWN_DURATION
    int ALPHA_ANIMATION_DURATION -> ALPHA_ANIMATION_DURATION
    int ANIMATE_TO_TRIGGER_DURATION -> ANIMATE_TO_TRIGGER_DURATION
    int ANIMATE_TO_START_DURATION -> ANIMATE_TO_START_DURATION
    int CIRCLE_BG_LIGHT -> CIRCLE_BG_LIGHT
    int DEFAULT_CIRCLE_TARGET -> DEFAULT_CIRCLE_TARGET
    android.view.View mTarget -> mTarget
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    boolean mRefreshing -> mRefreshing
    int mTouchSlop -> mTouchSlop
    float mTotalDragDistance -> mTotalDragDistance
    int mMediumAnimationDuration -> mMediumAnimationDuration
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    boolean mOriginalOffsetCalculated -> mOriginalOffsetCalculated
    float mInitialMotionY -> mInitialMotionY
    float mInitialDownY -> mInitialDownY
    boolean mIsBeingDragged -> mIsBeingDragged
    int mActivePointerId -> mActivePointerId
    boolean mScale -> mScale
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.support.v4.widget.CircleImageView mCircleView -> mCircleView
    int mCircleViewIndex -> mCircleViewIndex
    int mFrom -> mFrom
    float mStartingScale -> mStartingScale
    int mOriginalOffsetTop -> mOriginalOffsetTop
    android.support.v4.widget.MaterialProgressDrawable mProgress -> mProgress
    android.view.animation.Animation mScaleAnimation -> mScaleAnimation
    android.view.animation.Animation mScaleDownAnimation -> mScaleDownAnimation
    android.view.animation.Animation mAlphaStartAnimation -> mAlphaStartAnimation
    android.view.animation.Animation mAlphaMaxAnimation -> mAlphaMaxAnimation
    android.view.animation.Animation mScaleDownToStartAnimation -> mScaleDownToStartAnimation
    float mSpinnerFinalOffset -> mSpinnerFinalOffset
    boolean mNotify -> mNotify
    int mCircleWidth -> mCircleWidth
    int mCircleHeight -> mCircleHeight
    boolean mUsingCustomStart -> mUsingCustomStart
    android.view.animation.Animation$AnimationListener mRefreshListener -> mRefreshListener
    android.view.animation.Animation mAnimateToCorrectPosition -> mAnimateToCorrectPosition
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    void setColorViewAlpha(int) -> setColorViewAlpha
    void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    void setSize(int) -> setSize
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    void createProgressView() -> createProgressView
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    boolean isAlphaUsedForScale() -> isAlphaUsedForScale
    void setRefreshing(boolean) -> setRefreshing
    void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    void setAnimationProgress(float) -> setAnimationProgress
    void setRefreshing(boolean,boolean) -> setRefreshing
    void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    void setColorScheme(int[]) -> setColorScheme
    void setColorSchemeResources(int[]) -> setColorSchemeResources
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> ensureTarget
    void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    int getProgressCircleDiameter() -> getProgressCircleDiameter
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    float getMotionEventY(android.view.MotionEvent,int) -> getMotionEventY
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    void moveToStart(float) -> moveToStart
    void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    void setTargetOffsetTopAndBottom(int,boolean) -> setTargetOffsetTopAndBottom
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    boolean access$000(android.support.v4.widget.SwipeRefreshLayout) -> access$000
    android.support.v4.widget.MaterialProgressDrawable access$100(android.support.v4.widget.SwipeRefreshLayout) -> access$100
    boolean access$200(android.support.v4.widget.SwipeRefreshLayout) -> access$200
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener access$300(android.support.v4.widget.SwipeRefreshLayout) -> access$300
    android.support.v4.widget.CircleImageView access$400(android.support.v4.widget.SwipeRefreshLayout) -> access$400
    void access$500(android.support.v4.widget.SwipeRefreshLayout,int) -> access$500
    boolean access$600(android.support.v4.widget.SwipeRefreshLayout) -> access$600
    void access$700(android.support.v4.widget.SwipeRefreshLayout,float) -> access$700
    int access$800(android.support.v4.widget.SwipeRefreshLayout) -> access$800
    void access$900(android.support.v4.widget.SwipeRefreshLayout,int,boolean) -> access$900
    int access$802(android.support.v4.widget.SwipeRefreshLayout,int) -> access$802
    void access$1000(android.support.v4.widget.SwipeRefreshLayout,android.view.animation.Animation$AnimationListener) -> access$1000
    boolean access$1100(android.support.v4.widget.SwipeRefreshLayout) -> access$1100
    float access$1200(android.support.v4.widget.SwipeRefreshLayout) -> access$1200
    void access$1300(android.support.v4.widget.SwipeRefreshLayout,float) -> access$1300
    float access$1400(android.support.v4.widget.SwipeRefreshLayout) -> access$1400
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    int val$startingAlpha -> val$startingAlpha
    int val$endingAlpha -> val$endingAlpha
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$7 -> android.support.v4.widget.SwipeRefreshLayout$7:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$8 -> android.support.v4.widget.SwipeRefreshLayout$8:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.TextViewCompat -> android.support.v4.widget.TextViewCompat:
    android.support.v4.widget.TextViewCompat$TextViewCompatImpl IMPL -> IMPL
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl -> android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl -> android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl -> android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompat$TextViewCompatImpl -> android.support.v4.widget.TextViewCompat$TextViewCompatImpl:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompatJbMr1 -> android.support.v4.widget.TextViewCompatJbMr1:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompatJbMr2 -> android.support.v4.widget.TextViewCompatJbMr2:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
android.support.v7.app.ActionBar -> android.support.v7.app.ActionBar:
    int NAVIGATION_MODE_STANDARD -> NAVIGATION_MODE_STANDARD
    int NAVIGATION_MODE_LIST -> NAVIGATION_MODE_LIST
    int NAVIGATION_MODE_TABS -> NAVIGATION_MODE_TABS
    int DISPLAY_USE_LOGO -> DISPLAY_USE_LOGO
    int DISPLAY_SHOW_HOME -> DISPLAY_SHOW_HOME
    int DISPLAY_HOME_AS_UP -> DISPLAY_HOME_AS_UP
    int DISPLAY_SHOW_TITLE -> DISPLAY_SHOW_TITLE
    int DISPLAY_SHOW_CUSTOM -> DISPLAY_SHOW_CUSTOM
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,android.support.v7.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.support.v7.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.support.v7.app.ActionBar$Tab newTab() -> newTab
    void addTab(android.support.v7.app.ActionBar$Tab) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,boolean) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,int) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(android.support.v7.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(android.support.v7.app.ActionBar$Tab) -> selectTab
    android.support.v7.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    android.support.v7.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void addOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    android.content.Context getThemedContext() -> getThemedContext
    boolean isTitleTruncated() -> isTitleTruncated
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    int getHideOffset() -> getHideOffset
    void setHideOffset(int) -> setHideOffset
    void setElevation(float) -> setElevation
    float getElevation() -> getElevation
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback) -> startActionMode
    boolean openOptionsMenu() -> openOptionsMenu
    boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    boolean collapseActionView() -> collapseActionView
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
android.support.v7.app.ActionBar$DisplayOptions -> android.support.v7.app.ActionBar$DisplayOptions:
android.support.v7.app.ActionBar$LayoutParams -> android.support.v7.app.ActionBar$LayoutParams:
    int gravity -> gravity
android.support.v7.app.ActionBar$NavigationMode -> android.support.v7.app.ActionBar$NavigationMode:
android.support.v7.app.ActionBar$OnMenuVisibilityListener -> android.support.v7.app.ActionBar$OnMenuVisibilityListener:
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
android.support.v7.app.ActionBar$OnNavigationListener -> android.support.v7.app.ActionBar$OnNavigationListener:
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
android.support.v7.app.ActionBar$Tab -> android.support.v7.app.ActionBar$Tab:
    int INVALID_POSITION -> INVALID_POSITION
    int getPosition() -> getPosition
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.CharSequence getText() -> getText
    android.support.v7.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.support.v7.app.ActionBar$Tab setIcon(int) -> setIcon
    android.support.v7.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    android.support.v7.app.ActionBar$Tab setText(int) -> setText
    android.support.v7.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    android.support.v7.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    android.support.v7.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    android.support.v7.app.ActionBar$Tab setTabListener(android.support.v7.app.ActionBar$TabListener) -> setTabListener
    void select() -> select
    android.support.v7.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    android.support.v7.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
android.support.v7.app.ActionBar$TabListener -> android.support.v7.app.ActionBar$TabListener:
    void onTabSelected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabUnselected
    void onTabReselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabReselected
android.support.v7.app.ActionBarActivity -> android.support.v7.app.ActionBarActivity:
android.support.v7.app.ActionBarDrawerToggle -> android.support.v7.app.ActionBarDrawerToggle:
    android.support.v7.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    android.support.v7.app.ActionBarDrawerToggle$DrawerToggle mSlider -> mSlider
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> mHomeAsUpIndicator
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    boolean mHasCustomUpIndicator -> mHasCustomUpIndicator
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    android.view.View$OnClickListener mToolbarNavigationClickListener -> mToolbarNavigationClickListener
    boolean mWarnedForDisplayHomeAsUp -> mWarnedForDisplayHomeAsUp
    void syncState() -> syncState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void toggle() -> toggle
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.view.View$OnClickListener getToolbarNavigationClickListener() -> getToolbarNavigationClickListener
    void setToolbarNavigationClickListener(android.view.View$OnClickListener) -> setToolbarNavigationClickListener
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    boolean access$000(android.support.v7.app.ActionBarDrawerToggle) -> access$000
    void access$100(android.support.v7.app.ActionBarDrawerToggle) -> access$100
    android.view.View$OnClickListener access$200(android.support.v7.app.ActionBarDrawerToggle) -> access$200
android.support.v7.app.ActionBarDrawerToggle$1 -> android.support.v7.app.ActionBarDrawerToggle$1:
    android.support.v7.app.ActionBarDrawerToggle this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v7.app.ActionBarDrawerToggle$Delegate -> android.support.v7.app.ActionBarDrawerToggle$Delegate:
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    boolean isNavigationVisible() -> isNavigationVisible
android.support.v7.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v7.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v7.app.ActionBarDrawerToggle$DrawerArrowDrawableToggle -> android.support.v7.app.ActionBarDrawerToggle$DrawerArrowDrawableToggle:
    android.app.Activity mActivity -> mActivity
    void setPosition(float) -> setPosition
    boolean isLayoutRtl() -> isLayoutRtl
    float getPosition() -> getPosition
android.support.v7.app.ActionBarDrawerToggle$DrawerToggle -> android.support.v7.app.ActionBarDrawerToggle$DrawerToggle:
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
android.support.v7.app.ActionBarDrawerToggle$DummyDelegate -> android.support.v7.app.ActionBarDrawerToggle$DummyDelegate:
    android.app.Activity mActivity -> mActivity
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    boolean isNavigationVisible() -> isNavigationVisible
android.support.v7.app.ActionBarDrawerToggle$HoneycombDelegate -> android.support.v7.app.ActionBarDrawerToggle$HoneycombDelegate:
    android.app.Activity mActivity -> mActivity
    android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo mSetIndicatorInfo -> mSetIndicatorInfo
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    boolean isNavigationVisible() -> isNavigationVisible
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v7.app.ActionBarDrawerToggle$JellybeanMr2Delegate -> android.support.v7.app.ActionBarDrawerToggle$JellybeanMr2Delegate:
    android.app.Activity mActivity -> mActivity
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    boolean isNavigationVisible() -> isNavigationVisible
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v7.app.ActionBarDrawerToggle$ToolbarCompatDelegate -> android.support.v7.app.ActionBarDrawerToggle$ToolbarCompatDelegate:
    android.support.v7.widget.Toolbar mToolbar -> mToolbar
    android.graphics.drawable.Drawable mDefaultUpIndicator -> mDefaultUpIndicator
    java.lang.CharSequence mDefaultContentDescription -> mDefaultContentDescription
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    boolean isNavigationVisible() -> isNavigationVisible
android.support.v7.app.ActionBarDrawerToggleHoneycomb -> android.support.v7.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarUpIndicator(android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarDescription(android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v7.app.AlertController -> android.support.v7.app.AlertController:
    android.content.Context mContext -> mContext
    android.support.v7.app.AppCompatDialog mDialog -> mDialog
    android.view.Window mWindow -> mWindow
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mMessage -> mMessage
    android.widget.ListView mListView -> mListView
    android.view.View mView -> mView
    int mViewLayoutResId -> mViewLayoutResId
    int mViewSpacingLeft -> mViewSpacingLeft
    int mViewSpacingTop -> mViewSpacingTop
    int mViewSpacingRight -> mViewSpacingRight
    int mViewSpacingBottom -> mViewSpacingBottom
    boolean mViewSpacingSpecified -> mViewSpacingSpecified
    android.widget.Button mButtonPositive -> mButtonPositive
    java.lang.CharSequence mButtonPositiveText -> mButtonPositiveText
    android.os.Message mButtonPositiveMessage -> mButtonPositiveMessage
    android.widget.Button mButtonNegative -> mButtonNegative
    java.lang.CharSequence mButtonNegativeText -> mButtonNegativeText
    android.os.Message mButtonNegativeMessage -> mButtonNegativeMessage
    android.widget.Button mButtonNeutral -> mButtonNeutral
    java.lang.CharSequence mButtonNeutralText -> mButtonNeutralText
    android.os.Message mButtonNeutralMessage -> mButtonNeutralMessage
    android.widget.ScrollView mScrollView -> mScrollView
    int mIconId -> mIconId
    android.graphics.drawable.Drawable mIcon -> mIcon
    android.widget.ImageView mIconView -> mIconView
    android.widget.TextView mTitleView -> mTitleView
    android.widget.TextView mMessageView -> mMessageView
    android.view.View mCustomTitleView -> mCustomTitleView
    android.widget.ListAdapter mAdapter -> mAdapter
    int mCheckedItem -> mCheckedItem
    int mAlertDialogLayout -> mAlertDialogLayout
    int mButtonPanelSideLayout -> mButtonPanelSideLayout
    int mListLayout -> mListLayout
    int mMultiChoiceItemLayout -> mMultiChoiceItemLayout
    int mSingleChoiceItemLayout -> mSingleChoiceItemLayout
    int mListItemLayout -> mListItemLayout
    int mButtonPanelLayoutHint -> mButtonPanelLayoutHint
    android.os.Handler mHandler -> mHandler
    android.view.View$OnClickListener mButtonHandler -> mButtonHandler
    boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
    boolean canTextInput(android.view.View) -> canTextInput
    void installContent() -> installContent
    int selectContentView() -> selectContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setCustomTitle(android.view.View) -> setCustomTitle
    void setMessage(java.lang.CharSequence) -> setMessage
    void setView(int) -> setView
    void setView(android.view.View) -> setView
    void setView(android.view.View,int,int,int,int) -> setView
    void setButtonPanelLayoutHint(int) -> setButtonPanelLayoutHint
    void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message) -> setButton
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    int getIconAttributeResId(int) -> getIconAttributeResId
    android.widget.ListView getListView() -> getListView
    android.widget.Button getButton(int) -> getButton
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void setupView() -> setupView
    boolean setupTitle(android.view.ViewGroup) -> setupTitle
    void setupContent(android.view.ViewGroup) -> setupContent
    boolean setupButtons() -> setupButtons
    void centerButton(android.widget.Button) -> centerButton
    android.widget.Button access$000(android.support.v7.app.AlertController) -> access$000
    android.os.Message access$100(android.support.v7.app.AlertController) -> access$100
    android.widget.Button access$200(android.support.v7.app.AlertController) -> access$200
    android.os.Message access$300(android.support.v7.app.AlertController) -> access$300
    android.widget.Button access$400(android.support.v7.app.AlertController) -> access$400
    android.os.Message access$500(android.support.v7.app.AlertController) -> access$500
    android.support.v7.app.AppCompatDialog access$600(android.support.v7.app.AlertController) -> access$600
    android.os.Handler access$700(android.support.v7.app.AlertController) -> access$700
    int access$800(android.support.v7.app.AlertController) -> access$800
    int access$900(android.support.v7.app.AlertController) -> access$900
    int access$1000(android.support.v7.app.AlertController) -> access$1000
    int access$1100(android.support.v7.app.AlertController) -> access$1100
    android.widget.ListAdapter access$1202(android.support.v7.app.AlertController,android.widget.ListAdapter) -> access$1202
    int access$1302(android.support.v7.app.AlertController,int) -> access$1302
    android.widget.ListView access$1402(android.support.v7.app.AlertController,android.widget.ListView) -> access$1402
android.support.v7.app.AlertController$1 -> android.support.v7.app.AlertController$1:
    android.support.v7.app.AlertController this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v7.app.AlertController$AlertParams -> android.support.v7.app.AlertController$AlertParams:
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mInflater -> mInflater
    int mIconId -> mIconId
    android.graphics.drawable.Drawable mIcon -> mIcon
    int mIconAttrId -> mIconAttrId
    java.lang.CharSequence mTitle -> mTitle
    android.view.View mCustomTitleView -> mCustomTitleView
    java.lang.CharSequence mMessage -> mMessage
    java.lang.CharSequence mPositiveButtonText -> mPositiveButtonText
    android.content.DialogInterface$OnClickListener mPositiveButtonListener -> mPositiveButtonListener
    java.lang.CharSequence mNegativeButtonText -> mNegativeButtonText
    android.content.DialogInterface$OnClickListener mNegativeButtonListener -> mNegativeButtonListener
    java.lang.CharSequence mNeutralButtonText -> mNeutralButtonText
    android.content.DialogInterface$OnClickListener mNeutralButtonListener -> mNeutralButtonListener
    boolean mCancelable -> mCancelable
    android.content.DialogInterface$OnCancelListener mOnCancelListener -> mOnCancelListener
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> mOnDismissListener
    android.content.DialogInterface$OnKeyListener mOnKeyListener -> mOnKeyListener
    java.lang.CharSequence[] mItems -> mItems
    android.widget.ListAdapter mAdapter -> mAdapter
    android.content.DialogInterface$OnClickListener mOnClickListener -> mOnClickListener
    int mViewLayoutResId -> mViewLayoutResId
    android.view.View mView -> mView
    int mViewSpacingLeft -> mViewSpacingLeft
    int mViewSpacingTop -> mViewSpacingTop
    int mViewSpacingRight -> mViewSpacingRight
    int mViewSpacingBottom -> mViewSpacingBottom
    boolean mViewSpacingSpecified -> mViewSpacingSpecified
    boolean[] mCheckedItems -> mCheckedItems
    boolean mIsMultiChoice -> mIsMultiChoice
    boolean mIsSingleChoice -> mIsSingleChoice
    int mCheckedItem -> mCheckedItem
    android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener -> mOnCheckboxClickListener
    android.database.Cursor mCursor -> mCursor
    java.lang.String mLabelColumn -> mLabelColumn
    java.lang.String mIsCheckedColumn -> mIsCheckedColumn
    boolean mForceInverseBackground -> mForceInverseBackground
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener -> mOnPrepareListViewListener
    boolean mRecycleOnMeasure -> mRecycleOnMeasure
    void apply(android.support.v7.app.AlertController) -> apply
    void createListView(android.support.v7.app.AlertController) -> createListView
android.support.v7.app.AlertController$AlertParams$1 -> android.support.v7.app.AlertController$AlertParams$1:
    android.widget.ListView val$listView -> val$listView
    android.support.v7.app.AlertController$AlertParams this$0 -> this$0
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.app.AlertController$AlertParams$2 -> android.support.v7.app.AlertController$AlertParams$2:
    int mLabelIndex -> mLabelIndex
    int mIsCheckedIndex -> mIsCheckedIndex
    android.widget.ListView val$listView -> val$listView
    android.support.v7.app.AlertController val$dialog -> val$dialog
    android.support.v7.app.AlertController$AlertParams this$0 -> this$0
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
android.support.v7.app.AlertController$AlertParams$3 -> android.support.v7.app.AlertController$AlertParams$3:
    android.support.v7.app.AlertController val$dialog -> val$dialog
    android.support.v7.app.AlertController$AlertParams this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.app.AlertController$AlertParams$4 -> android.support.v7.app.AlertController$AlertParams$4:
    android.widget.ListView val$listView -> val$listView
    android.support.v7.app.AlertController val$dialog -> val$dialog
    android.support.v7.app.AlertController$AlertParams this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener -> android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener:
    void onPrepareListView(android.widget.ListView) -> onPrepareListView
android.support.v7.app.AlertController$ButtonHandler -> android.support.v7.app.AlertController$ButtonHandler:
    int MSG_DISMISS_DIALOG -> MSG_DISMISS_DIALOG
    java.lang.ref.WeakReference mDialog -> mDialog
    void handleMessage(android.os.Message) -> handleMessage
android.support.v7.app.AlertController$CheckedItemAdapter -> android.support.v7.app.AlertController$CheckedItemAdapter:
    boolean hasStableIds() -> hasStableIds
    long getItemId(int) -> getItemId
android.support.v7.app.AlertDialog -> android.support.v7.app.AlertDialog:
    android.support.v7.app.AlertController mAlert -> mAlert
    int LAYOUT_HINT_NONE -> LAYOUT_HINT_NONE
    int LAYOUT_HINT_SIDE -> LAYOUT_HINT_SIDE
    int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    android.widget.Button getButton(int) -> getButton
    android.widget.ListView getListView() -> getListView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setCustomTitle(android.view.View) -> setCustomTitle
    void setMessage(java.lang.CharSequence) -> setMessage
    void setView(android.view.View) -> setView
    void setView(android.view.View,int,int,int,int) -> setView
    void setButtonPanelLayoutHint(int) -> setButtonPanelLayoutHint
    void setButton(int,java.lang.CharSequence,android.os.Message) -> setButton
    void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setButton
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIconAttribute(int) -> setIconAttribute
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    android.support.v7.app.AlertController access$000(android.support.v7.app.AlertDialog) -> access$000
android.support.v7.app.AlertDialog$Builder -> android.support.v7.app.AlertDialog$Builder:
    android.support.v7.app.AlertController$AlertParams P -> P
    int mTheme -> mTheme
    android.content.Context getContext() -> getContext
    android.support.v7.app.AlertDialog$Builder setTitle(int) -> setTitle
    android.support.v7.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    android.support.v7.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    android.support.v7.app.AlertDialog$Builder setMessage(int) -> setMessage
    android.support.v7.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    android.support.v7.app.AlertDialog$Builder setIcon(int) -> setIcon
    android.support.v7.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.support.v7.app.AlertDialog$Builder setIconAttribute(int) -> setIconAttribute
    android.support.v7.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    android.support.v7.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    android.support.v7.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    android.support.v7.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    android.support.v7.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    android.support.v7.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    android.support.v7.app.AlertDialog$Builder setCancelable(boolean) -> setCancelable
    android.support.v7.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> setOnCancelListener
    android.support.v7.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> setOnDismissListener
    android.support.v7.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    android.support.v7.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener) -> setItems
    android.support.v7.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> setItems
    android.support.v7.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    android.support.v7.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String) -> setCursor
    android.support.v7.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    android.support.v7.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    android.support.v7.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    android.support.v7.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    android.support.v7.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    android.support.v7.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    android.support.v7.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    android.support.v7.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    android.support.v7.app.AlertDialog$Builder setView(int) -> setView
    android.support.v7.app.AlertDialog$Builder setView(android.view.View) -> setView
    android.support.v7.app.AlertDialog$Builder setView(android.view.View,int,int,int,int) -> setView
    android.support.v7.app.AlertDialog$Builder setInverseBackgroundForced(boolean) -> setInverseBackgroundForced
    android.support.v7.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean) -> setRecycleOnMeasureEnabled
    android.support.v7.app.AlertDialog create() -> create
    android.support.v7.app.AlertDialog show() -> show
android.support.v7.app.AppCompatActivity -> android.support.v7.app.AppCompatActivity:
    android.support.v7.app.AppCompatDelegate mDelegate -> mDelegate
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.support.v7.app.ActionBar getSupportActionBar() -> getSupportActionBar
    void setSupportActionBar(android.support.v7.widget.Toolbar) -> setSupportActionBar
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onStop() -> onStop
    void onPostResume() -> onPostResume
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onDestroy() -> onDestroy
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> onSupportActionModeStarted
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> onSupportActionModeFinished
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> startSupportActionMode
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgress(int) -> setSupportProgress
    void onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    void onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> onPrepareSupportNavigateUpTaskStack
    boolean onSupportNavigateUp() -> onSupportNavigateUp
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
    void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    void onContentChanged() -> onContentChanged
    void onSupportContentChanged() -> onSupportContentChanged
    android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    android.support.v7.app.AppCompatDelegate getDelegate() -> getDelegate
android.support.v7.app.AppCompatCallback -> android.support.v7.app.AppCompatCallback:
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> onSupportActionModeStarted
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> onSupportActionModeFinished
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
android.support.v7.app.AppCompatDelegate -> android.support.v7.app.AppCompatDelegate:
    java.lang.String TAG -> TAG
    android.support.v7.app.AppCompatDelegate create(android.app.Activity,android.support.v7.app.AppCompatCallback) -> create
    android.support.v7.app.AppCompatDelegate create(android.app.Dialog,android.support.v7.app.AppCompatCallback) -> create
    android.support.v7.app.AppCompatDelegate create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> create
    android.support.v7.app.ActionBar getSupportActionBar() -> getSupportActionBar
    void setSupportActionBar(android.support.v7.widget.Toolbar) -> setSupportActionBar
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onStop() -> onStop
    void onPostResume() -> onPostResume
    void setContentView(android.view.View) -> setContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void onDestroy() -> onDestroy
    android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    boolean requestWindowFeature(int) -> requestWindowFeature
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> startSupportActionMode
    void installViewFactory() -> installViewFactory
    android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    void setHandleNativeActionModesEnabled(boolean) -> setHandleNativeActionModesEnabled
    boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
android.support.v7.app.AppCompatDelegateImplBase -> android.support.v7.app.AppCompatDelegateImplBase:
    android.content.Context mContext -> mContext
    android.view.Window mWindow -> mWindow
    android.view.Window$Callback mOriginalWindowCallback -> mOriginalWindowCallback
    android.view.Window$Callback mAppCompatWindowCallback -> mAppCompatWindowCallback
    android.support.v7.app.AppCompatCallback mAppCompatCallback -> mAppCompatCallback
    android.support.v7.app.ActionBar mActionBar -> mActionBar
    android.view.MenuInflater mMenuInflater -> mMenuInflater
    boolean mHasActionBar -> mHasActionBar
    boolean mOverlayActionBar -> mOverlayActionBar
    boolean mOverlayActionMode -> mOverlayActionMode
    boolean mIsFloating -> mIsFloating
    boolean mWindowNoTitle -> mWindowNoTitle
    java.lang.CharSequence mTitle -> mTitle
    boolean mIsDestroyed -> mIsDestroyed
    android.support.v7.app.ActionBar createSupportActionBar() -> createSupportActionBar
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> wrapWindowCallback
    android.support.v7.app.ActionBar getSupportActionBar() -> getSupportActionBar
    android.support.v7.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    void setSupportActionBar(android.support.v7.app.ActionBar) -> setSupportActionBar
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    android.support.v7.view.ActionMode startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    void onDestroy() -> onDestroy
    void setHandleNativeActionModesEnabled(boolean) -> setHandleNativeActionModesEnabled
    boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    boolean isDestroyed() -> isDestroyed
    android.view.Window$Callback getWindowCallback() -> getWindowCallback
    void setTitle(java.lang.CharSequence) -> setTitle
    void onTitleChanged(java.lang.CharSequence) -> onTitleChanged
    java.lang.CharSequence getTitle() -> getTitle
android.support.v7.app.AppCompatDelegateImplBase$1 -> android.support.v7.app.AppCompatDelegateImplBase$1:
android.support.v7.app.AppCompatDelegateImplBase$ActionBarDrawableToggleImpl -> android.support.v7.app.AppCompatDelegateImplBase$ActionBarDrawableToggleImpl:
    android.support.v7.app.AppCompatDelegateImplBase this$0 -> this$0
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    boolean isNavigationVisible() -> isNavigationVisible
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase -> android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase:
    android.support.v7.app.AppCompatDelegateImplBase this$0 -> this$0
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    void onContentChanged() -> onContentChanged
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
android.support.v7.app.AppCompatDelegateImplV11 -> android.support.v7.app.AppCompatDelegateImplV11:
    android.view.View callActivityOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> callActivityOnCreateView
android.support.v7.app.AppCompatDelegateImplV14 -> android.support.v7.app.AppCompatDelegateImplV14:
    boolean mHandleNativeActionModes -> mHandleNativeActionModes
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> wrapWindowCallback
    void setHandleNativeActionModesEnabled(boolean) -> setHandleNativeActionModesEnabled
    boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    boolean access$000(android.support.v7.app.AppCompatDelegateImplV14) -> access$000
android.support.v7.app.AppCompatDelegateImplV14$AppCompatWindowCallbackV14 -> android.support.v7.app.AppCompatDelegateImplV14$AppCompatWindowCallbackV14:
    android.support.v7.app.AppCompatDelegateImplV14 this$0 -> this$0
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
android.support.v7.app.AppCompatDelegateImplV7 -> android.support.v7.app.AppCompatDelegateImplV7:
    android.support.v7.internal.widget.DecorContentParent mDecorContentParent -> mDecorContentParent
    android.support.v7.app.AppCompatDelegateImplV7$ActionMenuPresenterCallback mActionMenuPresenterCallback -> mActionMenuPresenterCallback
    android.support.v7.app.AppCompatDelegateImplV7$PanelMenuPresenterCallback mPanelMenuPresenterCallback -> mPanelMenuPresenterCallback
    android.support.v7.view.ActionMode mActionMode -> mActionMode
    android.support.v7.internal.widget.ActionBarContextView mActionModeView -> mActionModeView
    android.widget.PopupWindow mActionModePopup -> mActionModePopup
    java.lang.Runnable mShowActionModePopup -> mShowActionModePopup
    boolean mSubDecorInstalled -> mSubDecorInstalled
    android.view.ViewGroup mWindowDecor -> mWindowDecor
    android.view.ViewGroup mSubDecor -> mSubDecor
    android.widget.TextView mTitleView -> mTitleView
    android.view.View mStatusGuard -> mStatusGuard
    boolean mFeatureProgress -> mFeatureProgress
    boolean mFeatureIndeterminateProgress -> mFeatureIndeterminateProgress
    boolean mClosingActionMenu -> mClosingActionMenu
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState[] mPanels -> mPanels
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState mPreparedPanel -> mPreparedPanel
    boolean mInvalidatePanelMenuPosted -> mInvalidatePanelMenuPosted
    int mInvalidatePanelMenuFeatures -> mInvalidatePanelMenuFeatures
    java.lang.Runnable mInvalidatePanelMenuRunnable -> mInvalidatePanelMenuRunnable
    boolean mEnableDefaultActionBarUp -> mEnableDefaultActionBarUp
    android.graphics.Rect mTempRect1 -> mTempRect1
    android.graphics.Rect mTempRect2 -> mTempRect2
    android.support.v7.internal.app.AppCompatViewInflater mAppCompatViewInflater -> mAppCompatViewInflater
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.support.v7.app.ActionBar createSupportActionBar() -> createSupportActionBar
    void setSupportActionBar(android.support.v7.widget.Toolbar) -> setSupportActionBar
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onStop() -> onStop
    void onPostResume() -> onPostResume
    void setContentView(android.view.View) -> setContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void ensureSubDecor() -> ensureSubDecor
    void onSubDecorInstalled(android.view.ViewGroup) -> onSubDecorInstalled
    void applyFixedSizeWindow(android.support.v7.internal.widget.ContentFrameLayout) -> applyFixedSizeWindow
    boolean requestWindowFeature(int) -> requestWindowFeature
    void onTitleChanged(java.lang.CharSequence) -> onTitleChanged
    boolean onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> onMenuModeChange
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> startSupportActionMode
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    android.support.v7.view.ActionMode startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    boolean onBackPressed() -> onBackPressed
    boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    void installViewFactory() -> installViewFactory
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View callActivityOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> callActivityOnCreateView
    void openPanel(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.KeyEvent) -> openPanel
    boolean initializePanelDecor(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState) -> initializePanelDecor
    void reopenMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> reopenMenu
    boolean initializePanelMenu(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState) -> initializePanelMenu
    boolean initializePanelContent(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState) -> initializePanelContent
    boolean preparePanel(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    void checkCloseActionMenu(android.support.v7.internal.view.menu.MenuBuilder) -> checkCloseActionMenu
    void closePanel(int) -> closePanel
    void closePanel(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,boolean) -> closePanel
    boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    void callOnPanelClosed(int,android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    boolean performPanelShortcut(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    void invalidatePanelMenu(int) -> invalidatePanelMenu
    void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    int updateStatusGuard(int) -> updateStatusGuard
    void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    android.view.ViewGroup getSubDecor() -> getSubDecor
    int access$000(android.support.v7.app.AppCompatDelegateImplV7) -> access$000
    void access$100(android.support.v7.app.AppCompatDelegateImplV7,int) -> access$100
    boolean access$202(android.support.v7.app.AppCompatDelegateImplV7,boolean) -> access$202
    int access$002(android.support.v7.app.AppCompatDelegateImplV7,int) -> access$002
    int access$300(android.support.v7.app.AppCompatDelegateImplV7,int) -> access$300
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState access$600(android.support.v7.app.AppCompatDelegateImplV7,android.view.Menu) -> access$600
    void access$700(android.support.v7.app.AppCompatDelegateImplV7,int,android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.Menu) -> access$700
    void access$800(android.support.v7.app.AppCompatDelegateImplV7,android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,boolean) -> access$800
    void access$900(android.support.v7.app.AppCompatDelegateImplV7,android.support.v7.internal.view.menu.MenuBuilder) -> access$900
    void access$1200(android.support.v7.app.AppCompatDelegateImplV7,int) -> access$1200
android.support.v7.app.AppCompatDelegateImplV7$1 -> android.support.v7.app.AppCompatDelegateImplV7$1:
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> this$0
    void run() -> run
android.support.v7.app.AppCompatDelegateImplV7$2 -> android.support.v7.app.AppCompatDelegateImplV7$2:
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> this$0
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.v7.app.AppCompatDelegateImplV7$3 -> android.support.v7.app.AppCompatDelegateImplV7$3:
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> this$0
    void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
android.support.v7.app.AppCompatDelegateImplV7$4 -> android.support.v7.app.AppCompatDelegateImplV7$4:
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> this$0
    void run() -> run
android.support.v7.app.AppCompatDelegateImplV7$ActionMenuPresenterCallback -> android.support.v7.app.AppCompatDelegateImplV7$ActionMenuPresenterCallback:
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> this$0
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
android.support.v7.app.AppCompatDelegateImplV7$ActionModeCallbackWrapperV7 -> android.support.v7.app.AppCompatDelegateImplV7$ActionModeCallbackWrapperV7:
    android.support.v7.view.ActionMode$Callback mWrapped -> mWrapped
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> this$0
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> onDestroyActionMode
android.support.v7.app.AppCompatDelegateImplV7$ListMenuDecorView -> android.support.v7.app.AppCompatDelegateImplV7$ListMenuDecorView:
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> this$0
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setBackgroundResource(int) -> setBackgroundResource
    boolean isOutOfBounds(int,int) -> isOutOfBounds
android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState -> android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState:
    int featureId -> featureId
    int background -> background
    int gravity -> gravity
    int x -> x
    int y -> y
    int windowAnimations -> windowAnimations
    android.view.ViewGroup decorView -> decorView
    android.view.View shownPanelView -> shownPanelView
    android.view.View createdPanelView -> createdPanelView
    android.support.v7.internal.view.menu.MenuBuilder menu -> menu
    android.support.v7.internal.view.menu.ListMenuPresenter listMenuPresenter -> listMenuPresenter
    android.content.Context listPresenterContext -> listPresenterContext
    boolean isPrepared -> isPrepared
    boolean isHandled -> isHandled
    boolean isOpen -> isOpen
    boolean qwertyMode -> qwertyMode
    boolean refreshDecorView -> refreshDecorView
    boolean refreshMenuContent -> refreshMenuContent
    boolean wasLastOpen -> wasLastOpen
    android.os.Bundle frozenMenuState -> frozenMenuState
    android.os.Bundle frozenActionViewState -> frozenActionViewState
    boolean hasPanelItems() -> hasPanelItems
    void clearMenuPresenters() -> clearMenuPresenters
    void setStyle(android.content.Context) -> setStyle
    void setMenu(android.support.v7.internal.view.menu.MenuBuilder) -> setMenu
    android.support.v7.internal.view.menu.MenuView getListMenuView(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> getListMenuView
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void applyFrozenState() -> applyFrozenState
android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState -> android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState:
    int featureId -> featureId
    boolean isOpen -> isOpen
    android.os.Bundle menuState -> menuState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState readFromParcel(android.os.Parcel) -> readFromParcel
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState access$1100(android.os.Parcel) -> access$1100
android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState$1 -> android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState$1:
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.app.AppCompatDelegateImplV7$PanelMenuPresenterCallback -> android.support.v7.app.AppCompatDelegateImplV7$PanelMenuPresenterCallback:
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> this$0
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
android.support.v7.app.AppCompatDialog -> android.support.v7.app.AppCompatDialog:
    android.support.v7.app.AppCompatDelegate mDelegate -> mDelegate
    void onCreate(android.os.Bundle) -> onCreate
    android.support.v7.app.ActionBar getSupportActionBar() -> getSupportActionBar
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onStop() -> onStop
    boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    android.support.v7.app.AppCompatDelegate getDelegate() -> getDelegate
    int getThemeResId(android.content.Context,int) -> getThemeResId
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> onSupportActionModeStarted
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> onSupportActionModeFinished
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
android.support.v7.app.DrawerArrowDrawable -> android.support.v7.app.DrawerArrowDrawable:
    android.graphics.Paint mPaint -> mPaint
    float ARROW_HEAD_ANGLE -> ARROW_HEAD_ANGLE
    float mBarThickness -> mBarThickness
    float mTopBottomArrowSize -> mTopBottomArrowSize
    float mBarSize -> mBarSize
    float mMiddleArrowSize -> mMiddleArrowSize
    float mBarGap -> mBarGap
    boolean mSpin -> mSpin
    android.graphics.Path mPath -> mPath
    int mSize -> mSize
    boolean mVerticalMirror -> mVerticalMirror
    float mProgress -> mProgress
    float mMaxCutForBarSize -> mMaxCutForBarSize
    float mCenterOffset -> mCenterOffset
    boolean isLayoutRtl() -> isLayoutRtl
    void setVerticalMirror(boolean) -> setVerticalMirror
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    boolean isAutoMirrored() -> isAutoMirrored
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getOpacity() -> getOpacity
    float getProgress() -> getProgress
    void setProgress(float) -> setProgress
    float lerp(float,float,float) -> lerp
android.support.v7.app.NotificationCompat -> android.support.v7.app.NotificationCompat:
    void addMediaStyleToBuilderLollipop(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> addMediaStyleToBuilderLollipop
    void addMediaStyleToBuilderIcs(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Builder) -> addMediaStyleToBuilderIcs
    void addBigMediaStyleToBuilderJellybean(android.app.Notification,android.support.v4.app.NotificationCompat$Builder) -> addBigMediaStyleToBuilderJellybean
    void access$300(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Builder) -> access$300
    void access$400(android.app.Notification,android.support.v4.app.NotificationCompat$Builder) -> access$400
    void access$500(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> access$500
android.support.v7.app.NotificationCompat$1 -> android.support.v7.app.NotificationCompat$1:
android.support.v7.app.NotificationCompat$Builder -> android.support.v7.app.NotificationCompat$Builder:
    android.support.v4.app.NotificationCompat$BuilderExtender getExtender() -> getExtender
android.support.v7.app.NotificationCompat$IceCreamSandwichExtender -> android.support.v7.app.NotificationCompat$IceCreamSandwichExtender:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> build
android.support.v7.app.NotificationCompat$JellybeanExtender -> android.support.v7.app.NotificationCompat$JellybeanExtender:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> build
android.support.v7.app.NotificationCompat$LollipopExtender -> android.support.v7.app.NotificationCompat$LollipopExtender:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> build
android.support.v7.app.NotificationCompat$MediaStyle -> android.support.v7.app.NotificationCompat$MediaStyle:
    int[] mActionsToShowInCompact -> mActionsToShowInCompact
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    boolean mShowCancelButton -> mShowCancelButton
    android.app.PendingIntent mCancelButtonIntent -> mCancelButtonIntent
    android.support.v7.app.NotificationCompat$MediaStyle setShowActionsInCompactView(int[]) -> setShowActionsInCompactView
    android.support.v7.app.NotificationCompat$MediaStyle setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token) -> setMediaSession
    android.support.v7.app.NotificationCompat$MediaStyle setShowCancelButton(boolean) -> setShowCancelButton
    android.support.v7.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent) -> setCancelButtonIntent
android.support.v7.appcompat.BuildConfig -> android.support.v7.appcompat.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
android.support.v7.appcompat.R -> android.support.v7.appcompat.R:
android.support.v7.appcompat.R$anim -> android.support.v7.appcompat.R$anim:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_grow_fade_in_from_bottom -> abc_grow_fade_in_from_bottom
    int abc_popup_enter -> abc_popup_enter
    int abc_popup_exit -> abc_popup_exit
    int abc_shrink_fade_out_from_bottom -> abc_shrink_fade_out_from_bottom
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
android.support.v7.appcompat.R$attr -> android.support.v7.appcompat.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarPopupTheme -> actionBarPopupTheme
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarTheme -> actionBarTheme
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionOverflowMenuStyle -> actionOverflowMenuStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int alertDialogButtonGroupStyle -> alertDialogButtonGroupStyle
    int alertDialogCenterButtons -> alertDialogCenterButtons
    int alertDialogStyle -> alertDialogStyle
    int alertDialogTheme -> alertDialogTheme
    int autoCompleteTextViewStyle -> autoCompleteTextViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int backgroundTint -> backgroundTint
    int backgroundTintMode -> backgroundTintMode
    int barSize -> barSize
    int borderlessButtonStyle -> borderlessButtonStyle
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarNegativeButtonStyle -> buttonBarNegativeButtonStyle
    int buttonBarNeutralButtonStyle -> buttonBarNeutralButtonStyle
    int buttonBarPositiveButtonStyle -> buttonBarPositiveButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int buttonPanelSideLayout -> buttonPanelSideLayout
    int buttonStyle -> buttonStyle
    int buttonStyleSmall -> buttonStyleSmall
    int checkboxStyle -> checkboxStyle
    int checkedTextViewStyle -> checkedTextViewStyle
    int closeIcon -> closeIcon
    int closeItemLayout -> closeItemLayout
    int collapseContentDescription -> collapseContentDescription
    int collapseIcon -> collapseIcon
    int color -> color
    int colorAccent -> colorAccent
    int colorButtonNormal -> colorButtonNormal
    int colorControlActivated -> colorControlActivated
    int colorControlHighlight -> colorControlHighlight
    int colorControlNormal -> colorControlNormal
    int colorPrimary -> colorPrimary
    int colorPrimaryDark -> colorPrimaryDark
    int colorSwitchThumbNormal -> colorSwitchThumbNormal
    int commitIcon -> commitIcon
    int contentInsetEnd -> contentInsetEnd
    int contentInsetLeft -> contentInsetLeft
    int contentInsetRight -> contentInsetRight
    int contentInsetStart -> contentInsetStart
    int customNavigationLayout -> customNavigationLayout
    int defaultQueryHint -> defaultQueryHint
    int dialogPreferredPadding -> dialogPreferredPadding
    int dialogTheme -> dialogTheme
    int disableChildrenWhenDisabled -> disableChildrenWhenDisabled
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int drawableSize -> drawableSize
    int drawerArrowStyle -> drawerArrowStyle
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int editTextBackground -> editTextBackground
    int editTextColor -> editTextColor
    int editTextStyle -> editTextStyle
    int elevation -> elevation
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int gapBetweenBars -> gapBetweenBars
    int goIcon -> goIcon
    int height -> height
    int hideOnContentScroll -> hideOnContentScroll
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int isLightTheme -> isLightTheme
    int itemPadding -> itemPadding
    int layout -> layout
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listDividerAlertDialog -> listDividerAlertDialog
    int listItemLayout -> listItemLayout
    int listLayout -> listLayout
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int maxButtonHeight -> maxButtonHeight
    int measureWithLargestChild -> measureWithLargestChild
    int middleBarArrowSize -> middleBarArrowSize
    int multiChoiceItemLayout -> multiChoiceItemLayout
    int navigationContentDescription -> navigationContentDescription
    int navigationIcon -> navigationIcon
    int navigationMode -> navigationMode
    int overlapAnchor -> overlapAnchor
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int panelBackground -> panelBackground
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupPromptView -> popupPromptView
    int popupTheme -> popupTheme
    int popupWindowStyle -> popupWindowStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int prompt -> prompt
    int queryBackground -> queryBackground
    int queryHint -> queryHint
    int radioButtonStyle -> radioButtonStyle
    int ratingBarStyle -> ratingBarStyle
    int searchHintIcon -> searchHintIcon
    int searchIcon -> searchIcon
    int searchViewStyle -> searchViewStyle
    int selectableItemBackground -> selectableItemBackground
    int selectableItemBackgroundBorderless -> selectableItemBackgroundBorderless
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int showText -> showText
    int singleChoiceItemLayout -> singleChoiceItemLayout
    int spinBars -> spinBars
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerMode -> spinnerMode
    int spinnerStyle -> spinnerStyle
    int splitTrack -> splitTrack
    int state_above_anchor -> state_above_anchor
    int submitBackground -> submitBackground
    int subtitle -> subtitle
    int subtitleTextAppearance -> subtitleTextAppearance
    int subtitleTextStyle -> subtitleTextStyle
    int suggestionRowLayout -> suggestionRowLayout
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchStyle -> switchStyle
    int switchTextAppearance -> switchTextAppearance
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorAlertDialogListItem -> textColorAlertDialogListItem
    int textColorSearchUrl -> textColorSearchUrl
    int theme -> theme
    int thickness -> thickness
    int thumbTextPadding -> thumbTextPadding
    int title -> title
    int titleMarginBottom -> titleMarginBottom
    int titleMarginEnd -> titleMarginEnd
    int titleMarginStart -> titleMarginStart
    int titleMarginTop -> titleMarginTop
    int titleMargins -> titleMargins
    int titleTextAppearance -> titleTextAppearance
    int titleTextStyle -> titleTextStyle
    int toolbarNavigationButtonStyle -> toolbarNavigationButtonStyle
    int toolbarStyle -> toolbarStyle
    int topBottomBarArrowSize -> topBottomBarArrowSize
    int track -> track
    int voiceIcon -> voiceIcon
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
android.support.v7.appcompat.R$bool -> android.support.v7.appcompat.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    int abc_action_bar_embed_tabs_pre_jb -> abc_action_bar_embed_tabs_pre_jb
    int abc_action_bar_expanded_action_views_exclusive -> abc_action_bar_expanded_action_views_exclusive
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_allowActionMenuItemTextWithIcon -> abc_config_allowActionMenuItemTextWithIcon
    int abc_config_closeDialogWhenTouchOutside -> abc_config_closeDialogWhenTouchOutside
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
android.support.v7.appcompat.R$color -> android.support.v7.appcompat.R$color:
    int abc_background_cache_hint_selector_material_dark -> abc_background_cache_hint_selector_material_dark
    int abc_background_cache_hint_selector_material_light -> abc_background_cache_hint_selector_material_light
    int abc_input_method_navigation_guard -> abc_input_method_navigation_guard
    int abc_primary_text_disable_only_material_dark -> abc_primary_text_disable_only_material_dark
    int abc_primary_text_disable_only_material_light -> abc_primary_text_disable_only_material_light
    int abc_primary_text_material_dark -> abc_primary_text_material_dark
    int abc_primary_text_material_light -> abc_primary_text_material_light
    int abc_search_url_text -> abc_search_url_text
    int abc_search_url_text_normal -> abc_search_url_text_normal
    int abc_search_url_text_pressed -> abc_search_url_text_pressed
    int abc_search_url_text_selected -> abc_search_url_text_selected
    int abc_secondary_text_material_dark -> abc_secondary_text_material_dark
    int abc_secondary_text_material_light -> abc_secondary_text_material_light
    int accent_material_dark -> accent_material_dark
    int accent_material_light -> accent_material_light
    int background_floating_material_dark -> background_floating_material_dark
    int background_floating_material_light -> background_floating_material_light
    int background_material_dark -> background_material_dark
    int background_material_light -> background_material_light
    int bright_foreground_disabled_material_dark -> bright_foreground_disabled_material_dark
    int bright_foreground_disabled_material_light -> bright_foreground_disabled_material_light
    int bright_foreground_inverse_material_dark -> bright_foreground_inverse_material_dark
    int bright_foreground_inverse_material_light -> bright_foreground_inverse_material_light
    int bright_foreground_material_dark -> bright_foreground_material_dark
    int bright_foreground_material_light -> bright_foreground_material_light
    int button_material_dark -> button_material_dark
    int button_material_light -> button_material_light
    int dim_foreground_disabled_material_dark -> dim_foreground_disabled_material_dark
    int dim_foreground_disabled_material_light -> dim_foreground_disabled_material_light
    int dim_foreground_material_dark -> dim_foreground_material_dark
    int dim_foreground_material_light -> dim_foreground_material_light
    int highlighted_text_material_dark -> highlighted_text_material_dark
    int highlighted_text_material_light -> highlighted_text_material_light
    int hint_foreground_material_dark -> hint_foreground_material_dark
    int hint_foreground_material_light -> hint_foreground_material_light
    int link_text_material_dark -> link_text_material_dark
    int link_text_material_light -> link_text_material_light
    int material_blue_grey_800 -> material_blue_grey_800
    int material_blue_grey_900 -> material_blue_grey_900
    int material_blue_grey_950 -> material_blue_grey_950
    int material_deep_teal_200 -> material_deep_teal_200
    int material_deep_teal_500 -> material_deep_teal_500
    int primary_dark_material_dark -> primary_dark_material_dark
    int primary_dark_material_light -> primary_dark_material_light
    int primary_material_dark -> primary_material_dark
    int primary_material_light -> primary_material_light
    int primary_text_default_material_dark -> primary_text_default_material_dark
    int primary_text_default_material_light -> primary_text_default_material_light
    int primary_text_disabled_material_dark -> primary_text_disabled_material_dark
    int primary_text_disabled_material_light -> primary_text_disabled_material_light
    int ripple_material_dark -> ripple_material_dark
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_dark -> secondary_text_default_material_dark
    int secondary_text_default_material_light -> secondary_text_default_material_light
    int secondary_text_disabled_material_dark -> secondary_text_disabled_material_dark
    int secondary_text_disabled_material_light -> secondary_text_disabled_material_light
    int switch_thumb_disabled_material_dark -> switch_thumb_disabled_material_dark
    int switch_thumb_disabled_material_light -> switch_thumb_disabled_material_light
    int switch_thumb_material_dark -> switch_thumb_material_dark
    int switch_thumb_material_light -> switch_thumb_material_light
    int switch_thumb_normal_material_dark -> switch_thumb_normal_material_dark
    int switch_thumb_normal_material_light -> switch_thumb_normal_material_light
android.support.v7.appcompat.R$dimen -> android.support.v7.appcompat.R$dimen:
    int abc_action_bar_content_inset_material -> abc_action_bar_content_inset_material
    int abc_action_bar_default_height_material -> abc_action_bar_default_height_material
    int abc_action_bar_default_padding_material -> abc_action_bar_default_padding_material
    int abc_action_bar_icon_vertical_padding_material -> abc_action_bar_icon_vertical_padding_material
    int abc_action_bar_navigation_padding_start_material -> abc_action_bar_navigation_padding_start_material
    int abc_action_bar_overflow_padding_end_material -> abc_action_bar_overflow_padding_end_material
    int abc_action_bar_overflow_padding_start_material -> abc_action_bar_overflow_padding_start_material
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin_material -> abc_action_bar_subtitle_bottom_margin_material
    int abc_action_bar_subtitle_top_margin_material -> abc_action_bar_subtitle_top_margin_material
    int abc_action_button_min_height_material -> abc_action_button_min_height_material
    int abc_action_button_min_width_material -> abc_action_button_min_width_material
    int abc_action_button_min_width_overflow_material -> abc_action_button_min_width_overflow_material
    int abc_alert_dialog_button_bar_height -> abc_alert_dialog_button_bar_height
    int abc_button_inset_horizontal_material -> abc_button_inset_horizontal_material
    int abc_button_inset_vertical_material -> abc_button_inset_vertical_material
    int abc_button_padding_horizontal_material -> abc_button_padding_horizontal_material
    int abc_button_padding_vertical_material -> abc_button_padding_vertical_material
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_control_corner_material -> abc_control_corner_material
    int abc_control_inset_material -> abc_control_inset_material
    int abc_control_padding_material -> abc_control_padding_material
    int abc_dialog_list_padding_vertical_material -> abc_dialog_list_padding_vertical_material
    int abc_dialog_min_width_major -> abc_dialog_min_width_major
    int abc_dialog_min_width_minor -> abc_dialog_min_width_minor
    int abc_dialog_padding_material -> abc_dialog_padding_material
    int abc_dialog_padding_top_material -> abc_dialog_padding_top_material
    int abc_disabled_alpha_material_dark -> abc_disabled_alpha_material_dark
    int abc_disabled_alpha_material_light -> abc_disabled_alpha_material_light
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_edit_text_inset_bottom_material -> abc_edit_text_inset_bottom_material
    int abc_edit_text_inset_horizontal_material -> abc_edit_text_inset_horizontal_material
    int abc_edit_text_inset_top_material -> abc_edit_text_inset_top_material
    int abc_floating_window_z -> abc_floating_window_z
    int abc_list_item_padding_horizontal_material -> abc_list_item_padding_horizontal_material
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_search_view_text_min_width -> abc_search_view_text_min_width
    int abc_switch_padding -> abc_switch_padding
    int abc_text_size_body_1_material -> abc_text_size_body_1_material
    int abc_text_size_body_2_material -> abc_text_size_body_2_material
    int abc_text_size_button_material -> abc_text_size_button_material
    int abc_text_size_caption_material -> abc_text_size_caption_material
    int abc_text_size_display_1_material -> abc_text_size_display_1_material
    int abc_text_size_display_2_material -> abc_text_size_display_2_material
    int abc_text_size_display_3_material -> abc_text_size_display_3_material
    int abc_text_size_display_4_material -> abc_text_size_display_4_material
    int abc_text_size_headline_material -> abc_text_size_headline_material
    int abc_text_size_large_material -> abc_text_size_large_material
    int abc_text_size_medium_material -> abc_text_size_medium_material
    int abc_text_size_menu_material -> abc_text_size_menu_material
    int abc_text_size_small_material -> abc_text_size_small_material
    int abc_text_size_subhead_material -> abc_text_size_subhead_material
    int abc_text_size_subtitle_material_toolbar -> abc_text_size_subtitle_material_toolbar
    int abc_text_size_title_material -> abc_text_size_title_material
    int abc_text_size_title_material_toolbar -> abc_text_size_title_material_toolbar
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
    int disabled_alpha_material_dark -> disabled_alpha_material_dark
    int disabled_alpha_material_light -> disabled_alpha_material_light
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_subtext_size -> notification_subtext_size
android.support.v7.appcompat.R$drawable -> android.support.v7.appcompat.R$drawable:
    int abc_ab_share_pack_mtrl_alpha -> abc_ab_share_pack_mtrl_alpha
    int abc_btn_borderless_material -> abc_btn_borderless_material
    int abc_btn_check_material -> abc_btn_check_material
    int abc_btn_check_to_on_mtrl_000 -> abc_btn_check_to_on_mtrl_000
    int abc_btn_check_to_on_mtrl_015 -> abc_btn_check_to_on_mtrl_015
    int abc_btn_default_mtrl_shape -> abc_btn_default_mtrl_shape
    int abc_btn_radio_material -> abc_btn_radio_material
    int abc_btn_radio_to_on_mtrl_000 -> abc_btn_radio_to_on_mtrl_000
    int abc_btn_radio_to_on_mtrl_015 -> abc_btn_radio_to_on_mtrl_015
    int abc_btn_rating_star_off_mtrl_alpha -> abc_btn_rating_star_off_mtrl_alpha
    int abc_btn_rating_star_on_mtrl_alpha -> abc_btn_rating_star_on_mtrl_alpha
    int abc_btn_switch_to_on_mtrl_00001 -> abc_btn_switch_to_on_mtrl_00001
    int abc_btn_switch_to_on_mtrl_00012 -> abc_btn_switch_to_on_mtrl_00012
    int abc_cab_background_internal_bg -> abc_cab_background_internal_bg
    int abc_cab_background_top_material -> abc_cab_background_top_material
    int abc_cab_background_top_mtrl_alpha -> abc_cab_background_top_mtrl_alpha
    int abc_dialog_material_background_dark -> abc_dialog_material_background_dark
    int abc_dialog_material_background_light -> abc_dialog_material_background_light
    int abc_edit_text_material -> abc_edit_text_material
    int abc_ic_ab_back_mtrl_am_alpha -> abc_ic_ab_back_mtrl_am_alpha
    int abc_ic_clear_mtrl_alpha -> abc_ic_clear_mtrl_alpha
    int abc_ic_commit_search_api_mtrl_alpha -> abc_ic_commit_search_api_mtrl_alpha
    int abc_ic_go_search_api_mtrl_alpha -> abc_ic_go_search_api_mtrl_alpha
    int abc_ic_menu_copy_mtrl_am_alpha -> abc_ic_menu_copy_mtrl_am_alpha
    int abc_ic_menu_cut_mtrl_alpha -> abc_ic_menu_cut_mtrl_alpha
    int abc_ic_menu_moreoverflow_mtrl_alpha -> abc_ic_menu_moreoverflow_mtrl_alpha
    int abc_ic_menu_paste_mtrl_am_alpha -> abc_ic_menu_paste_mtrl_am_alpha
    int abc_ic_menu_selectall_mtrl_alpha -> abc_ic_menu_selectall_mtrl_alpha
    int abc_ic_menu_share_mtrl_alpha -> abc_ic_menu_share_mtrl_alpha
    int abc_ic_search_api_mtrl_alpha -> abc_ic_search_api_mtrl_alpha
    int abc_ic_voice_search_api_mtrl_alpha -> abc_ic_voice_search_api_mtrl_alpha
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_mtrl_alpha -> abc_list_divider_mtrl_alpha
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_hardkey_panel_mtrl_mult -> abc_menu_hardkey_panel_mtrl_mult
    int abc_popup_background_mtrl_mult -> abc_popup_background_mtrl_mult
    int abc_ratingbar_full_material -> abc_ratingbar_full_material
    int abc_spinner_mtrl_am_alpha -> abc_spinner_mtrl_am_alpha
    int abc_spinner_textfield_background_material -> abc_spinner_textfield_background_material
    int abc_switch_thumb_material -> abc_switch_thumb_material
    int abc_switch_track_mtrl_alpha -> abc_switch_track_mtrl_alpha
    int abc_tab_indicator_material -> abc_tab_indicator_material
    int abc_tab_indicator_mtrl_alpha -> abc_tab_indicator_mtrl_alpha
    int abc_text_cursor_mtrl_alpha -> abc_text_cursor_mtrl_alpha
    int abc_textfield_activated_mtrl_alpha -> abc_textfield_activated_mtrl_alpha
    int abc_textfield_default_mtrl_alpha -> abc_textfield_default_mtrl_alpha
    int abc_textfield_search_activated_mtrl_alpha -> abc_textfield_search_activated_mtrl_alpha
    int abc_textfield_search_default_mtrl_alpha -> abc_textfield_search_default_mtrl_alpha
    int abc_textfield_search_material -> abc_textfield_search_material
    int notification_template_icon_bg -> notification_template_icon_bg
android.support.v7.appcompat.R$id -> android.support.v7.appcompat.R$id:
    int action0 -> action0
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_root -> action_bar_root
    int action_bar_spinner -> action_bar_spinner
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_divider -> action_divider
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int alertTitle -> alertTitle
    int always -> always
    int beginning -> beginning
    int buttonPanel -> buttonPanel
    int cancel_action -> cancel_action
    int checkbox -> checkbox
    int chronometer -> chronometer
    int collapseActionView -> collapseActionView
    int contentPanel -> contentPanel
    int custom -> custom
    int customPanel -> customPanel
    int decor_content_parent -> decor_content_parent
    int default_activity_button -> default_activity_button
    int dialog -> dialog
    int disableHome -> disableHome
    int dropdown -> dropdown
    int edit_query -> edit_query
    int end -> end
    int end_padder -> end_padder
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int home -> home
    int homeAsUp -> homeAsUp
    int icon -> icon
    int ifRoom -> ifRoom
    int image -> image
    int info -> info
    int line1 -> line1
    int line3 -> line3
    int listMode -> listMode
    int list_item -> list_item
    int media_actions -> media_actions
    int middle -> middle
    int multiply -> multiply
    int never -> never
    int none -> none
    int normal -> normal
    int parentPanel -> parentPanel
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int radio -> radio
    int screen -> screen
    int scrollView -> scrollView
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int select_dialog_listview -> select_dialog_listview
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int split_action_bar -> split_action_bar
    int src_atop -> src_atop
    int src_in -> src_in
    int src_over -> src_over
    int status_bar_latest_event_content -> status_bar_latest_event_content
    int submit_area -> submit_area
    int tabMode -> tabMode
    int text -> text
    int text2 -> text2
    int textSpacerNoButtons -> textSpacerNoButtons
    int time -> time
    int title -> title
    int title_template -> title_template
    int topPanel -> topPanel
    int up -> up
    int useLogo -> useLogo
    int withText -> withText
    int wrap_content -> wrap_content
android.support.v7.appcompat.R$integer -> android.support.v7.appcompat.R$integer:
    int abc_config_activityDefaultDur -> abc_config_activityDefaultDur
    int abc_config_activityShortDur -> abc_config_activityShortDur
    int abc_max_action_buttons -> abc_max_action_buttons
    int cancel_button_image_alpha -> cancel_button_image_alpha
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
android.support.v7.appcompat.R$layout -> android.support.v7.appcompat.R$layout:
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_up_container -> abc_action_bar_up_container
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item_material -> abc_action_mode_close_item_material
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_alert_dialog_material -> abc_alert_dialog_material
    int abc_dialog_title_material -> abc_dialog_title_material
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen_content_include -> abc_screen_content_include
    int abc_screen_simple -> abc_screen_simple
    int abc_screen_simple_overlay_action_mode -> abc_screen_simple_overlay_action_mode
    int abc_screen_toolbar -> abc_screen_toolbar
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_select_dialog_material -> abc_select_dialog_material
    int abc_simple_dropdown_hint -> abc_simple_dropdown_hint
    int notification_media_action -> notification_media_action
    int notification_media_cancel_action -> notification_media_cancel_action
    int notification_template_big_media -> notification_template_big_media
    int notification_template_big_media_narrow -> notification_template_big_media_narrow
    int notification_template_lines -> notification_template_lines
    int notification_template_media -> notification_template_media
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    int select_dialog_item_material -> select_dialog_item_material
    int select_dialog_multichoice_material -> select_dialog_multichoice_material
    int select_dialog_singlechoice_material -> select_dialog_singlechoice_material
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
android.support.v7.appcompat.R$string -> android.support.v7.appcompat.R$string:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_home_description_format -> abc_action_bar_home_description_format
    int abc_action_bar_home_subtitle_description_format -> abc_action_bar_home_subtitle_description_format
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_search_hint -> abc_search_hint
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int abc_toolbar_collapse_description -> abc_toolbar_collapse_description
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
android.support.v7.appcompat.R$style -> android.support.v7.appcompat.R$style:
    int AlertDialog_AppCompat -> AlertDialog_AppCompat
    int AlertDialog_AppCompat_Light -> AlertDialog_AppCompat_Light
    int Animation_AppCompat_Dialog -> Animation_AppCompat_Dialog
    int Animation_AppCompat_DropDownUp -> Animation_AppCompat_DropDownUp
    int Base_AlertDialog_AppCompat -> Base_AlertDialog_AppCompat
    int Base_AlertDialog_AppCompat_Light -> Base_AlertDialog_AppCompat_Light
    int Base_Animation_AppCompat_Dialog -> Base_Animation_AppCompat_Dialog
    int Base_Animation_AppCompat_DropDownUp -> Base_Animation_AppCompat_DropDownUp
    int Base_DialogWindowTitleBackground_AppCompat -> Base_DialogWindowTitleBackground_AppCompat
    int Base_DialogWindowTitle_AppCompat -> Base_DialogWindowTitle_AppCompat
    int Base_TextAppearance_AppCompat -> Base_TextAppearance_AppCompat
    int Base_TextAppearance_AppCompat_Body1 -> Base_TextAppearance_AppCompat_Body1
    int Base_TextAppearance_AppCompat_Body2 -> Base_TextAppearance_AppCompat_Body2
    int Base_TextAppearance_AppCompat_Button -> Base_TextAppearance_AppCompat_Button
    int Base_TextAppearance_AppCompat_Caption -> Base_TextAppearance_AppCompat_Caption
    int Base_TextAppearance_AppCompat_Display1 -> Base_TextAppearance_AppCompat_Display1
    int Base_TextAppearance_AppCompat_Display2 -> Base_TextAppearance_AppCompat_Display2
    int Base_TextAppearance_AppCompat_Display3 -> Base_TextAppearance_AppCompat_Display3
    int Base_TextAppearance_AppCompat_Display4 -> Base_TextAppearance_AppCompat_Display4
    int Base_TextAppearance_AppCompat_Headline -> Base_TextAppearance_AppCompat_Headline
    int Base_TextAppearance_AppCompat_Inverse -> Base_TextAppearance_AppCompat_Inverse
    int Base_TextAppearance_AppCompat_Large -> Base_TextAppearance_AppCompat_Large
    int Base_TextAppearance_AppCompat_Large_Inverse -> Base_TextAppearance_AppCompat_Large_Inverse
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Medium -> Base_TextAppearance_AppCompat_Medium
    int Base_TextAppearance_AppCompat_Medium_Inverse -> Base_TextAppearance_AppCompat_Medium_Inverse
    int Base_TextAppearance_AppCompat_Menu -> Base_TextAppearance_AppCompat_Menu
    int Base_TextAppearance_AppCompat_SearchResult -> Base_TextAppearance_AppCompat_SearchResult
    int Base_TextAppearance_AppCompat_SearchResult_Subtitle -> Base_TextAppearance_AppCompat_SearchResult_Subtitle
    int Base_TextAppearance_AppCompat_SearchResult_Title -> Base_TextAppearance_AppCompat_SearchResult_Title
    int Base_TextAppearance_AppCompat_Small -> Base_TextAppearance_AppCompat_Small
    int Base_TextAppearance_AppCompat_Small_Inverse -> Base_TextAppearance_AppCompat_Small_Inverse
    int Base_TextAppearance_AppCompat_Subhead -> Base_TextAppearance_AppCompat_Subhead
    int Base_TextAppearance_AppCompat_Subhead_Inverse -> Base_TextAppearance_AppCompat_Subhead_Inverse
    int Base_TextAppearance_AppCompat_Title -> Base_TextAppearance_AppCompat_Title
    int Base_TextAppearance_AppCompat_Title_Inverse -> Base_TextAppearance_AppCompat_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu -> Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Title -> Base_TextAppearance_AppCompat_Widget_ActionMode_Title
    int Base_TextAppearance_AppCompat_Widget_DropDownItem -> Base_TextAppearance_AppCompat_Widget_DropDownItem
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Widget_Switch -> Base_TextAppearance_AppCompat_Widget_Switch
    int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Title -> Base_TextAppearance_Widget_AppCompat_Toolbar_Title
    int Base_ThemeOverlay_AppCompat -> Base_ThemeOverlay_AppCompat
    int Base_ThemeOverlay_AppCompat_ActionBar -> Base_ThemeOverlay_AppCompat_ActionBar
    int Base_ThemeOverlay_AppCompat_Dark -> Base_ThemeOverlay_AppCompat_Dark
    int Base_ThemeOverlay_AppCompat_Dark_ActionBar -> Base_ThemeOverlay_AppCompat_Dark_ActionBar
    int Base_ThemeOverlay_AppCompat_Light -> Base_ThemeOverlay_AppCompat_Light
    int Base_Theme_AppCompat -> Base_Theme_AppCompat
    int Base_Theme_AppCompat_CompactMenu -> Base_Theme_AppCompat_CompactMenu
    int Base_Theme_AppCompat_Dialog -> Base_Theme_AppCompat_Dialog
    int Base_Theme_AppCompat_DialogWhenLarge -> Base_Theme_AppCompat_DialogWhenLarge
    int Base_Theme_AppCompat_Dialog_Alert -> Base_Theme_AppCompat_Dialog_Alert
    int Base_Theme_AppCompat_Dialog_FixedSize -> Base_Theme_AppCompat_Dialog_FixedSize
    int Base_Theme_AppCompat_Dialog_MinWidth -> Base_Theme_AppCompat_Dialog_MinWidth
    int Base_Theme_AppCompat_Light -> Base_Theme_AppCompat_Light
    int Base_Theme_AppCompat_Light_DarkActionBar -> Base_Theme_AppCompat_Light_DarkActionBar
    int Base_Theme_AppCompat_Light_Dialog -> Base_Theme_AppCompat_Light_Dialog
    int Base_Theme_AppCompat_Light_DialogWhenLarge -> Base_Theme_AppCompat_Light_DialogWhenLarge
    int Base_Theme_AppCompat_Light_Dialog_Alert -> Base_Theme_AppCompat_Light_Dialog_Alert
    int Base_Theme_AppCompat_Light_Dialog_FixedSize -> Base_Theme_AppCompat_Light_Dialog_FixedSize
    int Base_Theme_AppCompat_Light_Dialog_MinWidth -> Base_Theme_AppCompat_Light_Dialog_MinWidth
    int Base_V11_Theme_AppCompat_Dialog -> Base_V11_Theme_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Light_Dialog -> Base_V11_Theme_AppCompat_Light_Dialog
    int Base_V12_Widget_AppCompat_AutoCompleteTextView -> Base_V12_Widget_AppCompat_AutoCompleteTextView
    int Base_V12_Widget_AppCompat_EditText -> Base_V12_Widget_AppCompat_EditText
    int Base_V21_Theme_AppCompat -> Base_V21_Theme_AppCompat
    int Base_V21_Theme_AppCompat_Dialog -> Base_V21_Theme_AppCompat_Dialog
    int Base_V21_Theme_AppCompat_Light -> Base_V21_Theme_AppCompat_Light
    int Base_V21_Theme_AppCompat_Light_Dialog -> Base_V21_Theme_AppCompat_Light_Dialog
    int Base_V7_Theme_AppCompat -> Base_V7_Theme_AppCompat
    int Base_V7_Theme_AppCompat_Dialog -> Base_V7_Theme_AppCompat_Dialog
    int Base_V7_Theme_AppCompat_Light -> Base_V7_Theme_AppCompat_Light
    int Base_V7_Theme_AppCompat_Light_Dialog -> Base_V7_Theme_AppCompat_Light_Dialog
    int Base_V7_Widget_AppCompat_AutoCompleteTextView -> Base_V7_Widget_AppCompat_AutoCompleteTextView
    int Base_V7_Widget_AppCompat_EditText -> Base_V7_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_ActionBar -> Base_Widget_AppCompat_ActionBar
    int Base_Widget_AppCompat_ActionBar_Solid -> Base_Widget_AppCompat_ActionBar_Solid
    int Base_Widget_AppCompat_ActionBar_TabBar -> Base_Widget_AppCompat_ActionBar_TabBar
    int Base_Widget_AppCompat_ActionBar_TabText -> Base_Widget_AppCompat_ActionBar_TabText
    int Base_Widget_AppCompat_ActionBar_TabView -> Base_Widget_AppCompat_ActionBar_TabView
    int Base_Widget_AppCompat_ActionButton -> Base_Widget_AppCompat_ActionButton
    int Base_Widget_AppCompat_ActionButton_CloseMode -> Base_Widget_AppCompat_ActionButton_CloseMode
    int Base_Widget_AppCompat_ActionButton_Overflow -> Base_Widget_AppCompat_ActionButton_Overflow
    int Base_Widget_AppCompat_ActionMode -> Base_Widget_AppCompat_ActionMode
    int Base_Widget_AppCompat_ActivityChooserView -> Base_Widget_AppCompat_ActivityChooserView
    int Base_Widget_AppCompat_AutoCompleteTextView -> Base_Widget_AppCompat_AutoCompleteTextView
    int Base_Widget_AppCompat_Button -> Base_Widget_AppCompat_Button
    int Base_Widget_AppCompat_ButtonBar -> Base_Widget_AppCompat_ButtonBar
    int Base_Widget_AppCompat_ButtonBar_AlertDialog -> Base_Widget_AppCompat_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Borderless -> Base_Widget_AppCompat_Button_Borderless
    int Base_Widget_AppCompat_Button_Borderless_Colored -> Base_Widget_AppCompat_Button_Borderless_Colored
    int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog -> Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Small -> Base_Widget_AppCompat_Button_Small
    int Base_Widget_AppCompat_CompoundButton_CheckBox -> Base_Widget_AppCompat_CompoundButton_CheckBox
    int Base_Widget_AppCompat_CompoundButton_RadioButton -> Base_Widget_AppCompat_CompoundButton_RadioButton
    int Base_Widget_AppCompat_CompoundButton_Switch -> Base_Widget_AppCompat_CompoundButton_Switch
    int Base_Widget_AppCompat_DrawerArrowToggle -> Base_Widget_AppCompat_DrawerArrowToggle
    int Base_Widget_AppCompat_DrawerArrowToggle_Common -> Base_Widget_AppCompat_DrawerArrowToggle_Common
    int Base_Widget_AppCompat_DropDownItem_Spinner -> Base_Widget_AppCompat_DropDownItem_Spinner
    int Base_Widget_AppCompat_EditText -> Base_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_Light_ActionBar -> Base_Widget_AppCompat_Light_ActionBar
    int Base_Widget_AppCompat_Light_ActionBar_Solid -> Base_Widget_AppCompat_Light_ActionBar_Solid
    int Base_Widget_AppCompat_Light_ActionBar_TabBar -> Base_Widget_AppCompat_Light_ActionBar_TabBar
    int Base_Widget_AppCompat_Light_ActionBar_TabText -> Base_Widget_AppCompat_Light_ActionBar_TabText
    int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Base_Widget_AppCompat_Light_ActionBar_TabView -> Base_Widget_AppCompat_Light_ActionBar_TabView
    int Base_Widget_AppCompat_Light_PopupMenu -> Base_Widget_AppCompat_Light_PopupMenu
    int Base_Widget_AppCompat_Light_PopupMenu_Overflow -> Base_Widget_AppCompat_Light_PopupMenu_Overflow
    int Base_Widget_AppCompat_ListPopupWindow -> Base_Widget_AppCompat_ListPopupWindow
    int Base_Widget_AppCompat_ListView -> Base_Widget_AppCompat_ListView
    int Base_Widget_AppCompat_ListView_DropDown -> Base_Widget_AppCompat_ListView_DropDown
    int Base_Widget_AppCompat_ListView_Menu -> Base_Widget_AppCompat_ListView_Menu
    int Base_Widget_AppCompat_PopupMenu -> Base_Widget_AppCompat_PopupMenu
    int Base_Widget_AppCompat_PopupMenu_Overflow -> Base_Widget_AppCompat_PopupMenu_Overflow
    int Base_Widget_AppCompat_PopupWindow -> Base_Widget_AppCompat_PopupWindow
    int Base_Widget_AppCompat_ProgressBar -> Base_Widget_AppCompat_ProgressBar
    int Base_Widget_AppCompat_ProgressBar_Horizontal -> Base_Widget_AppCompat_ProgressBar_Horizontal
    int Base_Widget_AppCompat_RatingBar -> Base_Widget_AppCompat_RatingBar
    int Base_Widget_AppCompat_SearchView -> Base_Widget_AppCompat_SearchView
    int Base_Widget_AppCompat_SearchView_ActionBar -> Base_Widget_AppCompat_SearchView_ActionBar
    int Base_Widget_AppCompat_Spinner -> Base_Widget_AppCompat_Spinner
    int Base_Widget_AppCompat_Spinner_DropDown_ActionBar -> Base_Widget_AppCompat_Spinner_DropDown_ActionBar
    int Base_Widget_AppCompat_Spinner_Underlined -> Base_Widget_AppCompat_Spinner_Underlined
    int Base_Widget_AppCompat_TextView_SpinnerItem -> Base_Widget_AppCompat_TextView_SpinnerItem
    int Base_Widget_AppCompat_Toolbar -> Base_Widget_AppCompat_Toolbar
    int Base_Widget_AppCompat_Toolbar_Button_Navigation -> Base_Widget_AppCompat_Toolbar_Button_Navigation
    int Platform_AppCompat -> Platform_AppCompat
    int Platform_AppCompat_Light -> Platform_AppCompat_Light
    int Platform_ThemeOverlay_AppCompat_Dark -> Platform_ThemeOverlay_AppCompat_Dark
    int Platform_ThemeOverlay_AppCompat_Light -> Platform_ThemeOverlay_AppCompat_Light
    int Platform_V11_AppCompat -> Platform_V11_AppCompat
    int Platform_V11_AppCompat_Light -> Platform_V11_AppCompat_Light
    int Platform_V14_AppCompat -> Platform_V14_AppCompat
    int Platform_V14_AppCompat_Light -> Platform_V14_AppCompat_Light
    int RtlOverlay_DialogWindowTitle_AppCompat -> RtlOverlay_DialogWindowTitle_AppCompat
    int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem -> RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
    int RtlOverlay_Widget_AppCompat_ActionButton_Overflow -> RtlOverlay_Widget_AppCompat_ActionButton_Overflow
    int RtlOverlay_Widget_AppCompat_DialogTitle_Icon -> RtlOverlay_Widget_AppCompat_DialogTitle_Icon
    int RtlOverlay_Widget_AppCompat_PopupMenuItem -> RtlOverlay_Widget_AppCompat_PopupMenuItem
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup -> RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text -> RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
    int RtlOverlay_Widget_AppCompat_SearchView_MagIcon -> RtlOverlay_Widget_AppCompat_SearchView_MagIcon
    int RtlOverlay_Widget_AppCompat_Search_DropDown -> RtlOverlay_Widget_AppCompat_Search_DropDown
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Query -> RtlOverlay_Widget_AppCompat_Search_DropDown_Query
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Text -> RtlOverlay_Widget_AppCompat_Search_DropDown_Text
    int RtlOverlay_Widget_AppCompat_Toolbar_Button_Navigation -> RtlOverlay_Widget_AppCompat_Toolbar_Button_Navigation
    int TextAppearance_AppCompat -> TextAppearance_AppCompat
    int TextAppearance_AppCompat_Body1 -> TextAppearance_AppCompat_Body1
    int TextAppearance_AppCompat_Body2 -> TextAppearance_AppCompat_Body2
    int TextAppearance_AppCompat_Button -> TextAppearance_AppCompat_Button
    int TextAppearance_AppCompat_Caption -> TextAppearance_AppCompat_Caption
    int TextAppearance_AppCompat_Display1 -> TextAppearance_AppCompat_Display1
    int TextAppearance_AppCompat_Display2 -> TextAppearance_AppCompat_Display2
    int TextAppearance_AppCompat_Display3 -> TextAppearance_AppCompat_Display3
    int TextAppearance_AppCompat_Display4 -> TextAppearance_AppCompat_Display4
    int TextAppearance_AppCompat_Headline -> TextAppearance_AppCompat_Headline
    int TextAppearance_AppCompat_Inverse -> TextAppearance_AppCompat_Inverse
    int TextAppearance_AppCompat_Large -> TextAppearance_AppCompat_Large
    int TextAppearance_AppCompat_Large_Inverse -> TextAppearance_AppCompat_Large_Inverse
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Medium -> TextAppearance_AppCompat_Medium
    int TextAppearance_AppCompat_Medium_Inverse -> TextAppearance_AppCompat_Medium_Inverse
    int TextAppearance_AppCompat_Menu -> TextAppearance_AppCompat_Menu
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Small -> TextAppearance_AppCompat_Small
    int TextAppearance_AppCompat_Small_Inverse -> TextAppearance_AppCompat_Small_Inverse
    int TextAppearance_AppCompat_Subhead -> TextAppearance_AppCompat_Subhead
    int TextAppearance_AppCompat_Subhead_Inverse -> TextAppearance_AppCompat_Subhead_Inverse
    int TextAppearance_AppCompat_Title -> TextAppearance_AppCompat_Title
    int TextAppearance_AppCompat_Title_Inverse -> TextAppearance_AppCompat_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Widget_Switch -> TextAppearance_AppCompat_Widget_Switch
    int TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int TextAppearance_StatusBar_EventContent -> TextAppearance_StatusBar_EventContent
    int TextAppearance_StatusBar_EventContent_Info -> TextAppearance_StatusBar_EventContent_Info
    int TextAppearance_StatusBar_EventContent_Line2 -> TextAppearance_StatusBar_EventContent_Line2
    int TextAppearance_StatusBar_EventContent_Time -> TextAppearance_StatusBar_EventContent_Time
    int TextAppearance_StatusBar_EventContent_Title -> TextAppearance_StatusBar_EventContent_Title
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int TextAppearance_Widget_AppCompat_Toolbar_Title -> TextAppearance_Widget_AppCompat_Toolbar_Title
    int ThemeOverlay_AppCompat -> ThemeOverlay_AppCompat
    int ThemeOverlay_AppCompat_ActionBar -> ThemeOverlay_AppCompat_ActionBar
    int ThemeOverlay_AppCompat_Dark -> ThemeOverlay_AppCompat_Dark
    int ThemeOverlay_AppCompat_Dark_ActionBar -> ThemeOverlay_AppCompat_Dark_ActionBar
    int ThemeOverlay_AppCompat_Light -> ThemeOverlay_AppCompat_Light
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_Dialog -> Theme_AppCompat_Dialog
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Dialog_Alert -> Theme_AppCompat_Dialog_Alert
    int Theme_AppCompat_Dialog_MinWidth -> Theme_AppCompat_Dialog_MinWidth
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_Dialog -> Theme_AppCompat_Light_Dialog
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_AppCompat_Light_Dialog_Alert -> Theme_AppCompat_Light_Dialog_Alert
    int Theme_AppCompat_Light_Dialog_MinWidth -> Theme_AppCompat_Light_Dialog_MinWidth
    int Theme_AppCompat_Light_NoActionBar -> Theme_AppCompat_Light_NoActionBar
    int Theme_AppCompat_NoActionBar -> Theme_AppCompat_NoActionBar
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Button -> Widget_AppCompat_Button
    int Widget_AppCompat_ButtonBar -> Widget_AppCompat_ButtonBar
    int Widget_AppCompat_ButtonBar_AlertDialog -> Widget_AppCompat_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Borderless -> Widget_AppCompat_Button_Borderless
    int Widget_AppCompat_Button_Borderless_Colored -> Widget_AppCompat_Button_Borderless_Colored
    int Widget_AppCompat_Button_ButtonBar_AlertDialog -> Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Small -> Widget_AppCompat_Button_Small
    int Widget_AppCompat_CompoundButton_CheckBox -> Widget_AppCompat_CompoundButton_CheckBox
    int Widget_AppCompat_CompoundButton_RadioButton -> Widget_AppCompat_CompoundButton_RadioButton
    int Widget_AppCompat_CompoundButton_Switch -> Widget_AppCompat_CompoundButton_Switch
    int Widget_AppCompat_DrawerArrowToggle -> Widget_AppCompat_DrawerArrowToggle
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_EditText -> Widget_AppCompat_EditText
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_PopupMenu_Overflow -> Widget_AppCompat_Light_PopupMenu_Overflow
    int Widget_AppCompat_Light_SearchView -> Widget_AppCompat_Light_SearchView
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView -> Widget_AppCompat_ListView
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_PopupMenu_Overflow -> Widget_AppCompat_PopupMenu_Overflow
    int Widget_AppCompat_PopupWindow -> Widget_AppCompat_PopupWindow
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_RatingBar -> Widget_AppCompat_RatingBar
    int Widget_AppCompat_SearchView -> Widget_AppCompat_SearchView
    int Widget_AppCompat_SearchView_ActionBar -> Widget_AppCompat_SearchView_ActionBar
    int Widget_AppCompat_Spinner -> Widget_AppCompat_Spinner
    int Widget_AppCompat_Spinner_DropDown -> Widget_AppCompat_Spinner_DropDown
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
    int Widget_AppCompat_Spinner_Underlined -> Widget_AppCompat_Spinner_Underlined
    int Widget_AppCompat_TextView_SpinnerItem -> Widget_AppCompat_TextView_SpinnerItem
    int Widget_AppCompat_Toolbar -> Widget_AppCompat_Toolbar
    int Widget_AppCompat_Toolbar_Button_Navigation -> Widget_AppCompat_Toolbar_Button_Navigation
android.support.v7.appcompat.R$styleable -> android.support.v7.appcompat.R$styleable:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetLeft -> ActionBar_contentInsetLeft
    int ActionBar_contentInsetRight -> ActionBar_contentInsetRight
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_layout -> AlertDialog_android_layout
    int AlertDialog_buttonPanelSideLayout -> AlertDialog_buttonPanelSideLayout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int[] AppCompatTextView -> AppCompatTextView
    int AppCompatTextView_android_textAppearance -> AppCompatTextView_android_textAppearance
    int AppCompatTextView_textAllCaps -> AppCompatTextView_textAllCaps
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int DrawerArrowToggle_barSize -> DrawerArrowToggle_barSize
    int DrawerArrowToggle_color -> DrawerArrowToggle_color
    int DrawerArrowToggle_drawableSize -> DrawerArrowToggle_drawableSize
    int DrawerArrowToggle_gapBetweenBars -> DrawerArrowToggle_gapBetweenBars
    int DrawerArrowToggle_middleBarArrowSize -> DrawerArrowToggle_middleBarArrowSize
    int DrawerArrowToggle_spinBars -> DrawerArrowToggle_spinBars
    int DrawerArrowToggle_thickness -> DrawerArrowToggle_thickness
    int DrawerArrowToggle_topBottomBarArrowSize -> DrawerArrowToggle_topBottomBarArrowSize
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_height -> LinearLayoutCompat_Layout_android_layout_height
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int LinearLayoutCompat_Layout_android_layout_width -> LinearLayoutCompat_Layout_android_layout_width
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindowBackgroundState_state_above_anchor -> PopupWindowBackgroundState_state_above_anchor
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_defaultQueryHint -> SearchView_defaultQueryHint
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchHintIcon -> SearchView_searchHintIcon
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] Spinner -> Spinner
    int Spinner_android_background -> Spinner_android_background
    int Spinner_android_dropDownHorizontalOffset -> Spinner_android_dropDownHorizontalOffset
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownVerticalOffset -> Spinner_android_dropDownVerticalOffset
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_prompt -> Spinner_prompt
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_track -> SwitchCompat_track
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int TextAppearance_textAllCaps -> TextAppearance_textAllCaps
    int[] Theme -> Theme
    int Theme_actionBarDivider -> Theme_actionBarDivider
    int Theme_actionBarItemBackground -> Theme_actionBarItemBackground
    int Theme_actionBarPopupTheme -> Theme_actionBarPopupTheme
    int Theme_actionBarSize -> Theme_actionBarSize
    int Theme_actionBarSplitStyle -> Theme_actionBarSplitStyle
    int Theme_actionBarStyle -> Theme_actionBarStyle
    int Theme_actionBarTabBarStyle -> Theme_actionBarTabBarStyle
    int Theme_actionBarTabStyle -> Theme_actionBarTabStyle
    int Theme_actionBarTabTextStyle -> Theme_actionBarTabTextStyle
    int Theme_actionBarTheme -> Theme_actionBarTheme
    int Theme_actionBarWidgetTheme -> Theme_actionBarWidgetTheme
    int Theme_actionButtonStyle -> Theme_actionButtonStyle
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_actionMenuTextAppearance -> Theme_actionMenuTextAppearance
    int Theme_actionMenuTextColor -> Theme_actionMenuTextColor
    int Theme_actionModeBackground -> Theme_actionModeBackground
    int Theme_actionModeCloseButtonStyle -> Theme_actionModeCloseButtonStyle
    int Theme_actionModeCloseDrawable -> Theme_actionModeCloseDrawable
    int Theme_actionModeCopyDrawable -> Theme_actionModeCopyDrawable
    int Theme_actionModeCutDrawable -> Theme_actionModeCutDrawable
    int Theme_actionModeFindDrawable -> Theme_actionModeFindDrawable
    int Theme_actionModePasteDrawable -> Theme_actionModePasteDrawable
    int Theme_actionModePopupWindowStyle -> Theme_actionModePopupWindowStyle
    int Theme_actionModeSelectAllDrawable -> Theme_actionModeSelectAllDrawable
    int Theme_actionModeShareDrawable -> Theme_actionModeShareDrawable
    int Theme_actionModeSplitBackground -> Theme_actionModeSplitBackground
    int Theme_actionModeStyle -> Theme_actionModeStyle
    int Theme_actionModeWebSearchDrawable -> Theme_actionModeWebSearchDrawable
    int Theme_actionOverflowButtonStyle -> Theme_actionOverflowButtonStyle
    int Theme_actionOverflowMenuStyle -> Theme_actionOverflowMenuStyle
    int Theme_activityChooserViewStyle -> Theme_activityChooserViewStyle
    int Theme_alertDialogButtonGroupStyle -> Theme_alertDialogButtonGroupStyle
    int Theme_alertDialogCenterButtons -> Theme_alertDialogCenterButtons
    int Theme_alertDialogStyle -> Theme_alertDialogStyle
    int Theme_alertDialogTheme -> Theme_alertDialogTheme
    int Theme_android_windowAnimationStyle -> Theme_android_windowAnimationStyle
    int Theme_android_windowIsFloating -> Theme_android_windowIsFloating
    int Theme_autoCompleteTextViewStyle -> Theme_autoCompleteTextViewStyle
    int Theme_borderlessButtonStyle -> Theme_borderlessButtonStyle
    int Theme_buttonBarButtonStyle -> Theme_buttonBarButtonStyle
    int Theme_buttonBarNegativeButtonStyle -> Theme_buttonBarNegativeButtonStyle
    int Theme_buttonBarNeutralButtonStyle -> Theme_buttonBarNeutralButtonStyle
    int Theme_buttonBarPositiveButtonStyle -> Theme_buttonBarPositiveButtonStyle
    int Theme_buttonBarStyle -> Theme_buttonBarStyle
    int Theme_buttonStyle -> Theme_buttonStyle
    int Theme_buttonStyleSmall -> Theme_buttonStyleSmall
    int Theme_checkboxStyle -> Theme_checkboxStyle
    int Theme_checkedTextViewStyle -> Theme_checkedTextViewStyle
    int Theme_colorAccent -> Theme_colorAccent
    int Theme_colorButtonNormal -> Theme_colorButtonNormal
    int Theme_colorControlActivated -> Theme_colorControlActivated
    int Theme_colorControlHighlight -> Theme_colorControlHighlight
    int Theme_colorControlNormal -> Theme_colorControlNormal
    int Theme_colorPrimary -> Theme_colorPrimary
    int Theme_colorPrimaryDark -> Theme_colorPrimaryDark
    int Theme_colorSwitchThumbNormal -> Theme_colorSwitchThumbNormal
    int Theme_dialogPreferredPadding -> Theme_dialogPreferredPadding
    int Theme_dialogTheme -> Theme_dialogTheme
    int Theme_dividerHorizontal -> Theme_dividerHorizontal
    int Theme_dividerVertical -> Theme_dividerVertical
    int Theme_dropDownListViewStyle -> Theme_dropDownListViewStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_editTextBackground -> Theme_editTextBackground
    int Theme_editTextColor -> Theme_editTextColor
    int Theme_editTextStyle -> Theme_editTextStyle
    int Theme_homeAsUpIndicator -> Theme_homeAsUpIndicator
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_listDividerAlertDialog -> Theme_listDividerAlertDialog
    int Theme_listPopupWindowStyle -> Theme_listPopupWindowStyle
    int Theme_listPreferredItemHeight -> Theme_listPreferredItemHeight
    int Theme_listPreferredItemHeightLarge -> Theme_listPreferredItemHeightLarge
    int Theme_listPreferredItemHeightSmall -> Theme_listPreferredItemHeightSmall
    int Theme_listPreferredItemPaddingLeft -> Theme_listPreferredItemPaddingLeft
    int Theme_listPreferredItemPaddingRight -> Theme_listPreferredItemPaddingRight
    int Theme_panelBackground -> Theme_panelBackground
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int Theme_popupWindowStyle -> Theme_popupWindowStyle
    int Theme_radioButtonStyle -> Theme_radioButtonStyle
    int Theme_ratingBarStyle -> Theme_ratingBarStyle
    int Theme_searchViewStyle -> Theme_searchViewStyle
    int Theme_selectableItemBackground -> Theme_selectableItemBackground
    int Theme_selectableItemBackgroundBorderless -> Theme_selectableItemBackgroundBorderless
    int Theme_spinnerDropDownItemStyle -> Theme_spinnerDropDownItemStyle
    int Theme_spinnerStyle -> Theme_spinnerStyle
    int Theme_switchStyle -> Theme_switchStyle
    int Theme_textAppearanceLargePopupMenu -> Theme_textAppearanceLargePopupMenu
    int Theme_textAppearanceListItem -> Theme_textAppearanceListItem
    int Theme_textAppearanceListItemSmall -> Theme_textAppearanceListItemSmall
    int Theme_textAppearanceSearchResultSubtitle -> Theme_textAppearanceSearchResultSubtitle
    int Theme_textAppearanceSearchResultTitle -> Theme_textAppearanceSearchResultTitle
    int Theme_textAppearanceSmallPopupMenu -> Theme_textAppearanceSmallPopupMenu
    int Theme_textColorAlertDialogListItem -> Theme_textColorAlertDialogListItem
    int Theme_textColorSearchUrl -> Theme_textColorSearchUrl
    int Theme_toolbarNavigationButtonStyle -> Theme_toolbarNavigationButtonStyle
    int Theme_toolbarStyle -> Theme_toolbarStyle
    int Theme_windowActionBar -> Theme_windowActionBar
    int Theme_windowActionBarOverlay -> Theme_windowActionBarOverlay
    int Theme_windowActionModeOverlay -> Theme_windowActionModeOverlay
    int Theme_windowFixedHeightMajor -> Theme_windowFixedHeightMajor
    int Theme_windowFixedHeightMinor -> Theme_windowFixedHeightMinor
    int Theme_windowFixedWidthMajor -> Theme_windowFixedWidthMajor
    int Theme_windowFixedWidthMinor -> Theme_windowFixedWidthMinor
    int Theme_windowMinWidthMajor -> Theme_windowMinWidthMajor
    int Theme_windowMinWidthMinor -> Theme_windowMinWidthMinor
    int Theme_windowNoTitle -> Theme_windowNoTitle
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_android_minHeight -> Toolbar_android_minHeight
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int[] View -> View
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
    int View_android_focusable -> View_android_focusable
    int View_android_theme -> View_android_theme
    int View_backgroundTint -> View_backgroundTint
    int View_backgroundTintMode -> View_backgroundTintMode
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int View_theme -> View_theme
android.support.v7.graphics.drawable.DrawableWrapper -> android.support.v7.graphics.drawable.DrawableWrapper:
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    void jumpToCurrentState() -> jumpToCurrentState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    boolean onLevelChange(int) -> onLevelChange
    void setAutoMirrored(boolean) -> setAutoMirrored
    boolean isAutoMirrored() -> isAutoMirrored
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
android.support.v7.internal.VersionUtils -> android.support.v7.internal.VersionUtils:
    boolean isAtLeastL() -> isAtLeastL
android.support.v7.internal.app.AppCompatViewInflater -> android.support.v7.internal.app.AppCompatViewInflater:
    java.lang.Class[] sConstructorSignature -> sConstructorSignature
    java.lang.String LOG_TAG -> LOG_TAG
    java.util.Map sConstructorMap -> sConstructorMap
    java.lang.Object[] mConstructorArgs -> mConstructorArgs
    android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean) -> createView
    android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    android.view.View createView(android.content.Context,java.lang.String,java.lang.String) -> createView
    android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
android.support.v7.internal.app.NavItemSelectedListener -> android.support.v7.internal.app.NavItemSelectedListener:
    android.support.v7.app.ActionBar$OnNavigationListener mListener -> mListener
    void onItemSelected(android.support.v7.internal.widget.AdapterViewCompat,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.support.v7.internal.widget.AdapterViewCompat) -> onNothingSelected
android.support.v7.internal.app.NotificationCompatImpl21 -> android.support.v7.internal.app.NotificationCompatImpl21:
    void addMediaStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,int[],java.lang.Object) -> addMediaStyle
android.support.v7.internal.app.NotificationCompatImplBase -> android.support.v7.internal.app.NotificationCompatImplBase:
    int MAX_MEDIA_BUTTONS_IN_COMPACT -> MAX_MEDIA_BUTTONS_IN_COMPACT
    int MAX_MEDIA_BUTTONS -> MAX_MEDIA_BUTTONS
    void overrideContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,java.util.List,int[],boolean,android.app.PendingIntent) -> overrideContentView
    android.widget.RemoteViews generateContentView(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,java.util.List,int[],boolean,android.app.PendingIntent) -> generateContentView
    void overrideBigContentView(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,java.util.List,boolean,android.app.PendingIntent) -> overrideBigContentView
    android.widget.RemoteViews generateBigContentView(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,java.util.List,boolean,android.app.PendingIntent) -> generateBigContentView
    android.widget.RemoteViews generateMediaActionButton(android.content.Context,android.support.v4.app.NotificationCompatBase$Action) -> generateMediaActionButton
    int getBigLayoutResource(int) -> getBigLayoutResource
    android.widget.RemoteViews applyStandardTemplate(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,int,boolean) -> applyStandardTemplate
android.support.v7.internal.app.ToolbarActionBar -> android.support.v7.internal.app.ToolbarActionBar:
    android.support.v7.internal.widget.DecorToolbar mDecorToolbar -> mDecorToolbar
    boolean mToolbarMenuPrepared -> mToolbarMenuPrepared
    android.view.Window$Callback mWindowCallback -> mWindowCallback
    boolean mMenuCallbackSet -> mMenuCallbackSet
    boolean mLastMenuVisibility -> mLastMenuVisibility
    java.util.ArrayList mMenuVisibilityListeners -> mMenuVisibilityListeners
    android.support.v7.internal.view.menu.ListMenuPresenter mListMenuPresenter -> mListMenuPresenter
    java.lang.Runnable mMenuInvalidator -> mMenuInvalidator
    android.support.v7.widget.Toolbar$OnMenuItemClickListener mMenuClicker -> mMenuClicker
    android.view.Window$Callback getWrappedWindowCallback() -> getWrappedWindowCallback
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,android.support.v7.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setElevation(float) -> setElevation
    float getElevation() -> getElevation
    android.content.Context getThemedContext() -> getThemedContext
    boolean isTitleTruncated() -> isTitleTruncated
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.support.v7.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.support.v7.app.ActionBar$Tab newTab() -> newTab
    void addTab(android.support.v7.app.ActionBar$Tab) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,boolean) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,int) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(android.support.v7.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(android.support.v7.app.ActionBar$Tab) -> selectTab
    android.support.v7.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    android.support.v7.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    boolean openOptionsMenu() -> openOptionsMenu
    boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean collapseActionView() -> collapseActionView
    void populateOptionsMenu() -> populateOptionsMenu
    boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    void addOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    android.view.View getListMenuView(android.view.Menu) -> getListMenuView
    void ensureListMenuPresenter(android.view.Menu) -> ensureListMenuPresenter
    android.view.Menu getMenu() -> getMenu
    android.view.Window$Callback access$000(android.support.v7.internal.app.ToolbarActionBar) -> access$000
    boolean access$200(android.support.v7.internal.app.ToolbarActionBar) -> access$200
    android.support.v7.internal.widget.DecorToolbar access$300(android.support.v7.internal.app.ToolbarActionBar) -> access$300
    boolean access$202(android.support.v7.internal.app.ToolbarActionBar,boolean) -> access$202
    android.view.View access$400(android.support.v7.internal.app.ToolbarActionBar,android.view.Menu) -> access$400
android.support.v7.internal.app.ToolbarActionBar$1 -> android.support.v7.internal.app.ToolbarActionBar$1:
    android.support.v7.internal.app.ToolbarActionBar this$0 -> this$0
    void run() -> run
android.support.v7.internal.app.ToolbarActionBar$2 -> android.support.v7.internal.app.ToolbarActionBar$2:
    android.support.v7.internal.app.ToolbarActionBar this$0 -> this$0
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.app.ToolbarActionBar$ActionMenuPresenterCallback -> android.support.v7.internal.app.ToolbarActionBar$ActionMenuPresenterCallback:
    boolean mClosingActionMenu -> mClosingActionMenu
    android.support.v7.internal.app.ToolbarActionBar this$0 -> this$0
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
android.support.v7.internal.app.ToolbarActionBar$MenuBuilderCallback -> android.support.v7.internal.app.ToolbarActionBar$MenuBuilderCallback:
    android.support.v7.internal.app.ToolbarActionBar this$0 -> this$0
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.internal.app.ToolbarActionBar$PanelMenuPresenterCallback -> android.support.v7.internal.app.ToolbarActionBar$PanelMenuPresenterCallback:
    android.support.v7.internal.app.ToolbarActionBar this$0 -> this$0
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
android.support.v7.internal.app.ToolbarActionBar$ToolbarCallbackWrapper -> android.support.v7.internal.app.ToolbarActionBar$ToolbarCallbackWrapper:
    android.support.v7.internal.app.ToolbarActionBar this$0 -> this$0
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    android.view.View onCreatePanelView(int) -> onCreatePanelView
android.support.v7.internal.app.WindowDecorActionBar -> android.support.v7.internal.app.WindowDecorActionBar:
    java.lang.String TAG -> TAG
    boolean ALLOW_SHOW_HIDE_ANIMATIONS -> ALLOW_SHOW_HIDE_ANIMATIONS
    android.content.Context mContext -> mContext
    android.content.Context mThemedContext -> mThemedContext
    android.app.Activity mActivity -> mActivity
    android.app.Dialog mDialog -> mDialog
    android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout -> mOverlayLayout
    android.support.v7.internal.widget.ActionBarContainer mContainerView -> mContainerView
    android.support.v7.internal.widget.DecorToolbar mDecorToolbar -> mDecorToolbar
    android.support.v7.internal.widget.ActionBarContextView mContextView -> mContextView
    android.support.v7.internal.widget.ActionBarContainer mSplitView -> mSplitView
    android.view.View mContentView -> mContentView
    android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView -> mTabScrollView
    java.util.ArrayList mTabs -> mTabs
    android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab -> mSelectedTab
    int mSavedTabPosition -> mSavedTabPosition
    boolean mDisplayHomeAsUpSet -> mDisplayHomeAsUpSet
    android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl mActionMode -> mActionMode
    android.support.v7.view.ActionMode mDeferredDestroyActionMode -> mDeferredDestroyActionMode
    android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback -> mDeferredModeDestroyCallback
    boolean mLastMenuVisibility -> mLastMenuVisibility
    java.util.ArrayList mMenuVisibilityListeners -> mMenuVisibilityListeners
    int CONTEXT_DISPLAY_NORMAL -> CONTEXT_DISPLAY_NORMAL
    int CONTEXT_DISPLAY_SPLIT -> CONTEXT_DISPLAY_SPLIT
    int INVALID_POSITION -> INVALID_POSITION
    int mContextDisplayMode -> mContextDisplayMode
    boolean mHasEmbeddedTabs -> mHasEmbeddedTabs
    int mCurWindowVisibility -> mCurWindowVisibility
    boolean mContentAnimations -> mContentAnimations
    boolean mHiddenByApp -> mHiddenByApp
    boolean mHiddenBySystem -> mHiddenBySystem
    boolean mShowingForMode -> mShowingForMode
    boolean mNowShowing -> mNowShowing
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim -> mCurrentShowAnim
    boolean mShowHideAnimationEnabled -> mShowHideAnimationEnabled
    boolean mHideOnContentScroll -> mHideOnContentScroll
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    android.support.v4.view.ViewPropertyAnimatorListener mHideListener -> mHideListener
    android.support.v4.view.ViewPropertyAnimatorListener mShowListener -> mShowListener
    android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener -> mUpdateListener
    boolean $assertionsDisabled -> $assertionsDisabled
    void init(android.view.View) -> init
    android.support.v7.internal.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    void setElevation(float) -> setElevation
    float getElevation() -> getElevation
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    void ensureTabsExist() -> ensureTabsExist
    void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    void addOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    void setCustomView(int) -> setCustomView
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    void removeAllTabs() -> removeAllTabs
    void cleanupTabs() -> cleanupTabs
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback) -> startActionMode
    void configureTab(android.support.v7.app.ActionBar$Tab,int) -> configureTab
    void addTab(android.support.v7.app.ActionBar$Tab) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,int) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,boolean) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,int,boolean) -> addTab
    android.support.v7.app.ActionBar$Tab newTab() -> newTab
    void removeTab(android.support.v7.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void selectTab(android.support.v7.app.ActionBar$Tab) -> selectTab
    android.support.v7.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    int getHeight() -> getHeight
    void enableContentAnimations(boolean) -> enableContentAnimations
    void show() -> show
    void showForActionMode() -> showForActionMode
    void showForSystem() -> showForSystem
    void hide() -> hide
    void hideForActionMode() -> hideForActionMode
    void hideForSystem() -> hideForSystem
    void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    int getHideOffset() -> getHideOffset
    void setHideOffset(int) -> setHideOffset
    boolean checkShowingFlags(boolean,boolean,boolean) -> checkShowingFlags
    void updateVisibility(boolean) -> updateVisibility
    void doShow(boolean) -> doShow
    void doHide(boolean) -> doHide
    boolean isShowing() -> isShowing
    void animateToMode(boolean) -> animateToMode
    android.content.Context getThemedContext() -> getThemedContext
    boolean isTitleTruncated() -> isTitleTruncated
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    void onContentScrollStarted() -> onContentScrollStarted
    void onContentScrollStopped() -> onContentScrollStopped
    boolean collapseActionView() -> collapseActionView
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,android.support.v7.app.ActionBar$LayoutParams) -> setCustomView
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.support.v7.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    int getTabCount() -> getTabCount
    void setNavigationMode(int) -> setNavigationMode
    android.support.v7.app.ActionBar$Tab getTabAt(int) -> getTabAt
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasIcon() -> hasIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    boolean hasLogo() -> hasLogo
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    android.support.v7.internal.widget.TintManager getTintManager() -> getTintManager
    boolean access$000(android.support.v7.internal.app.WindowDecorActionBar) -> access$000
    android.view.View access$100(android.support.v7.internal.app.WindowDecorActionBar) -> access$100
    android.support.v7.internal.widget.ActionBarContainer access$200(android.support.v7.internal.app.WindowDecorActionBar) -> access$200
    android.support.v7.internal.widget.ActionBarContainer access$300(android.support.v7.internal.app.WindowDecorActionBar) -> access$300
    int access$400(android.support.v7.internal.app.WindowDecorActionBar) -> access$400
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet access$502(android.support.v7.internal.app.WindowDecorActionBar,android.support.v7.internal.view.ViewPropertyAnimatorCompatSet) -> access$502
    android.support.v7.internal.widget.ActionBarOverlayLayout access$600(android.support.v7.internal.app.WindowDecorActionBar) -> access$600
    boolean access$700(android.support.v7.internal.app.WindowDecorActionBar) -> access$700
    boolean access$800(android.support.v7.internal.app.WindowDecorActionBar) -> access$800
    boolean access$900(boolean,boolean,boolean) -> access$900
    android.support.v7.internal.widget.ActionBarContextView access$1000(android.support.v7.internal.app.WindowDecorActionBar) -> access$1000
    android.support.v7.internal.widget.DecorToolbar access$1100(android.support.v7.internal.app.WindowDecorActionBar) -> access$1100
    android.content.Context access$1200(android.support.v7.internal.app.WindowDecorActionBar) -> access$1200
    android.support.v7.internal.widget.ScrollingTabContainerView access$1300(android.support.v7.internal.app.WindowDecorActionBar) -> access$1300
android.support.v7.internal.app.WindowDecorActionBar$1 -> android.support.v7.internal.app.WindowDecorActionBar$1:
    android.support.v7.internal.app.WindowDecorActionBar this$0 -> this$0
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.internal.app.WindowDecorActionBar$2 -> android.support.v7.internal.app.WindowDecorActionBar$2:
    android.support.v7.internal.app.WindowDecorActionBar this$0 -> this$0
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.internal.app.WindowDecorActionBar$3 -> android.support.v7.internal.app.WindowDecorActionBar$3:
    android.support.v7.internal.app.WindowDecorActionBar this$0 -> this$0
    void onAnimationUpdate(android.view.View) -> onAnimationUpdate
android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl -> android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl:
    android.content.Context mActionModeContext -> mActionModeContext
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> mMenu
    android.support.v7.view.ActionMode$Callback mCallback -> mCallback
    java.lang.ref.WeakReference mCustomView -> mCustomView
    android.support.v7.internal.app.WindowDecorActionBar this$0 -> this$0
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    android.view.Menu getMenu() -> getMenu
    void finish() -> finish
    void invalidate() -> invalidate
    boolean dispatchOnCreate() -> dispatchOnCreate
    void setCustomView(android.view.View) -> setCustomView
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setTitleOptionalHint(boolean) -> setTitleOptionalHint
    boolean isTitleOptional() -> isTitleOptional
    android.view.View getCustomView() -> getCustomView
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.internal.app.WindowDecorActionBar$TabImpl -> android.support.v7.internal.app.WindowDecorActionBar$TabImpl:
    android.support.v7.app.ActionBar$TabListener mCallback -> mCallback
    java.lang.Object mTag -> mTag
    android.graphics.drawable.Drawable mIcon -> mIcon
    java.lang.CharSequence mText -> mText
    java.lang.CharSequence mContentDesc -> mContentDesc
    int mPosition -> mPosition
    android.view.View mCustomView -> mCustomView
    android.support.v7.internal.app.WindowDecorActionBar this$0 -> this$0
    java.lang.Object getTag() -> getTag
    android.support.v7.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    android.support.v7.app.ActionBar$TabListener getCallback() -> getCallback
    android.support.v7.app.ActionBar$Tab setTabListener(android.support.v7.app.ActionBar$TabListener) -> setTabListener
    android.view.View getCustomView() -> getCustomView
    android.support.v7.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    android.support.v7.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.graphics.drawable.Drawable getIcon() -> getIcon
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    java.lang.CharSequence getText() -> getText
    android.support.v7.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.support.v7.app.ActionBar$Tab setIcon(int) -> setIcon
    android.support.v7.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    android.support.v7.app.ActionBar$Tab setText(int) -> setText
    void select() -> select
    android.support.v7.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    android.support.v7.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
android.support.v7.internal.text.AllCapsTransformationMethod -> android.support.v7.internal.text.AllCapsTransformationMethod:
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
android.support.v7.internal.transition.ActionBarTransition -> android.support.v7.internal.transition.ActionBarTransition:
    boolean TRANSITIONS_ENABLED -> TRANSITIONS_ENABLED
    int TRANSITION_DURATION -> TRANSITION_DURATION
    void beginDelayedTransition(android.view.ViewGroup) -> beginDelayedTransition
android.support.v7.internal.view.ActionBarPolicy -> android.support.v7.internal.view.ActionBarPolicy:
    android.content.Context mContext -> mContext
    android.support.v7.internal.view.ActionBarPolicy get(android.content.Context) -> get
    int getMaxActionButtons() -> getMaxActionButtons
    boolean showsOverflowMenuButton() -> showsOverflowMenuButton
    int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    int getTabContainerHeight() -> getTabContainerHeight
    boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    int getStackedTabMaxWidth() -> getStackedTabMaxWidth
android.support.v7.internal.view.ContextThemeWrapper -> android.support.v7.internal.view.ContextThemeWrapper:
    int mThemeResource -> mThemeResource
    android.content.res.Resources$Theme mTheme -> mTheme
    android.view.LayoutInflater mInflater -> mInflater
    void setTheme(int) -> setTheme
    int getThemeResId() -> getThemeResId
    android.content.res.Resources$Theme getTheme() -> getTheme
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    void initializeTheme() -> initializeTheme
android.support.v7.internal.view.StandaloneActionMode -> android.support.v7.internal.view.StandaloneActionMode:
    android.content.Context mContext -> mContext
    android.support.v7.internal.widget.ActionBarContextView mContextView -> mContextView
    android.support.v7.view.ActionMode$Callback mCallback -> mCallback
    java.lang.ref.WeakReference mCustomView -> mCustomView
    boolean mFinished -> mFinished
    boolean mFocusable -> mFocusable
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> mMenu
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setTitleOptionalHint(boolean) -> setTitleOptionalHint
    boolean isTitleOptional() -> isTitleOptional
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    android.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> onMenuModeChange
    boolean isUiFocusable() -> isUiFocusable
android.support.v7.internal.view.SupportActionModeWrapper -> android.support.v7.internal.view.SupportActionModeWrapper:
    android.content.Context mContext -> mContext
    android.support.v7.view.ActionMode mWrappedObject -> mWrappedObject
    java.lang.Object getTag() -> getTag
    void setTag(java.lang.Object) -> setTag
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void invalidate() -> invalidate
    void finish() -> finish
    android.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(int) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(int) -> setSubtitle
    android.view.View getCustomView() -> getCustomView
    void setCustomView(android.view.View) -> setCustomView
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean getTitleOptionalHint() -> getTitleOptionalHint
    void setTitleOptionalHint(boolean) -> setTitleOptionalHint
    boolean isTitleOptional() -> isTitleOptional
android.support.v7.internal.view.SupportActionModeWrapper$CallbackWrapper -> android.support.v7.internal.view.SupportActionModeWrapper$CallbackWrapper:
    android.view.ActionMode$Callback mWrappedCallback -> mWrappedCallback
    android.content.Context mContext -> mContext
    java.util.ArrayList mActionModes -> mActionModes
    android.support.v4.util.SimpleArrayMap mMenus -> mMenus
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> onDestroyActionMode
    android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    android.view.ActionMode getActionModeWrapper(android.support.v7.view.ActionMode) -> getActionModeWrapper
android.support.v7.internal.view.SupportMenuInflater -> android.support.v7.internal.view.SupportMenuInflater:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String XML_MENU -> XML_MENU
    java.lang.String XML_GROUP -> XML_GROUP
    java.lang.String XML_ITEM -> XML_ITEM
    int NO_ID -> NO_ID
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> ACTION_VIEW_CONSTRUCTOR_SIGNATURE
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE
    java.lang.Object[] mActionViewConstructorArguments -> mActionViewConstructorArguments
    java.lang.Object[] mActionProviderConstructorArguments -> mActionProviderConstructorArguments
    android.content.Context mContext -> mContext
    java.lang.Object mRealOwner -> mRealOwner
    void inflate(int,android.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
    java.lang.Object getRealOwner() -> getRealOwner
    java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    android.content.Context access$100(android.support.v7.internal.view.SupportMenuInflater) -> access$100
    java.lang.Class[] access$200() -> access$200
    java.lang.Object[] access$300(android.support.v7.internal.view.SupportMenuInflater) -> access$300
    java.lang.Object access$400(android.support.v7.internal.view.SupportMenuInflater) -> access$400
    java.lang.Class[] access$500() -> access$500
    java.lang.Object[] access$600(android.support.v7.internal.view.SupportMenuInflater) -> access$600
android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    java.lang.Class[] PARAM_TYPES -> PARAM_TYPES
    java.lang.Object mRealOwner -> mRealOwner
    java.lang.reflect.Method mMethod -> mMethod
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.SupportMenuInflater$MenuState -> android.support.v7.internal.view.SupportMenuInflater$MenuState:
    android.view.Menu menu -> menu
    int groupId -> groupId
    int groupCategory -> groupCategory
    int groupOrder -> groupOrder
    int groupCheckable -> groupCheckable
    boolean groupVisible -> groupVisible
    boolean groupEnabled -> groupEnabled
    boolean itemAdded -> itemAdded
    int itemId -> itemId
    int itemCategoryOrder -> itemCategoryOrder
    java.lang.CharSequence itemTitle -> itemTitle
    java.lang.CharSequence itemTitleCondensed -> itemTitleCondensed
    int itemIconResId -> itemIconResId
    char itemAlphabeticShortcut -> itemAlphabeticShortcut
    char itemNumericShortcut -> itemNumericShortcut
    int itemCheckable -> itemCheckable
    boolean itemChecked -> itemChecked
    boolean itemVisible -> itemVisible
    boolean itemEnabled -> itemEnabled
    int itemShowAsAction -> itemShowAsAction
    int itemActionViewLayout -> itemActionViewLayout
    java.lang.String itemActionViewClassName -> itemActionViewClassName
    java.lang.String itemActionProviderClassName -> itemActionProviderClassName
    java.lang.String itemListenerMethodName -> itemListenerMethodName
    android.support.v4.view.ActionProvider itemActionProvider -> itemActionProvider
    int defaultGroupId -> defaultGroupId
    int defaultItemId -> defaultItemId
    int defaultItemCategory -> defaultItemCategory
    int defaultItemOrder -> defaultItemOrder
    int defaultItemCheckable -> defaultItemCheckable
    boolean defaultItemChecked -> defaultItemChecked
    boolean defaultItemVisible -> defaultItemVisible
    boolean defaultItemEnabled -> defaultItemEnabled
    android.support.v7.internal.view.SupportMenuInflater this$0 -> this$0
    void resetGroup() -> resetGroup
    void readGroup(android.util.AttributeSet) -> readGroup
    void readItem(android.util.AttributeSet) -> readItem
    char getShortcut(java.lang.String) -> getShortcut
    void setItem(android.view.MenuItem) -> setItem
    void addItem() -> addItem
    android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    boolean hasAddedItem() -> hasAddedItem
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    android.support.v4.view.ActionProvider access$000(android.support.v7.internal.view.SupportMenuInflater$MenuState) -> access$000
android.support.v7.internal.view.ViewPropertyAnimatorCompatSet -> android.support.v7.internal.view.ViewPropertyAnimatorCompatSet:
    java.util.ArrayList mAnimators -> mAnimators
    long mDuration -> mDuration
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    android.support.v4.view.ViewPropertyAnimatorListener mListener -> mListener
    boolean mIsStarted -> mIsStarted
    android.support.v4.view.ViewPropertyAnimatorListenerAdapter mProxyListener -> mProxyListener
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat) -> play
    void start() -> start
    void onAnimationsEnded() -> onAnimationsEnded
    void cancel() -> cancel
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    android.support.v4.view.ViewPropertyAnimatorListener access$000(android.support.v7.internal.view.ViewPropertyAnimatorCompatSet) -> access$000
    void access$100(android.support.v7.internal.view.ViewPropertyAnimatorCompatSet) -> access$100
    java.util.ArrayList access$200(android.support.v7.internal.view.ViewPropertyAnimatorCompatSet) -> access$200
android.support.v7.internal.view.ViewPropertyAnimatorCompatSet$1 -> android.support.v7.internal.view.ViewPropertyAnimatorCompatSet$1:
    boolean mProxyStarted -> mProxyStarted
    int mProxyEndCount -> mProxyEndCount
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onEnd() -> onEnd
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.internal.view.WindowCallbackWrapper -> android.support.v7.internal.view.WindowCallbackWrapper:
    android.view.Window$Callback mWrapped -> mWrapped
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    void onContentChanged() -> onContentChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onSearchRequested() -> onSearchRequested
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
android.support.v7.internal.view.menu.ActionMenuItem -> android.support.v7.internal.view.menu.ActionMenuItem:
    int mId -> mId
    int mGroup -> mGroup
    int mCategoryOrder -> mCategoryOrder
    int mOrdering -> mOrdering
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    android.content.Intent mIntent -> mIntent
    char mShortcutNumericChar -> mShortcutNumericChar
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    int mIconResId -> mIconResId
    android.content.Context mContext -> mContext
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    int NO_ICON -> NO_ICON
    int mFlags -> mFlags
    int CHECKABLE -> CHECKABLE
    int CHECKED -> CHECKED
    int EXCLUSIVE -> EXCLUSIVE
    int HIDDEN -> HIDDEN
    int ENABLED -> ENABLED
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    android.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    android.support.v7.internal.view.menu.ActionMenuItem setExclusiveCheckable(boolean) -> setExclusiveCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.view.MenuItem setVisible(boolean) -> setVisible
    boolean invoke() -> invoke
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> setActionView
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
android.support.v7.internal.view.menu.ActionMenuItemView -> android.support.v7.internal.view.menu.ActionMenuItemView:
    java.lang.String TAG -> TAG
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> mItemData
    java.lang.CharSequence mTitle -> mTitle
    android.graphics.drawable.Drawable mIcon -> mIcon
    android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> mItemInvoker
    android.support.v7.widget.ListPopupWindow$ForwardingListener mForwardingListener -> mForwardingListener
    android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback mPopupCallback -> mPopupCallback
    boolean mAllowTextWithIcon -> mAllowTextWithIcon
    boolean mExpandedFormat -> mExpandedFormat
    int mMinWidth -> mMinWidth
    int mSavedPaddingLeft -> mSavedPaddingLeft
    int MAX_ICON_SIZE -> MAX_ICON_SIZE
    int mMaxIconSize -> mMaxIconSize
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setPadding(int,int,int,int) -> setPadding
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> initialize
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onClick(android.view.View) -> onClick
    void setItemInvoker(android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    void setPopupCallback(android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> updateTextButtonVisibility
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> hasText
    void setShortcut(boolean,char) -> setShortcut
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean showsIcon() -> showsIcon
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
    android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback access$000(android.support.v7.internal.view.menu.ActionMenuItemView) -> access$000
    android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker access$100(android.support.v7.internal.view.menu.ActionMenuItemView) -> access$100
    android.support.v7.internal.view.menu.MenuItemImpl access$200(android.support.v7.internal.view.menu.ActionMenuItemView) -> access$200
android.support.v7.internal.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> android.support.v7.internal.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    android.support.v7.internal.view.menu.ActionMenuItemView this$0 -> this$0
    android.support.v7.widget.ListPopupWindow getPopup() -> getPopup
    boolean onForwardingStarted() -> onForwardingStarted
android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback -> android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback:
    android.support.v7.widget.ListPopupWindow getPopup() -> getPopup
android.support.v7.internal.view.menu.BaseMenuPresenter -> android.support.v7.internal.view.menu.BaseMenuPresenter:
    android.content.Context mSystemContext -> mSystemContext
    android.content.Context mContext -> mContext
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> mMenu
    android.view.LayoutInflater mSystemInflater -> mSystemInflater
    android.view.LayoutInflater mInflater -> mInflater
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> mCallback
    int mMenuLayoutRes -> mMenuLayoutRes
    int mItemLayoutRes -> mItemLayoutRes
    android.support.v7.internal.view.menu.MenuView mMenuView -> mMenuView
    int mId -> mId
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> initForMenu
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void addItemView(android.view.View,int) -> addItemView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> setCallback
    android.support.v7.internal.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    android.support.v7.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> shouldIncludeItem
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    void setId(int) -> setId
android.support.v7.internal.view.menu.BaseMenuWrapper -> android.support.v7.internal.view.menu.BaseMenuWrapper:
    android.content.Context mContext -> mContext
    java.util.Map mMenuItems -> mMenuItems
    java.util.Map mSubMenus -> mSubMenus
    android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    void internalClear() -> internalClear
    void internalRemoveGroup(int) -> internalRemoveGroup
    void internalRemoveItem(int) -> internalRemoveItem
android.support.v7.internal.view.menu.BaseWrapper -> android.support.v7.internal.view.menu.BaseWrapper:
    java.lang.Object mWrappedObject -> mWrappedObject
    java.lang.Object getWrappedObject() -> getWrappedObject
android.support.v7.internal.view.menu.ExpandedMenuView -> android.support.v7.internal.view.menu.ExpandedMenuView:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> mMenu
    int mAnimations -> mAnimations
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> initialize
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> invokeItem
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int getWindowAnimations() -> getWindowAnimations
android.support.v7.internal.view.menu.ListMenuItemView -> android.support.v7.internal.view.menu.ListMenuItemView:
    java.lang.String TAG -> TAG
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> mItemData
    android.widget.ImageView mIconView -> mIconView
    android.widget.RadioButton mRadioButton -> mRadioButton
    android.widget.TextView mTitleView -> mTitleView
    android.widget.CheckBox mCheckBox -> mCheckBox
    android.widget.TextView mShortcutView -> mShortcutView
    android.graphics.drawable.Drawable mBackground -> mBackground
    int mTextAppearance -> mTextAppearance
    android.content.Context mTextAppearanceContext -> mTextAppearanceContext
    boolean mPreserveIconSpacing -> mPreserveIconSpacing
    int mMenuType -> mMenuType
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mInflater -> mInflater
    boolean mForceShowIcon -> mForceShowIcon
    void onFinishInflate() -> onFinishInflate
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> initialize
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> insertIconView
    void insertRadioButton() -> insertRadioButton
    void insertCheckBox() -> insertCheckBox
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
    android.view.LayoutInflater getInflater() -> getInflater
android.support.v7.internal.view.menu.ListMenuPresenter -> android.support.v7.internal.view.menu.ListMenuPresenter:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mInflater -> mInflater
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> mMenu
    android.support.v7.internal.view.menu.ExpandedMenuView mMenuView -> mMenuView
    int mItemIndexOffset -> mItemIndexOffset
    int mThemeRes -> mThemeRes
    int mItemLayoutRes -> mItemLayoutRes
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> mCallback
    android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> mAdapter
    int mId -> mId
    java.lang.String VIEWS_TAG -> VIEWS_TAG
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> initForMenu
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    android.widget.ListAdapter getAdapter() -> getAdapter
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    int getItemIndexOffset() -> getItemIndexOffset
    void setItemIndexOffset(int) -> setItemIndexOffset
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    void saveHierarchyState(android.os.Bundle) -> saveHierarchyState
    void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    void setId(int) -> setId
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    int access$000(android.support.v7.internal.view.menu.ListMenuPresenter) -> access$000
android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter -> android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter:
    int mExpandedIndex -> mExpandedIndex
    android.support.v7.internal.view.menu.ListMenuPresenter this$0 -> this$0
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> findExpandedIndex
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
android.support.v7.internal.view.menu.MenuBuilder -> android.support.v7.internal.view.menu.MenuBuilder:
    java.lang.String TAG -> TAG
    java.lang.String PRESENTER_KEY -> PRESENTER_KEY
    java.lang.String ACTION_VIEW_STATES_KEY -> ACTION_VIEW_STATES_KEY
    java.lang.String EXPANDED_ACTION_VIEW_ID -> EXPANDED_ACTION_VIEW_ID
    int[] sCategoryToOrder -> sCategoryToOrder
    android.content.Context mContext -> mContext
    android.content.res.Resources mResources -> mResources
    boolean mQwertyMode -> mQwertyMode
    boolean mShortcutsVisible -> mShortcutsVisible
    android.support.v7.internal.view.menu.MenuBuilder$Callback mCallback -> mCallback
    java.util.ArrayList mItems -> mItems
    java.util.ArrayList mVisibleItems -> mVisibleItems
    boolean mIsVisibleItemsStale -> mIsVisibleItemsStale
    java.util.ArrayList mActionItems -> mActionItems
    java.util.ArrayList mNonActionItems -> mNonActionItems
    boolean mIsActionItemsStale -> mIsActionItemsStale
    int mDefaultShowAsAction -> mDefaultShowAsAction
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> mCurrentMenuInfo
    java.lang.CharSequence mHeaderTitle -> mHeaderTitle
    android.graphics.drawable.Drawable mHeaderIcon -> mHeaderIcon
    android.view.View mHeaderView -> mHeaderView
    android.util.SparseArray mFrozenViewStates -> mFrozenViewStates
    boolean mPreventDispatchingItemsChanged -> mPreventDispatchingItemsChanged
    boolean mItemsChangedWhileDispatchPrevented -> mItemsChangedWhileDispatchPrevented
    boolean mOptionalIconsVisible -> mOptionalIconsVisible
    boolean mIsClosing -> mIsClosing
    java.util.ArrayList mTempShortcutItemList -> mTempShortcutItemList
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> mPresenters
    android.support.v7.internal.view.menu.MenuItemImpl mExpandedItem -> mExpandedItem
    boolean mOverrideVisibleItems -> mOverrideVisibleItems
    android.support.v7.internal.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    void addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> addMenuPresenter
    void addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    void removeMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> removeMenuPresenter
    void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    boolean dispatchSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder,android.support.v7.internal.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    void savePresenterStates(android.os.Bundle) -> savePresenterStates
    void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> setCallback
    android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    android.support.v7.internal.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> removeItemAtInt
    void removeItemAt(int) -> removeItemAt
    void clearAll() -> clearAll
    void clear() -> clear
    void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> findItemIndex
    int findGroupIndex(int) -> findGroupIndex
    int findGroupIndex(int,int) -> findGroupIndex
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> getOrdering
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    boolean isShortcutsVisible() -> isShortcutsVisible
    android.content.res.Resources getResources() -> getResources
    android.content.Context getContext() -> getContext
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    void changeMenuMode() -> changeMenuMode
    int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    android.support.v7.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    boolean performItemAction(android.view.MenuItem,android.support.v7.internal.view.menu.MenuPresenter,int) -> performItemAction
    void close(boolean) -> close
    void close() -> close
    void onItemsChanged(boolean) -> onItemsChanged
    void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
    void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    void onItemVisibleChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> onItemVisibleChanged
    void onItemActionRequestChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    java.util.ArrayList getVisibleItems() -> getVisibleItems
    void flagActionItems() -> flagActionItems
    java.util.ArrayList getActionItems() -> getActionItems
    java.util.ArrayList getNonActionItems() -> getNonActionItems
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    android.support.v7.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    android.support.v7.internal.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    android.support.v7.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    android.support.v7.internal.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    android.support.v7.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    android.view.View getHeaderView() -> getHeaderView
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setCurrentMenuInfo
    void setOptionalIconsVisible(boolean) -> setOptionalIconsVisible
    boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    android.support.v7.internal.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
android.support.v7.internal.view.menu.MenuBuilder$Callback -> android.support.v7.internal.view.menu.MenuBuilder$Callback:
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker -> android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker:
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> invokeItem
android.support.v7.internal.view.menu.MenuDialogHelper -> android.support.v7.internal.view.menu.MenuDialogHelper:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> mMenu
    android.support.v7.app.AlertDialog mDialog -> mDialog
    android.support.v7.internal.view.menu.ListMenuPresenter mPresenter -> mPresenter
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> mPresenterCallback
    void show(android.os.IBinder) -> show
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    void setPresenterCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    void dismiss() -> dismiss
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.internal.view.menu.MenuItemImpl -> android.support.v7.internal.view.menu.MenuItemImpl:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_MASK -> SHOW_AS_ACTION_MASK
    int mId -> mId
    int mGroup -> mGroup
    int mCategoryOrder -> mCategoryOrder
    int mOrdering -> mOrdering
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    android.content.Intent mIntent -> mIntent
    char mShortcutNumericChar -> mShortcutNumericChar
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    int mIconResId -> mIconResId
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> mMenu
    android.support.v7.internal.view.menu.SubMenuBuilder mSubMenu -> mSubMenu
    java.lang.Runnable mItemCallback -> mItemCallback
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    int mFlags -> mFlags
    int CHECKABLE -> CHECKABLE
    int CHECKED -> CHECKED
    int EXCLUSIVE -> EXCLUSIVE
    int HIDDEN -> HIDDEN
    int ENABLED -> ENABLED
    int IS_ACTION -> IS_ACTION
    int mShowAsAction -> mShowAsAction
    android.view.View mActionView -> mActionView
    android.support.v4.view.ActionProvider mActionProvider -> mActionProvider
    android.support.v4.view.MenuItemCompat$OnActionExpandListener mOnActionExpandListener -> mOnActionExpandListener
    boolean mIsActionViewExpanded -> mIsActionViewExpanded
    int NO_ICON -> NO_ICON
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> mMenuInfo
    java.lang.String sPrependShortcutLabel -> sPrependShortcutLabel
    java.lang.String sEnterShortcutLabel -> sEnterShortcutLabel
    java.lang.String sDeleteShortcutLabel -> sDeleteShortcutLabel
    java.lang.String sSpaceShortcutLabel -> sSpaceShortcutLabel
    boolean invoke() -> invoke
    boolean isEnabled() -> isEnabled
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> getOrdering
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    java.lang.Runnable getCallback() -> getCallback
    android.view.MenuItem setCallback(java.lang.Runnable) -> setCallback
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> getShortcut
    java.lang.String getShortcutLabel() -> getShortcutLabel
    boolean shouldShowShortcut() -> shouldShowShortcut
    android.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder) -> setSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(android.support.v7.internal.view.menu.MenuView$ItemView) -> getTitleForItemView
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    boolean isExclusiveCheckable() -> isExclusiveCheckable
    boolean isChecked() -> isChecked
    android.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> setCheckedInt
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> setVisibleInt
    android.view.MenuItem setVisible(boolean) -> setVisible
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> actionFormatChanged
    boolean shouldShowIcon() -> shouldShowIcon
    boolean isActionButton() -> isActionButton
    boolean requestsActionButton() -> requestsActionButton
    boolean requiresActionButton() -> requiresActionButton
    void setIsActionButton(boolean) -> setIsActionButton
    boolean showsTextAsAction() -> showsTextAsAction
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
    boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    void setActionViewExpanded(boolean) -> setActionViewExpanded
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuItemImpl) -> access$000
android.support.v7.internal.view.menu.MenuItemImpl$1 -> android.support.v7.internal.view.menu.MenuItemImpl$1:
    android.support.v7.internal.view.menu.MenuItemImpl this$0 -> this$0
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.internal.view.menu.MenuItemWrapperICS -> android.support.v7.internal.view.menu.MenuItemWrapperICS:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> mSetExclusiveCheckableMethod
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    android.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    android.view.SubMenu getSubMenu() -> getSubMenu
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> createActionProviderWrapper
android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    android.view.ActionProvider mInner -> mInner
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> this$0
    android.view.View onCreateActionView() -> onCreateActionView
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
android.support.v7.internal.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> android.support.v7.internal.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    android.view.CollapsibleActionView mWrappedView -> mWrappedView
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View getWrappedView() -> getWrappedView
android.support.v7.internal.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> android.support.v7.internal.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v7.internal.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> android.support.v7.internal.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> this$0
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.menu.MenuItemWrapperJB -> android.support.v7.internal.view.menu.MenuItemWrapperJB:
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> createActionProviderWrapper
android.support.v7.internal.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> android.support.v7.internal.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB:
    android.support.v4.view.ActionProvider$VisibilityListener mListener -> mListener
    android.support.v7.internal.view.menu.MenuItemWrapperJB this$0 -> this$0
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.internal.view.menu.MenuPopupHelper -> android.support.v7.internal.view.menu.MenuPopupHelper:
    java.lang.String TAG -> TAG
    int ITEM_LAYOUT -> ITEM_LAYOUT
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mInflater -> mInflater
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> mMenu
    android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> mAdapter
    boolean mOverflowOnly -> mOverflowOnly
    int mPopupMaxWidth -> mPopupMaxWidth
    int mPopupStyleAttr -> mPopupStyleAttr
    int mPopupStyleRes -> mPopupStyleRes
    android.view.View mAnchorView -> mAnchorView
    android.support.v7.widget.ListPopupWindow mPopup -> mPopup
    android.view.ViewTreeObserver mTreeObserver -> mTreeObserver
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> mPresenterCallback
    boolean mForceShowIcon -> mForceShowIcon
    android.view.ViewGroup mMeasureParent -> mMeasureParent
    boolean mHasContentWidth -> mHasContentWidth
    int mContentWidth -> mContentWidth
    int mDropDownGravity -> mDropDownGravity
    void setAnchorView(android.view.View) -> setAnchorView
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setGravity(int) -> setGravity
    void show() -> show
    android.support.v7.widget.ListPopupWindow getPopup() -> getPopup
    boolean tryShow() -> tryShow
    void dismiss() -> dismiss
    void onDismiss() -> onDismiss
    boolean isShowing() -> isShowing
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth() -> measureContentWidth
    void onGlobalLayout() -> onGlobalLayout
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> initForMenu
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v7.internal.view.menu.MenuPopupHelper) -> access$100
    android.view.LayoutInflater access$200(android.support.v7.internal.view.menu.MenuPopupHelper) -> access$200
    android.support.v7.internal.view.menu.MenuBuilder access$300(android.support.v7.internal.view.menu.MenuPopupHelper) -> access$300
android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter -> android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter:
    android.support.v7.internal.view.menu.MenuBuilder mAdapterMenu -> mAdapterMenu
    int mExpandedIndex -> mExpandedIndex
    android.support.v7.internal.view.menu.MenuPopupHelper this$0 -> this$0
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> findExpandedIndex
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter) -> access$000
android.support.v7.internal.view.menu.MenuPresenter -> android.support.v7.internal.view.menu.MenuPresenter:
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> initForMenu
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
android.support.v7.internal.view.menu.MenuPresenter$Callback -> android.support.v7.internal.view.menu.MenuPresenter$Callback:
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
android.support.v7.internal.view.menu.MenuView -> android.support.v7.internal.view.menu.MenuView:
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> initialize
    int getWindowAnimations() -> getWindowAnimations
android.support.v7.internal.view.menu.MenuView$ItemView -> android.support.v7.internal.view.menu.MenuView$ItemView:
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> initialize
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setTitle(java.lang.CharSequence) -> setTitle
    void setEnabled(boolean) -> setEnabled
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
android.support.v7.internal.view.menu.MenuWrapperFactory -> android.support.v7.internal.view.menu.MenuWrapperFactory:
    android.view.Menu wrapSupportMenu(android.content.Context,android.support.v4.internal.view.SupportMenu) -> wrapSupportMenu
    android.view.MenuItem wrapSupportMenuItem(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> wrapSupportMenuItem
    android.view.SubMenu wrapSupportSubMenu(android.content.Context,android.support.v4.internal.view.SupportSubMenu) -> wrapSupportSubMenu
android.support.v7.internal.view.menu.MenuWrapperICS -> android.support.v7.internal.view.menu.MenuWrapperICS:
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
android.support.v7.internal.view.menu.SubMenuBuilder -> android.support.v7.internal.view.menu.SubMenuBuilder:
    android.support.v7.internal.view.menu.MenuBuilder mParentMenu -> mParentMenu
    android.support.v7.internal.view.menu.MenuItemImpl mItem -> mItem
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    boolean isShortcutsVisible() -> isShortcutsVisible
    android.view.Menu getParentMenu() -> getParentMenu
    android.view.MenuItem getItem() -> getItem
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> setCallback
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
android.support.v7.internal.view.menu.SubMenuWrapperICS -> android.support.v7.internal.view.menu.SubMenuWrapperICS:
    android.support.v4.internal.view.SupportSubMenu getWrappedObject() -> getWrappedObject
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem getItem() -> getItem
    java.lang.Object getWrappedObject() -> getWrappedObject
android.support.v7.internal.widget.AbsActionBarView -> android.support.v7.internal.widget.AbsActionBarView:
    android.view.animation.Interpolator sAlphaInterpolator -> sAlphaInterpolator
    int FADE_DURATION -> FADE_DURATION
    android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.content.Context mPopupContext -> mPopupContext
    android.support.v7.widget.ActionMenuView mMenuView -> mMenuView
    android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter -> mActionMenuPresenter
    android.view.ViewGroup mSplitView -> mSplitView
    boolean mSplitActionBar -> mSplitActionBar
    boolean mSplitWhenNarrow -> mSplitWhenNarrow
    int mContentHeight -> mContentHeight
    android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim -> mVisibilityAnim
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitToolbar(boolean) -> setSplitToolbar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(android.view.ViewGroup) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void animateToVisibility(int) -> animateToVisibility
    boolean showOverflowMenu() -> showOverflowMenu
    void postShowOverflowMenu() -> postShowOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean isOverflowReserved() -> isOverflowReserved
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    void dismissPopupMenus() -> dismissPopupMenus
    int measureChildView(android.view.View,int,int,int) -> measureChildView
    int next(int,int,boolean) -> next
    int positionChild(android.view.View,int,int,int,boolean) -> positionChild
android.support.v7.internal.widget.AbsActionBarView$1 -> android.support.v7.internal.widget.AbsActionBarView$1:
    android.support.v7.internal.widget.AbsActionBarView this$0 -> this$0
    void run() -> run
android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener -> android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener:
    boolean mCanceled -> mCanceled
    int mFinalVisibility -> mFinalVisibility
    android.support.v7.internal.widget.AbsActionBarView this$0 -> this$0
    android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v7.internal.widget.AbsSpinnerCompat -> android.support.v7.internal.widget.AbsSpinnerCompat:
    android.widget.SpinnerAdapter mAdapter -> mAdapter
    int mHeightMeasureSpec -> mHeightMeasureSpec
    int mWidthMeasureSpec -> mWidthMeasureSpec
    int mSelectionLeftPadding -> mSelectionLeftPadding
    int mSelectionTopPadding -> mSelectionTopPadding
    int mSelectionRightPadding -> mSelectionRightPadding
    int mSelectionBottomPadding -> mSelectionBottomPadding
    android.graphics.Rect mSpinnerPadding -> mSpinnerPadding
    android.support.v7.internal.widget.AbsSpinnerCompat$RecycleBin mRecycler -> mRecycler
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.graphics.Rect mTouchFrame -> mTouchFrame
    void initAbsSpinner() -> initAbsSpinner
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void resetList() -> resetList
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> getChildHeight
    int getChildWidth(android.view.View) -> getChildWidth
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> recycleAllViews
    void setSelection(int,boolean) -> setSelection
    void setSelection(int) -> setSelection
    void setSelectionInt(int,boolean) -> setSelectionInt
    void layout(int,boolean) -> layout
    android.view.View getSelectedView() -> getSelectedView
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> getAdapter
    int getCount() -> getCount
    int pointToPosition(int,int) -> pointToPosition
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$000(android.support.v7.internal.widget.AbsSpinnerCompat,android.view.View,boolean) -> access$000
android.support.v7.internal.widget.AbsSpinnerCompat$RecycleBin -> android.support.v7.internal.widget.AbsSpinnerCompat$RecycleBin:
    android.util.SparseArray mScrapHeap -> mScrapHeap
    android.support.v7.internal.widget.AbsSpinnerCompat this$0 -> this$0
    void put(int,android.view.View) -> put
    android.view.View get(int) -> get
    void clear() -> clear
android.support.v7.internal.widget.AbsSpinnerCompat$SavedState -> android.support.v7.internal.widget.AbsSpinnerCompat$SavedState:
    long selectedId -> selectedId
    int position -> position
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v7.internal.widget.AbsSpinnerCompat$SavedState$1 -> android.support.v7.internal.widget.AbsSpinnerCompat$SavedState$1:
    android.support.v7.internal.widget.AbsSpinnerCompat$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.internal.widget.AbsSpinnerCompat$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.ActionBarBackgroundDrawable -> android.support.v7.internal.widget.ActionBarBackgroundDrawable:
    android.support.v7.internal.widget.ActionBarContainer mContainer -> mContainer
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
android.support.v7.internal.widget.ActionBarBackgroundDrawableV21 -> android.support.v7.internal.widget.ActionBarBackgroundDrawableV21:
    void getOutline(android.graphics.Outline) -> getOutline
android.support.v7.internal.widget.ActionBarContainer -> android.support.v7.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> mIsTransitioning
    android.view.View mTabContainer -> mTabContainer
    android.view.View mActionBarView -> mActionBarView
    android.view.View mContextView -> mContextView
    android.graphics.drawable.Drawable mBackground -> mBackground
    android.graphics.drawable.Drawable mStackedBackground -> mStackedBackground
    android.graphics.drawable.Drawable mSplitBackground -> mSplitBackground
    boolean mIsSplit -> mIsSplit
    boolean mIsStacked -> mIsStacked
    int mHeight -> mHeight
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setVisibility(int) -> setVisibility
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    android.support.v7.view.ActionMode startActionModeForChild(android.view.View,android.support.v7.view.ActionMode$Callback) -> startActionModeForChild
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    boolean isCollapsed(android.view.View) -> isCollapsed
    int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v7.internal.widget.ActionBarContextView -> android.support.v7.internal.widget.ActionBarContextView:
    java.lang.String TAG -> TAG
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    android.view.View mClose -> mClose
    android.view.View mCustomView -> mCustomView
    android.widget.LinearLayout mTitleLayout -> mTitleLayout
    android.widget.TextView mTitleView -> mTitleView
    android.widget.TextView mSubtitleView -> mSubtitleView
    int mTitleStyleRes -> mTitleStyleRes
    int mSubtitleStyleRes -> mSubtitleStyleRes
    android.graphics.drawable.Drawable mSplitBackground -> mSplitBackground
    boolean mTitleOptional -> mTitleOptional
    int mCloseItemLayout -> mCloseItemLayout
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentAnimation -> mCurrentAnimation
    boolean mAnimateInOnLayout -> mAnimateInOnLayout
    int mAnimationMode -> mAnimationMode
    int ANIMATE_IDLE -> ANIMATE_IDLE
    int ANIMATE_IN -> ANIMATE_IN
    int ANIMATE_OUT -> ANIMATE_OUT
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitToolbar(boolean) -> setSplitToolbar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> initTitle
    void initForMode(android.support.v7.view.ActionMode) -> initForMode
    void closeMode() -> closeMode
    void finishAnimation() -> finishAnimation
    void killMode() -> killMode
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet makeInAnimation() -> makeInAnimation
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet makeOutAnimation() -> makeOutAnimation
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void setTitleOptional(boolean) -> setTitleOptional
    boolean isTitleOptional() -> isTitleOptional
    void dismissPopupMenus() -> dismissPopupMenus
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    boolean isOverflowReserved() -> isOverflowReserved
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    void postShowOverflowMenu() -> postShowOverflowMenu
    void animateToVisibility(int) -> animateToVisibility
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setSplitView(android.view.ViewGroup) -> setSplitView
    int getContentHeight() -> getContentHeight
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
android.support.v7.internal.widget.ActionBarContextView$1 -> android.support.v7.internal.widget.ActionBarContextView$1:
    android.support.v7.view.ActionMode val$mode -> val$mode
    android.support.v7.internal.widget.ActionBarContextView this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ActionBarOverlayLayout -> android.support.v7.internal.widget.ActionBarOverlayLayout:
    java.lang.String TAG -> TAG
    int mActionBarHeight -> mActionBarHeight
    int mWindowVisibility -> mWindowVisibility
    android.support.v7.internal.widget.ContentFrameLayout mContent -> mContent
    android.support.v7.internal.widget.ActionBarContainer mActionBarBottom -> mActionBarBottom
    android.support.v7.internal.widget.ActionBarContainer mActionBarTop -> mActionBarTop
    android.support.v7.internal.widget.DecorToolbar mDecorToolbar -> mDecorToolbar
    android.graphics.drawable.Drawable mWindowContentOverlay -> mWindowContentOverlay
    boolean mIgnoreWindowContentOverlay -> mIgnoreWindowContentOverlay
    boolean mOverlayMode -> mOverlayMode
    boolean mHasNonEmbeddedTabs -> mHasNonEmbeddedTabs
    boolean mHideOnContentScroll -> mHideOnContentScroll
    boolean mAnimatingForFling -> mAnimatingForFling
    int mHideOnContentScrollReference -> mHideOnContentScrollReference
    int mLastSystemUiVisibility -> mLastSystemUiVisibility
    android.graphics.Rect mBaseContentInsets -> mBaseContentInsets
    android.graphics.Rect mLastBaseContentInsets -> mLastBaseContentInsets
    android.graphics.Rect mContentInsets -> mContentInsets
    android.graphics.Rect mBaseInnerInsets -> mBaseInnerInsets
    android.graphics.Rect mInnerInsets -> mInnerInsets
    android.graphics.Rect mLastInnerInsets -> mLastInnerInsets
    android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback -> mActionBarVisibilityCallback
    int ACTION_BAR_ANIMATE_DELAY -> ACTION_BAR_ANIMATE_DELAY
    android.support.v4.widget.ScrollerCompat mFlingEstimator -> mFlingEstimator
    android.support.v4.view.ViewPropertyAnimatorCompat mCurrentActionBarTopAnimator -> mCurrentActionBarTopAnimator
    android.support.v4.view.ViewPropertyAnimatorCompat mCurrentActionBarBottomAnimator -> mCurrentActionBarBottomAnimator
    android.support.v4.view.ViewPropertyAnimatorListener mTopAnimatorListener -> mTopAnimatorListener
    android.support.v4.view.ViewPropertyAnimatorListener mBottomAnimatorListener -> mBottomAnimatorListener
    java.lang.Runnable mRemoveActionBarHideOffset -> mRemoveActionBarHideOffset
    java.lang.Runnable mAddActionBarHideOffset -> mAddActionBarHideOffset
    int[] ATTRS -> ATTRS
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> mParentHelper
    void init(android.content.Context) -> init
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setActionBarVisibilityCallback(android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    void setOverlayMode(boolean) -> setOverlayMode
    boolean isInOverlayMode() -> isInOverlayMode
    void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    void setShowingForActionMode(boolean) -> setShowingForActionMode
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void draw(android.graphics.Canvas) -> draw
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
    void pullChildren() -> pullChildren
    android.support.v7.internal.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    int getActionBarHideOffset() -> getActionBarHideOffset
    void setActionBarHideOffset(int) -> setActionBarHideOffset
    void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    void removeActionBarHideOffset() -> removeActionBarHideOffset
    void addActionBarHideOffset() -> addActionBarHideOffset
    boolean shouldHideActionBarOnFling(float,float) -> shouldHideActionBarOnFling
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    java.lang.CharSequence getTitle() -> getTitle
    void initFeature(int) -> initFeature
    void setUiOptions(int) -> setUiOptions
    boolean hasIcon() -> hasIcon
    boolean hasLogo() -> hasLogo
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    void setMenuPrepared() -> setMenuPrepared
    void setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void saveToolbarHierarchyState(android.util.SparseArray) -> saveToolbarHierarchyState
    void restoreToolbarHierarchyState(android.util.SparseArray) -> restoreToolbarHierarchyState
    void dismissPopups() -> dismissPopups
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v4.view.ViewPropertyAnimatorCompat access$002(android.support.v7.internal.widget.ActionBarOverlayLayout,android.support.v4.view.ViewPropertyAnimatorCompat) -> access$002
    boolean access$102(android.support.v7.internal.widget.ActionBarOverlayLayout,boolean) -> access$102
    android.support.v4.view.ViewPropertyAnimatorCompat access$202(android.support.v7.internal.widget.ActionBarOverlayLayout,android.support.v4.view.ViewPropertyAnimatorCompat) -> access$202
    void access$300(android.support.v7.internal.widget.ActionBarOverlayLayout) -> access$300
    android.support.v4.view.ViewPropertyAnimatorListener access$400(android.support.v7.internal.widget.ActionBarOverlayLayout) -> access$400
    android.support.v7.internal.widget.ActionBarContainer access$500(android.support.v7.internal.widget.ActionBarOverlayLayout) -> access$500
    android.support.v7.internal.widget.ActionBarContainer access$600(android.support.v7.internal.widget.ActionBarOverlayLayout) -> access$600
    android.support.v4.view.ViewPropertyAnimatorListener access$700(android.support.v7.internal.widget.ActionBarOverlayLayout) -> access$700
android.support.v7.internal.widget.ActionBarOverlayLayout$1 -> android.support.v7.internal.widget.ActionBarOverlayLayout$1:
    android.support.v7.internal.widget.ActionBarOverlayLayout this$0 -> this$0
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v7.internal.widget.ActionBarOverlayLayout$2 -> android.support.v7.internal.widget.ActionBarOverlayLayout$2:
    android.support.v7.internal.widget.ActionBarOverlayLayout this$0 -> this$0
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v7.internal.widget.ActionBarOverlayLayout$3 -> android.support.v7.internal.widget.ActionBarOverlayLayout$3:
    android.support.v7.internal.widget.ActionBarOverlayLayout this$0 -> this$0
    void run() -> run
android.support.v7.internal.widget.ActionBarOverlayLayout$4 -> android.support.v7.internal.widget.ActionBarOverlayLayout$4:
    android.support.v7.internal.widget.ActionBarOverlayLayout this$0 -> this$0
    void run() -> run
android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback -> android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback:
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void showForSystem() -> showForSystem
    void hideForSystem() -> hideForSystem
    void enableContentAnimations(boolean) -> enableContentAnimations
    void onContentScrollStarted() -> onContentScrollStarted
    void onContentScrollStopped() -> onContentScrollStopped
android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams -> android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams:
android.support.v7.internal.widget.ActivityChooserModel -> android.support.v7.internal.widget.ActivityChooserModel:
    boolean DEBUG -> DEBUG
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String TAG_HISTORICAL_RECORDS -> TAG_HISTORICAL_RECORDS
    java.lang.String TAG_HISTORICAL_RECORD -> TAG_HISTORICAL_RECORD
    java.lang.String ATTRIBUTE_ACTIVITY -> ATTRIBUTE_ACTIVITY
    java.lang.String ATTRIBUTE_TIME -> ATTRIBUTE_TIME
    java.lang.String ATTRIBUTE_WEIGHT -> ATTRIBUTE_WEIGHT
    java.lang.String DEFAULT_HISTORY_FILE_NAME -> DEFAULT_HISTORY_FILE_NAME
    int DEFAULT_HISTORY_MAX_LENGTH -> DEFAULT_HISTORY_MAX_LENGTH
    int DEFAULT_ACTIVITY_INFLATION -> DEFAULT_ACTIVITY_INFLATION
    float DEFAULT_HISTORICAL_RECORD_WEIGHT -> DEFAULT_HISTORICAL_RECORD_WEIGHT
    java.lang.String HISTORY_FILE_EXTENSION -> HISTORY_FILE_EXTENSION
    int INVALID_INDEX -> INVALID_INDEX
    java.lang.Object sRegistryLock -> sRegistryLock
    java.util.Map sDataModelRegistry -> sDataModelRegistry
    java.lang.Object mInstanceLock -> mInstanceLock
    java.util.List mActivities -> mActivities
    java.util.List mHistoricalRecords -> mHistoricalRecords
    android.content.Context mContext -> mContext
    java.lang.String mHistoryFileName -> mHistoryFileName
    android.content.Intent mIntent -> mIntent
    android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> mActivitySorter
    int mHistoryMaxSize -> mHistoryMaxSize
    boolean mCanReadHistoricalData -> mCanReadHistoricalData
    boolean mReadShareHistoryCalled -> mReadShareHistoryCalled
    boolean mHistoricalRecordsChanged -> mHistoricalRecordsChanged
    boolean mReloadActivities -> mReloadActivities
    android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> mActivityChoserModelPolicy
    android.support.v7.internal.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> get
    void setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    int getActivityCount() -> getActivityCount
    android.content.pm.ResolveInfo getActivity(int) -> getActivity
    int getActivityIndex(android.content.pm.ResolveInfo) -> getActivityIndex
    android.content.Intent chooseActivity(int) -> chooseActivity
    void setOnChooseActivityListener(android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener) -> setOnChooseActivityListener
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    void setDefaultActivity(int) -> setDefaultActivity
    void persistHistoricalDataIfNeeded() -> persistHistoricalDataIfNeeded
    void setActivitySorter(android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter) -> setActivitySorter
    void setHistoryMaxSize(int) -> setHistoryMaxSize
    int getHistoryMaxSize() -> getHistoryMaxSize
    int getHistorySize() -> getHistorySize
    void ensureConsistentState() -> ensureConsistentState
    boolean sortActivitiesIfNeeded() -> sortActivitiesIfNeeded
    boolean loadActivitiesIfNeeded() -> loadActivitiesIfNeeded
    boolean readHistoricalDataIfNeeded() -> readHistoricalDataIfNeeded
    boolean addHisoricalRecord(android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord) -> addHisoricalRecord
    void pruneExcessiveHistoricalRecordsIfNeeded() -> pruneExcessiveHistoricalRecordsIfNeeded
    void readHistoricalDataImpl() -> readHistoricalDataImpl
    android.content.Context access$200(android.support.v7.internal.widget.ActivityChooserModel) -> access$200
    java.lang.String access$300() -> access$300
    java.lang.String access$400(android.support.v7.internal.widget.ActivityChooserModel) -> access$400
    boolean access$502(android.support.v7.internal.widget.ActivityChooserModel,boolean) -> access$502
android.support.v7.internal.widget.ActivityChooserModel$1 -> android.support.v7.internal.widget.ActivityChooserModel$1:
android.support.v7.internal.widget.ActivityChooserModel$ActivityChooserModelClient -> android.support.v7.internal.widget.ActivityChooserModel$ActivityChooserModelClient:
    void setActivityChooserModel(android.support.v7.internal.widget.ActivityChooserModel) -> setActivityChooserModel
android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo -> android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo:
    android.content.pm.ResolveInfo resolveInfo -> resolveInfo
    float weight -> weight
    android.support.v7.internal.widget.ActivityChooserModel this$0 -> this$0
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter -> android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter:
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
android.support.v7.internal.widget.ActivityChooserModel$DefaultSorter -> android.support.v7.internal.widget.ActivityChooserModel$DefaultSorter:
    float WEIGHT_DECAY_COEFFICIENT -> WEIGHT_DECAY_COEFFICIENT
    java.util.Map mPackageNameToActivityMap -> mPackageNameToActivityMap
    android.support.v7.internal.widget.ActivityChooserModel this$0 -> this$0
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord -> android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord:
    android.content.ComponentName activity -> activity
    long time -> time
    float weight -> weight
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener -> android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener:
    boolean onChooseActivity(android.support.v7.internal.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
android.support.v7.internal.widget.ActivityChooserModel$PersistHistoryAsyncTask -> android.support.v7.internal.widget.ActivityChooserModel$PersistHistoryAsyncTask:
    android.support.v7.internal.widget.ActivityChooserModel this$0 -> this$0
    java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v7.internal.widget.ActivityChooserView -> android.support.v7.internal.widget.ActivityChooserView:
    java.lang.String LOG_TAG -> LOG_TAG
    android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> mAdapter
    android.support.v7.internal.widget.ActivityChooserView$Callbacks mCallbacks -> mCallbacks
    android.support.v7.widget.LinearLayoutCompat mActivityChooserContent -> mActivityChooserContent
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> mActivityChooserContentBackground
    android.widget.FrameLayout mExpandActivityOverflowButton -> mExpandActivityOverflowButton
    android.widget.ImageView mExpandActivityOverflowButtonImage -> mExpandActivityOverflowButtonImage
    android.widget.FrameLayout mDefaultActivityButton -> mDefaultActivityButton
    android.widget.ImageView mDefaultActivityButtonImage -> mDefaultActivityButtonImage
    int mListPopupMaxWidth -> mListPopupMaxWidth
    android.support.v4.view.ActionProvider mProvider -> mProvider
    android.database.DataSetObserver mModelDataSetOberver -> mModelDataSetOberver
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> mOnGlobalLayoutListener
    android.support.v7.widget.ListPopupWindow mListPopupWindow -> mListPopupWindow
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> mOnDismissListener
    boolean mIsSelectingDefaultActivity -> mIsSelectingDefaultActivity
    int mInitialActivityCount -> mInitialActivityCount
    boolean mIsAttachedToWindow -> mIsAttachedToWindow
    int mDefaultActionButtonContentDescription -> mDefaultActionButtonContentDescription
    void setActivityChooserModel(android.support.v7.internal.widget.ActivityChooserModel) -> setActivityChooserModel
    void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    void setProvider(android.support.v4.view.ActionProvider) -> setProvider
    boolean showPopup() -> showPopup
    void showPopupUnchecked(int) -> showPopupUnchecked
    boolean dismissPopup() -> dismissPopup
    boolean isShowingPopup() -> isShowingPopup
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.support.v7.internal.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInitialActivityCount(int) -> setInitialActivityCount
    void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    android.support.v7.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    void updateAppearance() -> updateAppearance
    android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter access$000(android.support.v7.internal.widget.ActivityChooserView) -> access$000
    android.support.v7.widget.ListPopupWindow access$100(android.support.v7.internal.widget.ActivityChooserView) -> access$100
    void access$400(android.support.v7.internal.widget.ActivityChooserView) -> access$400
    void access$500(android.support.v7.internal.widget.ActivityChooserView,int) -> access$500
    boolean access$600(android.support.v7.internal.widget.ActivityChooserView) -> access$600
    android.widget.FrameLayout access$700(android.support.v7.internal.widget.ActivityChooserView) -> access$700
    android.widget.FrameLayout access$800(android.support.v7.internal.widget.ActivityChooserView) -> access$800
    boolean access$602(android.support.v7.internal.widget.ActivityChooserView,boolean) -> access$602
    int access$900(android.support.v7.internal.widget.ActivityChooserView) -> access$900
    android.widget.PopupWindow$OnDismissListener access$1000(android.support.v7.internal.widget.ActivityChooserView) -> access$1000
    android.database.DataSetObserver access$1100(android.support.v7.internal.widget.ActivityChooserView) -> access$1100
android.support.v7.internal.widget.ActivityChooserView$1 -> android.support.v7.internal.widget.ActivityChooserView$1:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.internal.widget.ActivityChooserView$2 -> android.support.v7.internal.widget.ActivityChooserView$2:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.internal.widget.ActivityChooserView$3 -> android.support.v7.internal.widget.ActivityChooserView$3:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> this$0
    android.support.v7.widget.ListPopupWindow getPopup() -> getPopup
    boolean onForwardingStarted() -> onForwardingStarted
    boolean onForwardingStopped() -> onForwardingStopped
android.support.v7.internal.widget.ActivityChooserView$4 -> android.support.v7.internal.widget.ActivityChooserView$4:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> this$0
    void onChanged() -> onChanged
android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter -> android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter:
    int MAX_ACTIVITY_COUNT_UNLIMITED -> MAX_ACTIVITY_COUNT_UNLIMITED
    int MAX_ACTIVITY_COUNT_DEFAULT -> MAX_ACTIVITY_COUNT_DEFAULT
    int ITEM_VIEW_TYPE_ACTIVITY -> ITEM_VIEW_TYPE_ACTIVITY
    int ITEM_VIEW_TYPE_FOOTER -> ITEM_VIEW_TYPE_FOOTER
    int ITEM_VIEW_TYPE_COUNT -> ITEM_VIEW_TYPE_COUNT
    android.support.v7.internal.widget.ActivityChooserModel mDataModel -> mDataModel
    int mMaxActivityCount -> mMaxActivityCount
    boolean mShowDefaultActivity -> mShowDefaultActivity
    boolean mHighlightDefaultActivity -> mHighlightDefaultActivity
    boolean mShowFooterView -> mShowFooterView
    android.support.v7.internal.widget.ActivityChooserView this$0 -> this$0
    void setDataModel(android.support.v7.internal.widget.ActivityChooserModel) -> setDataModel
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> measureContentWidth
    void setMaxActivityCount(int) -> setMaxActivityCount
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    void setShowFooterView(boolean) -> setShowFooterView
    int getActivityCount() -> getActivityCount
    int getHistorySize() -> getHistorySize
    android.support.v7.internal.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setShowDefaultActivity(boolean,boolean) -> setShowDefaultActivity
    boolean getShowDefaultActivity() -> getShowDefaultActivity
android.support.v7.internal.widget.ActivityChooserView$Callbacks -> android.support.v7.internal.widget.ActivityChooserView$Callbacks:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> notifyOnDismissListener
android.support.v7.internal.widget.ActivityChooserView$InnerLayout -> android.support.v7.internal.widget.ActivityChooserView$InnerLayout:
    int[] TINT_ATTRS -> TINT_ATTRS
android.support.v7.internal.widget.AdapterViewCompat -> android.support.v7.internal.widget.AdapterViewCompat:
    int ITEM_VIEW_TYPE_IGNORE -> ITEM_VIEW_TYPE_IGNORE
    int ITEM_VIEW_TYPE_HEADER_OR_FOOTER -> ITEM_VIEW_TYPE_HEADER_OR_FOOTER
    int mFirstPosition -> mFirstPosition
    int mSpecificTop -> mSpecificTop
    int mSyncPosition -> mSyncPosition
    long mSyncRowId -> mSyncRowId
    long mSyncHeight -> mSyncHeight
    boolean mNeedSync -> mNeedSync
    int mSyncMode -> mSyncMode
    int mLayoutHeight -> mLayoutHeight
    int SYNC_SELECTED_POSITION -> SYNC_SELECTED_POSITION
    int SYNC_FIRST_POSITION -> SYNC_FIRST_POSITION
    int SYNC_MAX_DURATION_MILLIS -> SYNC_MAX_DURATION_MILLIS
    boolean mInLayout -> mInLayout
    android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    android.support.v7.internal.widget.AdapterViewCompat$OnItemLongClickListener mOnItemLongClickListener -> mOnItemLongClickListener
    boolean mDataChanged -> mDataChanged
    int mNextSelectedPosition -> mNextSelectedPosition
    long mNextSelectedRowId -> mNextSelectedRowId
    int mSelectedPosition -> mSelectedPosition
    long mSelectedRowId -> mSelectedRowId
    android.view.View mEmptyView -> mEmptyView
    int mItemCount -> mItemCount
    int mOldItemCount -> mOldItemCount
    int INVALID_POSITION -> INVALID_POSITION
    long INVALID_ROW_ID -> INVALID_ROW_ID
    int mOldSelectedPosition -> mOldSelectedPosition
    long mOldSelectedRowId -> mOldSelectedRowId
    boolean mDesiredFocusableState -> mDesiredFocusableState
    boolean mDesiredFocusableInTouchModeState -> mDesiredFocusableInTouchModeState
    android.support.v7.internal.widget.AdapterViewCompat$SelectionNotifier mSelectionNotifier -> mSelectionNotifier
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    void setOnItemClickListener(android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener) -> setOnItemClickListener
    android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void setOnItemLongClickListener(android.support.v7.internal.widget.AdapterViewCompat$OnItemLongClickListener) -> setOnItemLongClickListener
    android.support.v7.internal.widget.AdapterViewCompat$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemSelectedListener(android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener) -> setOnItemSelectedListener
    android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getCount() -> getCount
    int getPositionForView(android.view.View) -> getPositionForView
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setSelection(int) -> setSelection
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isInFilterMode() -> isInFilterMode
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> checkFocus
    void updateEmptyStatus(boolean) -> updateEmptyStatus
    java.lang.Object getItemAtPosition(int) -> getItemAtPosition
    long getItemIdAtPosition(int) -> getItemIdAtPosition
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> selectionChanged
    void fireOnSelected() -> fireOnSelected
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> handleDataChanged
    void checkSelectionChanged() -> checkSelectionChanged
    int findSyncPosition() -> findSyncPosition
    int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void rememberSyncState() -> rememberSyncState
    void access$000(android.support.v7.internal.widget.AdapterViewCompat,android.os.Parcelable) -> access$000
    android.os.Parcelable access$100(android.support.v7.internal.widget.AdapterViewCompat) -> access$100
    void access$200(android.support.v7.internal.widget.AdapterViewCompat) -> access$200
android.support.v7.internal.widget.AdapterViewCompat$1 -> android.support.v7.internal.widget.AdapterViewCompat$1:
android.support.v7.internal.widget.AdapterViewCompat$AdapterContextMenuInfo -> android.support.v7.internal.widget.AdapterViewCompat$AdapterContextMenuInfo:
    android.view.View targetView -> targetView
    int position -> position
    long id -> id
android.support.v7.internal.widget.AdapterViewCompat$AdapterDataSetObserver -> android.support.v7.internal.widget.AdapterViewCompat$AdapterDataSetObserver:
    android.os.Parcelable mInstanceState -> mInstanceState
    android.support.v7.internal.widget.AdapterViewCompat this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void clearSavedState() -> clearSavedState
android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener -> android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener:
    void onItemClick(android.support.v7.internal.widget.AdapterViewCompat,android.view.View,int,long) -> onItemClick
android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListenerWrapper -> android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListenerWrapper:
    android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener mWrappedListener -> mWrappedListener
    android.support.v7.internal.widget.AdapterViewCompat this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.internal.widget.AdapterViewCompat$OnItemLongClickListener -> android.support.v7.internal.widget.AdapterViewCompat$OnItemLongClickListener:
    boolean onItemLongClick(android.support.v7.internal.widget.AdapterViewCompat,android.view.View,int,long) -> onItemLongClick
android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener -> android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener:
    void onItemSelected(android.support.v7.internal.widget.AdapterViewCompat,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.support.v7.internal.widget.AdapterViewCompat) -> onNothingSelected
android.support.v7.internal.widget.AdapterViewCompat$SelectionNotifier -> android.support.v7.internal.widget.AdapterViewCompat$SelectionNotifier:
    android.support.v7.internal.widget.AdapterViewCompat this$0 -> this$0
    void run() -> run
android.support.v7.internal.widget.AppCompatPopupWindow -> android.support.v7.internal.widget.AppCompatPopupWindow:
    java.lang.String TAG -> TAG
    boolean mOverlapAnchor -> mOverlapAnchor
    void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    void update(android.view.View,int,int,int,int) -> update
    void wrapOnScrollChangedListener(android.widget.PopupWindow) -> wrapOnScrollChangedListener
android.support.v7.internal.widget.AppCompatPopupWindow$1 -> android.support.v7.internal.widget.AppCompatPopupWindow$1:
    java.lang.reflect.Field val$fieldAnchor -> val$fieldAnchor
    android.widget.PopupWindow val$popup -> val$popup
    android.view.ViewTreeObserver$OnScrollChangedListener val$originalListener -> val$originalListener
    void onScrollChanged() -> onScrollChanged
android.support.v7.internal.widget.ContentFrameLayout -> android.support.v7.internal.widget.ContentFrameLayout:
    android.util.TypedValue mMinWidthMajor -> mMinWidthMajor
    android.util.TypedValue mMinWidthMinor -> mMinWidthMinor
    android.util.TypedValue mFixedWidthMajor -> mFixedWidthMajor
    android.util.TypedValue mFixedWidthMinor -> mFixedWidthMinor
    android.util.TypedValue mFixedHeightMajor -> mFixedHeightMajor
    android.util.TypedValue mFixedHeightMinor -> mFixedHeightMinor
    android.graphics.Rect mDecorPadding -> mDecorPadding
    void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    void setDecorPadding(int,int,int,int) -> setDecorPadding
    void onMeasure(int,int) -> onMeasure
    android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
android.support.v7.internal.widget.DecorContentParent -> android.support.v7.internal.widget.DecorContentParent:
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    java.lang.CharSequence getTitle() -> getTitle
    void initFeature(int) -> initFeature
    void setUiOptions(int) -> setUiOptions
    boolean hasIcon() -> hasIcon
    boolean hasLogo() -> hasLogo
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    void setMenuPrepared() -> setMenuPrepared
    void setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void saveToolbarHierarchyState(android.util.SparseArray) -> saveToolbarHierarchyState
    void restoreToolbarHierarchyState(android.util.SparseArray) -> restoreToolbarHierarchyState
    void dismissPopups() -> dismissPopups
android.support.v7.internal.widget.DecorToolbar -> android.support.v7.internal.widget.DecorToolbar:
    android.view.ViewGroup getViewGroup() -> getViewGroup
    android.content.Context getContext() -> getContext
    boolean isSplit() -> isSplit
    boolean hasExpandedActionView() -> hasExpandedActionView
    void collapseActionView() -> collapseActionView
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void initProgress() -> initProgress
    void initIndeterminateProgress() -> initIndeterminateProgress
    boolean canSplit() -> canSplit
    void setSplitView(android.view.ViewGroup) -> setSplitView
    void setSplitToolbar(boolean) -> setSplitToolbar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    boolean hasIcon() -> hasIcon
    boolean hasLogo() -> hasLogo
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    void setMenuPrepared() -> setMenuPrepared
    void setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void dismissPopupMenus() -> dismissPopupMenus
    int getDisplayOptions() -> getDisplayOptions
    void setDisplayOptions(int) -> setDisplayOptions
    void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    boolean isTitleTruncated() -> isTitleTruncated
    void setCollapsible(boolean) -> setCollapsible
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownParams(android.widget.SpinnerAdapter,android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener) -> setDropdownParams
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    int getDropdownItemCount() -> getDropdownItemCount
    void setCustomView(android.view.View) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    void animateToVisibility(int) -> animateToVisibility
    void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    void setNavigationIcon(int) -> setNavigationIcon
    void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    void setNavigationContentDescription(int) -> setNavigationContentDescription
    void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    void setDefaultNavigationIcon(android.graphics.drawable.Drawable) -> setDefaultNavigationIcon
    void saveHierarchyState(android.util.SparseArray) -> saveHierarchyState
    void restoreHierarchyState(android.util.SparseArray) -> restoreHierarchyState
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    int getHeight() -> getHeight
    void setVisibility(int) -> setVisibility
    int getVisibility() -> getVisibility
    void setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    android.view.Menu getMenu() -> getMenu
    int getPopupTheme() -> getPopupTheme
android.support.v7.internal.widget.DialogTitle -> android.support.v7.internal.widget.DialogTitle:
    void onMeasure(int,int) -> onMeasure
android.support.v7.internal.widget.DrawableUtils -> android.support.v7.internal.widget.DrawableUtils:
    java.lang.String TAG -> TAG
    android.graphics.Rect INSETS_NONE -> INSETS_NONE
    java.lang.Class sInsetsClazz -> sInsetsClazz
    android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
android.support.v7.internal.widget.FitWindowsFrameLayout -> android.support.v7.internal.widget.FitWindowsFrameLayout:
    android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> mListener
    void setOnFitSystemWindowsListener(android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
android.support.v7.internal.widget.FitWindowsLinearLayout -> android.support.v7.internal.widget.FitWindowsLinearLayout:
    android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> mListener
    void setOnFitSystemWindowsListener(android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
android.support.v7.internal.widget.FitWindowsViewGroup -> android.support.v7.internal.widget.FitWindowsViewGroup:
    void setOnFitSystemWindowsListener(android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener -> android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener:
    void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
android.support.v7.internal.widget.ListViewCompat -> android.support.v7.internal.widget.ListViewCompat:
    int INVALID_POSITION -> INVALID_POSITION
    int NO_POSITION -> NO_POSITION
    int[] STATE_SET_NOTHING -> STATE_SET_NOTHING
    android.graphics.Rect mSelectorRect -> mSelectorRect
    int mSelectionLeftPadding -> mSelectionLeftPadding
    int mSelectionTopPadding -> mSelectionTopPadding
    int mSelectionRightPadding -> mSelectionRightPadding
    int mSelectionBottomPadding -> mSelectionBottomPadding
    java.lang.reflect.Field mIsChildViewEnabled -> mIsChildViewEnabled
    android.support.v7.internal.widget.ListViewCompat$GateKeeperDrawable mSelector -> mSelector
    void setSelector(android.graphics.drawable.Drawable) -> setSelector
    void drawableStateChanged() -> drawableStateChanged
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void updateSelectorStateCompat() -> updateSelectorStateCompat
    boolean shouldShowSelectorCompat() -> shouldShowSelectorCompat
    boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    void setSelectorEnabled(boolean) -> setSelectorEnabled
android.support.v7.internal.widget.ListViewCompat$GateKeeperDrawable -> android.support.v7.internal.widget.ListViewCompat$GateKeeperDrawable:
    boolean mEnabled -> mEnabled
    void setEnabled(boolean) -> setEnabled
    boolean setState(int[]) -> setState
    void draw(android.graphics.Canvas) -> draw
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    boolean setVisible(boolean,boolean) -> setVisible
android.support.v7.internal.widget.ResourcesWrapper -> android.support.v7.internal.widget.ResourcesWrapper:
    android.content.res.Resources mResources -> mResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    java.lang.String getQuantityString(int,int) -> getQuantityString
    java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    java.lang.CharSequence[] getTextArray(int) -> getTextArray
    java.lang.String[] getStringArray(int) -> getStringArray
    int[] getIntArray(int) -> getIntArray
    android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    float getDimension(int) -> getDimension
    int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    int getDimensionPixelSize(int) -> getDimensionPixelSize
    float getFraction(int,int,int) -> getFraction
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    android.graphics.Movie getMovie(int) -> getMovie
    int getColor(int) -> getColor
    android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    boolean getBoolean(int) -> getBoolean
    int getInteger(int) -> getInteger
    android.content.res.XmlResourceParser getLayout(int) -> getLayout
    android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    android.content.res.XmlResourceParser getXml(int) -> getXml
    java.io.InputStream openRawResource(int) -> openRawResource
    java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    void getValue(int,android.util.TypedValue,boolean) -> getValue
    void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
    android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    android.content.res.Configuration getConfiguration() -> getConfiguration
    int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    java.lang.String getResourceName(int) -> getResourceName
    java.lang.String getResourcePackageName(int) -> getResourcePackageName
    java.lang.String getResourceTypeName(int) -> getResourceTypeName
    java.lang.String getResourceEntryName(int) -> getResourceEntryName
    void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
android.support.v7.internal.widget.RtlSpacingHelper -> android.support.v7.internal.widget.RtlSpacingHelper:
    int UNDEFINED -> UNDEFINED
    int mLeft -> mLeft
    int mRight -> mRight
    int mStart -> mStart
    int mEnd -> mEnd
    int mExplicitLeft -> mExplicitLeft
    int mExplicitRight -> mExplicitRight
    boolean mIsRtl -> mIsRtl
    boolean mIsRelative -> mIsRelative
    int getLeft() -> getLeft
    int getRight() -> getRight
    int getStart() -> getStart
    int getEnd() -> getEnd
    void setRelative(int,int) -> setRelative
    void setAbsolute(int,int) -> setAbsolute
    void setDirection(boolean) -> setDirection
android.support.v7.internal.widget.ScrollingTabContainerView -> android.support.v7.internal.widget.ScrollingTabContainerView:
    java.lang.String TAG -> TAG
    java.lang.Runnable mTabSelector -> mTabSelector
    android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> mTabClickListener
    android.support.v7.widget.LinearLayoutCompat mTabLayout -> mTabLayout
    android.support.v7.internal.widget.SpinnerCompat mTabSpinner -> mTabSpinner
    boolean mAllowCollapse -> mAllowCollapse
    int mMaxTabWidth -> mMaxTabWidth
    int mStackedTabMaxWidth -> mStackedTabMaxWidth
    int mContentHeight -> mContentHeight
    int mSelectedTabIndex -> mSelectedTabIndex
    android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim -> mVisibilityAnim
    android.support.v7.internal.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.view.animation.Interpolator sAlphaInterpolator -> sAlphaInterpolator
    int FADE_DURATION -> FADE_DURATION
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> isCollapsed
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> performCollapse
    boolean performExpand() -> performExpand
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    android.support.v7.widget.LinearLayoutCompat createTabLayout() -> createTabLayout
    android.support.v7.internal.widget.SpinnerCompat createSpinner() -> createSpinner
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToVisibility(int) -> animateToVisibility
    void animateToTab(int) -> animateToTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView createTabView(android.support.v7.app.ActionBar$Tab,boolean) -> createTabView
    void addTab(android.support.v7.app.ActionBar$Tab,boolean) -> addTab
    void addTab(android.support.v7.app.ActionBar$Tab,int,boolean) -> addTab
    void updateTab(int) -> updateTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void onItemClick(android.support.v7.internal.widget.AdapterViewCompat,android.view.View,int,long) -> onItemClick
    android.support.v7.widget.LinearLayoutCompat access$200(android.support.v7.internal.widget.ScrollingTabContainerView) -> access$200
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView access$300(android.support.v7.internal.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean) -> access$300
android.support.v7.internal.widget.ScrollingTabContainerView$1 -> android.support.v7.internal.widget.ScrollingTabContainerView$1:
    android.view.View val$tabView -> val$tabView
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> this$0
    void run() -> run
android.support.v7.internal.widget.ScrollingTabContainerView$TabAdapter -> android.support.v7.internal.widget.ScrollingTabContainerView$TabAdapter:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> this$0
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener -> android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ScrollingTabContainerView$TabView -> android.support.v7.internal.widget.ScrollingTabContainerView$TabView:
    int[] BG_ATTRS -> BG_ATTRS
    android.support.v7.app.ActionBar$Tab mTab -> mTab
    android.widget.TextView mTextView -> mTextView
    android.widget.ImageView mIconView -> mIconView
    android.view.View mCustomView -> mCustomView
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> this$0
    void bindTab(android.support.v7.app.ActionBar$Tab) -> bindTab
    void setSelected(boolean) -> setSelected
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onMeasure(int,int) -> onMeasure
    void update() -> update
    boolean onLongClick(android.view.View) -> onLongClick
    android.support.v7.app.ActionBar$Tab getTab() -> getTab
android.support.v7.internal.widget.ScrollingTabContainerView$VisibilityAnimListener -> android.support.v7.internal.widget.ScrollingTabContainerView$VisibilityAnimListener:
    boolean mCanceled -> mCanceled
    int mFinalVisibility -> mFinalVisibility
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> this$0
    android.support.v7.internal.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v7.internal.widget.SpinnerCompat -> android.support.v7.internal.widget.SpinnerCompat:
    java.lang.String TAG -> TAG
    int MAX_ITEMS_MEASURED -> MAX_ITEMS_MEASURED
    int MODE_DIALOG -> MODE_DIALOG
    int MODE_DROPDOWN -> MODE_DROPDOWN
    int MODE_THEME -> MODE_THEME
    android.support.v7.widget.ListPopupWindow$ForwardingListener mForwardingListener -> mForwardingListener
    android.support.v7.internal.widget.SpinnerCompat$SpinnerPopup mPopup -> mPopup
    android.support.v7.internal.widget.SpinnerCompat$DropDownAdapter mTempAdapter -> mTempAdapter
    int mDropDownWidth -> mDropDownWidth
    int mGravity -> mGravity
    boolean mDisableChildrenWhenDisabled -> mDisableChildrenWhenDisabled
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    void setDropDownWidth(int) -> setDropDownWidth
    int getDropDownWidth() -> getDropDownWidth
    void setEnabled(boolean) -> setEnabled
    void setGravity(int) -> setGravity
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnItemClickListener(android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener) -> setOnItemClickListener
    void setOnItemClickListenerInt(android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener) -> setOnItemClickListenerInt
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,boolean) -> layout
    android.view.View makeView(int,boolean) -> makeView
    void setUpChild(android.view.View,boolean) -> setUpChild
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    void setPrompt(java.lang.CharSequence) -> setPrompt
    void setPromptId(int) -> setPromptId
    java.lang.CharSequence getPrompt() -> getPrompt
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> measureContentWidth
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.support.v7.internal.widget.SpinnerCompat$SpinnerPopup access$100(android.support.v7.internal.widget.SpinnerCompat) -> access$100
    android.graphics.Rect access$400(android.support.v7.internal.widget.SpinnerCompat) -> access$400
android.support.v7.internal.widget.SpinnerCompat$1 -> android.support.v7.internal.widget.SpinnerCompat$1:
    android.support.v7.internal.widget.SpinnerCompat$DropdownPopup val$popup -> val$popup
    android.support.v7.internal.widget.SpinnerCompat this$0 -> this$0
    android.support.v7.widget.ListPopupWindow getPopup() -> getPopup
    boolean onForwardingStarted() -> onForwardingStarted
android.support.v7.internal.widget.SpinnerCompat$2 -> android.support.v7.internal.widget.SpinnerCompat$2:
    android.support.v7.internal.widget.SpinnerCompat this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.internal.widget.SpinnerCompat$DialogPopup -> android.support.v7.internal.widget.SpinnerCompat$DialogPopup:
    android.app.AlertDialog mPopup -> mPopup
    android.widget.ListAdapter mListAdapter -> mListAdapter
    java.lang.CharSequence mPrompt -> mPrompt
    android.support.v7.internal.widget.SpinnerCompat this$0 -> this$0
    void dismiss() -> dismiss
    boolean isShowing() -> isShowing
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPromptText(java.lang.CharSequence) -> setPromptText
    java.lang.CharSequence getHintText() -> getHintText
    void show() -> show
    void onClick(android.content.DialogInterface,int) -> onClick
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setVerticalOffset(int) -> setVerticalOffset
    void setHorizontalOffset(int) -> setHorizontalOffset
    android.graphics.drawable.Drawable getBackground() -> getBackground
    int getVerticalOffset() -> getVerticalOffset
    int getHorizontalOffset() -> getHorizontalOffset
android.support.v7.internal.widget.SpinnerCompat$DropDownAdapter -> android.support.v7.internal.widget.SpinnerCompat$DropDownAdapter:
    android.widget.SpinnerAdapter mAdapter -> mAdapter
    android.widget.ListAdapter mListAdapter -> mListAdapter
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
android.support.v7.internal.widget.SpinnerCompat$DropdownPopup -> android.support.v7.internal.widget.SpinnerCompat$DropdownPopup:
    java.lang.CharSequence mHintText -> mHintText
    android.widget.ListAdapter mAdapter -> mAdapter
    android.support.v7.internal.widget.SpinnerCompat this$0 -> this$0
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    java.lang.CharSequence getHintText() -> getHintText
    void setPromptText(java.lang.CharSequence) -> setPromptText
    void computeContentWidth() -> computeContentWidth
    void show(int,int) -> show
    android.widget.ListAdapter access$300(android.support.v7.internal.widget.SpinnerCompat$DropdownPopup) -> access$300
    void access$501(android.support.v7.internal.widget.SpinnerCompat$DropdownPopup) -> access$501
android.support.v7.internal.widget.SpinnerCompat$DropdownPopup$1 -> android.support.v7.internal.widget.SpinnerCompat$DropdownPopup$1:
    android.support.v7.internal.widget.SpinnerCompat val$this$0 -> val$this$0
    android.support.v7.internal.widget.SpinnerCompat$DropdownPopup this$1 -> this$1
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.internal.widget.SpinnerCompat$DropdownPopup$2 -> android.support.v7.internal.widget.SpinnerCompat$DropdownPopup$2:
    android.support.v7.internal.widget.SpinnerCompat$DropdownPopup this$1 -> this$1
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.internal.widget.SpinnerCompat$DropdownPopup$3 -> android.support.v7.internal.widget.SpinnerCompat$DropdownPopup$3:
    android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener -> val$layoutListener
    android.support.v7.internal.widget.SpinnerCompat$DropdownPopup this$1 -> this$1
    void onDismiss() -> onDismiss
android.support.v7.internal.widget.SpinnerCompat$SavedState -> android.support.v7.internal.widget.SpinnerCompat$SavedState:
    boolean showDropdown -> showDropdown
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.widget.SpinnerCompat$SavedState$1 -> android.support.v7.internal.widget.SpinnerCompat$SavedState$1:
    android.support.v7.internal.widget.SpinnerCompat$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.internal.widget.SpinnerCompat$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.SpinnerCompat$SpinnerPopup -> android.support.v7.internal.widget.SpinnerCompat$SpinnerPopup:
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void show() -> show
    void dismiss() -> dismiss
    boolean isShowing() -> isShowing
    void setPromptText(java.lang.CharSequence) -> setPromptText
    java.lang.CharSequence getHintText() -> getHintText
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setVerticalOffset(int) -> setVerticalOffset
    void setHorizontalOffset(int) -> setHorizontalOffset
    android.graphics.drawable.Drawable getBackground() -> getBackground
    int getVerticalOffset() -> getVerticalOffset
    int getHorizontalOffset() -> getHorizontalOffset
android.support.v7.internal.widget.ThemeUtils -> android.support.v7.internal.widget.ThemeUtils:
    java.lang.ThreadLocal TL_TYPED_VALUE -> TL_TYPED_VALUE
    int[] DISABLED_STATE_SET -> DISABLED_STATE_SET
    int[] FOCUSED_STATE_SET -> FOCUSED_STATE_SET
    int[] ACTIVATED_STATE_SET -> ACTIVATED_STATE_SET
    int[] PRESSED_STATE_SET -> PRESSED_STATE_SET
    int[] CHECKED_STATE_SET -> CHECKED_STATE_SET
    int[] SELECTED_STATE_SET -> SELECTED_STATE_SET
    int[] NOT_PRESSED_OR_FOCUSED_STATE_SET -> NOT_PRESSED_OR_FOCUSED_STATE_SET
    int[] EMPTY_STATE_SET -> EMPTY_STATE_SET
    int[] TEMP_ARRAY -> TEMP_ARRAY
    android.content.res.ColorStateList createDisabledStateList(int,int) -> createDisabledStateList
    int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    android.util.TypedValue getTypedValue() -> getTypedValue
    int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
android.support.v7.internal.widget.TintContextWrapper -> android.support.v7.internal.widget.TintContextWrapper:
    android.content.res.Resources mResources -> mResources
    android.content.Context wrap(android.content.Context) -> wrap
    android.content.res.Resources getResources() -> getResources
android.support.v7.internal.widget.TintContextWrapper$TintResources -> android.support.v7.internal.widget.TintContextWrapper$TintResources:
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
android.support.v7.internal.widget.TintImageView -> android.support.v7.internal.widget.TintImageView:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    void setImageResource(int) -> setImageResource
android.support.v7.internal.widget.TintInfo -> android.support.v7.internal.widget.TintInfo:
    android.content.res.ColorStateList mTintList -> mTintList
    android.graphics.PorterDuff$Mode mTintMode -> mTintMode
    boolean mHasTintMode -> mHasTintMode
    boolean mHasTintList -> mHasTintList
android.support.v7.internal.widget.TintManager -> android.support.v7.internal.widget.TintManager:
    boolean SHOULD_BE_USED -> SHOULD_BE_USED
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> DEFAULT_MODE
    java.util.WeakHashMap INSTANCE_CACHE -> INSTANCE_CACHE
    android.support.v7.internal.widget.TintManager$ColorFilterLruCache COLOR_FILTER_CACHE -> COLOR_FILTER_CACHE
    int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL -> COLORFILTER_TINT_COLOR_CONTROL_NORMAL
    int[] TINT_COLOR_CONTROL_NORMAL -> TINT_COLOR_CONTROL_NORMAL
    int[] COLORFILTER_COLOR_CONTROL_ACTIVATED -> COLORFILTER_COLOR_CONTROL_ACTIVATED
    int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY -> COLORFILTER_COLOR_BACKGROUND_MULTIPLY
    int[] TINT_COLOR_CONTROL_STATE_LIST -> TINT_COLOR_CONTROL_STATE_LIST
    int[] TINT_CHECKABLE_BUTTON_LIST -> TINT_CHECKABLE_BUTTON_LIST
    java.lang.ref.WeakReference mContextRef -> mContextRef
    android.util.SparseArray mTintLists -> mTintLists
    android.content.res.ColorStateList mDefaultColorStateList -> mDefaultColorStateList
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    android.support.v7.internal.widget.TintManager get(android.content.Context) -> get
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    android.graphics.drawable.Drawable getDrawable(int,boolean) -> getDrawable
    boolean tintDrawableUsingColorFilter(int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
    boolean arrayContains(int[],int) -> arrayContains
    boolean isInTintList(int) -> isInTintList
    android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    android.content.res.ColorStateList getTintList(int) -> getTintList
    android.content.res.ColorStateList getDefaultColorStateList(android.content.Context) -> getDefaultColorStateList
    android.content.res.ColorStateList createCheckableButtonColorStateList(android.content.Context) -> createCheckableButtonColorStateList
    android.content.res.ColorStateList createSwitchTrackColorStateList(android.content.Context) -> createSwitchTrackColorStateList
    android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    android.content.res.ColorStateList createEditTextColorStateList(android.content.Context) -> createEditTextColorStateList
    android.content.res.ColorStateList createButtonColorStateList(android.content.Context) -> createButtonColorStateList
    android.content.res.ColorStateList createSpinnerColorStateList(android.content.Context) -> createSpinnerColorStateList
    void tintViewBackground(android.view.View,android.support.v7.internal.widget.TintInfo) -> tintViewBackground
    void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
android.support.v7.internal.widget.TintManager$ColorFilterLruCache -> android.support.v7.internal.widget.TintManager$ColorFilterLruCache:
    android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
    int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
android.support.v7.internal.widget.TintTypedArray -> android.support.v7.internal.widget.TintTypedArray:
    android.content.Context mContext -> mContext
    android.content.res.TypedArray mWrapped -> mWrapped
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    android.support.v7.internal.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    android.support.v7.internal.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    int length() -> length
    int getIndexCount() -> getIndexCount
    int getIndex(int) -> getIndex
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getNonResourceString(int) -> getNonResourceString
    boolean getBoolean(int,boolean) -> getBoolean
    int getInt(int,int) -> getInt
    float getFloat(int,float) -> getFloat
    int getColor(int,int) -> getColor
    android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    int getInteger(int,int) -> getInteger
    float getDimension(int,float) -> getDimension
    int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    int getLayoutDimension(int,java.lang.String) -> getLayoutDimension
    int getLayoutDimension(int,int) -> getLayoutDimension
    float getFraction(int,int,int,float) -> getFraction
    int getResourceId(int,int) -> getResourceId
    java.lang.CharSequence[] getTextArray(int) -> getTextArray
    boolean getValue(int,android.util.TypedValue) -> getValue
    int getType(int) -> getType
    boolean hasValue(int) -> hasValue
    android.util.TypedValue peekValue(int) -> peekValue
    java.lang.String getPositionDescription() -> getPositionDescription
    void recycle() -> recycle
    int getChangingConfigurations() -> getChangingConfigurations
    android.support.v7.internal.widget.TintManager getTintManager() -> getTintManager
android.support.v7.internal.widget.ToolbarWidgetWrapper -> android.support.v7.internal.widget.ToolbarWidgetWrapper:
    java.lang.String TAG -> TAG
    int AFFECTS_LOGO_MASK -> AFFECTS_LOGO_MASK
    android.support.v7.widget.Toolbar mToolbar -> mToolbar
    int mDisplayOpts -> mDisplayOpts
    android.view.View mTabView -> mTabView
    android.support.v7.internal.widget.SpinnerCompat mSpinner -> mSpinner
    android.view.View mCustomView -> mCustomView
    android.graphics.drawable.Drawable mIcon -> mIcon
    android.graphics.drawable.Drawable mLogo -> mLogo
    android.graphics.drawable.Drawable mNavIcon -> mNavIcon
    boolean mTitleSet -> mTitleSet
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    java.lang.CharSequence mHomeDescription -> mHomeDescription
    android.view.Window$Callback mWindowCallback -> mWindowCallback
    boolean mMenuPrepared -> mMenuPrepared
    android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter -> mActionMenuPresenter
    int mNavigationMode -> mNavigationMode
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    int mDefaultNavigationContentDescription -> mDefaultNavigationContentDescription
    android.graphics.drawable.Drawable mDefaultNavigationIcon -> mDefaultNavigationIcon
    void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    void setDefaultNavigationIcon(android.graphics.drawable.Drawable) -> setDefaultNavigationIcon
    int detectDisplayOptions() -> detectDisplayOptions
    android.view.ViewGroup getViewGroup() -> getViewGroup
    android.content.Context getContext() -> getContext
    boolean isSplit() -> isSplit
    boolean hasExpandedActionView() -> hasExpandedActionView
    void collapseActionView() -> collapseActionView
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitleInt(java.lang.CharSequence) -> setTitleInt
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void initProgress() -> initProgress
    void initIndeterminateProgress() -> initIndeterminateProgress
    boolean canSplit() -> canSplit
    void setSplitView(android.view.ViewGroup) -> setSplitView
    void setSplitToolbar(boolean) -> setSplitToolbar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    boolean hasIcon() -> hasIcon
    boolean hasLogo() -> hasLogo
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void updateToolbarLogo() -> updateToolbarLogo
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    void setMenuPrepared() -> setMenuPrepared
    void setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void dismissPopupMenus() -> dismissPopupMenus
    int getDisplayOptions() -> getDisplayOptions
    void setDisplayOptions(int) -> setDisplayOptions
    void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    boolean isTitleTruncated() -> isTitleTruncated
    void setCollapsible(boolean) -> setCollapsible
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    void ensureSpinner() -> ensureSpinner
    void setDropdownParams(android.widget.SpinnerAdapter,android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener) -> setDropdownParams
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    int getDropdownItemCount() -> getDropdownItemCount
    void setCustomView(android.view.View) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    void animateToVisibility(int) -> animateToVisibility
    void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    void setNavigationIcon(int) -> setNavigationIcon
    void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    void setNavigationContentDescription(int) -> setNavigationContentDescription
    void updateHomeAccessibility() -> updateHomeAccessibility
    void updateNavigationIcon() -> updateNavigationIcon
    void saveHierarchyState(android.util.SparseArray) -> saveHierarchyState
    void restoreHierarchyState(android.util.SparseArray) -> restoreHierarchyState
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    int getHeight() -> getHeight
    void setVisibility(int) -> setVisibility
    int getVisibility() -> getVisibility
    void setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    android.view.Menu getMenu() -> getMenu
    int getPopupTheme() -> getPopupTheme
    android.support.v7.widget.Toolbar access$000(android.support.v7.internal.widget.ToolbarWidgetWrapper) -> access$000
    java.lang.CharSequence access$100(android.support.v7.internal.widget.ToolbarWidgetWrapper) -> access$100
    android.view.Window$Callback access$200(android.support.v7.internal.widget.ToolbarWidgetWrapper) -> access$200
    boolean access$300(android.support.v7.internal.widget.ToolbarWidgetWrapper) -> access$300
android.support.v7.internal.widget.ToolbarWidgetWrapper$1 -> android.support.v7.internal.widget.ToolbarWidgetWrapper$1:
    android.support.v7.internal.view.menu.ActionMenuItem mNavItem -> mNavItem
    android.support.v7.internal.widget.ToolbarWidgetWrapper this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ToolbarWidgetWrapper$2 -> android.support.v7.internal.widget.ToolbarWidgetWrapper$2:
    boolean mCanceled -> mCanceled
    android.support.v7.internal.widget.ToolbarWidgetWrapper this$0 -> this$0
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v7.internal.widget.ToolbarWidgetWrapper$3 -> android.support.v7.internal.widget.ToolbarWidgetWrapper$3:
    android.support.v7.internal.widget.ToolbarWidgetWrapper this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
android.support.v7.internal.widget.ViewStubCompat -> android.support.v7.internal.widget.ViewStubCompat:
    int mLayoutResource -> mLayoutResource
    int mInflatedId -> mInflatedId
    java.lang.ref.WeakReference mInflatedViewRef -> mInflatedViewRef
    android.view.LayoutInflater mInflater -> mInflater
    android.support.v7.internal.widget.ViewStubCompat$OnInflateListener mInflateListener -> mInflateListener
    int getInflatedId() -> getInflatedId
    void setInflatedId(int) -> setInflatedId
    int getLayoutResource() -> getLayoutResource
    void setLayoutResource(int) -> setLayoutResource
    void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    void onMeasure(int,int) -> onMeasure
    void draw(android.graphics.Canvas) -> draw
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void setVisibility(int) -> setVisibility
    android.view.View inflate() -> inflate
    void setOnInflateListener(android.support.v7.internal.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
android.support.v7.internal.widget.ViewStubCompat$OnInflateListener -> android.support.v7.internal.widget.ViewStubCompat$OnInflateListener:
    void onInflate(android.support.v7.internal.widget.ViewStubCompat,android.view.View) -> onInflate
android.support.v7.internal.widget.ViewUtils -> android.support.v7.internal.widget.ViewUtils:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sComputeFitSystemWindowsMethod -> sComputeFitSystemWindowsMethod
    boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
android.support.v7.recyclerview.BuildConfig -> android.support.v7.recyclerview.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
android.support.v7.recyclerview.R -> android.support.v7.recyclerview.R:
android.support.v7.recyclerview.R$attr -> android.support.v7.recyclerview.R$attr:
    int layoutManager -> layoutManager
    int reverseLayout -> reverseLayout
    int spanCount -> spanCount
    int stackFromEnd -> stackFromEnd
android.support.v7.recyclerview.R$dimen -> android.support.v7.recyclerview.R$dimen:
    int item_touch_helper_max_drag_scroll_per_frame -> item_touch_helper_max_drag_scroll_per_frame
android.support.v7.recyclerview.R$id -> android.support.v7.recyclerview.R$id:
    int item_touch_helper_previous_elevation -> item_touch_helper_previous_elevation
android.support.v7.recyclerview.R$styleable -> android.support.v7.recyclerview.R$styleable:
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_orientation -> RecyclerView_android_orientation
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int RecyclerView_reverseLayout -> RecyclerView_reverseLayout
    int RecyclerView_spanCount -> RecyclerView_spanCount
    int RecyclerView_stackFromEnd -> RecyclerView_stackFromEnd
android.support.v7.util.SortedList -> android.support.v7.util.SortedList:
    int INVALID_POSITION -> INVALID_POSITION
    int MIN_CAPACITY -> MIN_CAPACITY
    int CAPACITY_GROWTH -> CAPACITY_GROWTH
    int INSERTION -> INSERTION
    int DELETION -> DELETION
    int LOOKUP -> LOOKUP
    java.lang.Object[] mData -> mData
    java.lang.Object[] mOldData -> mOldData
    int mOldDataStart -> mOldDataStart
    int mOldDataSize -> mOldDataSize
    int mMergedSize -> mMergedSize
    android.support.v7.util.SortedList$Callback mCallback -> mCallback
    android.support.v7.util.SortedList$BatchedCallback mBatchedCallback -> mBatchedCallback
    int mSize -> mSize
    java.lang.Class mTClass -> mTClass
    int size() -> size
    int add(java.lang.Object) -> add
    void addAll(java.lang.Object[],boolean) -> addAll
    void addAll(java.lang.Object[]) -> addAll
    void addAll(java.util.Collection) -> addAll
    void addAllInternal(java.lang.Object[]) -> addAllInternal
    int deduplicate(java.lang.Object[]) -> deduplicate
    int findSameItem(java.lang.Object,java.lang.Object[],int,int) -> findSameItem
    void merge(java.lang.Object[],int) -> merge
    void throwIfMerging() -> throwIfMerging
    void beginBatchedUpdates() -> beginBatchedUpdates
    void endBatchedUpdates() -> endBatchedUpdates
    int add(java.lang.Object,boolean) -> add
    boolean remove(java.lang.Object) -> remove
    java.lang.Object removeItemAt(int) -> removeItemAt
    boolean remove(java.lang.Object,boolean) -> remove
    void removeItemAtIndex(int,boolean) -> removeItemAtIndex
    void updateItemAt(int,java.lang.Object) -> updateItemAt
    void recalculatePositionOfItemAt(int) -> recalculatePositionOfItemAt
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int) -> findIndexOf
    int linearEqualitySearch(java.lang.Object,int,int,int) -> linearEqualitySearch
    void addToData(int,java.lang.Object) -> addToData
    void clear() -> clear
android.support.v7.util.SortedList$BatchedCallback -> android.support.v7.util.SortedList$BatchedCallback:
    android.support.v7.util.SortedList$Callback mWrappedCallback -> mWrappedCallback
    int TYPE_NONE -> TYPE_NONE
    int TYPE_ADD -> TYPE_ADD
    int TYPE_REMOVE -> TYPE_REMOVE
    int TYPE_CHANGE -> TYPE_CHANGE
    int TYPE_MOVE -> TYPE_MOVE
    int mLastEventType -> mLastEventType
    int mLastEventPosition -> mLastEventPosition
    int mLastEventCount -> mLastEventCount
    int compare(java.lang.Object,java.lang.Object) -> compare
    void onInserted(int,int) -> onInserted
    void onRemoved(int,int) -> onRemoved
    void onMoved(int,int) -> onMoved
    void onChanged(int,int) -> onChanged
    boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> areContentsTheSame
    boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> areItemsTheSame
    void dispatchLastEvent() -> dispatchLastEvent
    android.support.v7.util.SortedList$Callback access$000(android.support.v7.util.SortedList$BatchedCallback) -> access$000
android.support.v7.util.SortedList$Callback -> android.support.v7.util.SortedList$Callback:
    int compare(java.lang.Object,java.lang.Object) -> compare
    void onInserted(int,int) -> onInserted
    void onRemoved(int,int) -> onRemoved
    void onMoved(int,int) -> onMoved
    void onChanged(int,int) -> onChanged
    boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> areContentsTheSame
    boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> areItemsTheSame
android.support.v7.view.ActionMode -> android.support.v7.view.ActionMode:
    java.lang.Object mTag -> mTag
    boolean mTitleOptionalHint -> mTitleOptionalHint
    void setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setTitleOptionalHint(boolean) -> setTitleOptionalHint
    boolean getTitleOptionalHint() -> getTitleOptionalHint
    boolean isTitleOptional() -> isTitleOptional
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    android.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean isUiFocusable() -> isUiFocusable
android.support.v7.view.ActionMode$Callback -> android.support.v7.view.ActionMode$Callback:
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> onDestroyActionMode
android.support.v7.view.CollapsibleActionView -> android.support.v7.view.CollapsibleActionView:
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v7.widget.ActionMenuPresenter -> android.support.v7.widget.ActionMenuPresenter:
    java.lang.String TAG -> TAG
    android.view.View mOverflowButton -> mOverflowButton
    boolean mReserveOverflow -> mReserveOverflow
    boolean mReserveOverflowSet -> mReserveOverflowSet
    int mWidthLimit -> mWidthLimit
    int mActionItemWidthLimit -> mActionItemWidthLimit
    int mMaxItems -> mMaxItems
    boolean mMaxItemsSet -> mMaxItemsSet
    boolean mStrictWidthLimit -> mStrictWidthLimit
    boolean mWidthLimitSet -> mWidthLimitSet
    boolean mExpandedActionViewsExclusive -> mExpandedActionViewsExclusive
    int mMinCellSize -> mMinCellSize
    android.util.SparseBooleanArray mActionButtonGroups -> mActionButtonGroups
    android.view.View mScrapActionButtonView -> mScrapActionButtonView
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup -> mOverflowPopup
    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> mActionButtonPopup
    android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> mPostedOpenRunnable
    android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback -> mPopupCallback
    android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> mPopupPresenterCallback
    int mOpenSubMenuId -> mOpenSubMenuId
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> initForMenu
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWidthLimit(int,boolean) -> setWidthLimit
    void setReserveOverflow(boolean) -> setReserveOverflow
    void setItemLimit(int) -> setItemLimit
    void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> shouldIncludeItem
    void updateMenuView(boolean) -> updateMenuView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean dismissPopupMenus() -> dismissPopupMenus
    boolean hideSubMenus() -> hideSubMenus
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean isOverflowReserved() -> isOverflowReserved
    boolean flagActionItems() -> flagActionItems
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    void setMenuView(android.support.v7.widget.ActionMenuView) -> setMenuView
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup access$200(android.support.v7.widget.ActionMenuPresenter) -> access$200
    android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable access$300(android.support.v7.widget.ActionMenuPresenter) -> access$300
    android.support.v7.internal.view.menu.MenuBuilder access$400(android.support.v7.widget.ActionMenuPresenter) -> access$400
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup access$202(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OverflowPopup) -> access$202
    android.view.View access$500(android.support.v7.widget.ActionMenuPresenter) -> access$500
    android.support.v7.internal.view.menu.MenuView access$600(android.support.v7.widget.ActionMenuPresenter) -> access$600
    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu access$702(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu) -> access$702
    android.support.v7.internal.view.menu.MenuBuilder access$800(android.support.v7.widget.ActionMenuPresenter) -> access$800
    android.support.v7.internal.view.menu.MenuView access$900(android.support.v7.widget.ActionMenuPresenter) -> access$900
    android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable access$302(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable) -> access$302
    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu access$700(android.support.v7.widget.ActionMenuPresenter) -> access$700
android.support.v7.widget.ActionMenuPresenter$1 -> android.support.v7.widget.ActionMenuPresenter$1:
android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu -> android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu:
    android.support.v7.internal.view.menu.SubMenuBuilder mSubMenu -> mSubMenu
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    void onDismiss() -> onDismiss
android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback -> android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    android.support.v7.widget.ListPopupWindow getPopup() -> getPopup
android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable -> android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable:
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup mPopup -> mPopup
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    void run() -> run
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton -> android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton:
    float[] mTempPts -> mTempPts
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    boolean setFrame(int,int,int,int) -> setFrame
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 -> android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1:
    android.support.v7.widget.ActionMenuPresenter val$this$0 -> val$this$0
    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton this$1 -> this$1
    android.support.v7.widget.ListPopupWindow getPopup() -> getPopup
    boolean onForwardingStarted() -> onForwardingStarted
    boolean onForwardingStopped() -> onForwardingStopped
android.support.v7.widget.ActionMenuPresenter$OverflowPopup -> android.support.v7.widget.ActionMenuPresenter$OverflowPopup:
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    void onDismiss() -> onDismiss
android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback -> android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback:
    android.support.v7.widget.ActionMenuPresenter this$0 -> this$0
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
android.support.v7.widget.ActionMenuPresenter$SavedState -> android.support.v7.widget.ActionMenuPresenter$SavedState:
    int openSubMenuId -> openSubMenuId
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.ActionMenuPresenter$SavedState$1 -> android.support.v7.widget.ActionMenuPresenter$SavedState$1:
    android.support.v7.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.ActionMenuView -> android.support.v7.widget.ActionMenuView:
    java.lang.String TAG -> TAG
    int MIN_CELL_SIZE -> MIN_CELL_SIZE
    int GENERATED_ITEM_PADDING -> GENERATED_ITEM_PADDING
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> mMenu
    android.content.Context mContext -> mContext
    android.content.Context mPopupContext -> mPopupContext
    int mPopupTheme -> mPopupTheme
    boolean mReserveOverflow -> mReserveOverflow
    android.support.v7.widget.ActionMenuPresenter mPresenter -> mPresenter
    android.support.v7.internal.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> mActionMenuPresenterCallback
    android.support.v7.internal.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> mMenuBuilderCallback
    boolean mFormatItems -> mFormatItems
    int mFormatItemsWidth -> mFormatItemsWidth
    int mMinCellSize -> mMinCellSize
    int mGeneratedItemPadding -> mGeneratedItemPadding
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    void setPopupTheme(int) -> setPopupTheme
    int getPopupTheme() -> getPopupTheme
    void setPresenter(android.support.v7.widget.ActionMenuPresenter) -> setPresenter
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setOnMenuItemClickListener(android.support.v7.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean isOverflowReserved() -> isOverflowReserved
    void setOverflowReserved(boolean) -> setOverflowReserved
    android.support.v7.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.v7.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> invokeItem
    int getWindowAnimations() -> getWindowAnimations
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> initialize
    android.view.Menu getMenu() -> getMenu
    void setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    android.support.v7.internal.view.menu.MenuBuilder peekMenu() -> peekMenu
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    void dismissPopupMenus() -> dismissPopupMenus
    boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener access$200(android.support.v7.widget.ActionMenuView) -> access$200
    android.support.v7.internal.view.menu.MenuBuilder$Callback access$300(android.support.v7.widget.ActionMenuView) -> access$300
android.support.v7.widget.ActionMenuView$1 -> android.support.v7.widget.ActionMenuView$1:
android.support.v7.widget.ActionMenuView$ActionMenuChildView -> android.support.v7.widget.ActionMenuView$ActionMenuChildView:
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback -> android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback:
    android.support.v7.widget.ActionMenuView this$0 -> this$0
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
android.support.v7.widget.ActionMenuView$LayoutParams -> android.support.v7.widget.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> isOverflowButton
    int cellsUsed -> cellsUsed
    int extraPixels -> extraPixels
    boolean expandable -> expandable
    boolean preventEdgeOffset -> preventEdgeOffset
    boolean expanded -> expanded
android.support.v7.widget.ActionMenuView$MenuBuilderCallback -> android.support.v7.widget.ActionMenuView$MenuBuilderCallback:
    android.support.v7.widget.ActionMenuView this$0 -> this$0
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.widget.ActionMenuView$OnMenuItemClickListener -> android.support.v7.widget.ActionMenuView$OnMenuItemClickListener:
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.widget.AdapterHelper -> android.support.v7.widget.AdapterHelper:
    int POSITION_TYPE_INVISIBLE -> POSITION_TYPE_INVISIBLE
    int POSITION_TYPE_NEW_OR_LAID_OUT -> POSITION_TYPE_NEW_OR_LAID_OUT
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    android.support.v4.util.Pools$Pool mUpdateOpPool -> mUpdateOpPool
    java.util.ArrayList mPendingUpdates -> mPendingUpdates
    java.util.ArrayList mPostponedList -> mPostponedList
    android.support.v7.widget.AdapterHelper$Callback mCallback -> mCallback
    java.lang.Runnable mOnItemProcessedCallback -> mOnItemProcessedCallback
    boolean mDisableRecycler -> mDisableRecycler
    android.support.v7.widget.OpReorderer mOpReorderer -> mOpReorderer
    android.support.v7.widget.AdapterHelper addUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp[]) -> addUpdateOp
    void reset() -> reset
    void preProcess() -> preProcess
    void consumePostponedUpdates() -> consumePostponedUpdates
    void applyMove(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyMove
    void applyRemove(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyRemove
    void applyUpdate(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyUpdate
    void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    void dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
    boolean canFindInPreLayout(int) -> canFindInPreLayout
    void applyAdd(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyAdd
    void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    boolean hasPendingUpdates() -> hasPendingUpdates
    int findPositionOffset(int) -> findPositionOffset
    int findPositionOffset(int,int) -> findPositionOffset
    boolean onItemRangeChanged(int,int) -> onItemRangeChanged
    boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    boolean onItemRangeRemoved(int,int) -> onItemRangeRemoved
    boolean onItemRangeMoved(int,int,int) -> onItemRangeMoved
    void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int) -> obtainUpdateOp
    void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
android.support.v7.widget.AdapterHelper$Callback -> android.support.v7.widget.AdapterHelper$Callback:
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    void markViewHoldersUpdated(int,int) -> markViewHoldersUpdated
    void onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
    void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    void offsetPositionsForMove(int,int) -> offsetPositionsForMove
android.support.v7.widget.AdapterHelper$UpdateOp -> android.support.v7.widget.AdapterHelper$UpdateOp:
    int ADD -> ADD
    int REMOVE -> REMOVE
    int UPDATE -> UPDATE
    int MOVE -> MOVE
    int POOL_SIZE -> POOL_SIZE
    int cmd -> cmd
    int positionStart -> positionStart
    int itemCount -> itemCount
    java.lang.String cmdToString() -> cmdToString
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v7.widget.AppCompatAutoCompleteTextView -> android.support.v7.widget.AppCompatAutoCompleteTextView:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.internal.widget.TintInfo mInternalBackgroundTint -> mInternalBackgroundTint
    android.support.v7.internal.widget.TintInfo mBackgroundTint -> mBackgroundTint
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void applySupportBackgroundTint() -> applySupportBackgroundTint
    void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
android.support.v7.widget.AppCompatButton -> android.support.v7.widget.AppCompatButton:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.internal.widget.TintInfo mInternalBackgroundTint -> mInternalBackgroundTint
    android.support.v7.internal.widget.TintInfo mBackgroundTint -> mBackgroundTint
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void applySupportBackgroundTint() -> applySupportBackgroundTint
    void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void setAllCaps(boolean) -> setAllCaps
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
android.support.v7.widget.AppCompatCheckBox -> android.support.v7.widget.AppCompatCheckBox:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    android.graphics.drawable.Drawable mButtonDrawable -> mButtonDrawable
    void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    void setButtonDrawable(int) -> setButtonDrawable
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
android.support.v7.widget.AppCompatCheckedTextView -> android.support.v7.widget.AppCompatCheckedTextView:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    void setCheckMarkDrawable(int) -> setCheckMarkDrawable
android.support.v7.widget.AppCompatEditText -> android.support.v7.widget.AppCompatEditText:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.internal.widget.TintInfo mInternalBackgroundTint -> mInternalBackgroundTint
    android.support.v7.internal.widget.TintInfo mBackgroundTint -> mBackgroundTint
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void applySupportBackgroundTint() -> applySupportBackgroundTint
    void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
android.support.v7.widget.AppCompatMultiAutoCompleteTextView -> android.support.v7.widget.AppCompatMultiAutoCompleteTextView:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.internal.widget.TintInfo mInternalBackgroundTint -> mInternalBackgroundTint
    android.support.v7.internal.widget.TintInfo mBackgroundTint -> mBackgroundTint
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void applySupportBackgroundTint() -> applySupportBackgroundTint
    void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
android.support.v7.widget.AppCompatRadioButton -> android.support.v7.widget.AppCompatRadioButton:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    android.graphics.drawable.Drawable mButtonDrawable -> mButtonDrawable
    void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    void setButtonDrawable(int) -> setButtonDrawable
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
android.support.v7.widget.AppCompatRatingBar -> android.support.v7.widget.AppCompatRatingBar:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.graphics.Bitmap mSampleTile -> mSampleTile
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    void onMeasure(int,int) -> onMeasure
android.support.v7.widget.AppCompatSpinner -> android.support.v7.widget.AppCompatSpinner:
    int[] TINT_ATTRS -> TINT_ATTRS
    android.support.v7.internal.widget.TintInfo mInternalBackgroundTint -> mInternalBackgroundTint
    android.support.v7.internal.widget.TintInfo mBackgroundTint -> mBackgroundTint
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setPopupBackgroundDrawableV11(android.widget.Spinner,android.graphics.drawable.Drawable) -> setPopupBackgroundDrawableV11
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void applySupportBackgroundTint() -> applySupportBackgroundTint
    void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
android.support.v7.widget.AppCompatTextView -> android.support.v7.widget.AppCompatTextView:
    void setAllCaps(boolean) -> setAllCaps
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
android.support.v7.widget.ChildHelper -> android.support.v7.widget.ChildHelper:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    android.support.v7.widget.ChildHelper$Callback mCallback -> mCallback
    android.support.v7.widget.ChildHelper$Bucket mBucket -> mBucket
    java.util.List mHiddenViews -> mHiddenViews
    void addView(android.view.View,boolean) -> addView
    void addView(android.view.View,int,boolean) -> addView
    int getOffset(int) -> getOffset
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    android.view.View getChildAt(int) -> getChildAt
    void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    android.view.View findHiddenNonRemovedView(int,int) -> findHiddenNonRemovedView
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    int getChildCount() -> getChildCount
    int getUnfilteredChildCount() -> getUnfilteredChildCount
    android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    void detachViewFromParent(int) -> detachViewFromParent
    int indexOfChild(android.view.View) -> indexOfChild
    boolean isHidden(android.view.View) -> isHidden
    void hide(android.view.View) -> hide
    java.lang.String toString() -> toString
    boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
android.support.v7.widget.ChildHelper$Bucket -> android.support.v7.widget.ChildHelper$Bucket:
    int BITS_PER_WORD -> BITS_PER_WORD
    long LAST_BIT -> LAST_BIT
    long mData -> mData
    android.support.v7.widget.ChildHelper$Bucket next -> next
    void set(int) -> set
    void ensureNext() -> ensureNext
    void clear(int) -> clear
    boolean get(int) -> get
    void reset() -> reset
    void insert(int,boolean) -> insert
    boolean remove(int) -> remove
    int countOnesBefore(int) -> countOnesBefore
    java.lang.String toString() -> toString
android.support.v7.widget.ChildHelper$Callback -> android.support.v7.widget.ChildHelper$Callback:
    int getChildCount() -> getChildCount
    void addView(android.view.View,int) -> addView
    int indexOfChild(android.view.View) -> indexOfChild
    void removeViewAt(int) -> removeViewAt
    android.view.View getChildAt(int) -> getChildAt
    void removeAllViews() -> removeAllViews
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    void detachViewFromParent(int) -> detachViewFromParent
android.support.v7.widget.DefaultItemAnimator -> android.support.v7.widget.DefaultItemAnimator:
    boolean DEBUG -> DEBUG
    java.util.ArrayList mPendingRemovals -> mPendingRemovals
    java.util.ArrayList mPendingAdditions -> mPendingAdditions
    java.util.ArrayList mPendingMoves -> mPendingMoves
    java.util.ArrayList mPendingChanges -> mPendingChanges
    java.util.ArrayList mAdditionsList -> mAdditionsList
    java.util.ArrayList mMovesList -> mMovesList
    java.util.ArrayList mChangesList -> mChangesList
    java.util.ArrayList mAddAnimations -> mAddAnimations
    java.util.ArrayList mMoveAnimations -> mMoveAnimations
    java.util.ArrayList mRemoveAnimations -> mRemoveAnimations
    java.util.ArrayList mChangeAnimations -> mChangeAnimations
    void runPendingAnimations() -> runPendingAnimations
    boolean animateRemove(android.support.v7.widget.RecyclerView$ViewHolder) -> animateRemove
    void animateRemoveImpl(android.support.v7.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    boolean animateAdd(android.support.v7.widget.RecyclerView$ViewHolder) -> animateAdd
    void animateAddImpl(android.support.v7.widget.RecyclerView$ViewHolder) -> animateAddImpl
    boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    void animateMoveImpl(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    void animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    void endChangeAnimation(java.util.List,android.support.v7.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    void endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    boolean endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.support.v7.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> endAnimation
    boolean isRunning() -> isRunning
    void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    void endAnimations() -> endAnimations
    void cancelAll(java.util.List) -> cancelAll
    void access$000(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> access$000
    java.util.ArrayList access$100(android.support.v7.widget.DefaultItemAnimator) -> access$100
    void access$200(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> access$200
    java.util.ArrayList access$300(android.support.v7.widget.DefaultItemAnimator) -> access$300
    void access$400(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder) -> access$400
    java.util.ArrayList access$500(android.support.v7.widget.DefaultItemAnimator) -> access$500
    java.util.ArrayList access$700(android.support.v7.widget.DefaultItemAnimator) -> access$700
    void access$800(android.support.v7.widget.DefaultItemAnimator) -> access$800
    java.util.ArrayList access$900(android.support.v7.widget.DefaultItemAnimator) -> access$900
    java.util.ArrayList access$1100(android.support.v7.widget.DefaultItemAnimator) -> access$1100
    java.util.ArrayList access$1300(android.support.v7.widget.DefaultItemAnimator) -> access$1300
android.support.v7.widget.DefaultItemAnimator$1 -> android.support.v7.widget.DefaultItemAnimator$1:
    java.util.ArrayList val$moves -> val$moves
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void run() -> run
android.support.v7.widget.DefaultItemAnimator$2 -> android.support.v7.widget.DefaultItemAnimator$2:
    java.util.ArrayList val$changes -> val$changes
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void run() -> run
android.support.v7.widget.DefaultItemAnimator$3 -> android.support.v7.widget.DefaultItemAnimator$3:
    java.util.ArrayList val$additions -> val$additions
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void run() -> run
android.support.v7.widget.DefaultItemAnimator$4 -> android.support.v7.widget.DefaultItemAnimator$4:
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> val$holder
    android.support.v4.view.ViewPropertyAnimatorCompat val$animation -> val$animation
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$5 -> android.support.v7.widget.DefaultItemAnimator$5:
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> val$holder
    android.support.v4.view.ViewPropertyAnimatorCompat val$animation -> val$animation
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationCancel(android.view.View) -> onAnimationCancel
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$6 -> android.support.v7.widget.DefaultItemAnimator$6:
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> val$holder
    int val$deltaX -> val$deltaX
    int val$deltaY -> val$deltaY
    android.support.v4.view.ViewPropertyAnimatorCompat val$animation -> val$animation
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationCancel(android.view.View) -> onAnimationCancel
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$7 -> android.support.v7.widget.DefaultItemAnimator$7:
    android.support.v7.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> val$changeInfo
    android.support.v4.view.ViewPropertyAnimatorCompat val$oldViewAnim -> val$oldViewAnim
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$8 -> android.support.v7.widget.DefaultItemAnimator$8:
    android.support.v7.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> val$changeInfo
    android.support.v4.view.ViewPropertyAnimatorCompat val$newViewAnimation -> val$newViewAnimation
    android.view.View val$newView -> val$newView
    android.support.v7.widget.DefaultItemAnimator this$0 -> this$0
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.widget.DefaultItemAnimator$ChangeInfo -> android.support.v7.widget.DefaultItemAnimator$ChangeInfo:
    android.support.v7.widget.RecyclerView$ViewHolder oldHolder -> oldHolder
    android.support.v7.widget.RecyclerView$ViewHolder newHolder -> newHolder
    int fromX -> fromX
    int fromY -> fromY
    int toX -> toX
    int toY -> toY
    java.lang.String toString() -> toString
android.support.v7.widget.DefaultItemAnimator$MoveInfo -> android.support.v7.widget.DefaultItemAnimator$MoveInfo:
    android.support.v7.widget.RecyclerView$ViewHolder holder -> holder
    int fromX -> fromX
    int fromY -> fromY
    int toX -> toX
    int toY -> toY
android.support.v7.widget.DefaultItemAnimator$VpaListenerAdapter -> android.support.v7.widget.DefaultItemAnimator$VpaListenerAdapter:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v7.widget.GridLayoutManager -> android.support.v7.widget.GridLayoutManager:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int DEFAULT_SPAN_COUNT -> DEFAULT_SPAN_COUNT
    int MAIN_DIR_SPEC -> MAIN_DIR_SPEC
    boolean mPendingSpanCountChange -> mPendingSpanCountChange
    int mSpanCount -> mSpanCount
    int[] mCachedBorders -> mCachedBorders
    android.view.View[] mSet -> mSet
    android.util.SparseIntArray mPreLayoutSpanSizeCache -> mPreLayoutSpanSizeCache
    android.util.SparseIntArray mPreLayoutSpanIndexCache -> mPreLayoutSpanIndexCache
    android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup -> mSpanSizeLookup
    android.graphics.Rect mDecorInsets -> mDecorInsets
    void setStackFromEnd(boolean) -> setStackFromEnd
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getRowCountForAccessibility
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getColumnCountForAccessibility
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> onItemsAdded
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> onItemsChanged
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> onItemsRemoved
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int) -> onItemsUpdated
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> onItemsMoved
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    void setSpanSizeLookup(android.support.v7.widget.GridLayoutManager$SpanSizeLookup) -> setSpanSizeLookup
    android.support.v7.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup() -> getSpanSizeLookup
    void updateMeasurements() -> updateMeasurements
    void calculateItemBorders(int) -> calculateItemBorders
    void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> onAnchorReady
    void ensureAnchorIsInFirstSpan(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> ensureAnchorIsInFirstSpan
    android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> getSpanGroupIndex
    int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> getSpanIndex
    int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> getSpanSize
    void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    int getMainDirSpec(int) -> getMainDirSpec
    void measureChildWithDecorationsAndMargin(android.view.View,int,int) -> measureChildWithDecorationsAndMargin
    int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
    void assignSpans(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,boolean) -> assignSpans
    int getSpanCount() -> getSpanCount
    void setSpanCount(int) -> setSpanCount
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup -> android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup:
    int getSpanSize(int) -> getSpanSize
    int getSpanIndex(int,int) -> getSpanIndex
android.support.v7.widget.GridLayoutManager$LayoutParams -> android.support.v7.widget.GridLayoutManager$LayoutParams:
    int INVALID_SPAN_ID -> INVALID_SPAN_ID
    int mSpanIndex -> mSpanIndex
    int mSpanSize -> mSpanSize
    int getSpanIndex() -> getSpanIndex
    int getSpanSize() -> getSpanSize
    int access$000(android.support.v7.widget.GridLayoutManager$LayoutParams) -> access$000
    int access$100(android.support.v7.widget.GridLayoutManager$LayoutParams) -> access$100
    int access$102(android.support.v7.widget.GridLayoutManager$LayoutParams,int) -> access$102
    int access$002(android.support.v7.widget.GridLayoutManager$LayoutParams,int) -> access$002
android.support.v7.widget.GridLayoutManager$SpanSizeLookup -> android.support.v7.widget.GridLayoutManager$SpanSizeLookup:
    android.util.SparseIntArray mSpanIndexCache -> mSpanIndexCache
    boolean mCacheSpanIndices -> mCacheSpanIndices
    int getSpanSize(int) -> getSpanSize
    void setSpanIndexCacheEnabled(boolean) -> setSpanIndexCacheEnabled
    void invalidateSpanIndexCache() -> invalidateSpanIndexCache
    boolean isSpanIndexCacheEnabled() -> isSpanIndexCacheEnabled
    int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    int getSpanIndex(int,int) -> getSpanIndex
    int findReferenceIndexFromCache(int) -> findReferenceIndexFromCache
    int getSpanGroupIndex(int,int) -> getSpanGroupIndex
android.support.v7.widget.LayoutState -> android.support.v7.widget.LayoutState:
    java.lang.String TAG -> TAG
    int LAYOUT_START -> LAYOUT_START
    int LAYOUT_END -> LAYOUT_END
    int INVALID_LAYOUT -> INVALID_LAYOUT
    int ITEM_DIRECTION_HEAD -> ITEM_DIRECTION_HEAD
    int ITEM_DIRECTION_TAIL -> ITEM_DIRECTION_TAIL
    int SCOLLING_OFFSET_NaN -> SCOLLING_OFFSET_NaN
    int mAvailable -> mAvailable
    int mCurrentPosition -> mCurrentPosition
    int mItemDirection -> mItemDirection
    int mLayoutDirection -> mLayoutDirection
    int mStartLine -> mStartLine
    int mEndLine -> mEndLine
    boolean hasMore(android.support.v7.widget.RecyclerView$State) -> hasMore
    android.view.View next(android.support.v7.widget.RecyclerView$Recycler) -> next
    java.lang.String toString() -> toString
android.support.v7.widget.LinearLayoutCompat -> android.support.v7.widget.LinearLayoutCompat:
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int SHOW_DIVIDER_NONE -> SHOW_DIVIDER_NONE
    int SHOW_DIVIDER_BEGINNING -> SHOW_DIVIDER_BEGINNING
    int SHOW_DIVIDER_MIDDLE -> SHOW_DIVIDER_MIDDLE
    int SHOW_DIVIDER_END -> SHOW_DIVIDER_END
    boolean mBaselineAligned -> mBaselineAligned
    int mBaselineAlignedChildIndex -> mBaselineAlignedChildIndex
    int mBaselineChildTop -> mBaselineChildTop
    int mOrientation -> mOrientation
    int mGravity -> mGravity
    int mTotalLength -> mTotalLength
    float mWeightSum -> mWeightSum
    boolean mUseLargestChild -> mUseLargestChild
    int[] mMaxAscent -> mMaxAscent
    int[] mMaxDescent -> mMaxDescent
    int VERTICAL_GRAVITY_COUNT -> VERTICAL_GRAVITY_COUNT
    int INDEX_CENTER_VERTICAL -> INDEX_CENTER_VERTICAL
    int INDEX_TOP -> INDEX_TOP
    int INDEX_BOTTOM -> INDEX_BOTTOM
    int INDEX_FILL -> INDEX_FILL
    android.graphics.drawable.Drawable mDivider -> mDivider
    int mDividerWidth -> mDividerWidth
    int mDividerHeight -> mDividerHeight
    int mShowDividers -> mShowDividers
    int mDividerPadding -> mDividerPadding
    void setShowDividers(int) -> setShowDividers
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    int getShowDividers() -> getShowDividers
    android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    boolean isBaselineAligned() -> isBaselineAligned
    void setBaselineAligned(boolean) -> setBaselineAligned
    boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    int getBaseline() -> getBaseline
    int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    int getVirtualChildCount() -> getVirtualChildCount
    float getWeightSum() -> getWeightSum
    void setWeightSum(float) -> setWeightSum
    void onMeasure(int,int) -> onMeasure
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    void measureVertical(int,int) -> measureVertical
    void forceUniformWidth(int,int) -> forceUniformWidth
    void measureHorizontal(int,int) -> measureHorizontal
    void forceUniformHeight(int,int) -> forceUniformHeight
    int getChildrenSkipCount(android.view.View,int) -> getChildrenSkipCount
    int measureNullChild(int) -> measureNullChild
    void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    int getLocationOffset(android.view.View) -> getLocationOffset
    int getNextLocationOffset(android.view.View) -> getNextLocationOffset
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layoutVertical(int,int,int,int) -> layoutVertical
    void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void setGravity(int) -> setGravity
    void setHorizontalGravity(int) -> setHorizontalGravity
    void setVerticalGravity(int) -> setVerticalGravity
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.v7.widget.LinearLayoutCompat$DividerMode -> android.support.v7.widget.LinearLayoutCompat$DividerMode:
android.support.v7.widget.LinearLayoutCompat$LayoutParams -> android.support.v7.widget.LinearLayoutCompat$LayoutParams:
    float weight -> weight
    int gravity -> gravity
android.support.v7.widget.LinearLayoutCompat$OrientationMode -> android.support.v7.widget.LinearLayoutCompat$OrientationMode:
android.support.v7.widget.LinearLayoutManager -> android.support.v7.widget.LinearLayoutManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int INVALID_OFFSET -> INVALID_OFFSET
    float MAX_SCROLL_FACTOR -> MAX_SCROLL_FACTOR
    int mOrientation -> mOrientation
    android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState -> mLayoutState
    android.support.v7.widget.OrientationHelper mOrientationHelper -> mOrientationHelper
    boolean mLastStackFromEnd -> mLastStackFromEnd
    boolean mReverseLayout -> mReverseLayout
    boolean mShouldReverseLayout -> mShouldReverseLayout
    boolean mStackFromEnd -> mStackFromEnd
    boolean mSmoothScrollbarEnabled -> mSmoothScrollbarEnabled
    int mPendingScrollPosition -> mPendingScrollPosition
    int mPendingScrollPositionOffset -> mPendingScrollPositionOffset
    boolean mRecycleChildrenOnDetach -> mRecycleChildrenOnDetach
    android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState -> mPendingSavedState
    android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo -> mAnchorInfo
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean getRecycleChildrenOnDetach() -> getRecycleChildrenOnDetach
    void setRecycleChildrenOnDetach(boolean) -> setRecycleChildrenOnDetach
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean canScrollHorizontally() -> canScrollHorizontally
    boolean canScrollVertically() -> canScrollVertically
    void setStackFromEnd(boolean) -> setStackFromEnd
    boolean getStackFromEnd() -> getStackFromEnd
    int getOrientation() -> getOrientation
    void setOrientation(int) -> setOrientation
    void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    boolean getReverseLayout() -> getReverseLayout
    void setReverseLayout(boolean) -> setReverseLayout
    android.view.View findViewByPosition(int) -> findViewByPosition
    int getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State) -> getExtraLayoutSpace
    void smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int) -> smoothScrollToPosition
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> onAnchorReady
    void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    int fixLayoutEndGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    int fixLayoutStartGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    void updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    void updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
    boolean isLayoutRTL() -> isLayoutRTL
    void ensureLayoutState() -> ensureLayoutState
    android.support.v7.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    void scrollToPosition(int) -> scrollToPosition
    void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollHorizontallyBy
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollVerticallyBy
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollOffset
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollExtent
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollRange
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollRange
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeScrollOffset
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeScrollExtent
    int computeScrollRange(android.support.v7.widget.RecyclerView$State) -> computeScrollRange
    void setSmoothScrollbarEnabled(boolean) -> setSmoothScrollbarEnabled
    boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    void updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State) -> updateLayoutState
    int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollBy
    void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    void recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    void recycleViewsFromStart(android.support.v7.widget.RecyclerView$Recycler,int) -> recycleViewsFromStart
    void recycleViewsFromEnd(android.support.v7.widget.RecyclerView$Recycler,int) -> recycleViewsFromEnd
    void recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean) -> fill
    void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    android.view.View getChildClosestToStart() -> getChildClosestToStart
    android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    android.view.View findReferenceChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findReferenceChildClosestToEnd
    android.view.View findReferenceChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findReferenceChildClosestToStart
    android.view.View findFirstReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findFirstReferenceChild
    android.view.View findLastReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findLastReferenceChild
    android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onFocusSearchFailed
    void logChildren() -> logChildren
    void validateChildOrder() -> validateChildOrder
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
android.support.v7.widget.LinearLayoutManager$1 -> android.support.v7.widget.LinearLayoutManager$1:
    android.support.v7.widget.LinearLayoutManager this$0 -> this$0
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
android.support.v7.widget.LinearLayoutManager$AnchorInfo -> android.support.v7.widget.LinearLayoutManager$AnchorInfo:
    int mPosition -> mPosition
    int mCoordinate -> mCoordinate
    boolean mLayoutFromEnd -> mLayoutFromEnd
    android.support.v7.widget.LinearLayoutManager this$0 -> this$0
    void reset() -> reset
    void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    java.lang.String toString() -> toString
    boolean isViewValidAsAnchor(android.view.View,android.support.v7.widget.RecyclerView$State) -> isViewValidAsAnchor
    void assignFromViewAndKeepVisibleRect(android.view.View) -> assignFromViewAndKeepVisibleRect
    void assignFromView(android.view.View) -> assignFromView
    boolean access$000(android.support.v7.widget.LinearLayoutManager$AnchorInfo,android.view.View,android.support.v7.widget.RecyclerView$State) -> access$000
android.support.v7.widget.LinearLayoutManager$LayoutChunkResult -> android.support.v7.widget.LinearLayoutManager$LayoutChunkResult:
    int mConsumed -> mConsumed
    boolean mFinished -> mFinished
    boolean mIgnoreConsumed -> mIgnoreConsumed
    boolean mFocusable -> mFocusable
    void resetInternal() -> resetInternal
android.support.v7.widget.LinearLayoutManager$LayoutState -> android.support.v7.widget.LinearLayoutManager$LayoutState:
    java.lang.String TAG -> TAG
    int LAYOUT_START -> LAYOUT_START
    int LAYOUT_END -> LAYOUT_END
    int INVALID_LAYOUT -> INVALID_LAYOUT
    int ITEM_DIRECTION_HEAD -> ITEM_DIRECTION_HEAD
    int ITEM_DIRECTION_TAIL -> ITEM_DIRECTION_TAIL
    int SCOLLING_OFFSET_NaN -> SCOLLING_OFFSET_NaN
    boolean mRecycle -> mRecycle
    int mOffset -> mOffset
    int mAvailable -> mAvailable
    int mCurrentPosition -> mCurrentPosition
    int mItemDirection -> mItemDirection
    int mLayoutDirection -> mLayoutDirection
    int mScrollingOffset -> mScrollingOffset
    int mExtra -> mExtra
    boolean mIsPreLayout -> mIsPreLayout
    int mLastScrollDelta -> mLastScrollDelta
    java.util.List mScrapList -> mScrapList
    boolean hasMore(android.support.v7.widget.RecyclerView$State) -> hasMore
    android.view.View next(android.support.v7.widget.RecyclerView$Recycler) -> next
    android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    void assignPositionFromScrapList() -> assignPositionFromScrapList
    void assignPositionFromScrapList(android.support.v7.widget.RecyclerView$ViewHolder) -> assignPositionFromScrapList
    android.support.v7.widget.RecyclerView$ViewHolder nextViewHolderInLimitedList(android.support.v7.widget.RecyclerView$ViewHolder) -> nextViewHolderInLimitedList
    void log() -> log
android.support.v7.widget.LinearLayoutManager$SavedState -> android.support.v7.widget.LinearLayoutManager$SavedState:
    int mAnchorPosition -> mAnchorPosition
    int mAnchorOffset -> mAnchorOffset
    boolean mAnchorLayoutFromEnd -> mAnchorLayoutFromEnd
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean hasValidAnchor() -> hasValidAnchor
    void invalidateAnchor() -> invalidateAnchor
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.LinearLayoutManager$SavedState$1 -> android.support.v7.widget.LinearLayoutManager$SavedState$1:
    android.support.v7.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.LinearSmoothScroller -> android.support.v7.widget.LinearSmoothScroller:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    float MILLISECONDS_PER_INCH -> MILLISECONDS_PER_INCH
    int TARGET_SEEK_SCROLL_DISTANCE_PX -> TARGET_SEEK_SCROLL_DISTANCE_PX
    int SNAP_TO_START -> SNAP_TO_START
    int SNAP_TO_END -> SNAP_TO_END
    int SNAP_TO_ANY -> SNAP_TO_ANY
    float TARGET_SEEK_EXTRA_SCROLL_RATIO -> TARGET_SEEK_EXTRA_SCROLL_RATIO
    android.view.animation.LinearInterpolator mLinearInterpolator -> mLinearInterpolator
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    android.graphics.PointF mTargetVector -> mTargetVector
    float MILLISECONDS_PER_PX -> MILLISECONDS_PER_PX
    int mInterimTargetDx -> mInterimTargetDx
    int mInterimTargetDy -> mInterimTargetDy
    void onStart() -> onStart
    void onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    void onSeekTargetStep(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    void onStop() -> onStop
    float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    int getVerticalSnapPreference() -> getVerticalSnapPreference
    void updateActionForInterimTarget(android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
    int clampApplyScroll(int,int) -> clampApplyScroll
    int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
android.support.v7.widget.ListPopupWindow -> android.support.v7.widget.ListPopupWindow:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int EXPAND_LIST_TIMEOUT -> EXPAND_LIST_TIMEOUT
    java.lang.reflect.Method sClipToWindowEnabledMethod -> sClipToWindowEnabledMethod
    android.content.Context mContext -> mContext
    android.widget.PopupWindow mPopup -> mPopup
    android.widget.ListAdapter mAdapter -> mAdapter
    android.support.v7.widget.ListPopupWindow$DropDownListView mDropDownList -> mDropDownList
    int mDropDownHeight -> mDropDownHeight
    int mDropDownWidth -> mDropDownWidth
    int mDropDownHorizontalOffset -> mDropDownHorizontalOffset
    int mDropDownVerticalOffset -> mDropDownVerticalOffset
    boolean mDropDownVerticalOffsetSet -> mDropDownVerticalOffsetSet
    int mDropDownGravity -> mDropDownGravity
    boolean mDropDownAlwaysVisible -> mDropDownAlwaysVisible
    boolean mForceIgnoreOutsideTouch -> mForceIgnoreOutsideTouch
    int mListItemExpandMaximum -> mListItemExpandMaximum
    android.view.View mPromptView -> mPromptView
    int mPromptPosition -> mPromptPosition
    android.database.DataSetObserver mObserver -> mObserver
    android.view.View mDropDownAnchorView -> mDropDownAnchorView
    android.graphics.drawable.Drawable mDropDownListHighlight -> mDropDownListHighlight
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> mItemClickListener
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> mItemSelectedListener
    android.support.v7.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> mResizePopupRunnable
    android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> mTouchInterceptor
    android.support.v7.widget.ListPopupWindow$PopupScrollListener mScrollListener -> mScrollListener
    android.support.v7.widget.ListPopupWindow$ListSelectorHider mHideSelector -> mHideSelector
    java.lang.Runnable mShowDropDownRunnable -> mShowDropDownRunnable
    android.os.Handler mHandler -> mHandler
    android.graphics.Rect mTempRect -> mTempRect
    boolean mModal -> mModal
    int mLayoutDirection -> mLayoutDirection
    int POSITION_PROMPT_ABOVE -> POSITION_PROMPT_ABOVE
    int POSITION_PROMPT_BELOW -> POSITION_PROMPT_BELOW
    int MATCH_PARENT -> MATCH_PARENT
    int WRAP_CONTENT -> WRAP_CONTENT
    int INPUT_METHOD_FROM_FOCUSABLE -> INPUT_METHOD_FROM_FOCUSABLE
    int INPUT_METHOD_NEEDED -> INPUT_METHOD_NEEDED
    int INPUT_METHOD_NOT_NEEDED -> INPUT_METHOD_NOT_NEEDED
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPromptPosition(int) -> setPromptPosition
    int getPromptPosition() -> getPromptPosition
    void setModal(boolean) -> setModal
    boolean isModal() -> isModal
    void setForceIgnoreOutsideTouch(boolean) -> setForceIgnoreOutsideTouch
    void setDropDownAlwaysVisible(boolean) -> setDropDownAlwaysVisible
    boolean isDropDownAlwaysVisible() -> isDropDownAlwaysVisible
    void setSoftInputMode(int) -> setSoftInputMode
    int getSoftInputMode() -> getSoftInputMode
    void setListSelector(android.graphics.drawable.Drawable) -> setListSelector
    android.graphics.drawable.Drawable getBackground() -> getBackground
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setAnimationStyle(int) -> setAnimationStyle
    int getAnimationStyle() -> getAnimationStyle
    android.view.View getAnchorView() -> getAnchorView
    void setAnchorView(android.view.View) -> setAnchorView
    int getHorizontalOffset() -> getHorizontalOffset
    void setHorizontalOffset(int) -> setHorizontalOffset
    int getVerticalOffset() -> getVerticalOffset
    void setVerticalOffset(int) -> setVerticalOffset
    void setDropDownGravity(int) -> setDropDownGravity
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    void setContentWidth(int) -> setContentWidth
    int getHeight() -> getHeight
    void setHeight(int) -> setHeight
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    void setPromptView(android.view.View) -> setPromptView
    void postShow() -> postShow
    void show() -> show
    void dismiss() -> dismiss
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void removePromptView() -> removePromptView
    void setInputMethodMode(int) -> setInputMethodMode
    int getInputMethodMode() -> getInputMethodMode
    void setSelection(int) -> setSelection
    void clearListSelection() -> clearListSelection
    boolean isShowing() -> isShowing
    boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    boolean performItemClick(int) -> performItemClick
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    android.widget.ListView getListView() -> getListView
    void setListItemExpandMax(int) -> setListItemExpandMax
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    android.view.View$OnTouchListener createDragToOpenListener(android.view.View) -> createDragToOpenListener
    int buildDropDown() -> buildDropDown
    boolean isConfirmKey(int) -> isConfirmKey
    void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    android.support.v7.widget.ListPopupWindow$DropDownListView access$600(android.support.v7.widget.ListPopupWindow) -> access$600
    android.widget.PopupWindow access$1100(android.support.v7.widget.ListPopupWindow) -> access$1100
    android.support.v7.widget.ListPopupWindow$ResizePopupRunnable access$1200(android.support.v7.widget.ListPopupWindow) -> access$1200
    android.os.Handler access$1300(android.support.v7.widget.ListPopupWindow) -> access$1300
android.support.v7.widget.ListPopupWindow$1 -> android.support.v7.widget.ListPopupWindow$1:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    android.support.v7.widget.ListPopupWindow getPopup() -> getPopup
android.support.v7.widget.ListPopupWindow$2 -> android.support.v7.widget.ListPopupWindow$2:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void run() -> run
android.support.v7.widget.ListPopupWindow$3 -> android.support.v7.widget.ListPopupWindow$3:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.widget.ListPopupWindow$DropDownListView -> android.support.v7.widget.ListPopupWindow$DropDownListView:
    boolean mListSelectionHidden -> mListSelectionHidden
    boolean mHijackFocus -> mHijackFocus
    boolean mDrawsInPressedState -> mDrawsInPressedState
    android.support.v4.view.ViewPropertyAnimatorCompat mClickAnimation -> mClickAnimation
    android.support.v4.widget.ListViewAutoScrollHelper mScrollHelper -> mScrollHelper
    boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    void clickPressedItem(android.view.View,int) -> clickPressedItem
    void clearPressedItem() -> clearPressedItem
    void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    boolean access$502(android.support.v7.widget.ListPopupWindow$DropDownListView,boolean) -> access$502
android.support.v7.widget.ListPopupWindow$ForwardingListener -> android.support.v7.widget.ListPopupWindow$ForwardingListener:
    float mScaledTouchSlop -> mScaledTouchSlop
    int mTapTimeout -> mTapTimeout
    int mLongPressTimeout -> mLongPressTimeout
    android.view.View mSrc -> mSrc
    java.lang.Runnable mDisallowIntercept -> mDisallowIntercept
    java.lang.Runnable mTriggerLongPress -> mTriggerLongPress
    boolean mForwarding -> mForwarding
    boolean mWasLongPress -> mWasLongPress
    int mActivePointerId -> mActivePointerId
    int[] mTmpLocation -> mTmpLocation
    android.support.v7.widget.ListPopupWindow getPopup() -> getPopup
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onForwardingStarted() -> onForwardingStarted
    boolean onForwardingStopped() -> onForwardingStopped
    boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    void clearCallbacks() -> clearCallbacks
    void onLongPress() -> onLongPress
    boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    boolean pointInView(android.view.View,float,float,float) -> pointInView
    boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
    boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    android.view.View access$900(android.support.v7.widget.ListPopupWindow$ForwardingListener) -> access$900
    void access$1000(android.support.v7.widget.ListPopupWindow$ForwardingListener) -> access$1000
android.support.v7.widget.ListPopupWindow$ForwardingListener$DisallowIntercept -> android.support.v7.widget.ListPopupWindow$ForwardingListener$DisallowIntercept:
    android.support.v7.widget.ListPopupWindow$ForwardingListener this$0 -> this$0
    void run() -> run
android.support.v7.widget.ListPopupWindow$ForwardingListener$TriggerLongPress -> android.support.v7.widget.ListPopupWindow$ForwardingListener$TriggerLongPress:
    android.support.v7.widget.ListPopupWindow$ForwardingListener this$0 -> this$0
    void run() -> run
android.support.v7.widget.ListPopupWindow$ListSelectorHider -> android.support.v7.widget.ListPopupWindow$ListSelectorHider:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void run() -> run
android.support.v7.widget.ListPopupWindow$PopupDataSetObserver -> android.support.v7.widget.ListPopupWindow$PopupDataSetObserver:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.widget.ListPopupWindow$PopupScrollListener -> android.support.v7.widget.ListPopupWindow$PopupScrollListener:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor -> android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
android.support.v7.widget.ListPopupWindow$ResizePopupRunnable -> android.support.v7.widget.ListPopupWindow$ResizePopupRunnable:
    android.support.v7.widget.ListPopupWindow this$0 -> this$0
    void run() -> run
android.support.v7.widget.OpReorderer -> android.support.v7.widget.OpReorderer:
    android.support.v7.widget.OpReorderer$Callback mCallback -> mCallback
    void reorderOps(java.util.List) -> reorderOps
    void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    void swapMoveRemove(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    void swapMoveAdd(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    void swapMoveUpdate(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
    int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
android.support.v7.widget.OpReorderer$Callback -> android.support.v7.widget.OpReorderer$Callback:
    android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int) -> obtainUpdateOp
    void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
android.support.v7.widget.OrientationHelper -> android.support.v7.widget.OrientationHelper:
    int INVALID_SIZE -> INVALID_SIZE
    android.support.v7.widget.RecyclerView$LayoutManager mLayoutManager -> mLayoutManager
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int mLastTotalSpace -> mLastTotalSpace
    void onLayoutComplete() -> onLayoutComplete
    int getTotalSpaceChange() -> getTotalSpaceChange
    int getDecoratedStart(android.view.View) -> getDecoratedStart
    int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    int getStartAfterPadding() -> getStartAfterPadding
    int getEndAfterPadding() -> getEndAfterPadding
    int getEnd() -> getEnd
    void offsetChildren(int) -> offsetChildren
    int getTotalSpace() -> getTotalSpace
    void offsetChild(android.view.View,int) -> offsetChild
    int getEndPadding() -> getEndPadding
    android.support.v7.widget.OrientationHelper createOrientationHelper(android.support.v7.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    android.support.v7.widget.OrientationHelper createHorizontalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    android.support.v7.widget.OrientationHelper createVerticalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> createVerticalHelper
android.support.v7.widget.OrientationHelper$1 -> android.support.v7.widget.OrientationHelper$1:
    int getEndAfterPadding() -> getEndAfterPadding
    int getEnd() -> getEnd
    void offsetChildren(int) -> offsetChildren
    int getStartAfterPadding() -> getStartAfterPadding
    int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    int getDecoratedStart(android.view.View) -> getDecoratedStart
    int getTotalSpace() -> getTotalSpace
    void offsetChild(android.view.View,int) -> offsetChild
    int getEndPadding() -> getEndPadding
android.support.v7.widget.OrientationHelper$2 -> android.support.v7.widget.OrientationHelper$2:
    int getEndAfterPadding() -> getEndAfterPadding
    int getEnd() -> getEnd
    void offsetChildren(int) -> offsetChildren
    int getStartAfterPadding() -> getStartAfterPadding
    int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    int getDecoratedStart(android.view.View) -> getDecoratedStart
    int getTotalSpace() -> getTotalSpace
    void offsetChild(android.view.View,int) -> offsetChild
    int getEndPadding() -> getEndPadding
android.support.v7.widget.PopupMenu -> android.support.v7.widget.PopupMenu:
    android.content.Context mContext -> mContext
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> mMenu
    android.view.View mAnchor -> mAnchor
    android.support.v7.internal.view.menu.MenuPopupHelper mPopup -> mPopup
    android.support.v7.widget.PopupMenu$OnMenuItemClickListener mMenuItemClickListener -> mMenuItemClickListener
    android.support.v7.widget.PopupMenu$OnDismissListener mDismissListener -> mDismissListener
    android.view.View$OnTouchListener mDragListener -> mDragListener
    android.view.View$OnTouchListener getDragToOpenListener() -> getDragToOpenListener
    android.view.Menu getMenu() -> getMenu
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void inflate(int) -> inflate
    void show() -> show
    void dismiss() -> dismiss
    void setOnMenuItemClickListener(android.support.v7.widget.PopupMenu$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void setOnDismissListener(android.support.v7.widget.PopupMenu$OnDismissListener) -> setOnDismissListener
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> onMenuModeChange
    android.support.v7.internal.view.menu.MenuPopupHelper access$000(android.support.v7.widget.PopupMenu) -> access$000
android.support.v7.widget.PopupMenu$1 -> android.support.v7.widget.PopupMenu$1:
    android.support.v7.widget.PopupMenu this$0 -> this$0
    boolean onForwardingStarted() -> onForwardingStarted
    boolean onForwardingStopped() -> onForwardingStopped
    android.support.v7.widget.ListPopupWindow getPopup() -> getPopup
android.support.v7.widget.PopupMenu$OnDismissListener -> android.support.v7.widget.PopupMenu$OnDismissListener:
    void onDismiss(android.support.v7.widget.PopupMenu) -> onDismiss
android.support.v7.widget.PopupMenu$OnMenuItemClickListener -> android.support.v7.widget.PopupMenu$OnMenuItemClickListener:
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.widget.PositionMap -> android.support.v7.widget.PositionMap:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v7.widget.PositionMap clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void insertKeyRange(int,int) -> insertKeyRange
    void removeKeyRange(java.util.ArrayList,int,int) -> removeKeyRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    int idealByteArraySize(int) -> idealByteArraySize
    int idealBooleanArraySize(int) -> idealBooleanArraySize
    int idealShortArraySize(int) -> idealShortArraySize
    int idealCharArraySize(int) -> idealCharArraySize
    int idealIntArraySize(int) -> idealIntArraySize
    int idealFloatArraySize(int) -> idealFloatArraySize
    int idealObjectArraySize(int) -> idealObjectArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    java.lang.Object clone() -> clone
android.support.v7.widget.PositionMap$ContainerHelpers -> android.support.v7.widget.PositionMap$ContainerHelpers:
    boolean[] EMPTY_BOOLEANS -> EMPTY_BOOLEANS
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int binarySearch(int[],int,int) -> binarySearch
android.support.v7.widget.RecyclerView -> android.support.v7.widget.RecyclerView:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean FORCE_INVALIDATE_DISPLAY_LIST -> FORCE_INVALIDATE_DISPLAY_LIST
    boolean DISPATCH_TEMP_DETACH -> DISPATCH_TEMP_DETACH
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int NO_POSITION -> NO_POSITION
    long NO_ID -> NO_ID
    int INVALID_TYPE -> INVALID_TYPE
    int TOUCH_SLOP_DEFAULT -> TOUCH_SLOP_DEFAULT
    int TOUCH_SLOP_PAGING -> TOUCH_SLOP_PAGING
    int MAX_SCROLL_DURATION -> MAX_SCROLL_DURATION
    java.lang.String TRACE_SCROLL_TAG -> TRACE_SCROLL_TAG
    java.lang.String TRACE_ON_LAYOUT_TAG -> TRACE_ON_LAYOUT_TAG
    java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG -> TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG
    java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG -> TRACE_HANDLE_ADAPTER_UPDATES_TAG
    java.lang.String TRACE_BIND_VIEW_TAG -> TRACE_BIND_VIEW_TAG
    java.lang.String TRACE_CREATE_VIEW_TAG -> TRACE_CREATE_VIEW_TAG
    java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE -> LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE
    android.support.v7.widget.RecyclerView$RecyclerViewDataObserver mObserver -> mObserver
    android.support.v7.widget.RecyclerView$Recycler mRecycler -> mRecycler
    android.support.v7.widget.RecyclerView$SavedState mPendingSavedState -> mPendingSavedState
    android.support.v7.widget.AdapterHelper mAdapterHelper -> mAdapterHelper
    android.support.v7.widget.ChildHelper mChildHelper -> mChildHelper
    boolean mClipToPadding -> mClipToPadding
    java.lang.Runnable mUpdateChildViewsRunnable -> mUpdateChildViewsRunnable
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v7.widget.RecyclerView$Adapter mAdapter -> mAdapter
    android.support.v7.widget.RecyclerView$LayoutManager mLayout -> mLayout
    android.support.v7.widget.RecyclerView$RecyclerListener mRecyclerListener -> mRecyclerListener
    java.util.ArrayList mItemDecorations -> mItemDecorations
    java.util.ArrayList mOnItemTouchListeners -> mOnItemTouchListeners
    android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener -> mActiveOnItemTouchListener
    boolean mIsAttached -> mIsAttached
    boolean mHasFixedSize -> mHasFixedSize
    boolean mFirstLayoutComplete -> mFirstLayoutComplete
    boolean mEatRequestLayout -> mEatRequestLayout
    boolean mLayoutRequestEaten -> mLayoutRequestEaten
    int mEatenAccessibilityChangeFlags -> mEatenAccessibilityChangeFlags
    boolean mAdapterUpdateDuringMeasure -> mAdapterUpdateDuringMeasure
    boolean mPostUpdatesOnAnimation -> mPostUpdatesOnAnimation
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    java.util.List mOnChildAttachStateListeners -> mOnChildAttachStateListeners
    boolean mDataSetHasChangedAfterLayout -> mDataSetHasChangedAfterLayout
    int mLayoutOrScrollCounter -> mLayoutOrScrollCounter
    android.support.v4.widget.EdgeEffectCompat mLeftGlow -> mLeftGlow
    android.support.v4.widget.EdgeEffectCompat mTopGlow -> mTopGlow
    android.support.v4.widget.EdgeEffectCompat mRightGlow -> mRightGlow
    android.support.v4.widget.EdgeEffectCompat mBottomGlow -> mBottomGlow
    android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator -> mItemAnimator
    int INVALID_POINTER -> INVALID_POINTER
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    int mScrollState -> mScrollState
    int mScrollPointerId -> mScrollPointerId
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mInitialTouchX -> mInitialTouchX
    int mInitialTouchY -> mInitialTouchY
    int mLastTouchX -> mLastTouchX
    int mLastTouchY -> mLastTouchY
    int mTouchSlop -> mTouchSlop
    int mMinFlingVelocity -> mMinFlingVelocity
    int mMaxFlingVelocity -> mMaxFlingVelocity
    float mScrollFactor -> mScrollFactor
    android.support.v7.widget.RecyclerView$ViewFlinger mViewFlinger -> mViewFlinger
    android.support.v7.widget.RecyclerView$State mState -> mState
    android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener -> mScrollListener
    java.util.List mScrollListeners -> mScrollListeners
    boolean mItemsAddedOrRemoved -> mItemsAddedOrRemoved
    boolean mItemsChanged -> mItemsChanged
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener -> mItemAnimatorListener
    boolean mPostedAnimatorRunner -> mPostedAnimatorRunner
    android.support.v7.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate -> mAccessibilityDelegate
    android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> mChildDrawingOrderCallback
    int[] mMinMaxLayoutPositions -> mMinMaxLayoutPositions
    android.support.v4.view.NestedScrollingChildHelper mScrollingChildHelper -> mScrollingChildHelper
    int[] mScrollOffset -> mScrollOffset
    int[] mScrollConsumed -> mScrollConsumed
    int[] mNestedOffsets -> mNestedOffsets
    java.lang.Runnable mItemAnimatorRunner -> mItemAnimatorRunner
    android.view.animation.Interpolator sQuinticInterpolator -> sQuinticInterpolator
    android.support.v7.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    void setAccessibilityDelegateCompat(android.support.v7.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    void initChildrenHelper() -> initChildrenHelper
    void initAdapterManager() -> initAdapterManager
    void setHasFixedSize(boolean) -> setHasFixedSize
    boolean hasFixedSize() -> hasFixedSize
    void setClipToPadding(boolean) -> setClipToPadding
    void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    void swapAdapter(android.support.v7.widget.RecyclerView$Adapter,boolean) -> swapAdapter
    void setAdapter(android.support.v7.widget.RecyclerView$Adapter) -> setAdapter
    void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    android.support.v7.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    void setRecyclerListener(android.support.v7.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    int getBaseline() -> getBaseline
    void addOnChildAttachStateChangeListener(android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    void removeOnChildAttachStateChangeListener(android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener) -> removeOnChildAttachStateChangeListener
    void clearOnChildAttachStateChangeListeners() -> clearOnChildAttachStateChangeListeners
    void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager) -> setLayoutManager
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder) -> addAnimatingView
    boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    void setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    void setItemViewCacheSize(int) -> setItemViewCacheSize
    int getScrollState() -> getScrollState
    void setScrollState(int) -> setScrollState
    void addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    void addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    void removeItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    void setChildDrawingOrderCallback(android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    void setOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    void addOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    void removeOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    void clearOnScrollListeners() -> clearOnScrollListeners
    void scrollToPosition(int) -> scrollToPosition
    void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    void smoothScrollToPosition(int) -> smoothScrollToPosition
    void scrollTo(int,int) -> scrollTo
    void scrollBy(int,int) -> scrollBy
    void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    boolean scrollByInternal(int,int,android.view.MotionEvent) -> scrollByInternal
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    void eatRequestLayout() -> eatRequestLayout
    void resumeRequestLayout(boolean) -> resumeRequestLayout
    void smoothScrollBy(int,int) -> smoothScrollBy
    boolean fling(int,int) -> fling
    void stopScroll() -> stopScroll
    void stopScrollersInternal() -> stopScrollersInternal
    int getMinFlingVelocity() -> getMinFlingVelocity
    int getMaxFlingVelocity() -> getMaxFlingVelocity
    void pullGlows(float,float,float,float) -> pullGlows
    void releaseGlows() -> releaseGlows
    void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    void absorbGlows(int,int) -> absorbGlows
    void ensureLeftGlow() -> ensureLeftGlow
    void ensureRightGlow() -> ensureRightGlow
    void ensureTopGlow() -> ensureTopGlow
    void ensureBottomGlow() -> ensureBottomGlow
    void invalidateGlows() -> invalidateGlows
    android.view.View focusSearch(android.view.View,int) -> focusSearch
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean isAttachedToWindow() -> isAttachedToWindow
    void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    void addOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    void removeOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    boolean dispatchOnItemTouchIntercept(android.view.MotionEvent) -> dispatchOnItemTouchIntercept
    boolean dispatchOnItemTouch(android.view.MotionEvent) -> dispatchOnItemTouch
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancelTouch() -> cancelTouch
    void onPointerUp(android.view.MotionEvent) -> onPointerUp
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getScrollFactor() -> getScrollFactor
    void onMeasure(int,int) -> onMeasure
    void defaultOnMeasure(int,int) -> defaultOnMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setItemAnimator(android.support.v7.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    boolean isComputingLayout() -> isComputingLayout
    boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v7.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    boolean supportsChangeAnimations() -> supportsChangeAnimations
    void postAnimationRunner() -> postAnimationRunner
    boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    void dispatchLayout() -> dispatchLayout
    void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    boolean didChildRangeChange(int,int) -> didChildRangeChange
    void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    void processDisappearingList(android.support.v4.util.ArrayMap) -> processDisappearingList
    void animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.graphics.Rect,int,int) -> animateAppearance
    void animateDisappearance(android.support.v7.widget.RecyclerView$ItemHolderInfo) -> animateDisappearance
    void animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> animateChange
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean isAnimating() -> isAnimating
    void saveOldPositions() -> saveOldPositions
    void clearOldPositions() -> clearOldPositions
    void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    void viewRangeUpdate(int,int) -> viewRangeUpdate
    void rebindUpdatedViewHolders() -> rebindUpdatedViewHolders
    void setDataSetChangedAfterLayout() -> setDataSetChangedAfterLayout
    void markKnownViewsInvalid() -> markKnownViewsInvalid
    void invalidateItemDecorations() -> invalidateItemDecorations
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    int getChildPosition(android.view.View) -> getChildPosition
    int getChildAdapterPosition(android.view.View) -> getChildAdapterPosition
    int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    long getChildItemId(android.view.View) -> getChildItemId
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForPosition(int) -> findViewHolderForPosition
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int) -> findViewHolderForLayoutPosition
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    android.view.View findChildViewUnder(float,float) -> findChildViewUnder
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void offsetChildrenVertical(int) -> offsetChildrenVertical
    void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    void onScrolled(int,int) -> onScrolled
    void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    void onScrollStateChanged(int) -> onScrollStateChanged
    void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    int getAdapterPositionFor(android.support.v7.widget.RecyclerView$ViewHolder) -> getAdapterPositionFor
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    boolean access$100(android.support.v7.widget.RecyclerView) -> access$100
    boolean access$200(android.support.v7.widget.RecyclerView) -> access$200
    boolean access$300(android.support.v7.widget.RecyclerView) -> access$300
    boolean access$502(android.support.v7.widget.RecyclerView,boolean) -> access$502
    void access$600(android.support.v7.widget.RecyclerView,android.view.View) -> access$600
    void access$700(android.support.v7.widget.RecyclerView,android.view.View) -> access$700
    void access$800(android.support.v7.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$800
    void access$900(android.support.v7.widget.RecyclerView,int) -> access$900
    android.support.v7.widget.RecyclerView$LayoutManager access$1100(android.support.v7.widget.RecyclerView) -> access$1100
    android.view.animation.Interpolator access$2000() -> access$2000
    void access$2100(android.support.v7.widget.RecyclerView) -> access$2100
    android.support.v7.widget.RecyclerView$Adapter access$2200(android.support.v7.widget.RecyclerView) -> access$2200
    void access$2300(android.support.v7.widget.RecyclerView) -> access$2300
    boolean access$2400(android.support.v7.widget.RecyclerView) -> access$2400
    void access$2500(android.support.v7.widget.RecyclerView) -> access$2500
    java.util.ArrayList access$2700(android.support.v7.widget.RecyclerView) -> access$2700
    void access$2800(android.support.v7.widget.RecyclerView,int,int) -> access$2800
    boolean access$2900(android.support.v7.widget.RecyclerView) -> access$2900
    void access$3000(android.support.v7.widget.RecyclerView,int) -> access$3000
    void access$3100(android.support.v7.widget.RecyclerView) -> access$3100
    boolean access$3200(android.support.v7.widget.RecyclerView) -> access$3200
    boolean access$3300(android.support.v7.widget.RecyclerView) -> access$3300
    boolean access$3400(android.support.v7.widget.RecyclerView) -> access$3400
    java.lang.Runnable access$3500(android.support.v7.widget.RecyclerView) -> access$3500
    boolean access$3602(android.support.v7.widget.RecyclerView,boolean) -> access$3602
    boolean access$3700() -> access$3700
    android.view.accessibility.AccessibilityManager access$3800(android.support.v7.widget.RecyclerView) -> access$3800
    android.support.v7.widget.RecyclerViewAccessibilityDelegate access$3900(android.support.v7.widget.RecyclerView) -> access$3900
    android.support.v7.widget.RecyclerView$RecyclerListener access$4200(android.support.v7.widget.RecyclerView) -> access$4200
    boolean access$4300(android.support.v7.widget.RecyclerView) -> access$4300
    void access$4400(android.support.v7.widget.RecyclerView,int,int) -> access$4400
    void access$4500(android.support.v7.widget.RecyclerView,int,int) -> access$4500
    int access$4600(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> access$4600
    android.support.v7.widget.RecyclerView$ViewFlinger access$4800(android.support.v7.widget.RecyclerView) -> access$4800
    void access$5100(android.support.v7.widget.RecyclerView,int) -> access$5100
    boolean access$5200(android.support.v7.widget.RecyclerView,android.view.View) -> access$5200
android.support.v7.widget.RecyclerView$1 -> android.support.v7.widget.RecyclerView$1:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void run() -> run
android.support.v7.widget.RecyclerView$2 -> android.support.v7.widget.RecyclerView$2:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void run() -> run
android.support.v7.widget.RecyclerView$3 -> android.support.v7.widget.RecyclerView$3:
    float getInterpolation(float) -> getInterpolation
android.support.v7.widget.RecyclerView$4 -> android.support.v7.widget.RecyclerView$4:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    int getChildCount() -> getChildCount
    void addView(android.view.View,int) -> addView
    int indexOfChild(android.view.View) -> indexOfChild
    void removeViewAt(int) -> removeViewAt
    android.view.View getChildAt(int) -> getChildAt
    void removeAllViews() -> removeAllViews
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    void detachViewFromParent(int) -> detachViewFromParent
android.support.v7.widget.RecyclerView$5 -> android.support.v7.widget.RecyclerView$5:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    void markViewHoldersUpdated(int,int) -> markViewHoldersUpdated
    void onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    void dispatchUpdate(android.support.v7.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
    void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    void offsetPositionsForMove(int,int) -> offsetPositionsForMove
android.support.v7.widget.RecyclerView$Adapter -> android.support.v7.widget.RecyclerView$Adapter:
    android.support.v7.widget.RecyclerView$AdapterDataObservable mObservable -> mObservable
    boolean mHasStableIds -> mHasStableIds
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    android.support.v7.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    void bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    int getItemViewType(int) -> getItemViewType
    void setHasStableIds(boolean) -> setHasStableIds
    long getItemId(int) -> getItemId
    int getItemCount() -> getItemCount
    boolean hasStableIds() -> hasStableIds
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewRecycled
    boolean onFailedToRecycleView(android.support.v7.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    void onViewAttachedToWindow(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    boolean hasObservers() -> hasObservers
    void registerAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    void unregisterAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
    void onAttachedToRecyclerView(android.support.v7.widget.RecyclerView) -> onAttachedToRecyclerView
    void onDetachedFromRecyclerView(android.support.v7.widget.RecyclerView) -> onDetachedFromRecyclerView
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyItemChanged(int) -> notifyItemChanged
    void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    void notifyItemInserted(int) -> notifyItemInserted
    void notifyItemMoved(int,int) -> notifyItemMoved
    void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    void notifyItemRemoved(int) -> notifyItemRemoved
    void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
android.support.v7.widget.RecyclerView$AdapterDataObservable -> android.support.v7.widget.RecyclerView$AdapterDataObservable:
    boolean hasObservers() -> hasObservers
    void notifyChanged() -> notifyChanged
    void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    void notifyItemMoved(int,int) -> notifyItemMoved
android.support.v7.widget.RecyclerView$AdapterDataObserver -> android.support.v7.widget.RecyclerView$AdapterDataObserver:
    void onChanged() -> onChanged
    void onItemRangeChanged(int,int) -> onItemRangeChanged
    void onItemRangeInserted(int,int) -> onItemRangeInserted
    void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    void onItemRangeMoved(int,int,int) -> onItemRangeMoved
android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback -> android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback:
    int onGetChildDrawingOrder(int,int) -> onGetChildDrawingOrder
android.support.v7.widget.RecyclerView$ItemAnimator -> android.support.v7.widget.RecyclerView$ItemAnimator:
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener -> mListener
    java.util.ArrayList mFinishedListeners -> mFinishedListeners
    long mAddDuration -> mAddDuration
    long mRemoveDuration -> mRemoveDuration
    long mMoveDuration -> mMoveDuration
    long mChangeDuration -> mChangeDuration
    boolean mSupportsChangeAnimations -> mSupportsChangeAnimations
    long getMoveDuration() -> getMoveDuration
    void setMoveDuration(long) -> setMoveDuration
    long getAddDuration() -> getAddDuration
    void setAddDuration(long) -> setAddDuration
    long getRemoveDuration() -> getRemoveDuration
    void setRemoveDuration(long) -> setRemoveDuration
    long getChangeDuration() -> getChangeDuration
    void setChangeDuration(long) -> setChangeDuration
    boolean getSupportsChangeAnimations() -> getSupportsChangeAnimations
    void setSupportsChangeAnimations(boolean) -> setSupportsChangeAnimations
    void setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
    void runPendingAnimations() -> runPendingAnimations
    boolean animateRemove(android.support.v7.widget.RecyclerView$ViewHolder) -> animateRemove
    boolean animateAdd(android.support.v7.widget.RecyclerView$ViewHolder) -> animateAdd
    boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    void dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    void dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    void dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    void dispatchChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    void dispatchRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    void dispatchMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    void dispatchAddStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    void dispatchChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> endAnimation
    void endAnimations() -> endAnimations
    boolean isRunning() -> isRunning
    boolean isRunning(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) -> isRunning
    void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    void onRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> onRemoveStarting
    void onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    void onAddStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> onAddStarting
    void onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onAddFinished
    void onMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> onMoveStarting
    void onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onMoveFinished
    void onChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    void onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener -> android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener:
    void onAnimationsFinished() -> onAnimationsFinished
android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener:
    void onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    void onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onAddFinished
    void onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onMoveFinished
    void onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onChangeFinished
android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener -> android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    void onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onAddFinished
    void onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onMoveFinished
    void onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onChangeFinished
android.support.v7.widget.RecyclerView$ItemDecoration -> android.support.v7.widget.RecyclerView$ItemDecoration:
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDraw
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> onDraw
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDrawOver
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> onDrawOver
    void getItemOffsets(android.graphics.Rect,int,android.support.v7.widget.RecyclerView) -> getItemOffsets
    void getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> getItemOffsets
android.support.v7.widget.RecyclerView$ItemHolderInfo -> android.support.v7.widget.RecyclerView$ItemHolderInfo:
    android.support.v7.widget.RecyclerView$ViewHolder holder -> holder
    int left -> left
    int top -> top
    int right -> right
    int bottom -> bottom
android.support.v7.widget.RecyclerView$LayoutManager -> android.support.v7.widget.RecyclerView$LayoutManager:
    android.support.v7.widget.ChildHelper mChildHelper -> mChildHelper
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller -> mSmoothScroller
    boolean mRequestedSimpleAnimations -> mRequestedSimpleAnimations
    boolean mIsAttachedToWindow -> mIsAttachedToWindow
    void setRecyclerView(android.support.v7.widget.RecyclerView) -> setRecyclerView
    void requestLayout() -> requestLayout
    void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    void dispatchAttachedToWindow(android.support.v7.widget.RecyclerView) -> dispatchAttachedToWindow
    void dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    boolean isAttachedToWindow() -> isAttachedToWindow
    void postOnAnimation(java.lang.Runnable) -> postOnAnimation
    boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    void onAttachedToWindow(android.support.v7.widget.RecyclerView) -> onAttachedToWindow
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView) -> onDetachedFromWindow
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    boolean getClipToPadding() -> getClipToPadding
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollHorizontallyBy
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollVerticallyBy
    boolean canScrollHorizontally() -> canScrollHorizontally
    boolean canScrollVertically() -> canScrollVertically
    void scrollToPosition(int) -> scrollToPosition
    void smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int) -> smoothScrollToPosition
    void startSmoothScroll(android.support.v7.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    boolean isSmoothScrolling() -> isSmoothScrolling
    int getLayoutDirection() -> getLayoutDirection
    void endAnimation(android.view.View) -> endAnimation
    void addDisappearingView(android.view.View) -> addDisappearingView
    void addDisappearingView(android.view.View,int) -> addDisappearingView
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addViewInt(android.view.View,int,boolean) -> addViewInt
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    int getBaseline() -> getBaseline
    int getPosition(android.view.View) -> getPosition
    int getItemViewType(android.view.View) -> getItemViewType
    android.view.View findViewByPosition(int) -> findViewByPosition
    void detachView(android.view.View) -> detachView
    void detachViewAt(int) -> detachViewAt
    void detachViewInternal(int,android.view.View) -> detachViewInternal
    void attachView(android.view.View,int,android.support.v7.widget.RecyclerView$LayoutParams) -> attachView
    void attachView(android.view.View,int) -> attachView
    void attachView(android.view.View) -> attachView
    void removeDetachedView(android.view.View) -> removeDetachedView
    void moveView(int,int) -> moveView
    void detachAndScrapView(android.view.View,android.support.v7.widget.RecyclerView$Recycler) -> detachAndScrapView
    void detachAndScrapViewAt(int,android.support.v7.widget.RecyclerView$Recycler) -> detachAndScrapViewAt
    void removeAndRecycleView(android.view.View,android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleView
    void removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    int getChildCount() -> getChildCount
    android.view.View getChildAt(int) -> getChildAt
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getPaddingLeft() -> getPaddingLeft
    int getPaddingTop() -> getPaddingTop
    int getPaddingRight() -> getPaddingRight
    int getPaddingBottom() -> getPaddingBottom
    int getPaddingStart() -> getPaddingStart
    int getPaddingEnd() -> getPaddingEnd
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    android.view.View getFocusedChild() -> getFocusedChild
    int getItemCount() -> getItemCount
    void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    void offsetChildrenVertical(int) -> offsetChildrenVertical
    void ignoreView(android.view.View) -> ignoreView
    void stopIgnoringView(android.view.View) -> stopIgnoringView
    void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    void measureChild(android.view.View,int,int) -> measureChild
    void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    int getChildMeasureSpec(int,int,int,boolean) -> getChildMeasureSpec
    int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    void layoutDecorated(android.view.View,int,int,int,int) -> layoutDecorated
    int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    int getDecoratedTop(android.view.View) -> getDecoratedTop
    int getDecoratedRight(android.view.View) -> getDecoratedRight
    int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onFocusSearchFailed
    android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter) -> onAdapterChanged
    boolean onAddFocusables(android.support.v7.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> onItemsChanged
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> onItemsAdded
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> onItemsRemoved
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int) -> onItemsUpdated
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> onItemsMoved
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollRange
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollExtent
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollOffset
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollRange
    void onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> onMeasure
    void setMeasuredDimension(int,int) -> setMeasuredDimension
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void stopSmoothScroller() -> stopSmoothScroller
    void onSmoothScrollerStopped(android.support.v7.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    void onScrollStateChanged(int) -> onScrollStateChanged
    void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    void onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityEvent(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfoForItem(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    int getSelectionModeForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getRowCountForAccessibility
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getColumnCountForAccessibility
    boolean isLayoutHierarchical(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> isLayoutHierarchical
    boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    boolean performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    boolean performAccessibilityActionForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    android.support.v7.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    boolean access$1700(android.support.v7.widget.RecyclerView$LayoutManager) -> access$1700
    boolean access$1702(android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> access$1702
    void access$4900(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.RecyclerView$SmoothScroller) -> access$4900
android.support.v7.widget.RecyclerView$LayoutManager$Properties -> android.support.v7.widget.RecyclerView$LayoutManager$Properties:
    int orientation -> orientation
    int spanCount -> spanCount
    boolean reverseLayout -> reverseLayout
    boolean stackFromEnd -> stackFromEnd
android.support.v7.widget.RecyclerView$LayoutParams -> android.support.v7.widget.RecyclerView$LayoutParams:
    android.support.v7.widget.RecyclerView$ViewHolder mViewHolder -> mViewHolder
    android.graphics.Rect mDecorInsets -> mDecorInsets
    boolean mInsetsDirty -> mInsetsDirty
    boolean mPendingInvalidate -> mPendingInvalidate
    boolean viewNeedsUpdate() -> viewNeedsUpdate
    boolean isViewInvalid() -> isViewInvalid
    boolean isItemRemoved() -> isItemRemoved
    boolean isItemChanged() -> isItemChanged
    int getViewPosition() -> getViewPosition
    int getViewLayoutPosition() -> getViewLayoutPosition
    int getViewAdapterPosition() -> getViewAdapterPosition
android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener -> android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener:
    void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
android.support.v7.widget.RecyclerView$OnItemTouchListener -> android.support.v7.widget.RecyclerView$OnItemTouchListener:
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
android.support.v7.widget.RecyclerView$OnScrollListener -> android.support.v7.widget.RecyclerView$OnScrollListener:
    void onScrollStateChanged(android.support.v7.widget.RecyclerView,int) -> onScrollStateChanged
    void onScrolled(android.support.v7.widget.RecyclerView,int,int) -> onScrolled
android.support.v7.widget.RecyclerView$RecycledViewPool -> android.support.v7.widget.RecyclerView$RecycledViewPool:
    android.util.SparseArray mScrap -> mScrap
    android.util.SparseIntArray mMaxScrap -> mMaxScrap
    int mAttachCount -> mAttachCount
    int DEFAULT_MAX_SCRAP -> DEFAULT_MAX_SCRAP
    void clear() -> clear
    void setMaxRecycledViews(int,int) -> setMaxRecycledViews
    android.support.v7.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    int size() -> size
    void putRecycledView(android.support.v7.widget.RecyclerView$ViewHolder) -> putRecycledView
    void attach(android.support.v7.widget.RecyclerView$Adapter) -> attach
    void detach() -> detach
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    java.util.ArrayList getScrapHeapForType(int) -> getScrapHeapForType
android.support.v7.widget.RecyclerView$Recycler -> android.support.v7.widget.RecyclerView$Recycler:
    java.util.ArrayList mAttachedScrap -> mAttachedScrap
    java.util.ArrayList mChangedScrap -> mChangedScrap
    java.util.ArrayList mCachedViews -> mCachedViews
    java.util.List mUnmodifiableAttachedScrap -> mUnmodifiableAttachedScrap
    int mViewCacheMax -> mViewCacheMax
    android.support.v7.widget.RecyclerView$RecycledViewPool mRecyclerPool -> mRecyclerPool
    android.support.v7.widget.RecyclerView$ViewCacheExtension mViewCacheExtension -> mViewCacheExtension
    int DEFAULT_CACHE_SIZE -> DEFAULT_CACHE_SIZE
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void clear() -> clear
    void setViewCacheSize(int) -> setViewCacheSize
    java.util.List getScrapList() -> getScrapList
    boolean validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    void bindViewToPosition(android.view.View,int) -> bindViewToPosition
    int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    android.view.View getViewForPosition(int) -> getViewForPosition
    android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    void attachAccessibilityDelegate(android.view.View) -> attachAccessibilityDelegate
    void invalidateDisplayListInt(android.support.v7.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    void recycleView(android.view.View) -> recycleView
    void recycleViewInternal(android.view.View) -> recycleViewInternal
    void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    void recycleCachedViewAt(int) -> recycleCachedViewAt
    void recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    void addViewHolderToRecycledViewPool(android.support.v7.widget.RecyclerView$ViewHolder) -> addViewHolderToRecycledViewPool
    void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    void scrapView(android.view.View) -> scrapView
    void unscrapView(android.support.v7.widget.RecyclerView$ViewHolder) -> unscrapView
    int getScrapCount() -> getScrapCount
    android.view.View getScrapViewAt(int) -> getScrapViewAt
    void clearScrap() -> clearScrap
    android.support.v7.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    android.support.v7.widget.RecyclerView$ViewHolder getScrapViewForPosition(int,int,boolean) -> getScrapViewForPosition
    android.support.v7.widget.RecyclerView$ViewHolder getScrapViewForId(long,int,boolean) -> getScrapViewForId
    void dispatchViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    void setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    void viewRangeUpdate(int,int) -> viewRangeUpdate
    void setAdapterPositionsAsUnknown() -> setAdapterPositionsAsUnknown
    void markKnownViewsInvalid() -> markKnownViewsInvalid
    void clearOldPositions() -> clearOldPositions
    void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    java.util.ArrayList access$1800(android.support.v7.widget.RecyclerView$Recycler) -> access$1800
android.support.v7.widget.RecyclerView$RecyclerListener -> android.support.v7.widget.RecyclerView$RecyclerListener:
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewRecycled
android.support.v7.widget.RecyclerView$RecyclerViewDataObserver -> android.support.v7.widget.RecyclerView$RecyclerViewDataObserver:
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void onChanged() -> onChanged
    void onItemRangeChanged(int,int) -> onItemRangeChanged
    void onItemRangeInserted(int,int) -> onItemRangeInserted
    void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    void triggerUpdateProcessor() -> triggerUpdateProcessor
android.support.v7.widget.RecyclerView$SavedState -> android.support.v7.widget.RecyclerView$SavedState:
    android.os.Parcelable mLayoutState -> mLayoutState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void copyFrom(android.support.v7.widget.RecyclerView$SavedState) -> copyFrom
    void access$1300(android.support.v7.widget.RecyclerView$SavedState,android.support.v7.widget.RecyclerView$SavedState) -> access$1300
android.support.v7.widget.RecyclerView$SavedState$1 -> android.support.v7.widget.RecyclerView$SavedState$1:
    android.support.v7.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.RecyclerView$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.RecyclerView$SimpleOnItemTouchListener -> android.support.v7.widget.RecyclerView$SimpleOnItemTouchListener:
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
android.support.v7.widget.RecyclerView$SmoothScroller -> android.support.v7.widget.RecyclerView$SmoothScroller:
    int mTargetPosition -> mTargetPosition
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    android.support.v7.widget.RecyclerView$LayoutManager mLayoutManager -> mLayoutManager
    boolean mPendingInitialRun -> mPendingInitialRun
    boolean mRunning -> mRunning
    android.view.View mTargetView -> mTargetView
    android.support.v7.widget.RecyclerView$SmoothScroller$Action mRecyclingAction -> mRecyclingAction
    void start(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$LayoutManager) -> start
    void setTargetPosition(int) -> setTargetPosition
    android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    void stop() -> stop
    boolean isPendingInitialRun() -> isPendingInitialRun
    boolean isRunning() -> isRunning
    int getTargetPosition() -> getTargetPosition
    void onAnimation(int,int) -> onAnimation
    int getChildPosition(android.view.View) -> getChildPosition
    int getChildCount() -> getChildCount
    android.view.View findViewByPosition(int) -> findViewByPosition
    void instantScrollToPosition(int) -> instantScrollToPosition
    void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    void normalize(android.graphics.PointF) -> normalize
    void onStart() -> onStart
    void onStop() -> onStop
    void onSeekTargetStep(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    void onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    void access$2600(android.support.v7.widget.RecyclerView$SmoothScroller,int,int) -> access$2600
android.support.v7.widget.RecyclerView$SmoothScroller$Action -> android.support.v7.widget.RecyclerView$SmoothScroller$Action:
    int UNDEFINED_DURATION -> UNDEFINED_DURATION
    int mDx -> mDx
    int mDy -> mDy
    int mDuration -> mDuration
    int mJumpToPosition -> mJumpToPosition
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean changed -> changed
    int consecutiveUpdates -> consecutiveUpdates
    void jumpTo(int) -> jumpTo
    boolean hasJumpTarget() -> hasJumpTarget
    void runIfNecessary(android.support.v7.widget.RecyclerView) -> runIfNecessary
    void validate() -> validate
    int getDx() -> getDx
    void setDx(int) -> setDx
    int getDy() -> getDy
    void setDy(int) -> setDy
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    void update(int,int,int,android.view.animation.Interpolator) -> update
    void access$5000(android.support.v7.widget.RecyclerView$SmoothScroller$Action,android.support.v7.widget.RecyclerView) -> access$5000
android.support.v7.widget.RecyclerView$State -> android.support.v7.widget.RecyclerView$State:
    int mTargetPosition -> mTargetPosition
    android.support.v4.util.ArrayMap mPreLayoutHolderMap -> mPreLayoutHolderMap
    android.support.v4.util.ArrayMap mPostLayoutHolderMap -> mPostLayoutHolderMap
    android.support.v4.util.ArrayMap mOldChangedHolders -> mOldChangedHolders
    java.util.List mDisappearingViewsInLayoutPass -> mDisappearingViewsInLayoutPass
    android.util.SparseArray mData -> mData
    int mItemCount -> mItemCount
    int mPreviousLayoutItemCount -> mPreviousLayoutItemCount
    int mDeletedInvisibleItemCountSincePreviousLayout -> mDeletedInvisibleItemCountSincePreviousLayout
    boolean mStructureChanged -> mStructureChanged
    boolean mInPreLayout -> mInPreLayout
    boolean mRunSimpleAnimations -> mRunSimpleAnimations
    boolean mRunPredictiveAnimations -> mRunPredictiveAnimations
    android.support.v7.widget.RecyclerView$State reset() -> reset
    boolean isPreLayout() -> isPreLayout
    boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
    boolean willRunSimpleAnimations() -> willRunSimpleAnimations
    void remove(int) -> remove
    java.lang.Object get(int) -> get
    void put(int,java.lang.Object) -> put
    int getTargetScrollPosition() -> getTargetScrollPosition
    boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    boolean didStructureChange() -> didStructureChange
    int getItemCount() -> getItemCount
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewRecycled
    void onViewIgnored(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewIgnored
    void removeFrom(android.support.v4.util.ArrayMap,android.support.v7.widget.RecyclerView$ViewHolder) -> removeFrom
    void removeFromDisappearingList(android.view.View) -> removeFromDisappearingList
    void addToDisappearingList(android.view.View) -> addToDisappearingList
    java.lang.String toString() -> toString
    int access$1012(android.support.v7.widget.RecyclerView$State,int) -> access$1012
    boolean access$1202(android.support.v7.widget.RecyclerView$State,boolean) -> access$1202
    boolean access$1400(android.support.v7.widget.RecyclerView$State) -> access$1400
    boolean access$1502(android.support.v7.widget.RecyclerView$State,boolean) -> access$1502
    boolean access$1602(android.support.v7.widget.RecyclerView$State,boolean) -> access$1602
    boolean access$1402(android.support.v7.widget.RecyclerView$State,boolean) -> access$1402
    boolean access$1600(android.support.v7.widget.RecyclerView$State) -> access$1600
    boolean access$1200(android.support.v7.widget.RecyclerView$State) -> access$1200
    int access$1002(android.support.v7.widget.RecyclerView$State,int) -> access$1002
    int access$1902(android.support.v7.widget.RecyclerView$State,int) -> access$1902
    boolean access$1500(android.support.v7.widget.RecyclerView$State) -> access$1500
    int access$4702(android.support.v7.widget.RecyclerView$State,int) -> access$4702
android.support.v7.widget.RecyclerView$ViewCacheExtension -> android.support.v7.widget.RecyclerView$ViewCacheExtension:
    android.view.View getViewForPositionAndType(android.support.v7.widget.RecyclerView$Recycler,int,int) -> getViewForPositionAndType
android.support.v7.widget.RecyclerView$ViewFlinger -> android.support.v7.widget.RecyclerView$ViewFlinger:
    int mLastFlingX -> mLastFlingX
    int mLastFlingY -> mLastFlingY
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mEatRunOnAnimationRequest -> mEatRunOnAnimationRequest
    boolean mReSchedulePostAnimationCallback -> mReSchedulePostAnimationCallback
    android.support.v7.widget.RecyclerView this$0 -> this$0
    void run() -> run
    void disableRunOnAnimationRequests() -> disableRunOnAnimationRequests
    void enableRunOnAnimationRequests() -> enableRunOnAnimationRequests
    void postOnAnimation() -> postOnAnimation
    void fling(int,int) -> fling
    void smoothScrollBy(int,int) -> smoothScrollBy
    void smoothScrollBy(int,int,int,int) -> smoothScrollBy
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    int computeScrollDuration(int,int,int,int) -> computeScrollDuration
    void smoothScrollBy(int,int,int) -> smoothScrollBy
    void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    void stop() -> stop
android.support.v7.widget.RecyclerView$ViewHolder -> android.support.v7.widget.RecyclerView$ViewHolder:
    android.view.View itemView -> itemView
    int mPosition -> mPosition
    int mOldPosition -> mOldPosition
    long mItemId -> mItemId
    int mItemViewType -> mItemViewType
    int mPreLayoutPosition -> mPreLayoutPosition
    android.support.v7.widget.RecyclerView$ViewHolder mShadowedHolder -> mShadowedHolder
    android.support.v7.widget.RecyclerView$ViewHolder mShadowingHolder -> mShadowingHolder
    int FLAG_BOUND -> FLAG_BOUND
    int FLAG_UPDATE -> FLAG_UPDATE
    int FLAG_INVALID -> FLAG_INVALID
    int FLAG_REMOVED -> FLAG_REMOVED
    int FLAG_NOT_RECYCLABLE -> FLAG_NOT_RECYCLABLE
    int FLAG_RETURNED_FROM_SCRAP -> FLAG_RETURNED_FROM_SCRAP
    int FLAG_CHANGED -> FLAG_CHANGED
    int FLAG_IGNORE -> FLAG_IGNORE
    int FLAG_TMP_DETACHED -> FLAG_TMP_DETACHED
    int FLAG_ADAPTER_POSITION_UNKNOWN -> FLAG_ADAPTER_POSITION_UNKNOWN
    int mFlags -> mFlags
    int mIsRecyclableCount -> mIsRecyclableCount
    android.support.v7.widget.RecyclerView$Recycler mScrapContainer -> mScrapContainer
    android.support.v7.widget.RecyclerView mOwnerRecyclerView -> mOwnerRecyclerView
    void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    void offsetPosition(int,boolean) -> offsetPosition
    void clearOldPosition() -> clearOldPosition
    void saveOldPosition() -> saveOldPosition
    boolean shouldIgnore() -> shouldIgnore
    int getPosition() -> getPosition
    int getLayoutPosition() -> getLayoutPosition
    int getAdapterPosition() -> getAdapterPosition
    int getOldPosition() -> getOldPosition
    long getItemId() -> getItemId
    int getItemViewType() -> getItemViewType
    boolean isScrap() -> isScrap
    void unScrap() -> unScrap
    boolean wasReturnedFromScrap() -> wasReturnedFromScrap
    void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    void clearTmpDetachFlag() -> clearTmpDetachFlag
    void stopIgnoring() -> stopIgnoring
    void setScrapContainer(android.support.v7.widget.RecyclerView$Recycler) -> setScrapContainer
    boolean isInvalid() -> isInvalid
    boolean needsUpdate() -> needsUpdate
    boolean isChanged() -> isChanged
    boolean isBound() -> isBound
    boolean isRemoved() -> isRemoved
    boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    boolean isTmpDetached() -> isTmpDetached
    boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    void setFlags(int,int) -> setFlags
    void addFlags(int) -> addFlags
    void resetInternal() -> resetInternal
    java.lang.String toString() -> toString
    void setIsRecyclable(boolean) -> setIsRecyclable
    boolean isRecyclable() -> isRecyclable
    boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    boolean access$4000(android.support.v7.widget.RecyclerView$ViewHolder) -> access$4000
    android.support.v7.widget.RecyclerView$Recycler access$4102(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$Recycler) -> access$4102
    boolean access$5300(android.support.v7.widget.RecyclerView$ViewHolder) -> access$5300
    int access$5400(android.support.v7.widget.RecyclerView$ViewHolder) -> access$5400
android.support.v7.widget.RecyclerViewAccessibilityDelegate -> android.support.v7.widget.RecyclerViewAccessibilityDelegate:
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    android.support.v4.view.AccessibilityDelegateCompat mItemDelegate -> mItemDelegate
    boolean shouldIgnore() -> shouldIgnore
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    android.support.v4.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    boolean access$000(android.support.v7.widget.RecyclerViewAccessibilityDelegate) -> access$000
android.support.v7.widget.RecyclerViewAccessibilityDelegate$1 -> android.support.v7.widget.RecyclerViewAccessibilityDelegate$1:
    android.support.v7.widget.RecyclerViewAccessibilityDelegate this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v7.widget.ScrollbarHelper -> android.support.v7.widget.ScrollbarHelper:
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    int computeScrollRange(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
android.support.v7.widget.SearchView -> android.support.v7.widget.SearchView:
    boolean DBG -> DBG
    java.lang.String LOG_TAG -> LOG_TAG
    boolean IS_AT_LEAST_FROYO -> IS_AT_LEAST_FROYO
    java.lang.String IME_OPTION_NO_MICROPHONE -> IME_OPTION_NO_MICROPHONE
    android.support.v7.widget.SearchView$SearchAutoComplete mSearchSrcTextView -> mSearchSrcTextView
    android.view.View mSearchEditFrame -> mSearchEditFrame
    android.view.View mSearchPlate -> mSearchPlate
    android.view.View mSubmitArea -> mSubmitArea
    android.widget.ImageView mSearchButton -> mSearchButton
    android.widget.ImageView mGoButton -> mGoButton
    android.widget.ImageView mCloseButton -> mCloseButton
    android.widget.ImageView mVoiceButton -> mVoiceButton
    android.view.View mDropDownAnchor -> mDropDownAnchor
    android.widget.ImageView mCollapsedIcon -> mCollapsedIcon
    android.graphics.drawable.Drawable mSearchHintIcon -> mSearchHintIcon
    int mSuggestionRowLayout -> mSuggestionRowLayout
    int mSuggestionCommitIconResId -> mSuggestionCommitIconResId
    android.content.Intent mVoiceWebSearchIntent -> mVoiceWebSearchIntent
    android.content.Intent mVoiceAppSearchIntent -> mVoiceAppSearchIntent
    java.lang.CharSequence mDefaultQueryHint -> mDefaultQueryHint
    android.support.v7.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> mOnQueryChangeListener
    android.support.v7.widget.SearchView$OnCloseListener mOnCloseListener -> mOnCloseListener
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> mOnQueryTextFocusChangeListener
    android.support.v7.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> mOnSuggestionListener
    android.view.View$OnClickListener mOnSearchClickListener -> mOnSearchClickListener
    boolean mIconifiedByDefault -> mIconifiedByDefault
    boolean mIconified -> mIconified
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> mSuggestionsAdapter
    boolean mSubmitButtonEnabled -> mSubmitButtonEnabled
    java.lang.CharSequence mQueryHint -> mQueryHint
    boolean mQueryRefinement -> mQueryRefinement
    boolean mClearingFocus -> mClearingFocus
    int mMaxWidth -> mMaxWidth
    boolean mVoiceButtonEnabled -> mVoiceButtonEnabled
    java.lang.CharSequence mOldQueryText -> mOldQueryText
    java.lang.CharSequence mUserQuery -> mUserQuery
    boolean mExpandedInActionView -> mExpandedInActionView
    int mCollapsedImeOptions -> mCollapsedImeOptions
    android.app.SearchableInfo mSearchable -> mSearchable
    android.os.Bundle mAppSearchData -> mAppSearchData
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    android.support.v7.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> HIDDEN_METHOD_INVOKER
    java.lang.Runnable mShowImeRunnable -> mShowImeRunnable
    java.lang.Runnable mUpdateDrawableStateRunnable -> mUpdateDrawableStateRunnable
    java.lang.Runnable mReleaseCursorRunnable -> mReleaseCursorRunnable
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    android.view.View$OnKeyListener mTextKeyListener -> mTextKeyListener
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> mOnEditorActionListener
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.text.TextWatcher mTextWatcher -> mTextWatcher
    void addOnLayoutChangeListenerToDropDownAnchorSDK11() -> addOnLayoutChangeListenerToDropDownAnchorSDK11
    void addOnLayoutChangeListenerToDropDownAnchorBase() -> addOnLayoutChangeListenerToDropDownAnchorBase
    int getSuggestionRowLayout() -> getSuggestionRowLayout
    int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(android.support.v7.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(android.support.v7.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQuery(java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    boolean isIconfiedByDefault() -> isIconfiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> isIconified
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled() -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled() -> isQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> updateViewsVisibility
    boolean hasVoiceSearch() -> hasVoiceSearch
    boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    void updateSubmitButton(boolean) -> updateSubmitButton
    void updateSubmitArea() -> updateSubmitArea
    void updateCloseButton() -> updateCloseButton
    void postUpdateFocusedState() -> postUpdateFocusedState
    void updateFocusedState() -> updateFocusedState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    void updateQueryHint() -> updateQueryHint
    void updateSearchAutoComplete() -> updateSearchAutoComplete
    void updateVoiceButton(boolean) -> updateVoiceButton
    void onTextChanged(java.lang.CharSequence) -> onTextChanged
    void onSubmitQuery() -> onSubmitQuery
    void dismissSuggestions() -> dismissSuggestions
    void onCloseClicked() -> onCloseClicked
    void onSearchClicked() -> onSearchClicked
    void onVoiceClicked() -> onVoiceClicked
    void onTextFocusChanged() -> onTextFocusChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> onActionViewCollapsed
    void onActionViewExpanded() -> onActionViewExpanded
    void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    boolean onItemSelected(int) -> onItemSelected
    void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    void launchIntent(android.content.Intent) -> launchIntent
    void setQuery(java.lang.CharSequence) -> setQuery
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    void forceSuggestionQuery() -> forceSuggestionQuery
    boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    void access$000(android.support.v7.widget.SearchView) -> access$000
    android.support.v4.widget.CursorAdapter access$100(android.support.v7.widget.SearchView) -> access$100
    android.view.View$OnFocusChangeListener access$200(android.support.v7.widget.SearchView) -> access$200
    void access$300(android.support.v7.widget.SearchView) -> access$300
    android.widget.ImageView access$400(android.support.v7.widget.SearchView) -> access$400
    void access$500(android.support.v7.widget.SearchView) -> access$500
    android.widget.ImageView access$600(android.support.v7.widget.SearchView) -> access$600
    void access$700(android.support.v7.widget.SearchView) -> access$700
    android.widget.ImageView access$800(android.support.v7.widget.SearchView) -> access$800
    void access$900(android.support.v7.widget.SearchView) -> access$900
    android.widget.ImageView access$1000(android.support.v7.widget.SearchView) -> access$1000
    void access$1100(android.support.v7.widget.SearchView) -> access$1100
    android.support.v7.widget.SearchView$SearchAutoComplete access$1200(android.support.v7.widget.SearchView) -> access$1200
    void access$1300(android.support.v7.widget.SearchView) -> access$1300
    android.app.SearchableInfo access$1400(android.support.v7.widget.SearchView) -> access$1400
    boolean access$1500(android.support.v7.widget.SearchView,android.view.View,int,android.view.KeyEvent) -> access$1500
    void access$1700(android.support.v7.widget.SearchView,int,java.lang.String,java.lang.String) -> access$1700
    boolean access$1800(android.support.v7.widget.SearchView,int,int,java.lang.String) -> access$1800
    boolean access$1900(android.support.v7.widget.SearchView,int) -> access$1900
    void access$2000(android.support.v7.widget.SearchView,java.lang.CharSequence) -> access$2000
    void access$2100(android.support.v7.widget.SearchView,boolean) -> access$2100
android.support.v7.widget.SearchView$1 -> android.support.v7.widget.SearchView$1:
    android.support.v7.widget.SearchView this$0 -> this$0
    void run() -> run
android.support.v7.widget.SearchView$10 -> android.support.v7.widget.SearchView$10:
    android.support.v7.widget.SearchView this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.widget.SearchView$11 -> android.support.v7.widget.SearchView$11:
    android.support.v7.widget.SearchView this$0 -> this$0
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.widget.SearchView$12 -> android.support.v7.widget.SearchView$12:
    android.support.v7.widget.SearchView this$0 -> this$0
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
android.support.v7.widget.SearchView$2 -> android.support.v7.widget.SearchView$2:
    android.support.v7.widget.SearchView this$0 -> this$0
    void run() -> run
android.support.v7.widget.SearchView$3 -> android.support.v7.widget.SearchView$3:
    android.support.v7.widget.SearchView this$0 -> this$0
    void run() -> run
android.support.v7.widget.SearchView$4 -> android.support.v7.widget.SearchView$4:
    android.support.v7.widget.SearchView this$0 -> this$0
    void onFocusChange(android.view.View,boolean) -> onFocusChange
android.support.v7.widget.SearchView$5 -> android.support.v7.widget.SearchView$5:
    android.support.v7.widget.SearchView this$0 -> this$0
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
android.support.v7.widget.SearchView$6 -> android.support.v7.widget.SearchView$6:
    android.support.v7.widget.SearchView this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.widget.SearchView$7 -> android.support.v7.widget.SearchView$7:
    android.support.v7.widget.SearchView this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v7.widget.SearchView$8 -> android.support.v7.widget.SearchView$8:
    android.support.v7.widget.SearchView this$0 -> this$0
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
android.support.v7.widget.SearchView$9 -> android.support.v7.widget.SearchView$9:
    android.support.v7.widget.SearchView this$0 -> this$0
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
android.support.v7.widget.SearchView$AutoCompleteTextViewReflector -> android.support.v7.widget.SearchView$AutoCompleteTextViewReflector:
    java.lang.reflect.Method doBeforeTextChanged -> doBeforeTextChanged
    java.lang.reflect.Method doAfterTextChanged -> doAfterTextChanged
    java.lang.reflect.Method ensureImeVisible -> ensureImeVisible
    java.lang.reflect.Method showSoftInputUnchecked -> showSoftInputUnchecked
    void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
    void showSoftInputUnchecked(android.view.inputmethod.InputMethodManager,android.view.View,int) -> showSoftInputUnchecked
android.support.v7.widget.SearchView$OnCloseListener -> android.support.v7.widget.SearchView$OnCloseListener:
    boolean onClose() -> onClose
android.support.v7.widget.SearchView$OnQueryTextListener -> android.support.v7.widget.SearchView$OnQueryTextListener:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v7.widget.SearchView$OnSuggestionListener -> android.support.v7.widget.SearchView$OnSuggestionListener:
    boolean onSuggestionSelect(int) -> onSuggestionSelect
    boolean onSuggestionClick(int) -> onSuggestionClick
android.support.v7.widget.SearchView$SearchAutoComplete -> android.support.v7.widget.SearchView$SearchAutoComplete:
    int mThreshold -> mThreshold
    android.support.v7.widget.SearchView mSearchView -> mSearchView
    void setSearchView(android.support.v7.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    boolean isEmpty() -> isEmpty
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean access$1600(android.support.v7.widget.SearchView$SearchAutoComplete) -> access$1600
android.support.v7.widget.ShareActionProvider -> android.support.v7.widget.ShareActionProvider:
    int DEFAULT_INITIAL_ACTIVITY_COUNT -> DEFAULT_INITIAL_ACTIVITY_COUNT
    int mMaxShownActivityCount -> mMaxShownActivityCount
    android.support.v7.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    java.lang.String DEFAULT_SHARE_HISTORY_FILE_NAME -> DEFAULT_SHARE_HISTORY_FILE_NAME
    android.content.Context mContext -> mContext
    java.lang.String mShareHistoryFileName -> mShareHistoryFileName
    android.support.v7.widget.ShareActionProvider$OnShareTargetSelectedListener mOnShareTargetSelectedListener -> mOnShareTargetSelectedListener
    android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener mOnChooseActivityListener -> mOnChooseActivityListener
    void setOnShareTargetSelectedListener(android.support.v7.widget.ShareActionProvider$OnShareTargetSelectedListener) -> setOnShareTargetSelectedListener
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void setShareHistoryFileName(java.lang.String) -> setShareHistoryFileName
    void setShareIntent(android.content.Intent) -> setShareIntent
    void setActivityChooserPolicyIfNeeded() -> setActivityChooserPolicyIfNeeded
    void updateIntent(android.content.Intent) -> updateIntent
    android.content.Context access$100(android.support.v7.widget.ShareActionProvider) -> access$100
    java.lang.String access$200(android.support.v7.widget.ShareActionProvider) -> access$200
    void access$300(android.support.v7.widget.ShareActionProvider,android.content.Intent) -> access$300
    android.support.v7.widget.ShareActionProvider$OnShareTargetSelectedListener access$500(android.support.v7.widget.ShareActionProvider) -> access$500
android.support.v7.widget.ShareActionProvider$1 -> android.support.v7.widget.ShareActionProvider$1:
android.support.v7.widget.ShareActionProvider$OnShareTargetSelectedListener -> android.support.v7.widget.ShareActionProvider$OnShareTargetSelectedListener:
    boolean onShareTargetSelected(android.support.v7.widget.ShareActionProvider,android.content.Intent) -> onShareTargetSelected
android.support.v7.widget.ShareActionProvider$ShareActivityChooserModelPolicy -> android.support.v7.widget.ShareActionProvider$ShareActivityChooserModelPolicy:
    android.support.v7.widget.ShareActionProvider this$0 -> this$0
    boolean onChooseActivity(android.support.v7.internal.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
android.support.v7.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> android.support.v7.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener:
    android.support.v7.widget.ShareActionProvider this$0 -> this$0
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.widget.StaggeredGridLayoutManager -> android.support.v7.widget.StaggeredGridLayoutManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    int GAP_HANDLING_NONE -> GAP_HANDLING_NONE
    int GAP_HANDLING_LAZY -> GAP_HANDLING_LAZY
    int GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS -> GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS
    int INVALID_OFFSET -> INVALID_OFFSET
    int mSpanCount -> mSpanCount
    android.support.v7.widget.StaggeredGridLayoutManager$Span[] mSpans -> mSpans
    android.support.v7.widget.OrientationHelper mPrimaryOrientation -> mPrimaryOrientation
    android.support.v7.widget.OrientationHelper mSecondaryOrientation -> mSecondaryOrientation
    int mOrientation -> mOrientation
    int mSizePerSpan -> mSizePerSpan
    android.support.v7.widget.LayoutState mLayoutState -> mLayoutState
    boolean mReverseLayout -> mReverseLayout
    boolean mShouldReverseLayout -> mShouldReverseLayout
    java.util.BitSet mRemainingSpans -> mRemainingSpans
    int mPendingScrollPosition -> mPendingScrollPosition
    int mPendingScrollPositionOffset -> mPendingScrollPositionOffset
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup -> mLazySpanLookup
    int mGapStrategy -> mGapStrategy
    boolean mLastLayoutFromEnd -> mLastLayoutFromEnd
    boolean mLastLayoutRTL -> mLastLayoutRTL
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState -> mPendingSavedState
    int mFullSizeSpec -> mFullSizeSpec
    int mWidthSpec -> mWidthSpec
    int mHeightSpec -> mHeightSpec
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo mAnchorInfo -> mAnchorInfo
    boolean mLaidOutInvalidFullSpan -> mLaidOutInvalidFullSpan
    boolean mSmoothScrollbarEnabled -> mSmoothScrollbarEnabled
    java.lang.Runnable mCheckForGapsRunnable -> mCheckForGapsRunnable
    boolean checkForGaps() -> checkForGaps
    void onScrollStateChanged(int) -> onScrollStateChanged
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    android.view.View hasGapsToFix() -> hasGapsToFix
    boolean checkSpanForGap(android.support.v7.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    void setSpanCount(int) -> setSpanCount
    void setOrientation(int) -> setOrientation
    void setReverseLayout(boolean) -> setReverseLayout
    int getGapStrategy() -> getGapStrategy
    void setGapStrategy(int) -> setGapStrategy
    void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    int getSpanCount() -> getSpanCount
    void invalidateSpanAssignments() -> invalidateSpanAssignments
    void ensureOrientationHelper() -> ensureOrientationHelper
    void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    boolean isLayoutRTL() -> isLayoutRTL
    boolean getReverseLayout() -> getReverseLayout
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    void applyPendingSavedState(android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    void updateMeasureSpecs() -> updateMeasureSpecs
    boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    int[] findFirstVisibleItemPositions(int[]) -> findFirstVisibleItemPositions
    int[] findFirstCompletelyVisibleItemPositions(int[]) -> findFirstCompletelyVisibleItemPositions
    int[] findLastVisibleItemPositions(int[]) -> findLastVisibleItemPositions
    int[] findLastCompletelyVisibleItemPositions(int[]) -> findLastCompletelyVisibleItemPositions
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeScrollOffset
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollOffset
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeScrollExtent
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollExtent
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollRange
    int computeScrollRange(android.support.v7.widget.RecyclerView$State) -> computeScrollRange
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollRange
    void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams) -> measureChildWithDecorationsAndMargin
    int getSpecForDimension(int,int) -> getSpecForDimension
    void measureChildWithDecorationsAndMargin(android.view.View,int,int) -> measureChildWithDecorationsAndMargin
    int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getRowCountForAccessibility
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getColumnCountForAccessibility
    android.view.View findFirstVisibleItemClosestToStart(boolean,boolean) -> findFirstVisibleItemClosestToStart
    android.view.View findFirstVisibleItemClosestToEnd(boolean,boolean) -> findFirstVisibleItemClosestToEnd
    void fixEndGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> fixEndGap
    void fixStartGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> fixStartGap
    void updateLayoutState(int,android.support.v7.widget.RecyclerView$State) -> updateLayoutState
    void setLayoutStateDirection(int) -> setLayoutStateDirection
    void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    void offsetChildrenVertical(int) -> offsetChildrenVertical
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> onItemsRemoved
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> onItemsAdded
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> onItemsChanged
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> onItemsMoved
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int) -> onItemsUpdated
    void handleUpdate(int,int,int) -> handleUpdate
    int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State) -> fill
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    void attachViewToSpans(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,android.support.v7.widget.LayoutState) -> attachViewToSpans
    void recycle(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState) -> recycle
    void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    void updateRemainingSpans(android.support.v7.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    int getMaxStart(int) -> getMaxStart
    int getMinStart(int) -> getMinStart
    boolean areAllEndsEqual() -> areAllEndsEqual
    boolean areAllStartsEqual() -> areAllStartsEqual
    int getMaxEnd(int) -> getMaxEnd
    int getMinEnd(int) -> getMinEnd
    void recycleFromStart(android.support.v7.widget.RecyclerView$Recycler,int) -> recycleFromStart
    void recycleFromEnd(android.support.v7.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    boolean preferLastSpan(int) -> preferLastSpan
    android.support.v7.widget.StaggeredGridLayoutManager$Span getNextSpan(android.support.v7.widget.LayoutState) -> getNextSpan
    boolean canScrollVertically() -> canScrollVertically
    boolean canScrollHorizontally() -> canScrollHorizontally
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollHorizontallyBy
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollVerticallyBy
    int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    void smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int) -> smoothScrollToPosition
    void scrollToPosition(int) -> scrollToPosition
    void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollBy
    int getLastChildPosition() -> getLastChildPosition
    int getFirstChildPosition() -> getFirstChildPosition
    int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    int getOrientation() -> getOrientation
    boolean access$100(android.support.v7.widget.StaggeredGridLayoutManager) -> access$100
    int access$400(android.support.v7.widget.StaggeredGridLayoutManager,int) -> access$400
    int access$500(android.support.v7.widget.StaggeredGridLayoutManager) -> access$500
    boolean access$600(android.support.v7.widget.StaggeredGridLayoutManager) -> access$600
android.support.v7.widget.StaggeredGridLayoutManager$1 -> android.support.v7.widget.StaggeredGridLayoutManager$1:
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> this$0
    void run() -> run
android.support.v7.widget.StaggeredGridLayoutManager$2 -> android.support.v7.widget.StaggeredGridLayoutManager$2:
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> this$0
    android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo -> android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo:
    int mPosition -> mPosition
    int mOffset -> mOffset
    boolean mLayoutFromEnd -> mLayoutFromEnd
    boolean mInvalidateOffsets -> mInvalidateOffsets
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> this$0
    void reset() -> reset
    void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams -> android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams:
    int INVALID_SPAN_ID -> INVALID_SPAN_ID
    android.support.v7.widget.StaggeredGridLayoutManager$Span mSpan -> mSpan
    boolean mFullSpan -> mFullSpan
    void setFullSpan(boolean) -> setFullSpan
    boolean isFullSpan() -> isFullSpan
    int getSpanIndex() -> getSpanIndex
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup -> android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup:
    int MIN_SIZE -> MIN_SIZE
    int[] mData -> mData
    java.util.List mFullSpanItems -> mFullSpanItems
    int forceInvalidateAfter(int) -> forceInvalidateAfter
    int invalidateAfter(int) -> invalidateAfter
    int getSpan(int) -> getSpan
    void setSpan(int,android.support.v7.widget.StaggeredGridLayoutManager$Span) -> setSpan
    int sizeForPosition(int) -> sizeForPosition
    void ensureSize(int) -> ensureSize
    void clear() -> clear
    void offsetForRemoval(int,int) -> offsetForRemoval
    void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    void offsetForAddition(int,int) -> offsetForAddition
    void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    void addFullSpanItem(android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    int mPosition -> mPosition
    int mGapDir -> mGapDir
    int[] mGapPerSpan -> mGapPerSpan
    boolean mHasUnwantedGapAfter -> mHasUnwantedGapAfter
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getGapForSpan(int) -> getGapForSpan
    void invalidateSpanGaps() -> invalidateSpanGaps
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.StaggeredGridLayoutManager$SavedState -> android.support.v7.widget.StaggeredGridLayoutManager$SavedState:
    int mAnchorPosition -> mAnchorPosition
    int mVisibleAnchorPosition -> mVisibleAnchorPosition
    int mSpanOffsetsSize -> mSpanOffsetsSize
    int[] mSpanOffsets -> mSpanOffsets
    int mSpanLookupSize -> mSpanLookupSize
    int[] mSpanLookup -> mSpanLookup
    java.util.List mFullSpanItems -> mFullSpanItems
    boolean mReverseLayout -> mReverseLayout
    boolean mAnchorLayoutFromEnd -> mAnchorLayoutFromEnd
    boolean mLastLayoutRTL -> mLastLayoutRTL
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void invalidateSpanInfo() -> invalidateSpanInfo
    void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1 -> android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1:
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.StaggeredGridLayoutManager$Span -> android.support.v7.widget.StaggeredGridLayoutManager$Span:
    int INVALID_LINE -> INVALID_LINE
    java.util.ArrayList mViews -> mViews
    int mCachedStart -> mCachedStart
    int mCachedEnd -> mCachedEnd
    int mDeletedSize -> mDeletedSize
    int mIndex -> mIndex
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> this$0
    int getStartLine(int) -> getStartLine
    void calculateCachedStart() -> calculateCachedStart
    int getStartLine() -> getStartLine
    int getEndLine(int) -> getEndLine
    void calculateCachedEnd() -> calculateCachedEnd
    int getEndLine() -> getEndLine
    void prependToSpan(android.view.View) -> prependToSpan
    void appendToSpan(android.view.View) -> appendToSpan
    void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    void clear() -> clear
    void invalidateCache() -> invalidateCache
    void setLine(int) -> setLine
    void popEnd() -> popEnd
    void popStart() -> popStart
    int getDeletedSize() -> getDeletedSize
    android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    void onOffset(int) -> onOffset
    int getNormalizedOffset(int,int,int) -> getNormalizedOffset
    boolean isEmpty(int,int) -> isEmpty
    int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    int findOneVisibleChild(int,int,boolean) -> findOneVisibleChild
    java.util.ArrayList access$300(android.support.v7.widget.StaggeredGridLayoutManager$Span) -> access$300
android.support.v7.widget.SuggestionsAdapter -> android.support.v7.widget.SuggestionsAdapter:
    boolean DBG -> DBG
    java.lang.String LOG_TAG -> LOG_TAG
    int QUERY_LIMIT -> QUERY_LIMIT
    int REFINE_NONE -> REFINE_NONE
    int REFINE_BY_ENTRY -> REFINE_BY_ENTRY
    int REFINE_ALL -> REFINE_ALL
    android.app.SearchManager mSearchManager -> mSearchManager
    android.support.v7.widget.SearchView mSearchView -> mSearchView
    android.app.SearchableInfo mSearchable -> mSearchable
    android.content.Context mProviderContext -> mProviderContext
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    int mCommitIconResId -> mCommitIconResId
    boolean mClosed -> mClosed
    int mQueryRefinement -> mQueryRefinement
    android.content.res.ColorStateList mUrlColor -> mUrlColor
    int INVALID_INDEX -> INVALID_INDEX
    int mText1Col -> mText1Col
    int mText2Col -> mText2Col
    int mText2UrlCol -> mText2UrlCol
    int mIconName1Col -> mIconName1Col
    int mIconName2Col -> mIconName2Col
    int mFlagsCol -> mFlagsCol
    void setQueryRefinement(int) -> setQueryRefinement
    int getQueryRefinement() -> getQueryRefinement
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    void close() -> close
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
    void changeCursor(android.database.Cursor) -> changeCursor
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
android.support.v7.widget.SuggestionsAdapter$ChildViewCache -> android.support.v7.widget.SuggestionsAdapter$ChildViewCache:
    android.widget.TextView mText1 -> mText1
    android.widget.TextView mText2 -> mText2
    android.widget.ImageView mIcon1 -> mIcon1
    android.widget.ImageView mIcon2 -> mIcon2
    android.widget.ImageView mIconRefine -> mIconRefine
android.support.v7.widget.SwitchCompat -> android.support.v7.widget.SwitchCompat:
    int THUMB_ANIMATION_DURATION -> THUMB_ANIMATION_DURATION
    int TOUCH_MODE_IDLE -> TOUCH_MODE_IDLE
    int TOUCH_MODE_DOWN -> TOUCH_MODE_DOWN
    int TOUCH_MODE_DRAGGING -> TOUCH_MODE_DRAGGING
    java.lang.String ACCESSIBILITY_EVENT_CLASS_NAME -> ACCESSIBILITY_EVENT_CLASS_NAME
    int SANS -> SANS
    int SERIF -> SERIF
    int MONOSPACE -> MONOSPACE
    android.graphics.drawable.Drawable mThumbDrawable -> mThumbDrawable
    android.graphics.drawable.Drawable mTrackDrawable -> mTrackDrawable
    int mThumbTextPadding -> mThumbTextPadding
    int mSwitchMinWidth -> mSwitchMinWidth
    int mSwitchPadding -> mSwitchPadding
    boolean mSplitTrack -> mSplitTrack
    java.lang.CharSequence mTextOn -> mTextOn
    java.lang.CharSequence mTextOff -> mTextOff
    boolean mShowText -> mShowText
    int mTouchMode -> mTouchMode
    int mTouchSlop -> mTouchSlop
    float mTouchX -> mTouchX
    float mTouchY -> mTouchY
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinFlingVelocity -> mMinFlingVelocity
    float mThumbPosition -> mThumbPosition
    int mSwitchWidth -> mSwitchWidth
    int mSwitchHeight -> mSwitchHeight
    int mThumbWidth -> mThumbWidth
    int mSwitchLeft -> mSwitchLeft
    int mSwitchTop -> mSwitchTop
    int mSwitchRight -> mSwitchRight
    int mSwitchBottom -> mSwitchBottom
    android.text.TextPaint mTextPaint -> mTextPaint
    android.content.res.ColorStateList mTextColors -> mTextColors
    android.text.Layout mOnLayout -> mOnLayout
    android.text.Layout mOffLayout -> mOffLayout
    android.text.method.TransformationMethod mSwitchTransformationMethod -> mSwitchTransformationMethod
    android.view.animation.Animation mPositionAnimator -> mPositionAnimator
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    int[] CHECKED_STATE_SET -> CHECKED_STATE_SET
    void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    void setSwitchPadding(int) -> setSwitchPadding
    int getSwitchPadding() -> getSwitchPadding
    void setSwitchMinWidth(int) -> setSwitchMinWidth
    int getSwitchMinWidth() -> getSwitchMinWidth
    void setThumbTextPadding(int) -> setThumbTextPadding
    int getThumbTextPadding() -> getThumbTextPadding
    void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    void setTrackResource(int) -> setTrackResource
    android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    void setThumbResource(int) -> setThumbResource
    android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    void setSplitTrack(boolean) -> setSplitTrack
    boolean getSplitTrack() -> getSplitTrack
    java.lang.CharSequence getTextOn() -> getTextOn
    void setTextOn(java.lang.CharSequence) -> setTextOn
    java.lang.CharSequence getTextOff() -> getTextOff
    void setTextOff(java.lang.CharSequence) -> setTextOff
    void setShowText(boolean) -> setShowText
    boolean getShowText() -> getShowText
    void onMeasure(int,int) -> onMeasure
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    boolean hitThumb(float,float) -> hitThumb
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    void stopDrag(android.view.MotionEvent) -> stopDrag
    void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    void cancelPositionAnimator() -> cancelPositionAnimator
    boolean getTargetCheckedState() -> getTargetCheckedState
    void setThumbPosition(float) -> setThumbPosition
    void toggle() -> toggle
    void setChecked(boolean) -> setChecked
    void onLayout(boolean,int,int,int,int) -> onLayout
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    int getCompoundPaddingRight() -> getCompoundPaddingRight
    int getThumbOffset() -> getThumbOffset
    int getThumbScrollRange() -> getThumbScrollRange
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void drawableStateChanged() -> drawableStateChanged
    void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    float constrain(float,float,float) -> constrain
    void access$000(android.support.v7.widget.SwitchCompat,float) -> access$000
android.support.v7.widget.SwitchCompat$1 -> android.support.v7.widget.SwitchCompat$1:
    float val$startPosition -> val$startPosition
    float val$diff -> val$diff
    android.support.v7.widget.SwitchCompat this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v7.widget.Toolbar -> android.support.v7.widget.Toolbar:
    java.lang.String TAG -> TAG
    android.support.v7.widget.ActionMenuView mMenuView -> mMenuView
    android.widget.TextView mTitleTextView -> mTitleTextView
    android.widget.TextView mSubtitleTextView -> mSubtitleTextView
    android.widget.ImageButton mNavButtonView -> mNavButtonView
    android.widget.ImageView mLogoView -> mLogoView
    android.graphics.drawable.Drawable mCollapseIcon -> mCollapseIcon
    java.lang.CharSequence mCollapseDescription -> mCollapseDescription
    android.widget.ImageButton mCollapseButtonView -> mCollapseButtonView
    android.view.View mExpandedActionView -> mExpandedActionView
    android.content.Context mPopupContext -> mPopupContext
    int mPopupTheme -> mPopupTheme
    int mTitleTextAppearance -> mTitleTextAppearance
    int mSubtitleTextAppearance -> mSubtitleTextAppearance
    int mButtonGravity -> mButtonGravity
    int mMaxButtonHeight -> mMaxButtonHeight
    int mTitleMarginStart -> mTitleMarginStart
    int mTitleMarginEnd -> mTitleMarginEnd
    int mTitleMarginTop -> mTitleMarginTop
    int mTitleMarginBottom -> mTitleMarginBottom
    android.support.v7.internal.widget.RtlSpacingHelper mContentInsets -> mContentInsets
    int mGravity -> mGravity
    java.lang.CharSequence mTitleText -> mTitleText
    java.lang.CharSequence mSubtitleText -> mSubtitleText
    int mTitleTextColor -> mTitleTextColor
    int mSubtitleTextColor -> mSubtitleTextColor
    boolean mEatingTouch -> mEatingTouch
    boolean mEatingHover -> mEatingHover
    java.util.ArrayList mTempViews -> mTempViews
    int[] mTempMargins -> mTempMargins
    android.support.v7.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener -> mMenuViewItemClickListener
    android.support.v7.internal.widget.ToolbarWidgetWrapper mWrapper -> mWrapper
    android.support.v7.widget.ActionMenuPresenter mOuterActionMenuPresenter -> mOuterActionMenuPresenter
    android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> mExpandedMenuPresenter
    android.support.v7.internal.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> mActionMenuPresenterCallback
    android.support.v7.internal.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> mMenuBuilderCallback
    boolean mCollapsible -> mCollapsible
    java.lang.Runnable mShowOverflowMenuRunnable -> mShowOverflowMenuRunnable
    android.support.v7.internal.widget.TintManager mTintManager -> mTintManager
    void setPopupTheme(int) -> setPopupTheme
    int getPopupTheme() -> getPopupTheme
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void setLogo(int) -> setLogo
    boolean canShowOverflowMenu() -> canShowOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    void setMenu(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter) -> setMenu
    void dismissPopupMenus() -> dismissPopupMenus
    boolean isTitleTruncated() -> isTitleTruncated
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    android.graphics.drawable.Drawable getLogo() -> getLogo
    void setLogoDescription(int) -> setLogoDescription
    void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    java.lang.CharSequence getLogoDescription() -> getLogoDescription
    void ensureLogoView() -> ensureLogoView
    boolean hasExpandedActionView() -> hasExpandedActionView
    void collapseActionView() -> collapseActionView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(int) -> setTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(int) -> setSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    void setTitleTextColor(int) -> setTitleTextColor
    void setSubtitleTextColor(int) -> setSubtitleTextColor
    java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    void setNavigationContentDescription(int) -> setNavigationContentDescription
    void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    void setNavigationIcon(int) -> setNavigationIcon
    void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    android.view.Menu getMenu() -> getMenu
    void ensureMenu() -> ensureMenu
    void ensureMenuView() -> ensureMenuView
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void inflateMenu(int) -> inflateMenu
    void setOnMenuItemClickListener(android.support.v7.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    int getContentInsetStart() -> getContentInsetStart
    int getContentInsetEnd() -> getContentInsetEnd
    void setContentInsetsAbsolute(int,int) -> setContentInsetsAbsolute
    int getContentInsetLeft() -> getContentInsetLeft
    int getContentInsetRight() -> getContentInsetRight
    void ensureNavButtonView() -> ensureNavButtonView
    void ensureCollapseButtonView() -> ensureCollapseButtonView
    void addSystemView(android.view.View) -> addSystemView
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void postShowOverflowMenu() -> postShowOverflowMenu
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    boolean shouldCollapse() -> shouldCollapse
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    int getChildTop(android.view.View,int) -> getChildTop
    int getChildVerticalGravity(int) -> getChildVerticalGravity
    void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    boolean shouldLayout(android.view.View) -> shouldLayout
    int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    int getVerticalMargins(android.view.View) -> getVerticalMargins
    android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.support.v7.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    boolean isCustomView(android.view.View) -> isCustomView
    android.support.v7.internal.widget.DecorToolbar getWrapper() -> getWrapper
    void setChildVisibilityForExpandedActionView(boolean) -> setChildVisibilityForExpandedActionView
    void updateChildVisibilityForExpandedActionView(android.view.View) -> updateChildVisibilityForExpandedActionView
    void setCollapsible(boolean) -> setCollapsible
    void setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.Toolbar$OnMenuItemClickListener access$000(android.support.v7.widget.Toolbar) -> access$000
    void access$200(android.support.v7.widget.Toolbar) -> access$200
    android.widget.ImageButton access$300(android.support.v7.widget.Toolbar) -> access$300
    int access$400(android.support.v7.widget.Toolbar) -> access$400
    void access$500(android.support.v7.widget.Toolbar,boolean) -> access$500
android.support.v7.widget.Toolbar$1 -> android.support.v7.widget.Toolbar$1:
    android.support.v7.widget.Toolbar this$0 -> this$0
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.widget.Toolbar$2 -> android.support.v7.widget.Toolbar$2:
    android.support.v7.widget.Toolbar this$0 -> this$0
    void run() -> run
android.support.v7.widget.Toolbar$3 -> android.support.v7.widget.Toolbar$3:
    android.support.v7.widget.Toolbar this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter -> android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> mMenu
    android.support.v7.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> mCurrentExpandedItem
    android.support.v7.widget.Toolbar this$0 -> this$0
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> initForMenu
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
android.support.v7.widget.Toolbar$LayoutParams -> android.support.v7.widget.Toolbar$LayoutParams:
    int CUSTOM -> CUSTOM
    int SYSTEM -> SYSTEM
    int EXPANDED -> EXPANDED
    int mViewType -> mViewType
    void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
android.support.v7.widget.Toolbar$OnMenuItemClickListener -> android.support.v7.widget.Toolbar$OnMenuItemClickListener:
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.widget.Toolbar$SavedState -> android.support.v7.widget.Toolbar$SavedState:
    int expandedMenuItemId -> expandedMenuItemId
    boolean isOverflowOpen -> isOverflowOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.Toolbar$SavedState$1 -> android.support.v7.widget.Toolbar$SavedState$1:
    android.support.v7.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v7.widget.Toolbar$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.helper.ItemTouchHelper -> android.support.v7.widget.helper.ItemTouchHelper:
    int UP -> UP
    int DOWN -> DOWN
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int START -> START
    int END -> END
    int ACTION_STATE_IDLE -> ACTION_STATE_IDLE
    int ACTION_STATE_SWIPE -> ACTION_STATE_SWIPE
    int ACTION_STATE_DRAG -> ACTION_STATE_DRAG
    int ANIMATION_TYPE_SWIPE_SUCCESS -> ANIMATION_TYPE_SWIPE_SUCCESS
    int ANIMATION_TYPE_SWIPE_CANCEL -> ANIMATION_TYPE_SWIPE_CANCEL
    int ANIMATION_TYPE_DRAG -> ANIMATION_TYPE_DRAG
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int ACTIVE_POINTER_ID_NONE -> ACTIVE_POINTER_ID_NONE
    int DIRECTION_FLAG_COUNT -> DIRECTION_FLAG_COUNT
    int ACTION_MODE_IDLE_MASK -> ACTION_MODE_IDLE_MASK
    int ACTION_MODE_SWIPE_MASK -> ACTION_MODE_SWIPE_MASK
    int ACTION_MODE_DRAG_MASK -> ACTION_MODE_DRAG_MASK
    java.util.List mPendingCleanup -> mPendingCleanup
    float[] mTmpPosition -> mTmpPosition
    android.support.v7.widget.RecyclerView$ViewHolder mSelected -> mSelected
    float mInitialTouchX -> mInitialTouchX
    float mInitialTouchY -> mInitialTouchY
    float mDx -> mDx
    float mDy -> mDy
    float mSelectedStartX -> mSelectedStartX
    float mSelectedStartY -> mSelectedStartY
    int mActivePointerId -> mActivePointerId
    android.support.v7.widget.helper.ItemTouchHelper$Callback mCallback -> mCallback
    int mActionState -> mActionState
    int mSelectedFlags -> mSelectedFlags
    java.util.List mRecoverAnimations -> mRecoverAnimations
    int mSlop -> mSlop
    android.support.v7.widget.RecyclerView mRecyclerView -> mRecyclerView
    java.lang.Runnable mScrollRunnable -> mScrollRunnable
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    java.util.List mSwapTargets -> mSwapTargets
    java.util.List mDistances -> mDistances
    android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> mChildDrawingOrderCallback
    android.view.View mOverdrawChild -> mOverdrawChild
    int mOverdrawChildPosition -> mOverdrawChildPosition
    android.support.v4.view.GestureDetectorCompat mGestureDetector -> mGestureDetector
    android.support.v7.widget.RecyclerView$OnItemTouchListener mOnItemTouchListener -> mOnItemTouchListener
    android.graphics.Rect mTmpRect -> mTmpRect
    long mDragScrollStartTimeInMs -> mDragScrollStartTimeInMs
    boolean hitTest(android.view.View,float,float,float,float) -> hitTest
    void attachToRecyclerView(android.support.v7.widget.RecyclerView) -> attachToRecyclerView
    void setupCallbacks() -> setupCallbacks
    void destroyCallbacks() -> destroyCallbacks
    void initGestureDetector() -> initGestureDetector
    void getSelectedDxDy(float[]) -> getSelectedDxDy
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDrawOver
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDraw
    void select(android.support.v7.widget.RecyclerView$ViewHolder,int) -> select
    void postDispatchSwipe(android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation,int) -> postDispatchSwipe
    boolean hasRunningRecoverAnim() -> hasRunningRecoverAnim
    boolean scrollIfNecessary() -> scrollIfNecessary
    java.util.List findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder) -> findSwapTargets
    void moveIfNecessary(android.support.v7.widget.RecyclerView$ViewHolder) -> moveIfNecessary
    void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
    int endRecoverAnimation(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> endRecoverAnimation
    void getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> getItemOffsets
    void obtainVelocityTracker() -> obtainVelocityTracker
    void releaseVelocityTracker() -> releaseVelocityTracker
    android.support.v7.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent) -> findSwipedView
    boolean checkSelectForSwipe(int,android.view.MotionEvent,int) -> checkSelectForSwipe
    android.view.View findChildView(android.view.MotionEvent) -> findChildView
    void startDrag(android.support.v7.widget.RecyclerView$ViewHolder) -> startDrag
    void startSwipe(android.support.v7.widget.RecyclerView$ViewHolder) -> startSwipe
    android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent) -> findAnimation
    void updateDxDy(android.view.MotionEvent,int,int) -> updateDxDy
    int swipeIfNecessary(android.support.v7.widget.RecyclerView$ViewHolder) -> swipeIfNecessary
    int checkHorizontalSwipe(android.support.v7.widget.RecyclerView$ViewHolder,int) -> checkHorizontalSwipe
    int checkVerticalSwipe(android.support.v7.widget.RecyclerView$ViewHolder,int) -> checkVerticalSwipe
    void addChildDrawingOrderCallback() -> addChildDrawingOrderCallback
    void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> removeChildDrawingOrderCallbackIfNecessary
    boolean access$000(android.support.v7.widget.helper.ItemTouchHelper) -> access$000
    void access$100(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.RecyclerView$ViewHolder) -> access$100
    java.lang.Runnable access$200(android.support.v7.widget.helper.ItemTouchHelper) -> access$200
    android.support.v7.widget.RecyclerView access$300(android.support.v7.widget.helper.ItemTouchHelper) -> access$300
    android.support.v4.view.GestureDetectorCompat access$400(android.support.v7.widget.helper.ItemTouchHelper) -> access$400
    void access$500(android.support.v7.widget.helper.ItemTouchHelper) -> access$500
    android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation access$600(android.support.v7.widget.helper.ItemTouchHelper,android.view.MotionEvent) -> access$600
    int access$700(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> access$700
    void access$800(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.RecyclerView$ViewHolder,int) -> access$800
    void access$900(android.support.v7.widget.helper.ItemTouchHelper,android.view.MotionEvent,int,int) -> access$900
    boolean access$1000(android.support.v7.widget.helper.ItemTouchHelper,int,android.view.MotionEvent,int) -> access$1000
    android.view.VelocityTracker access$1100(android.support.v7.widget.helper.ItemTouchHelper) -> access$1100
    void access$1500(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation,int) -> access$1500
    android.view.View access$1600(android.support.v7.widget.helper.ItemTouchHelper) -> access$1600
    void access$1700(android.support.v7.widget.helper.ItemTouchHelper,android.view.View) -> access$1700
    boolean access$1800(android.support.v7.widget.helper.ItemTouchHelper) -> access$1800
    int access$2300(android.support.v7.widget.helper.ItemTouchHelper) -> access$2300
    int access$2302(android.support.v7.widget.helper.ItemTouchHelper,int) -> access$2302
    android.view.View access$2400(android.support.v7.widget.helper.ItemTouchHelper,android.view.MotionEvent) -> access$2400
android.support.v7.widget.helper.ItemTouchHelper$1 -> android.support.v7.widget.helper.ItemTouchHelper$1:
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    void run() -> run
android.support.v7.widget.helper.ItemTouchHelper$2 -> android.support.v7.widget.helper.ItemTouchHelper$2:
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
android.support.v7.widget.helper.ItemTouchHelper$3 -> android.support.v7.widget.helper.ItemTouchHelper$3:
    int val$swipeDir -> val$swipeDir
    android.support.v7.widget.RecyclerView$ViewHolder val$prevSelected -> val$prevSelected
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    void onAnimationEnd(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationEnd
android.support.v7.widget.helper.ItemTouchHelper$4 -> android.support.v7.widget.helper.ItemTouchHelper$4:
    android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation val$anim -> val$anim
    int val$swipeDir -> val$swipeDir
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    void run() -> run
android.support.v7.widget.helper.ItemTouchHelper$5 -> android.support.v7.widget.helper.ItemTouchHelper$5:
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    int onGetChildDrawingOrder(int,int) -> onGetChildDrawingOrder
android.support.v7.widget.helper.ItemTouchHelper$Callback -> android.support.v7.widget.helper.ItemTouchHelper$Callback:
    int DEFAULT_DRAG_ANIMATION_DURATION -> DEFAULT_DRAG_ANIMATION_DURATION
    int DEFAULT_SWIPE_ANIMATION_DURATION -> DEFAULT_SWIPE_ANIMATION_DURATION
    int RELATIVE_DIR_FLAGS -> RELATIVE_DIR_FLAGS
    android.support.v7.widget.helper.ItemTouchUIUtil sUICallback -> sUICallback
    int ABS_HORIZONTAL_DIR_FLAGS -> ABS_HORIZONTAL_DIR_FLAGS
    android.view.animation.Interpolator sDragScrollInterpolator -> sDragScrollInterpolator
    android.view.animation.Interpolator sDragViewScrollCapInterpolator -> sDragViewScrollCapInterpolator
    long DRAG_SCROLL_ACCELERATION_LIMIT_TIME_MS -> DRAG_SCROLL_ACCELERATION_LIMIT_TIME_MS
    int mCachedMaxScrollSpeed -> mCachedMaxScrollSpeed
    android.support.v7.widget.helper.ItemTouchUIUtil getDefaultUIUtil() -> getDefaultUIUtil
    int convertToRelativeDirection(int,int) -> convertToRelativeDirection
    int makeMovementFlags(int,int) -> makeMovementFlags
    int makeFlag(int,int) -> makeFlag
    int getMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getMovementFlags
    int convertToAbsoluteDirection(int,int) -> convertToAbsoluteDirection
    int getAbsoluteMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getAbsoluteMovementFlags
    boolean hasDragFlag(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> hasDragFlag
    boolean hasSwipeFlag(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> hasSwipeFlag
    boolean canDropOver(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> canDropOver
    boolean onMove(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> onMove
    boolean isLongPressDragEnabled() -> isLongPressDragEnabled
    boolean isItemViewSwipeEnabled() -> isItemViewSwipeEnabled
    int getBoundingBoxMargin() -> getBoundingBoxMargin
    float getSwipeThreshold(android.support.v7.widget.RecyclerView$ViewHolder) -> getSwipeThreshold
    float getMoveThreshold(android.support.v7.widget.RecyclerView$ViewHolder) -> getMoveThreshold
    android.support.v7.widget.RecyclerView$ViewHolder chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int) -> chooseDropTarget
    void onSwiped(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onSwiped
    void onSelectedChanged(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
    int getMaxDragScroll(android.support.v7.widget.RecyclerView) -> getMaxDragScroll
    void onMoved(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,int,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int) -> onMoved
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDraw
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDrawOver
    void clearView(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> clearView
    void onChildDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDraw
    void onChildDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDrawOver
    long getAnimationDuration(android.support.v7.widget.RecyclerView,int,float,float) -> getAnimationDuration
    int interpolateOutOfBoundsScroll(android.support.v7.widget.RecyclerView,int,int,int,long) -> interpolateOutOfBoundsScroll
    void access$1300(android.support.v7.widget.helper.ItemTouchHelper$Callback,android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> access$1300
    void access$1400(android.support.v7.widget.helper.ItemTouchHelper$Callback,android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> access$1400
    boolean access$2100(android.support.v7.widget.helper.ItemTouchHelper$Callback,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> access$2100
    boolean access$2200(android.support.v7.widget.helper.ItemTouchHelper$Callback,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> access$2200
android.support.v7.widget.helper.ItemTouchHelper$Callback$1 -> android.support.v7.widget.helper.ItemTouchHelper$Callback$1:
    float getInterpolation(float) -> getInterpolation
android.support.v7.widget.helper.ItemTouchHelper$Callback$2 -> android.support.v7.widget.helper.ItemTouchHelper$Callback$2:
    float getInterpolation(float) -> getInterpolation
android.support.v7.widget.helper.ItemTouchHelper$ItemTouchHelperGestureListener -> android.support.v7.widget.helper.ItemTouchHelper$ItemTouchHelperGestureListener:
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    boolean onDown(android.view.MotionEvent) -> onDown
    void onLongPress(android.view.MotionEvent) -> onLongPress
android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation -> android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation:
    float mStartDx -> mStartDx
    float mStartDy -> mStartDy
    float mTargetX -> mTargetX
    float mTargetY -> mTargetY
    android.support.v7.widget.RecyclerView$ViewHolder mViewHolder -> mViewHolder
    int mActionState -> mActionState
    android.support.v4.animation.ValueAnimatorCompat mValueAnimator -> mValueAnimator
    int mAnimationType -> mAnimationType
    boolean mIsPendingCleanup -> mIsPendingCleanup
    float mX -> mX
    float mY -> mY
    boolean mOverridden -> mOverridden
    boolean mEnded -> mEnded
    float mFraction -> mFraction
    android.support.v7.widget.helper.ItemTouchHelper this$0 -> this$0
    void setDuration(long) -> setDuration
    void start() -> start
    void cancel() -> cancel
    void setFraction(float) -> setFraction
    void update() -> update
    void onAnimationStart(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationStart
    void onAnimationEnd(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationEnd
    void onAnimationCancel(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationCancel
    void onAnimationRepeat(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationRepeat
    boolean access$1900(android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation) -> access$1900
    int access$2000(android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation) -> access$2000
android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$1 -> android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$1:
    android.support.v7.widget.helper.ItemTouchHelper val$this$0 -> val$this$0
    android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation this$1 -> this$1
    void onAnimationUpdate(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationUpdate
android.support.v7.widget.helper.ItemTouchHelper$SimpleCallback -> android.support.v7.widget.helper.ItemTouchHelper$SimpleCallback:
    int mDefaultSwipeDirs -> mDefaultSwipeDirs
    int mDefaultDragDirs -> mDefaultDragDirs
    void setDefaultSwipeDirs(int) -> setDefaultSwipeDirs
    void setDefaultDragDirs(int) -> setDefaultDragDirs
    int getSwipeDirs(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getSwipeDirs
    int getDragDirs(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getDragDirs
    int getMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getMovementFlags
android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler -> android.support.v7.widget.helper.ItemTouchHelper$ViewDropHandler:
    void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
android.support.v7.widget.helper.ItemTouchUIUtil -> android.support.v7.widget.helper.ItemTouchUIUtil:
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
    void clearView(android.view.View) -> clearView
    void onSelected(android.view.View) -> onSelected
android.support.v7.widget.helper.ItemTouchUIUtilImpl -> android.support.v7.widget.helper.ItemTouchUIUtilImpl:
android.support.v7.widget.helper.ItemTouchUIUtilImpl$Gingerbread -> android.support.v7.widget.helper.ItemTouchUIUtilImpl$Gingerbread:
    void draw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float) -> draw
    void clearView(android.view.View) -> clearView
    void onSelected(android.view.View) -> onSelected
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
android.support.v7.widget.helper.ItemTouchUIUtilImpl$Honeycomb -> android.support.v7.widget.helper.ItemTouchUIUtilImpl$Honeycomb:
    void clearView(android.view.View) -> clearView
    void onSelected(android.view.View) -> onSelected
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
android.support.v7.widget.helper.ItemTouchUIUtilImpl$Lollipop -> android.support.v7.widget.helper.ItemTouchUIUtilImpl$Lollipop:
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    float findMaxElevation(android.support.v7.widget.RecyclerView,android.view.View) -> findMaxElevation
    void clearView(android.view.View) -> clearView
android.support.v7.widget.util.SortedListAdapterCallback -> android.support.v7.widget.util.SortedListAdapterCallback:
    android.support.v7.widget.RecyclerView$Adapter mAdapter -> mAdapter
    void onInserted(int,int) -> onInserted
    void onRemoved(int,int) -> onRemoved
    void onMoved(int,int) -> onMoved
    void onChanged(int,int) -> onChanged
ch.imvs.sdes4j.CryptoAttribute -> ch.imvs.sdes4j.CryptoAttribute:
    int tag -> tag
    ch.imvs.sdes4j.CryptoSuite cryptoSuite -> cryptoSuite
    ch.imvs.sdes4j.KeyParam[] keyParams -> keyParams
    ch.imvs.sdes4j.SessionParam[] sessionParams -> sessionParams
    ch.imvs.sdes4j.CryptoAttribute create(java.lang.String,ch.imvs.sdes4j.SDesFactory) -> create
    ch.imvs.sdes4j.CryptoAttribute create(java.lang.String,java.lang.String,java.lang.String,java.lang.String,ch.imvs.sdes4j.SDesFactory) -> create
    int getTag() -> getTag
    void setTag(java.lang.String) -> setTag
    ch.imvs.sdes4j.CryptoSuite getCryptoSuite() -> getCryptoSuite
    void setCryptoSuite(java.lang.String,ch.imvs.sdes4j.SDesFactory) -> setCryptoSuite
    ch.imvs.sdes4j.KeyParam[] getKeyParams() -> getKeyParams
    void setKeyParams(java.lang.String,ch.imvs.sdes4j.SDesFactory) -> setKeyParams
    ch.imvs.sdes4j.SessionParam[] getSessionParams() -> getSessionParams
    void setSessionParams(java.util.List,ch.imvs.sdes4j.SDesFactory) -> setSessionParams
    java.lang.String encode() -> encode
    java.lang.String getKeyParamsString() -> getKeyParamsString
    java.lang.String getSessionParamsString() -> getSessionParamsString
ch.imvs.sdes4j.CryptoSuite -> ch.imvs.sdes4j.CryptoSuite:
    java.lang.String encode() -> encode
ch.imvs.sdes4j.KeyParam -> ch.imvs.sdes4j.KeyParam:
    java.lang.String getKeyMethod() -> getKeyMethod
    java.lang.String encode() -> encode
ch.imvs.sdes4j.SDesFactory -> ch.imvs.sdes4j.SDesFactory:
    ch.imvs.sdes4j.CryptoSuite createCryptoSuite(java.lang.String) -> createCryptoSuite
    ch.imvs.sdes4j.KeyParam createKeyParam(java.lang.String) -> createKeyParam
    ch.imvs.sdes4j.KeyParam[] createKeyParamArray(int) -> createKeyParamArray
    ch.imvs.sdes4j.SessionParam createSessionParam(java.lang.String) -> createSessionParam
    ch.imvs.sdes4j.SessionParam[] createSessionParamArray(int) -> createSessionParamArray
    ch.imvs.sdes4j.CryptoAttribute createCryptoAttribute() -> createCryptoAttribute
    void setRandomGenerator(java.util.Random) -> setRandomGenerator
ch.imvs.sdes4j.SessionParam -> ch.imvs.sdes4j.SessionParam:
    java.lang.String encode() -> encode
ch.imvs.sdes4j.srtp.FecKeySessionParam -> ch.imvs.sdes4j.srtp.FecKeySessionParam:
    ch.imvs.sdes4j.srtp.SrtpKeyParam[] keyParams -> keyParams
    ch.imvs.sdes4j.srtp.SrtpKeyParam createSrtpKeyParam(java.lang.String) -> createSrtpKeyParam
    ch.imvs.sdes4j.srtp.SrtpKeyParam[] getKeyParams() -> getKeyParams
    java.lang.String encode() -> encode
ch.imvs.sdes4j.srtp.FecOrderSessionParam -> ch.imvs.sdes4j.srtp.FecOrderSessionParam:
    int FEC_SRTP -> FEC_SRTP
    int SRTP_FEC -> SRTP_FEC
    int mode -> mode
    int getMode() -> getMode
    java.lang.String encode() -> encode
ch.imvs.sdes4j.srtp.KdrSessionParam -> ch.imvs.sdes4j.srtp.KdrSessionParam:
    int kdr -> kdr
    int getKeyDerivationRate() -> getKeyDerivationRate
    int getKeyDerivationRateExpanded() -> getKeyDerivationRateExpanded
    java.lang.String encode() -> encode
ch.imvs.sdes4j.srtp.NoAuthSessionParam -> ch.imvs.sdes4j.srtp.NoAuthSessionParam:
    java.lang.String UNAUTHENTICATED_SRTP -> UNAUTHENTICATED_SRTP
    java.lang.String encode() -> encode
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
ch.imvs.sdes4j.srtp.PlainSrtcpSessionParam -> ch.imvs.sdes4j.srtp.PlainSrtcpSessionParam:
    java.lang.String UNENCRYPTED_SRTCP -> UNENCRYPTED_SRTCP
    java.lang.String encode() -> encode
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
ch.imvs.sdes4j.srtp.PlainSrtpSessionParam -> ch.imvs.sdes4j.srtp.PlainSrtpSessionParam:
    java.lang.String UNENCRYPTED_SRTP -> UNENCRYPTED_SRTP
    java.lang.String encode() -> encode
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
ch.imvs.sdes4j.srtp.SrtpCryptoAttribute -> ch.imvs.sdes4j.srtp.SrtpCryptoAttribute:
    ch.imvs.sdes4j.srtp.SrtpCryptoAttribute create(java.lang.String) -> create
    ch.imvs.sdes4j.srtp.SrtpCryptoAttribute create(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> create
    ch.imvs.sdes4j.srtp.SrtpCryptoSuite getCryptoSuite() -> getCryptoSuite
    ch.imvs.sdes4j.srtp.SrtpKeyParam[] getKeyParams() -> getKeyParams
    ch.imvs.sdes4j.srtp.SrtpSessionParam[] getSessionParams() -> getSessionParams
    ch.imvs.sdes4j.SessionParam[] getSessionParams() -> getSessionParams
    ch.imvs.sdes4j.KeyParam[] getKeyParams() -> getKeyParams
    ch.imvs.sdes4j.CryptoSuite getCryptoSuite() -> getCryptoSuite
ch.imvs.sdes4j.srtp.SrtpCryptoSuite -> ch.imvs.sdes4j.srtp.SrtpCryptoSuite:
    java.lang.String AES_256_CM_HMAC_SHA1_32 -> AES_256_CM_HMAC_SHA1_32
    java.lang.String AES_256_CM_HMAC_SHA1_80 -> AES_256_CM_HMAC_SHA1_80
    java.lang.String AES_192_CM_HMAC_SHA1_32 -> AES_192_CM_HMAC_SHA1_32
    java.lang.String AES_192_CM_HMAC_SHA1_80 -> AES_192_CM_HMAC_SHA1_80
    java.lang.String SEED_128_GCM_96 -> SEED_128_GCM_96
    java.lang.String SEED_128_CCM_80 -> SEED_128_CCM_80
    java.lang.String SEED_CTR_128_HMAC_SHA1_80 -> SEED_CTR_128_HMAC_SHA1_80
    java.lang.String F8_128_HMAC_SHA1_80 -> F8_128_HMAC_SHA1_80
    java.lang.String AES_CM_128_HMAC_SHA1_32 -> AES_CM_128_HMAC_SHA1_32
    java.lang.String AES_CM_128_HMAC_SHA1_80 -> AES_CM_128_HMAC_SHA1_80
    int ENCRYPTION_AES128_CM -> ENCRYPTION_AES128_CM
    int ENCRYPTION_AES128_F8 -> ENCRYPTION_AES128_F8
    int ENCRYPTION_SEED128_CTR -> ENCRYPTION_SEED128_CTR
    int ENCRYPTION_SEED128_CCM_80 -> ENCRYPTION_SEED128_CCM_80
    int ENCRYPTION_SEED128_GCM_96 -> ENCRYPTION_SEED128_GCM_96
    int ENCRYPTION_AES192_CM -> ENCRYPTION_AES192_CM
    int ENCRYPTION_AES256_CM -> ENCRYPTION_AES256_CM
    int HASH_HMAC_SHA1 -> HASH_HMAC_SHA1
    int HASH_SEED128_CCM_80 -> HASH_SEED128_CCM_80
    int HASH_SEED128_GCM_96 -> HASH_SEED128_GCM_96
    java.lang.String suite -> suite
    int encryptionAlgorithm -> encryptionAlgorithm
    int hashAlgoritm -> hashAlgoritm
    int encKeyLength -> encKeyLength
    int saltKeyLength -> saltKeyLength
    int srtpAuthTagLength -> srtpAuthTagLength
    int srtcpAuthTagLength -> srtcpAuthTagLength
    int srtpAuthKeyLength -> srtpAuthKeyLength
    int srtcpAuthKeyLength -> srtcpAuthKeyLength
    long srtpLifetime -> srtpLifetime
    long srtcpLifetime -> srtcpLifetime
    int getEncryptionAlgorithm() -> getEncryptionAlgorithm
    int getHashAlgorithm() -> getHashAlgorithm
    int getEncKeyLength() -> getEncKeyLength
    int getSaltKeyLength() -> getSaltKeyLength
    int getSrtpAuthTagLength() -> getSrtpAuthTagLength
    int getSrtcpAuthTagLength() -> getSrtcpAuthTagLength
    int getSrtpAuthKeyLength() -> getSrtpAuthKeyLength
    int getSrtcpAuthKeyLength() -> getSrtcpAuthKeyLength
    long getSrtpLifetime() -> getSrtpLifetime
    long getSrtcpLifetime() -> getSrtcpLifetime
    java.lang.String encode() -> encode
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
ch.imvs.sdes4j.srtp.SrtpKeyParam -> ch.imvs.sdes4j.srtp.SrtpKeyParam:
    java.lang.String KEYMETHOD_INLINE -> KEYMETHOD_INLINE
    java.lang.String keyMethod -> keyMethod
    byte[] key -> key
    int lifetime -> lifetime
    int mki -> mki
    int mkiLength -> mkiLength
    java.lang.String getKeyMethod() -> getKeyMethod
    byte[] getKey() -> getKey
    int getLifetime() -> getLifetime
    int getMki() -> getMki
    int getMkiLength() -> getMkiLength
    java.lang.String encode() -> encode
ch.imvs.sdes4j.srtp.SrtpSDesFactory -> ch.imvs.sdes4j.srtp.SrtpSDesFactory:
    java.util.Random r -> r
    ch.imvs.sdes4j.srtp.SrtpCryptoAttribute createCryptoAttribute(int,java.lang.String) -> createCryptoAttribute
    ch.imvs.sdes4j.srtp.SrtpCryptoAttribute createCryptoAttribute(int,java.lang.String,ch.imvs.sdes4j.srtp.SrtpSessionParam[]) -> createCryptoAttribute
    java.util.Random getRandom() -> getRandom
    void setRandomGenerator(java.util.Random) -> setRandomGenerator
    ch.imvs.sdes4j.srtp.SrtpCryptoAttribute createCryptoAttribute() -> createCryptoAttribute
    ch.imvs.sdes4j.srtp.SrtpCryptoSuite createCryptoSuite(java.lang.String) -> createCryptoSuite
    ch.imvs.sdes4j.srtp.SrtpKeyParam createKeyParam(java.lang.String) -> createKeyParam
    ch.imvs.sdes4j.srtp.SrtpKeyParam[] createKeyParamArray(int) -> createKeyParamArray
    ch.imvs.sdes4j.srtp.SrtpSessionParam createSessionParam(java.lang.String) -> createSessionParam
    ch.imvs.sdes4j.srtp.SrtpSessionParam[] createSessionParamArray(int) -> createSessionParamArray
    ch.imvs.sdes4j.CryptoAttribute createCryptoAttribute() -> createCryptoAttribute
    ch.imvs.sdes4j.SessionParam[] createSessionParamArray(int) -> createSessionParamArray
    ch.imvs.sdes4j.SessionParam createSessionParam(java.lang.String) -> createSessionParam
    ch.imvs.sdes4j.KeyParam[] createKeyParamArray(int) -> createKeyParamArray
    ch.imvs.sdes4j.KeyParam createKeyParam(java.lang.String) -> createKeyParam
    ch.imvs.sdes4j.CryptoSuite createCryptoSuite(java.lang.String) -> createCryptoSuite
ch.imvs.sdes4j.srtp.SrtpSessionParam -> ch.imvs.sdes4j.srtp.SrtpSessionParam:
    ch.imvs.sdes4j.srtp.SrtpSessionParam create(java.lang.String) -> create
ch.imvs.sdes4j.srtp.WshSessionParam -> ch.imvs.sdes4j.srtp.WshSessionParam:
    int wsh -> wsh
    int getWindowSizeHint() -> getWindowSizeHint
    java.lang.String encode() -> encode
cn.jpush.android.a -> cn.jpush.android.a:
    java.lang.String[] z -> z
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    long d() -> d
    java.lang.String e() -> e
    void a(java.lang.String) -> a
    int f() -> f
    void a(int) -> a
    boolean g() -> g
    void h() -> h
    boolean b(java.lang.String) -> b
    cn.jpush.android.service.a a(android.content.Context) -> a
    void a(android.content.Context,cn.jpush.android.service.a) -> a
    int i() -> i
    void b(int) -> b
    long j() -> j
    void a(long) -> a
    long k() -> k
    boolean l() -> l
    void a(boolean) -> a
    int m() -> m
    void n() -> n
    java.lang.String o() -> o
    void c(java.lang.String) -> c
    int p() -> p
    void c(int) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    java.lang.String q() -> q
    void f(java.lang.String) -> f
    long r() -> r
    void b(long) -> b
    long s() -> s
    void a(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean t() -> t
    void u() -> u
    java.lang.String v() -> v
    java.lang.String w() -> w
    void o(java.lang.String) -> o
    java.lang.String x() -> x
    java.lang.String y() -> y
    void g(java.lang.String) -> g
    java.lang.String z() -> z
    void h(java.lang.String) -> h
    java.lang.String A() -> A
    void i(java.lang.String) -> i
    boolean B() -> B
    boolean a(java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    java.lang.String C() -> C
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void l(java.lang.String) -> l
    void m(java.lang.String) -> m
    java.lang.String D() -> D
    void a(android.content.Context,int) -> a
    int b(android.content.Context) -> b
    void b(android.content.Context,int) -> b
    int c(android.content.Context) -> c
    void a(android.content.Context,boolean) -> a
    boolean d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String f(android.content.Context) -> f
    void b(android.content.Context,java.lang.String) -> b
    java.lang.String g(android.content.Context) -> g
    void c(android.content.Context,java.lang.String) -> c
    java.lang.String h(android.content.Context) -> h
    void d(android.content.Context,java.lang.String) -> d
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String e(android.content.Context,java.lang.String) -> e
    void c(android.content.Context,int) -> c
    void i(android.content.Context) -> i
cn.jpush.android.api.BasicPushNotificationBuilder -> cn.jpush.android.api.BasicPushNotificationBuilder:
    int notificationDefaults -> notificationDefaults
    int notificationFlags -> notificationFlags
    int statusBarDrawable -> statusBarDrawable
    java.lang.String developerArg0 -> developerArg0
    android.content.Context a -> a
    java.lang.String[] z -> z
    java.lang.String a() -> a
    void a(android.app.Notification) -> a
    java.lang.String toString() -> toString
    java.lang.String b() -> b
    void a(java.lang.String[]) -> a
    cn.jpush.android.api.PushNotificationBuilder a(java.lang.String) -> a
cn.jpush.android.api.CustomPushNotificationBuilder -> cn.jpush.android.api.CustomPushNotificationBuilder:
    int layout -> layout
    int layoutIconId -> layoutIconId
    int layoutTitleId -> layoutTitleId
    int layoutContentId -> layoutContentId
    int layoutIconDrawable -> layoutIconDrawable
    java.lang.String[] z -> z
    android.widget.RemoteViews b(java.lang.String) -> b
    java.lang.String toString() -> toString
    java.lang.String b() -> b
    void a(java.lang.String[]) -> a
cn.jpush.android.api.DefaultPushNotificationBuilder -> cn.jpush.android.api.DefaultPushNotificationBuilder:
    java.lang.String b -> b
    java.lang.String[] z -> z
    java.lang.String a() -> a
    android.widget.RemoteViews b(java.lang.String) -> b
    void a(android.app.Notification) -> a
    android.app.Notification a(java.lang.String,java.util.Map) -> a
cn.jpush.android.api.InstrumentedActivity -> cn.jpush.android.api.InstrumentedActivity:
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
cn.jpush.android.api.InstrumentedListActivity -> cn.jpush.android.api.InstrumentedListActivity:
    void onStart() -> onStart
    void onStop() -> onStop
    void onResume() -> onResume
    void onPause() -> onPause
cn.jpush.android.api.JPushInterface -> cn.jpush.android.api.JPushInterface:
    java.lang.String ACTION_CONNECTION_CHANGE -> ACTION_CONNECTION_CHANGE
    java.lang.String ACTION_REGISTRATION_ID -> ACTION_REGISTRATION_ID
    java.lang.String ACTION_STOPPUSH -> ACTION_STOPPUSH
    java.lang.String ACTION_RESTOREPUSH -> ACTION_RESTOREPUSH
    java.lang.String ACTION_MESSAGE_RECEIVED -> ACTION_MESSAGE_RECEIVED
    java.lang.String ACTION_NOTIFICATION_RECEIVED -> ACTION_NOTIFICATION_RECEIVED
    java.lang.String ACTION_NOTIFICATION_OPENED -> ACTION_NOTIFICATION_OPENED
    java.lang.String ACTION_NOTIFICATION_RECEIVED_PROXY -> ACTION_NOTIFICATION_RECEIVED_PROXY
    java.lang.String ACTION_STATUS -> ACTION_STATUS
    java.lang.String ACTION_ACTIVITY_OPENDED -> ACTION_ACTIVITY_OPENDED
    java.lang.String EXTRA_CONNECTION_CHANGE -> EXTRA_CONNECTION_CHANGE
    java.lang.String EXTRA_REGISTRATION_ID -> EXTRA_REGISTRATION_ID
    java.lang.String EXTRA_APP_KEY -> EXTRA_APP_KEY
    java.lang.String EXTRA_NOTIFICATION_DEVELOPER_ARG0 -> EXTRA_NOTIFICATION_DEVELOPER_ARG0
    java.lang.String EXTRA_NOTIFICATION_TITLE -> EXTRA_NOTIFICATION_TITLE
    java.lang.String EXTRA_PUSH_ID -> EXTRA_PUSH_ID
    java.lang.String EXTRA_MSG_ID -> EXTRA_MSG_ID
    java.lang.String EXTRA_NOTI_TYPE -> EXTRA_NOTI_TYPE
    java.lang.String EXTRA_ALERT -> EXTRA_ALERT
    java.lang.String EXTRA_MESSAGE -> EXTRA_MESSAGE
    java.lang.String EXTRA_CONTENT_TYPE -> EXTRA_CONTENT_TYPE
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_EXTRA -> EXTRA_EXTRA
    java.lang.String EXTRA_NOTIFICATION_ID -> EXTRA_NOTIFICATION_ID
    java.lang.String EXTRA_ACTIVITY_PARAM -> EXTRA_ACTIVITY_PARAM
    java.lang.String EXTRA_RICHPUSH_FILE_PATH -> EXTRA_RICHPUSH_FILE_PATH
    java.lang.String EXTRA_RICHPUSH_FILE_TYPE -> EXTRA_RICHPUSH_FILE_TYPE
    java.lang.String EXTRA_RICHPUSH_HTML_PATH -> EXTRA_RICHPUSH_HTML_PATH
    java.lang.String EXTRA_RICHPUSH_HTML_RES -> EXTRA_RICHPUSH_HTML_RES
    java.lang.String EXTRA_STATUS -> EXTRA_STATUS
    java.lang.Integer a -> a
    java.lang.String ACTION_RICHPUSH_CALLBACK -> ACTION_RICHPUSH_CALLBACK
    cn.jpush.android.api.e b -> b
    java.util.concurrent.ConcurrentLinkedQueue c -> c
    java.lang.String[] z -> z
    void init(android.content.Context) -> init
    void resumePush(android.content.Context) -> resumePush
    void stopPush(android.content.Context) -> stopPush
    boolean isPushStopped(android.content.Context) -> isPushStopped
    void setDebugMode(boolean) -> setDebugMode
    void setPushTime(android.content.Context,java.util.Set,int,int) -> setPushTime
    void setSilenceTime(android.content.Context,int,int,int,int) -> setSilenceTime
    java.lang.String getRegistrationID(android.content.Context) -> getRegistrationID
    void a(android.content.Context) -> a
    java.lang.String getUdid(android.content.Context) -> getUdid
    void setLatestNotificationNumber(android.content.Context,int) -> setLatestNotificationNumber
    void setDefaultPushNotificationBuilder(cn.jpush.android.api.BasicPushNotificationBuilder) -> setDefaultPushNotificationBuilder
    void clearAllNotifications(android.content.Context) -> clearAllNotifications
    void clearNotificationById(android.content.Context,int) -> clearNotificationById
    void setPushNotificationBuilder(java.lang.Integer,cn.jpush.android.api.BasicPushNotificationBuilder) -> setPushNotificationBuilder
    boolean a(int) -> a
    cn.jpush.android.api.PushNotificationBuilder b(int) -> b
    void setAliasAndTags(android.content.Context,java.lang.String,java.util.Set) -> setAliasAndTags
    void setAliasAndTags(android.content.Context,java.lang.String,java.util.Set,cn.jpush.android.api.TagAliasCallback) -> setAliasAndTags
    void setTags(android.content.Context,java.util.Set,cn.jpush.android.api.TagAliasCallback) -> setTags
    void setAlias(android.content.Context,java.lang.String,cn.jpush.android.api.TagAliasCallback) -> setAlias
    java.util.Set filterValidTags(java.util.Set) -> filterValidTags
    void reportNotificationOpened(android.content.Context,java.lang.String) -> reportNotificationOpened
    boolean getConnectionState(android.content.Context) -> getConnectionState
    void onResume(android.content.Context) -> onResume
    void onPause(android.content.Context) -> onPause
    void onFragmentResume(android.content.Context,java.lang.String) -> onFragmentResume
    void onFragmentPause(android.content.Context,java.lang.String) -> onFragmentPause
    void onKillProcess(android.content.Context) -> onKillProcess
    void setStatisticsSessionTimeout(long) -> setStatisticsSessionTimeout
    void setStatisticsEnable(boolean) -> setStatisticsEnable
    void initCrashHandler(android.content.Context) -> initCrashHandler
    void addLocalNotification(android.content.Context,cn.jpush.android.data.JPushLocalNotification) -> addLocalNotification
    void removeLocalNotification(android.content.Context,long) -> removeLocalNotification
    void clearLocalNotifications(android.content.Context) -> clearLocalNotifications
    void a(android.content.Context,boolean,java.lang.String) -> a
    java.lang.String a(java.util.Set) -> a
    void a(android.content.Context,java.lang.String,java.util.Set,cn.jpush.android.api.TagAliasCallback,boolean) -> a
cn.jpush.android.api.PushNotificationBuilder -> cn.jpush.android.api.PushNotificationBuilder:
    android.app.Notification a(java.lang.String,java.util.Map) -> a
    java.lang.String a() -> a
cn.jpush.android.api.TagAliasCallback -> cn.jpush.android.api.TagAliasCallback:
    void gotResult(int,java.lang.String,java.util.Set) -> gotResult
cn.jpush.android.api.a -> cn.jpush.android.api.a:
    java.lang.String a -> a
    long b -> b
cn.jpush.android.api.b -> cn.jpush.android.api.b:
    java.lang.String a -> a
    java.util.Set b -> b
    cn.jpush.android.api.TagAliasCallback c -> c
    java.lang.String[] z -> z
    java.lang.String toString() -> toString
cn.jpush.android.api.c -> cn.jpush.android.api.c:
    cn.jpush.android.api.c b -> b
    java.lang.Thread$UncaughtExceptionHandler c -> c
    android.content.Context d -> d
    boolean a -> a
    java.lang.String[] z -> z
    cn.jpush.android.api.c a() -> a
    void a(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(android.content.Context,org.json.JSONArray) -> a
    org.json.JSONArray d(android.content.Context) -> d
    void b(android.content.Context) -> b
    org.json.JSONArray a(android.content.Context,java.lang.Throwable) -> a
    org.json.JSONArray a(org.json.JSONArray,int) -> a
    org.json.JSONObject c(android.content.Context) -> c
cn.jpush.android.api.d -> cn.jpush.android.api.d:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
cn.jpush.android.api.e -> cn.jpush.android.api.e:
    java.lang.String c -> c
    cn.jpush.android.api.e d -> d
    boolean a -> a
    boolean b -> b
    java.util.concurrent.ExecutorService e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.util.ArrayList h -> h
    long i -> i
    long j -> j
    long k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    boolean o -> o
    boolean p -> p
    java.lang.ref.WeakReference q -> q
    org.json.JSONObject r -> r
    java.lang.Object s -> s
    java.lang.String[] z -> z
    void a(long) -> a
    boolean a() -> a
    void a(boolean) -> a
    cn.jpush.android.api.e b() -> b
    void a(android.content.Context,java.lang.String) -> a
    void b(android.content.Context,java.lang.String) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    boolean c(android.content.Context,java.lang.String) -> c
    void a(org.json.JSONObject) -> a
    org.json.JSONObject a(android.content.Context,long) -> a
    org.json.JSONObject d(android.content.Context) -> d
    boolean a(java.lang.String) -> a
    void a(cn.jpush.android.api.e,android.content.Context) -> a
    void b(cn.jpush.android.api.e,android.content.Context) -> b
cn.jpush.android.api.f -> cn.jpush.android.api.f:
    android.content.Context a -> a
    cn.jpush.android.api.e b -> b
    void run() -> run
cn.jpush.android.api.g -> cn.jpush.android.api.g:
    android.content.Context a -> a
    cn.jpush.android.api.e b -> b
    void run() -> run
cn.jpush.android.api.h -> cn.jpush.android.api.h:
    android.content.Context a -> a
    cn.jpush.android.api.e b -> b
    void run() -> run
cn.jpush.android.api.i -> cn.jpush.android.api.i:
    android.content.Context a -> a
    cn.jpush.android.api.e b -> b
    void run() -> run
cn.jpush.android.api.j -> cn.jpush.android.api.j:
    android.content.Context a -> a
    cn.jpush.android.api.e b -> b
    void run() -> run
cn.jpush.android.api.k -> cn.jpush.android.api.k:
    boolean b -> b
    boolean a -> a
    java.lang.String c -> c
    java.util.HashMap d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    void a(android.app.Application) -> a
    java.lang.String a(java.lang.String) -> a
    boolean a() -> a
    java.lang.String b(java.lang.String) -> b
    boolean a(boolean) -> a
    java.lang.String b() -> b
    java.util.HashMap c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String c(java.lang.String) -> c
    java.lang.String f() -> f
cn.jpush.android.api.l -> cn.jpush.android.api.l:
    java.lang.String[] z -> z
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
cn.jpush.android.api.m -> cn.jpush.android.api.m:
    java.util.Queue a -> a
    java.lang.String[] z -> z
    void a(android.content.Context) -> a
    void a(android.content.Context,int) -> a
    void b(android.content.Context,int) -> b
    void a(android.content.Context,cn.jpush.android.data.d,int) -> a
    void a(android.content.Context,java.lang.String) -> a
    android.app.Notification a(android.content.Context,int,android.content.Intent,cn.jpush.android.data.d,boolean,boolean) -> a
    void a(android.content.Context,cn.jpush.android.data.d) -> a
    void b(android.content.Context,cn.jpush.android.data.d) -> b
    cn.jpush.android.data.d c(android.content.Context,cn.jpush.android.data.d) -> c
    cn.jpush.android.data.d d(android.content.Context,cn.jpush.android.data.d) -> d
    void a(android.content.Context,cn.jpush.android.data.d,boolean,boolean) -> a
    int a(cn.jpush.android.data.d,int) -> a
    void a(android.content.Context,java.util.Map,int,java.lang.String,java.lang.String,cn.jpush.android.data.d) -> a
    void a(android.content.Intent,java.util.Map,int) -> a
    int a(java.lang.String,int) -> a
    int a(int) -> a
    java.util.HashMap a(java.lang.String,java.lang.String[]) -> a
    int b(int) -> b
cn.jpush.android.api.n -> cn.jpush.android.api.n:
    android.content.Context a -> a
    cn.jpush.android.data.d b -> b
    void run() -> run
cn.jpush.android.api.o -> cn.jpush.android.api.o:
    cn.jpush.android.api.p a -> a
    int b -> b
    cn.jpush.android.data.d c -> c
    java.lang.String[] z -> z
    void a(boolean,java.lang.String) -> a
cn.jpush.android.api.p -> cn.jpush.android.api.p:
    android.app.NotificationManager a -> a
    android.app.Notification b -> b
    java.lang.String[] z -> z
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.api.q -> cn.jpush.android.api.q:
    int b -> b
    int c -> c
    cn.jpush.android.webview.bridge.e a -> a
    java.lang.String[] z -> z
    void a(android.view.WindowManager,android.webkit.WebView,android.widget.ImageButton) -> a
    void a(android.content.Context,cn.jpush.android.data.d) -> a
    android.graphics.Bitmap a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,android.view.WindowManager,android.webkit.WebView,android.widget.ImageButton) -> a
cn.jpush.android.api.r -> cn.jpush.android.api.r:
    cn.jpush.android.data.d a -> a
    android.content.Context b -> b
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.api.s -> cn.jpush.android.api.s:
    android.view.WindowManager a -> a
    android.webkit.WebView b -> b
    android.widget.ImageButton c -> c
    cn.jpush.android.api.r d -> d
    void onClick(android.view.View) -> onClick
cn.jpush.android.b -> cn.jpush.android.b:
    boolean a -> a
    java.util.concurrent.atomic.AtomicBoolean n -> n
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.content.Context e -> e
    java.lang.String f -> f
    long g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    java.lang.String[] z -> z
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean a() -> a
    android.content.pm.ApplicationInfo c(android.content.Context) -> c
cn.jpush.android.c -> cn.jpush.android.c:
cn.jpush.android.data.JPushLocalNotification -> cn.jpush.android.data.JPushLocalNotification:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    long i -> i
    long j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String[] z -> z
    java.lang.String toJSON() -> toJSON
    void a(java.lang.String,java.lang.String,org.json.JSONObject) -> a
    void setNotificationId(long) -> setNotificationId
    long getNotificationId() -> getNotificationId
    void setBroadcastTime(long) -> setBroadcastTime
    void setBroadcastTime(java.util.Date) -> setBroadcastTime
    void setBroadcastTime(int,int,int,int,int,int) -> setBroadcastTime
    long getBroadcastTime() -> getBroadcastTime
    void setExtras(java.lang.String) -> setExtras
    java.lang.String getExtras() -> getExtras
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    long getBuilderId() -> getBuilderId
    void setBuilderId(long) -> setBuilderId
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
cn.jpush.android.data.JPushView -> cn.jpush.android.data.JPushView:
    cn.jpush.android.webview.bridge.f a -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
cn.jpush.android.data.a -> cn.jpush.android.data.a:
    org.json.JSONObject a -> a
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
    cn.jpush.android.data.d a(cn.jpush.android.data.a) -> a
cn.jpush.android.data.b -> cn.jpush.android.data.b:
    void a(android.content.Context) -> a
    boolean a(android.content.Context,org.json.JSONObject) -> a
cn.jpush.android.data.c -> cn.jpush.android.data.c:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    cn.jpush.android.data.c c -> c
    java.lang.String[] z -> z
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    cn.jpush.android.data.c a(android.content.Context) -> a
    void a(android.content.Context,cn.jpush.android.data.d,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
cn.jpush.android.data.d -> cn.jpush.android.data.d:
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    boolean e -> e
    int f -> f
    int g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    int p -> p
    boolean q -> q
    java.lang.String r -> r
    boolean s -> s
    java.lang.String t -> t
    boolean u -> u
    java.util.List v -> v
    boolean w -> w
    int x -> x
    java.lang.String y -> y
    int z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.util.List C -> C
    int D -> D
    int E -> E
    int F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    int I -> I
    int J -> J
    int K -> K
    boolean L -> L
    boolean M -> M
    boolean N -> N
    boolean a -> a
    boolean O -> O
    int P -> P
    java.lang.String Q -> Q
    java.util.ArrayList R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String[] W -> W
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    java.lang.String d() -> d
    boolean b(android.content.Context,org.json.JSONObject) -> b
    boolean e() -> e
    void a(boolean) -> a
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
    cn.jpush.android.data.d a(android.content.Context,cn.jpush.android.data.d) -> a
    boolean a(java.util.ArrayList,android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,android.content.Context) -> a
cn.jpush.android.data.e -> cn.jpush.android.data.e:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.jpush.android.data.d c -> c
    java.lang.String[] z -> z
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
cn.jpush.android.data.f -> cn.jpush.android.data.f:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String[] z -> z
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int a() -> a
    org.json.JSONObject b() -> b
cn.jpush.android.data.g -> cn.jpush.android.data.g:
    java.lang.String[] a -> a
    android.content.Context b -> b
    cn.jpush.android.data.h c -> c
    android.database.sqlite.SQLiteDatabase d -> d
    java.lang.String[] z -> z
    void a() -> a
    void b() -> b
    long a(long,int,int,int,java.lang.String,long,long) -> a
    android.database.Cursor a(long,int) -> a
    boolean b(long,int,int,int,java.lang.String,long,long) -> b
    android.database.Cursor a(int,long) -> a
    boolean c() -> c
    android.database.Cursor a(long,long) -> a
    void a(android.database.Cursor,cn.jpush.android.data.i) -> a
cn.jpush.android.data.h -> cn.jpush.android.data.h:
    java.lang.String[] z -> z
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
cn.jpush.android.data.i -> cn.jpush.android.data.i:
    long a -> a
    int b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    long f -> f
    long g -> g
    java.lang.String[] z -> z
    long a() -> a
    void a(long) -> a
    int b() -> b
    void a(int) -> a
    int c() -> c
    void b(int) -> b
    void c(int) -> c
    java.lang.String d() -> d
    void a(java.lang.String) -> a
    long e() -> e
    void b(long) -> b
    long f() -> f
    void c(long) -> c
    java.lang.String toString() -> toString
cn.jpush.android.data.j -> cn.jpush.android.data.j:
    java.lang.String a -> a
    java.lang.String W -> W
    boolean X -> X
    boolean Y -> Y
    int Z -> Z
    boolean aa -> aa
    int ab -> ab
    java.lang.String ac -> ac
    cn.jpush.android.data.m ad -> ad
    java.lang.String ae -> ae
    boolean af -> af
    boolean ag -> ag
    java.lang.String ah -> ah
    boolean ai -> ai
    java.lang.String[] bb -> bb
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
    void a(cn.jpush.android.data.j,cn.jpush.android.data.j,android.content.Context) -> a
cn.jpush.android.data.k -> cn.jpush.android.data.k:
    cn.jpush.android.data.j a -> a
    android.content.Context b -> b
    int c -> c
    cn.jpush.android.data.j d -> d
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.data.l -> cn.jpush.android.data.l:
    android.content.Context a -> a
    int b -> b
    cn.jpush.android.data.j c -> c
    cn.jpush.android.data.j d -> d
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.data.m -> cn.jpush.android.data.m:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    boolean e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    boolean i -> i
    java.lang.String j -> j
    java.util.ArrayList k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    cn.jpush.android.data.j o -> o
    java.lang.String[] z -> z
    org.json.JSONObject a() -> a
    java.lang.String toString() -> toString
cn.jpush.android.data.n -> cn.jpush.android.data.n:
    java.lang.String a -> a
    java.lang.String W -> W
    int X -> X
    boolean Y -> Y
    java.util.ArrayList Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String ac -> ac
    java.lang.String[] bb -> bb
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
cn.jpush.android.data.o -> cn.jpush.android.data.o:
    android.content.Context a -> a
    cn.jpush.android.data.n b -> b
    cn.jpush.android.data.n c -> c
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.data.p -> cn.jpush.android.data.p:
    java.lang.String[] a -> a
    android.content.Context b -> b
    cn.jpush.android.data.q c -> c
    android.database.sqlite.SQLiteDatabase d -> d
    java.lang.String[] z -> z
    void a() -> a
    void b() -> b
    long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int) -> a
    boolean b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int) -> b
    boolean a(java.lang.String) -> a
    void c() -> c
    android.database.Cursor b(java.lang.String) -> b
    cn.jpush.android.data.r a(android.database.Cursor) -> a
    android.database.Cursor d() -> d
    android.database.Cursor e() -> e
    int a(boolean) -> a
cn.jpush.android.data.q -> cn.jpush.android.data.q:
    java.lang.String[] z -> z
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
cn.jpush.android.data.r -> cn.jpush.android.data.r:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    java.lang.String[] z -> z
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    int f() -> f
    void a(int) -> a
    int g() -> g
    void b(int) -> b
    int h() -> h
    void c(int) -> c
    int i() -> i
    void d(int) -> d
    int j() -> j
    void e(int) -> e
    int k() -> k
    void f(int) -> f
    java.lang.String toString() -> toString
cn.jpush.android.data.s -> cn.jpush.android.data.s:
    java.lang.String[] bb -> bb
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
cn.jpush.android.data.t -> cn.jpush.android.data.t:
    int a -> a
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String[] ab -> ab
    boolean a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context) -> a
cn.jpush.android.helpers.ConnectingHelper -> cn.jpush.android.helpers.ConnectingHelper:
    java.util.List a -> a
    java.lang.String[] z -> z
    boolean register(android.content.Context,long,boolean) -> register
    int login(android.content.Context,long) -> login
    short getIMLoginFlag() -> getIMLoginFlag
    void sendServerTimer(android.content.Context,long) -> sendServerTimer
    void sendConnectionChanged(android.content.Context,cn.jpush.android.service.a) -> sendConnectionChanged
    int a(long,java.lang.String,int) -> a
    boolean openConnection(android.content.Context,long,cn.jpush.android.service.SisInfo) -> openConnection
    int a(long) -> a
    cn.jpush.android.service.SisInfo sendSis(android.content.Context) -> sendSis
    cn.jpush.android.service.SisInfo a(android.content.Context,boolean,int,int) -> a
    cn.jpush.android.service.SisInfo parseSisInfo(java.lang.String) -> parseSisInfo
    byte[] a(android.content.Context,java.lang.String,long) -> a
    java.net.InetAddress a(java.lang.String) -> a
    void sendConnectionToHandler(android.os.Message,long) -> sendConnectionToHandler
cn.jpush.android.helpers.a -> cn.jpush.android.helpers.a:
    java.net.InetAddress a(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.jpush.android.helpers.b -> cn.jpush.android.helpers.b:
    java.util.Queue a -> a
    java.lang.String[] z -> z
    cn.jpush.android.data.a a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,cn.jpush.android.data.a) -> a
    void a(android.content.Context,java.lang.String) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String,java.lang.String) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String,org.json.JSONObject,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    boolean a(boolean,int,android.content.Context) -> a
cn.jpush.android.helpers.c -> cn.jpush.android.helpers.c:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    void run() -> run
cn.jpush.android.helpers.d -> cn.jpush.android.helpers.d:
    java.util.Queue a -> a
    com.google.gson.jpush.ab b -> b
    java.lang.String[] z -> z
    void a(android.content.Context,android.os.Handler,long,cn.jpush.proto.common.commands.h) -> a
    long a(java.lang.String) -> a
cn.jpush.android.helpers.e -> cn.jpush.android.helpers.e:
    android.content.Context a -> a
    cn.jpush.android.data.d b -> b
    void run() -> run
cn.jpush.android.helpers.f -> cn.jpush.android.helpers.f:
    java.lang.String[] z -> z
    void a(java.lang.String,int,java.lang.String,android.content.Context) -> a
    void a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context,boolean,java.lang.String,boolean,boolean) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
cn.jpush.android.helpers.g -> cn.jpush.android.helpers.g:
    java.lang.String[] z -> z
    java.lang.String a(android.content.Context) -> a
    boolean a(int) -> a
    void b(android.content.Context) -> b
cn.jpush.android.helpers.h -> cn.jpush.android.helpers.h:
    java.lang.String[] z -> z
    void a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
cn.jpush.android.location.a -> cn.jpush.android.location.a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    double f -> f
    double g -> g
    java.lang.String z -> z
    int a() -> a
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void d(int) -> d
    void a(java.lang.String) -> a
    java.lang.String toString() -> toString
    org.json.JSONArray b() -> b
cn.jpush.android.location.b -> cn.jpush.android.location.b:
    int a -> a
    int b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    int f -> f
    double g -> g
    android.telephony.PhoneStateListener h -> h
    double i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    android.telephony.TelephonyManager n -> n
    boolean o -> o
    java.lang.String p -> p
    java.util.ArrayList q -> q
    java.lang.String[] z -> z
    int a() -> a
    org.json.JSONArray b() -> b
    java.lang.String h() -> h
    org.json.JSONArray c() -> c
    int i() -> i
    int[] d() -> d
    boolean e() -> e
    boolean f() -> f
    float g() -> g
    void j() -> j
    boolean a(cn.jpush.android.location.b,boolean) -> a
    int a(cn.jpush.android.location.b,int) -> a
cn.jpush.android.location.c -> cn.jpush.android.location.c:
    cn.jpush.android.location.b a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
cn.jpush.android.location.d -> cn.jpush.android.location.d:
    java.lang.String a -> a
    boolean e -> e
    int b -> b
    boolean c -> c
    boolean f -> f
    int g -> g
    cn.jpush.android.location.b h -> h
    cn.jpush.android.location.g i -> i
    android.content.Context j -> j
    boolean d -> d
    int[] k -> k
    cn.jpush.android.location.f l -> l
    boolean m -> m
    android.content.BroadcastReceiver n -> n
    long o -> o
    int p -> p
    boolean q -> q
    boolean r -> r
    cn.jpush.android.location.j s -> s
    int t -> t
    java.util.Date u -> u
    org.json.JSONArray v -> v
    boolean w -> w
    boolean x -> x
    boolean y -> y
    java.lang.String z -> z
    org.json.JSONArray A -> A
    java.lang.String[] B -> B
    java.lang.String a() -> a
    org.json.JSONArray b() -> b
    void a(org.json.JSONArray) -> a
    org.json.JSONArray c() -> c
    void b(org.json.JSONArray) -> b
    void d() -> d
    void e() -> e
    void f() -> f
    boolean a(android.content.Context) -> a
    void g() -> g
    android.content.Context a(cn.jpush.android.location.d) -> a
    cn.jpush.android.location.b b(cn.jpush.android.location.d) -> b
    cn.jpush.android.location.f c(cn.jpush.android.location.d) -> c
    int d(cn.jpush.android.location.d) -> d
    int a(cn.jpush.android.location.d,int) -> a
    cn.jpush.android.location.j e(cn.jpush.android.location.d) -> e
    void a(cn.jpush.android.location.d,java.lang.Object) -> a
    boolean f(cn.jpush.android.location.d) -> f
    int g(cn.jpush.android.location.d) -> g
    int[] h(cn.jpush.android.location.d) -> h
    boolean i(cn.jpush.android.location.d) -> i
    org.json.JSONArray a(cn.jpush.android.location.d,org.json.JSONArray) -> a
    android.content.BroadcastReceiver j(cn.jpush.android.location.d) -> j
    long k(cn.jpush.android.location.d) -> k
    boolean l(cn.jpush.android.location.d) -> l
    boolean a(cn.jpush.android.location.d,boolean) -> a
cn.jpush.android.location.e -> cn.jpush.android.location.e:
    cn.jpush.android.location.d a -> a
    java.lang.String[] z -> z
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.jpush.android.location.f -> cn.jpush.android.location.f:
    float b -> b
    org.json.JSONArray c -> c
    cn.jpush.android.location.d a -> a
    java.lang.String[] z -> z
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.location.g -> cn.jpush.android.location.g:
    android.content.Context c -> c
    android.location.LocationManager d -> d
    android.location.Location e -> e
    java.lang.String f -> f
    double a -> a
    double b -> b
    long g -> g
    android.location.LocationListener h -> h
    java.lang.String[] z -> z
    boolean a() -> a
    void b() -> b
    void a(android.location.Location) -> a
    void c() -> c
    java.lang.String d() -> d
    long e() -> e
    void a(cn.jpush.android.location.g,android.location.Location) -> a
cn.jpush.android.location.h -> cn.jpush.android.location.h:
    cn.jpush.android.location.g a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
cn.jpush.android.location.i -> cn.jpush.android.location.i:
    android.content.Context e -> e
    java.lang.String f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String[] B -> B
    boolean a(org.json.JSONArray,org.json.JSONArray,java.lang.String) -> a
    void d() -> d
cn.jpush.android.location.j -> cn.jpush.android.location.j:
    android.net.wifi.WifiManager a -> a
    java.lang.String z -> z
    java.util.List d() -> d
    boolean a() -> a
    android.net.wifi.WifiManager b() -> b
    org.json.JSONArray c() -> c
cn.jpush.android.location.k -> cn.jpush.android.location.k:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    cn.jpush.android.location.j d -> d
    java.lang.String[] z -> z
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.json.JSONObject a() -> a
    int compareTo(java.lang.Object) -> compareTo
cn.jpush.android.service.AlarmReceiver -> cn.jpush.android.service.AlarmReceiver:
    java.lang.String[] z -> z
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.jpush.android.service.DaemonService -> cn.jpush.android.service.DaemonService:
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
cn.jpush.android.service.DownloadService -> cn.jpush.android.service.DownloadService:
    android.os.Bundle b -> b
    java.util.concurrent.ConcurrentLinkedQueue a -> a
    android.app.NotificationManager c -> c
    cn.jpush.android.data.d d -> d
    cn.jpush.android.service.g e -> e
    android.app.Notification$Builder f -> f
    android.widget.RemoteViews g -> g
    java.lang.Integer h -> h
    java.lang.Integer i -> i
    java.lang.Integer j -> j
    java.lang.Integer k -> k
    java.lang.Integer l -> l
    android.os.Handler m -> m
    java.lang.String[] z -> z
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void a(cn.jpush.android.data.d,int,long,long) -> a
    void a(cn.jpush.android.data.d,boolean) -> a
    boolean a() -> a
    void a(android.content.Context) -> a
    cn.jpush.android.data.d a(cn.jpush.android.service.DownloadService) -> a
    void a(cn.jpush.android.service.DownloadService,cn.jpush.android.data.d,int,long,long) -> a
    android.os.Handler b(cn.jpush.android.service.DownloadService) -> b
    void a(cn.jpush.android.service.DownloadService,cn.jpush.android.data.d) -> a
    android.app.NotificationManager c(cn.jpush.android.service.DownloadService) -> c
    void a(cn.jpush.android.service.DownloadService,int,cn.jpush.android.data.d,int) -> a
cn.jpush.android.service.PushProtocol -> cn.jpush.android.service.PushProtocol:
    long InitConn() -> InitConn
    int HbJPush(long,long,int,long,short) -> HbJPush
    int RegPush(long,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> RegPush
    int LogPush(long,long,byte[],long,java.lang.String,java.lang.String,long,short) -> LogPush
    int MsgResponse(long,int,long,byte,long,long,int) -> MsgResponse
    int RecvPush(long,byte[],int) -> RecvPush
    int IMProtocol(long,byte[],int) -> IMProtocol
    int TagAlias(long,long,int,long,java.lang.String,java.lang.String) -> TagAlias
    int Close(long) -> Close
    int InitPush(long,java.lang.String,int) -> InitPush
    int GetSdkVersion() -> GetSdkVersion
cn.jpush.android.service.PushReceiver -> cn.jpush.android.service.PushReceiver:
    cn.jpush.android.data.d a -> a
    java.lang.String[] z -> z
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.jpush.android.service.PushService -> cn.jpush.android.service.PushService:
    boolean e -> e
    cn.jpush.android.service.n f -> f
    java.util.concurrent.ExecutorService g -> g
    cn.jpush.android.service.k h -> h
    cn.jpush.android.service.m i -> i
    long j -> j
    boolean k -> k
    int l -> l
    int m -> m
    long a -> a
    java.lang.String b -> b
    boolean c -> c
    boolean d -> d
    long n -> n
    java.lang.String[] z -> z
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void a(java.lang.String,java.lang.String) -> a
    void a() -> a
    void b() -> b
    void a(long) -> a
    void c() -> c
    void a(java.util.concurrent.ExecutorService) -> a
    boolean d() -> d
    boolean e() -> e
    cn.jpush.android.service.n a(cn.jpush.android.service.PushService) -> a
    void b(cn.jpush.android.service.PushService) -> b
    java.util.concurrent.ExecutorService c(cn.jpush.android.service.PushService) -> c
    void a(cn.jpush.android.service.PushService,java.util.concurrent.ExecutorService) -> a
    void a(cn.jpush.android.service.PushService,boolean) -> a
    void a(cn.jpush.android.service.PushService,long) -> a
    void b(cn.jpush.android.service.PushService,long) -> b
    void c(cn.jpush.android.service.PushService,long) -> c
    void d(cn.jpush.android.service.PushService,long) -> d
    void a(cn.jpush.android.service.PushService,long,int) -> a
    void d(cn.jpush.android.service.PushService) -> d
    long e(cn.jpush.android.service.PushService) -> e
cn.jpush.android.service.ServiceInterface -> cn.jpush.android.service.ServiceInterface:
    java.lang.String a -> a
    java.util.WeakHashMap b -> b
    java.util.concurrent.ConcurrentHashMap c -> c
    boolean d -> d
    cn.jpush.android.service.q e -> e
    boolean f -> f
    java.lang.String[] z -> z
    void a(android.content.Context) -> a
    void a(android.content.Context,int) -> a
    void b(android.content.Context,int) -> b
    void a(android.content.Context,java.lang.String,java.lang.String,cn.jpush.android.api.b) -> a
    void b(android.content.Context) -> b
    cn.jpush.android.api.b a(long) -> a
    void b(long) -> b
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,cn.jpush.android.data.d) -> a
    void c(android.content.Context) -> c
    void c(android.content.Context,int) -> c
    void a(android.content.Context,boolean) -> a
    void a(android.content.Context,java.lang.Integer,cn.jpush.android.api.BasicPushNotificationBuilder) -> a
    void d(android.content.Context,int) -> d
    void d(android.content.Context) -> d
    java.lang.String a() -> a
    boolean a(android.content.Context,int,int,int,int) -> a
    boolean e(android.content.Context) -> e
    int i(android.content.Context) -> i
    boolean f(android.content.Context) -> f
    void g(android.content.Context) -> g
    void h(android.content.Context) -> h
    void b(android.content.Context,boolean) -> b
cn.jpush.android.service.SisInfo -> cn.jpush.android.service.SisInfo:
    java.lang.String TAG -> TAG
    com.google.gson.jpush.k _gson -> _gson
    java.util.List ips -> ips
    java.util.List ssl_ips -> ssl_ips
    java.util.List udp_report -> udp_report
    java.util.List op_conns -> op_conns
    java.util.List ssl_op_conns -> ssl_op_conns
    java.lang.String user -> user
    java.lang.String mainConnIp -> mainConnIp
    int mainConnPort -> mainConnPort
    java.util.List optionConnIp -> optionConnIp
    java.util.List optionConnPort -> optionConnPort
    java.lang.String originSis -> originSis
    boolean invalidSis -> invalidSis
    java.lang.String IPV4_REGEX -> IPV4_REGEX
    java.util.regex.Pattern IPV4_PATTERN -> IPV4_PATTERN
    java.lang.String[] z -> z
    cn.jpush.android.service.SisInfo fromJson(java.lang.String) -> fromJson
    java.lang.String getMainConnIp() -> getMainConnIp
    int getMainConnPort() -> getMainConnPort
    java.util.List getOptionConnIp() -> getOptionConnIp
    java.util.List getOptionConnPort() -> getOptionConnPort
    boolean isInvalidSis() -> isInvalidSis
    java.lang.String getOriginSis() -> getOriginSis
    void parseAndSet(java.lang.String) -> parseAndSet
    void configure() -> configure
    boolean isValidIPV4(java.lang.String) -> isValidIPV4
cn.jpush.android.service.a -> cn.jpush.android.service.a:
    cn.jpush.android.service.a a -> a
    cn.jpush.android.service.a b -> b
    cn.jpush.android.service.a c -> c
    cn.jpush.android.service.a[] d -> d
    java.lang.String[] z -> z
    cn.jpush.android.service.a[] values() -> values
    cn.jpush.android.service.a valueOf(java.lang.String) -> valueOf
cn.jpush.android.service.b -> cn.jpush.android.service.b:
    cn.jpush.android.service.c c -> c
    long d -> d
    long e -> e
    android.os.Bundle f -> f
    boolean a -> a
    boolean b -> b
    java.lang.String[] z -> z
    int a(android.content.Context,cn.jpush.android.service.d,cn.jpush.android.data.d) -> a
    void a(java.io.InputStream,java.io.BufferedInputStream,java.io.FileOutputStream,java.io.BufferedOutputStream,org.apache.http.HttpEntity) -> a
    org.apache.http.impl.client.DefaultHttpClient a() -> a
    org.apache.http.client.methods.HttpGet a(java.lang.String,long) -> a
    long a(org.apache.http.HttpResponse) -> a
    int a(long) -> a
    boolean a(int) -> a
    long a(cn.jpush.android.service.b) -> a
    long b(cn.jpush.android.service.b) -> b
    cn.jpush.android.service.c c(cn.jpush.android.service.b) -> c
cn.jpush.android.service.c -> cn.jpush.android.service.c:
    cn.jpush.android.service.d b -> b
    cn.jpush.android.service.b a -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.service.d -> cn.jpush.android.service.d:
    void a(java.lang.String,boolean) -> a
    void a(int) -> a
    void a(long,long) -> a
cn.jpush.android.service.e -> cn.jpush.android.service.e:
    boolean a -> a
    int b -> b
    cn.jpush.android.service.DownloadService c -> c
    java.lang.String[] z -> z
    void a(long,long) -> a
    void a(java.lang.String,boolean) -> a
    void a(int) -> a
cn.jpush.android.service.f -> cn.jpush.android.service.f:
    cn.jpush.android.service.DownloadService a -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.service.g -> cn.jpush.android.service.g:
    android.content.Context b -> b
    cn.jpush.android.service.DownloadService a -> a
    java.lang.String z -> z
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.service.h -> cn.jpush.android.service.h:
    cn.jpush.android.service.h a -> a
    java.util.concurrent.ExecutorService b -> b
    android.os.Handler c -> c
    android.content.Context d -> d
    java.lang.String e -> e
    cn.jpush.android.data.g f -> f
    cn.jpush.android.data.i g -> g
    java.lang.String[] z -> z
    cn.jpush.android.service.h a(android.content.Context) -> a
    void b(android.content.Context) -> b
    boolean a(android.content.Context,long) -> a
    boolean a(android.content.Context,cn.jpush.android.data.JPushLocalNotification) -> a
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void a(long,long) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(cn.jpush.android.service.h,android.content.Context) -> a
    cn.jpush.android.data.g a() -> a
    android.content.Context a(cn.jpush.android.service.h) -> a
    cn.jpush.android.data.g a(cn.jpush.android.data.g) -> a
    cn.jpush.android.data.i b() -> b
    java.lang.String b(cn.jpush.android.service.h) -> b
    void a(cn.jpush.android.service.h,android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
cn.jpush.android.service.i -> cn.jpush.android.service.i:
    android.content.Context a -> a
    cn.jpush.android.service.h b -> b
    void run() -> run
cn.jpush.android.service.j -> cn.jpush.android.service.j:
    long a -> a
    cn.jpush.android.service.h b -> b
    void run() -> run
cn.jpush.android.service.k -> cn.jpush.android.service.k:
    long b -> b
    android.content.Context c -> c
    android.os.Handler d -> d
    boolean e -> e
    boolean f -> f
    java.util.concurrent.atomic.AtomicBoolean a -> a
    java.lang.String[] z -> z
    void a(long) -> a
    void run() -> run
    void b(long) -> b
cn.jpush.android.service.l -> cn.jpush.android.service.l:
    long a -> a
    cn.jpush.android.service.PushService b -> b
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.service.m -> cn.jpush.android.service.m:
    java.lang.ref.WeakReference a -> a
    java.lang.String[] z -> z
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.service.n -> cn.jpush.android.service.n:
    java.util.Map a -> a
    java.util.Deque b -> b
    java.util.Deque c -> c
    android.content.Context d -> d
    android.os.Handler e -> e
    android.os.Handler f -> f
    long g -> g
    boolean h -> h
    int i -> i
    java.lang.String[] z -> z
    void run() -> run
    void a(long,java.lang.Object) -> a
    void a(cn.jpush.proto.common.commands.g,int) -> a
    void a() -> a
    void a(long) -> a
    void b() -> b
    void a(cn.jpush.android.service.p) -> a
    void b(cn.jpush.android.service.p) -> b
    void c(cn.jpush.android.service.p) -> c
    cn.jpush.android.service.p a(java.lang.Long) -> a
    void d(cn.jpush.android.service.p) -> d
    void c() -> c
    void d() -> d
    java.util.Map a(cn.jpush.android.service.n) -> a
    void a(cn.jpush.android.service.n,cn.jpush.android.service.p) -> a
    void b(cn.jpush.android.service.n,cn.jpush.android.service.p) -> b
    void a(cn.jpush.android.service.n,cn.jpush.proto.common.commands.g,int) -> a
    void a(cn.jpush.android.service.n,long,java.lang.Object) -> a
    void b(cn.jpush.android.service.n) -> b
cn.jpush.android.service.o -> cn.jpush.android.service.o:
    java.lang.ref.WeakReference a -> a
    java.lang.String[] z -> z
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.service.p -> cn.jpush.android.service.p:
    cn.jpush.proto.common.commands.g a -> a
    int b -> b
    int c -> c
    java.lang.String[] z -> z
    void a() -> a
    java.lang.String toString() -> toString
cn.jpush.android.service.q -> cn.jpush.android.service.q:
    java.lang.String[] z -> z
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.jpush.android.service.r -> cn.jpush.android.service.r:
    java.lang.String a -> a
    int b -> b
    java.lang.String[] z -> z
    java.lang.String toString() -> toString
cn.jpush.android.service.s -> cn.jpush.android.service.s:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    long c -> c
    java.lang.String[] z -> z
    java.lang.String a(int) -> a
    java.lang.String b(int) -> b
    org.json.JSONObject a(java.lang.String) -> a
    org.json.JSONObject b(java.lang.String) -> b
cn.jpush.android.service.t -> cn.jpush.android.service.t:
    java.lang.String[] z -> z
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
cn.jpush.android.service.u -> cn.jpush.android.service.u:
    cn.jpush.android.service.u a -> a
    android.os.PowerManager$WakeLock b -> b
    cn.jpush.android.service.u a() -> a
    android.os.PowerManager$WakeLock b() -> b
    void a(android.os.PowerManager$WakeLock) -> a
cn.jpush.android.ui.FullScreenView -> cn.jpush.android.ui.FullScreenView:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.webkit.WebView mWebView -> mWebView
    android.widget.TextView tvTitle -> tvTitle
    android.widget.ImageButton imgBtnBack -> imgBtnBack
    cn.jpush.android.webview.bridge.f webViewHelper -> webViewHelper
    android.view.View$OnClickListener btnBackClickListener -> btnBackClickListener
    java.lang.String[] z -> z
    void initModule(android.content.Context,cn.jpush.android.data.d) -> initModule
    boolean webviewCanGoBack() -> webviewCanGoBack
    void webviewGoBack() -> webviewGoBack
    void loadUrl(java.lang.String) -> loadUrl
    void resume() -> resume
    void pause() -> pause
    void destory() -> destory
    android.content.Context access$000(cn.jpush.android.ui.FullScreenView) -> access$000
cn.jpush.android.ui.ListViewActivity -> cn.jpush.android.ui.ListViewActivity:
    cn.jpush.android.data.d a -> a
    java.lang.String z -> z
    void onCreate(android.os.Bundle) -> onCreate
cn.jpush.android.ui.MyFloatView -> cn.jpush.android.ui.MyFloatView:
    boolean a -> a
    android.view.WindowManager c -> c
    cn.jpush.android.data.d b -> b
    android.view.WindowManager$LayoutParams d -> d
    boolean e -> e
    float f -> f
    float g -> g
    float h -> h
    float i -> i
    float j -> j
    float k -> k
    float l -> l
    float m -> m
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
cn.jpush.android.ui.PushActivity -> cn.jpush.android.ui.PushActivity:
    java.lang.String a -> a
    cn.jpush.android.ui.FullScreenView b -> b
    android.os.Handler c -> c
    java.lang.String[] z -> z
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
    void a(cn.jpush.android.ui.PushActivity,cn.jpush.android.data.d) -> a
cn.jpush.android.ui.a -> cn.jpush.android.ui.a:
    cn.jpush.android.ui.FullScreenView a -> a
    void onClick(android.view.View) -> onClick
cn.jpush.android.ui.b -> cn.jpush.android.ui.b:
    cn.jpush.android.data.d a -> a
    java.lang.String[] z -> z
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
cn.jpush.android.ui.c -> cn.jpush.android.ui.c:
    java.util.List a -> a
    cn.jpush.android.ui.ListViewActivity b -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.jpush.android.ui.d -> cn.jpush.android.ui.d:
    android.content.Context a -> a
    java.lang.String[] z -> z
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cn.jpush.android.ui.e -> cn.jpush.android.ui.e:
    cn.jpush.android.ui.PushActivity a -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.jpush.android.util.JLogger -> cn.jpush.android.util.JLogger:
    java.text.SimpleDateFormat a -> a
    cn.jpush.android.util.u b -> b
    java.lang.String z -> z
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String) -> e
    void a(int,java.lang.String,java.lang.String) -> a
    void parseModalJson(java.lang.String,android.content.Context) -> parseModalJson
    void reportByHeartbeats() -> reportByHeartbeats
cn.jpush.android.util.JRecorder -> cn.jpush.android.util.JRecorder:
    java.util.concurrent.ExecutorService a -> a
    java.util.ArrayList b -> b
    android.content.Context c -> c
    android.os.Handler d -> d
    java.util.ArrayList e -> e
    boolean f -> f
    java.lang.String[] z -> z
    cn.jpush.android.util.JRecorder getIncreamentsRecorder(android.content.Context) -> getIncreamentsRecorder
    cn.jpush.android.util.JRecorder getSuperpositionRecorder(android.content.Context) -> getSuperpositionRecorder
    void record(int) -> record
    void parseRecordCommand(java.lang.String) -> parseRecordCommand
    org.json.JSONObject a(java.util.ArrayList) -> a
    void b() -> b
    void a(cn.jpush.android.util.JRecorder,double) -> a
    boolean a(boolean) -> a
    android.content.Context a() -> a
    void a(android.content.Context) -> a
cn.jpush.android.util.TestLogger -> cn.jpush.android.util.TestLogger:
    java.lang.String[] z -> z
    void setTestLogger() -> setTestLogger
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String) -> e
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
cn.jpush.android.util.a -> cn.jpush.android.util.a:
    java.util.List b -> b
    javax.security.auth.x500.X500Principal c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int a -> a
    long g -> g
    java.util.ArrayList h -> h
    java.util.ArrayList i -> i
    java.util.ArrayList j -> j
    cn.jpush.android.service.PushReceiver k -> k
    java.lang.String[] z -> z
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
    boolean k(android.content.Context,java.lang.String) -> k
    boolean d(android.content.Context,java.lang.String) -> d
    boolean a(android.content.Context,java.lang.Class) -> a
    boolean b(android.content.Context,java.lang.Class) -> b
    boolean a(android.content.Context,java.lang.String,boolean) -> a
    boolean d(android.content.Context,java.lang.String,java.lang.String) -> d
    boolean b(android.content.Context,java.lang.String,boolean) -> b
    void e(android.content.Context,java.lang.String) -> e
    void a(android.content.Context,java.lang.String,java.lang.String,int) -> a
    boolean b(android.content.Context) -> b
    boolean a() -> a
    boolean f(android.content.Context,java.lang.String) -> f
    int a(android.content.Context,float) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String) -> a
    android.content.Intent l(android.content.Context,java.lang.String) -> l
    android.content.Intent a(android.content.Context,cn.jpush.android.data.d,boolean) -> a
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String g(android.content.Context,java.lang.String) -> g
    java.lang.String u(android.content.Context) -> u
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(byte[]) -> a
    void e(android.content.Context) -> e
    void h(android.content.Context,java.lang.String) -> h
    int f(android.content.Context) -> f
    boolean d(java.lang.String) -> d
    boolean g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String v(android.content.Context) -> v
    java.lang.String i(android.content.Context) -> i
    java.lang.String i(android.content.Context,java.lang.String) -> i
    java.lang.String w(android.content.Context) -> w
    java.lang.String x(android.content.Context) -> x
    java.lang.String m(android.content.Context,java.lang.String) -> m
    java.lang.String y(android.content.Context) -> y
    java.lang.String j(android.content.Context) -> j
    void j(android.content.Context,java.lang.String) -> j
    java.lang.String n(android.content.Context,java.lang.String) -> n
    java.lang.String o(android.content.Context,java.lang.String) -> o
    boolean z(android.content.Context) -> z
    void k(android.content.Context) -> k
    void b() -> b
    boolean A(android.content.Context) -> A
    org.json.JSONArray l(android.content.Context) -> l
    org.json.JSONObject a(java.lang.String,org.json.JSONArray) -> a
    org.json.JSONObject a(java.lang.String,java.lang.String) -> a
    boolean m(android.content.Context) -> m
    boolean n(android.content.Context) -> n
    void a(android.content.Context,boolean) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,byte[]) -> a
    void a(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void a(android.content.Context,cn.jpush.android.data.d) -> a
    boolean o(android.content.Context) -> o
    void B(android.content.Context) -> B
    void p(android.content.Context) -> p
    java.lang.String c() -> c
    int c(java.lang.String) -> c
    java.lang.String q(android.content.Context) -> q
    void c(android.content.Context,java.lang.String,java.lang.String) -> c
    void b(android.content.Context,java.lang.String,java.lang.String,int) -> b
    java.lang.String r(android.content.Context) -> r
    java.lang.String d() -> d
    boolean e(java.lang.String) -> e
    void s(android.content.Context) -> s
    java.util.List t(android.content.Context) -> t
    char[] z(java.lang.String) -> z
    java.lang.String z(char[]) -> z
cn.jpush.android.util.aa -> cn.jpush.android.util.aa:
    cn.jpush.android.util.r a -> a
    java.text.SimpleDateFormat b -> b
    java.util.ArrayList c -> c
    boolean d -> d
    boolean e -> e
    java.lang.String[] z -> z
    void a(cn.jpush.android.util.r) -> a
    boolean a(int) -> a
    void a() -> a
    void a(java.lang.String,java.lang.String) -> a
    void b() -> b
    void b(java.lang.String,java.lang.String) -> b
    void c() -> c
    void c(java.lang.String,java.lang.String) -> c
    void d() -> d
    void d(java.lang.String,java.lang.String) -> d
    void e() -> e
    void e(java.lang.String,java.lang.String) -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void i() -> i
    void b(java.lang.String,java.lang.String,java.lang.Throwable) -> b
cn.jpush.android.util.ab -> cn.jpush.android.util.ab:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String toString() -> toString
cn.jpush.android.util.ac -> cn.jpush.android.util.ac:
    java.util.regex.Pattern a -> a
    java.util.regex.Pattern b -> b
    java.util.regex.Pattern c -> c
    java.util.regex.Pattern d -> d
    java.util.regex.Pattern e -> e
    java.util.regex.Pattern f -> f
    java.lang.String[] z -> z
    boolean a(java.lang.String) -> a
    int b(java.lang.String) -> b
    int a(java.util.Set) -> a
cn.jpush.android.util.ad -> cn.jpush.android.util.ad:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.util.concurrent.ExecutorService g -> g
    org.json.JSONObject a -> a
    java.lang.Object h -> h
    java.lang.String[] z -> z
    java.lang.String a(int) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(java.lang.String,int) -> a
    java.lang.String a() -> a
    java.lang.String a(java.lang.String) -> a
    java.util.ArrayList a(org.json.JSONArray,int) -> a
    void a(java.io.Closeable) -> a
    void a(android.content.Context,org.json.JSONArray) -> a
    void a(android.content.Context,org.json.JSONObject) -> a
    void b(android.content.Context,org.json.JSONObject) -> b
    void c(android.content.Context,org.json.JSONObject) -> c
    void b(android.content.Context) -> b
    void a(android.content.Context,int) -> a
    void a(android.content.Context,org.json.JSONObject,java.util.ArrayList) -> a
    void a(android.content.Context,org.json.JSONObject,org.json.JSONArray,java.util.ArrayList) -> a
    boolean a(org.json.JSONObject,android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String,org.json.JSONObject) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context,org.json.JSONArray) -> b
cn.jpush.android.util.ae -> cn.jpush.android.util.ae:
    android.content.Context a -> a
    org.json.JSONArray b -> b
    void run() -> run
cn.jpush.android.util.af -> cn.jpush.android.util.af:
    java.lang.String a -> a
    java.lang.String[] z -> z
    java.util.Set a(android.app.ActivityManager) -> a
    org.json.JSONArray a(android.app.ActivityManager,android.content.pm.PackageManager) -> a
    java.lang.String a(java.lang.String,int) -> a
    void a(android.content.Context) -> a
cn.jpush.android.util.ag -> cn.jpush.android.util.ag:
    android.content.SharedPreferences a -> a
    java.lang.String[] z -> z
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String,java.lang.String) -> b
    void a(android.content.Context,java.lang.String,int) -> a
    int b(android.content.Context,java.lang.String,int) -> b
    void a(android.content.Context,java.lang.String,boolean) -> a
    boolean b(android.content.Context,java.lang.String,boolean) -> b
    void a(android.content.Context,java.lang.String) -> a
cn.jpush.android.util.ah -> cn.jpush.android.util.ah:
    java.lang.String a -> a
    android.content.SharedPreferences b -> b
    cn.jpush.android.util.ah c -> c
    java.lang.String z -> z
    cn.jpush.android.util.ah a() -> a
    android.content.SharedPreferences a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    long a(android.content.Context,java.lang.String,long) -> a
    void b(android.content.Context,java.lang.String,long) -> b
cn.jpush.android.util.ai -> cn.jpush.android.util.ai:
    java.lang.String a -> a
    java.lang.String[] z -> z
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
cn.jpush.android.util.aj -> cn.jpush.android.util.aj:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    long d -> d
    java.lang.String[] z -> z
    void a() -> a
cn.jpush.android.util.b -> cn.jpush.android.util.b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int[] f -> f
cn.jpush.android.util.c -> cn.jpush.android.util.c:
    boolean a -> a
    java.lang.String z -> z
    java.lang.String a(byte[],int) -> a
cn.jpush.android.util.d -> cn.jpush.android.util.d:
    byte[] a -> a
    int b -> b
cn.jpush.android.util.e -> cn.jpush.android.util.e:
    byte[] h -> h
    byte[] i -> i
    byte[] j -> j
    int c -> c
    int k -> k
    boolean d -> d
    boolean e -> e
    boolean f -> f
    byte[] l -> l
    boolean g -> g
    boolean a(byte[],int,int,boolean) -> a
cn.jpush.android.util.f -> cn.jpush.android.util.f:
    android.content.SharedPreferences a -> a
    java.lang.String z -> z
    void j(android.content.Context) -> j
    void n(java.lang.String) -> n
    void c(java.lang.String,java.lang.String) -> c
    java.lang.String d(java.lang.String,java.lang.String) -> d
    void a(java.lang.String,int) -> a
    int b(java.lang.String,int) -> b
    void a(java.lang.String,long) -> a
    long b(java.lang.String,long) -> b
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    java.lang.String c(android.content.Context,java.lang.String,java.lang.String) -> c
    void a(android.content.Context,java.lang.String,int) -> a
    void a(android.content.Context,java.lang.String,long) -> a
    void a(android.content.Context,java.lang.String,boolean) -> a
    java.lang.Boolean b(android.content.Context,java.lang.String,boolean) -> b
cn.jpush.android.util.g -> cn.jpush.android.util.g:
    java.lang.String[] z -> z
    byte[] a(java.io.File) -> a
    java.lang.String b(java.io.File) -> b
    boolean a(java.lang.String,java.io.File) -> a
cn.jpush.android.util.h -> cn.jpush.android.util.h:
    java.util.ArrayList a(org.json.JSONArray) -> a
    org.json.JSONArray a(java.util.ArrayList) -> a
cn.jpush.android.util.i -> cn.jpush.android.util.i:
    java.lang.String a -> a
    java.lang.String z -> z
    java.lang.String a() -> a
cn.jpush.android.util.j -> cn.jpush.android.util.j:
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String) -> e
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
cn.jpush.android.util.k -> cn.jpush.android.util.k:
    java.lang.String a -> a
    java.util.Map b -> b
    java.lang.String[] z -> z
    java.util.Map c(android.content.Context) -> c
    void a(android.content.Context,java.util.Map) -> a
    java.lang.String a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
    void b(android.content.Context) -> b
cn.jpush.android.util.l -> cn.jpush.android.util.l:
    java.lang.String a -> a
    java.lang.String[] z -> z
    void a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String e(android.content.Context) -> e
    java.lang.String b(android.content.Context) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String c(android.content.Context) -> c
    java.lang.String b(android.content.Context,java.lang.String) -> b
    boolean a(java.io.File) -> a
    void d(android.content.Context) -> d
cn.jpush.android.util.m -> cn.jpush.android.util.m:
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.jpush.android.util.n -> cn.jpush.android.util.n:
    java.lang.String[] z -> z
    void a(java.lang.String) -> a
    java.util.ArrayList a(java.io.InputStream) -> a
    boolean a(java.lang.String,java.lang.String,android.content.Context) -> a
    boolean a(java.lang.String,byte[],android.content.Context) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
cn.jpush.android.util.o -> cn.jpush.android.util.o:
    boolean a -> a
    java.lang.String[] z -> z
    java.lang.String a(java.lang.String,int,long) -> a
    byte[] a(java.lang.String,int,long,int) -> a
    byte[] b(java.lang.String,int,long) -> b
    void a(java.lang.String,java.lang.String,cn.jpush.android.util.q) -> a
    org.apache.http.impl.client.DefaultHttpClient a() -> a
    boolean a(java.lang.String) -> a
    int a(android.content.Context,org.json.JSONObject,boolean) -> a
cn.jpush.android.util.p -> cn.jpush.android.util.p:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.jpush.android.util.q c -> c
    void run() -> run
cn.jpush.android.util.q -> cn.jpush.android.util.q:
    void a(boolean,java.lang.String) -> a
cn.jpush.android.util.r -> cn.jpush.android.util.r:
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String) -> e
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
cn.jpush.android.util.s -> cn.jpush.android.util.s:
    java.lang.String[] z -> z
    void a(android.content.Context) -> a
    org.json.JSONObject a(cn.jpush.android.data.r) -> a
    org.json.JSONObject b(cn.jpush.android.data.r) -> b
cn.jpush.android.util.t -> cn.jpush.android.util.t:
    java.lang.String[] a(android.content.Context) -> a
cn.jpush.android.util.u -> cn.jpush.android.util.u:
    int c -> c
    int d -> d
    long e -> e
    long f -> f
    long g -> g
    long h -> h
    int a -> a
    boolean b -> b
    android.content.Context i -> i
    java.util.ArrayList j -> j
    java.lang.String[] z -> z
    void a(cn.jpush.android.data.f) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void a(android.content.Context,java.lang.String) -> a
    void a(java.lang.String) -> a
    org.json.JSONObject d() -> d
cn.jpush.android.util.v -> cn.jpush.android.util.v:
    int a -> a
    cn.jpush.android.util.JRecorder b -> b
    void run() -> run
cn.jpush.android.util.w -> cn.jpush.android.util.w:
    void run() -> run
cn.jpush.android.util.x -> cn.jpush.android.util.x:
    org.json.JSONObject a -> a
    java.lang.String[] z -> z
    void run() -> run
cn.jpush.android.util.y -> cn.jpush.android.util.y:
    int a -> a
    java.util.ArrayList b -> b
    cn.jpush.android.util.JRecorder c -> c
cn.jpush.android.util.z -> cn.jpush.android.util.z:
    long a -> a
    double b -> b
    cn.jpush.android.util.JRecorder c -> c
cn.jpush.android.webview.bridge.a -> cn.jpush.android.webview.bridge.a:
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
cn.jpush.android.webview.bridge.b -> cn.jpush.android.webview.bridge.b:
    java.lang.String TAG -> TAG
    java.lang.String z -> z
    void createShortcut(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String) -> createShortcut
    void click(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String) -> click
    void download(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String) -> download
    void startActivityByName(android.webkit.WebView,java.lang.String,java.lang.String) -> startActivityByName
    void startActivityByIntent(android.webkit.WebView,java.lang.String,java.lang.String) -> startActivityByIntent
    void triggerNativeAction(android.webkit.WebView,java.lang.String) -> triggerNativeAction
    void startMainActivity(android.webkit.WebView,java.lang.String) -> startMainActivity
    void download(android.webkit.WebView,java.lang.String,java.lang.String) -> download
    void download(android.webkit.WebView,java.lang.String) -> download
    void close(android.webkit.WebView) -> close
    void showToast(android.webkit.WebView,java.lang.String) -> showToast
    void executeMsgMessage(android.webkit.WebView,java.lang.String) -> executeMsgMessage
    void startActivityByNameWithSystemAlert(android.webkit.WebView,java.lang.String,java.lang.String) -> startActivityByNameWithSystemAlert
cn.jpush.android.webview.bridge.c -> cn.jpush.android.webview.bridge.c:
    java.lang.String a -> a
    cn.jpush.android.webview.bridge.d b -> b
    boolean c -> c
    java.lang.String[] z -> z
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
cn.jpush.android.webview.bridge.d -> cn.jpush.android.webview.bridge.d:
    java.util.HashMap a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.google.gson.jpush.k d -> d
    java.lang.String[] z -> z
    java.lang.String a(java.lang.reflect.Method) -> a
    java.lang.String a() -> a
    java.lang.String a(android.webkit.WebView,java.lang.String) -> a
    java.lang.String a(java.lang.String,int,java.lang.Object) -> a
cn.jpush.android.webview.bridge.e -> cn.jpush.android.webview.bridge.e:
    android.content.Context a -> a
    android.view.WindowManager b -> b
    android.webkit.WebView c -> c
    android.widget.ImageButton d -> d
    java.lang.String[] z -> z
    void a(java.lang.String,java.lang.String) -> a
cn.jpush.android.webview.bridge.f -> cn.jpush.android.webview.bridge.f:
    java.lang.ref.WeakReference a -> a
    cn.jpush.android.data.d b -> b
    java.lang.String[] z -> z
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String,java.lang.String) -> b
    void f(java.lang.String) -> f
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String) -> c
    void a() -> a
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
cn.jpush.im.proto.a -> cn.jpush.im.proto.a:
cn.jpush.im.proto.aa -> cn.jpush.im.proto.aa:
    int a -> a
    cn.jpush.im.proto.ad b -> b
    cn.jpush.im.proto.ab c -> c
    cn.jpush.im.proto.aa e() -> e
    cn.jpush.im.proto.z a() -> a
    cn.jpush.im.proto.z f() -> f
    cn.jpush.im.proto.aa c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.im.proto.aa a(cn.jpush.im.proto.ad) -> a
    cn.jpush.im.proto.aa a(cn.jpush.im.proto.ab) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.z a(cn.jpush.im.proto.aa) -> a
    cn.jpush.im.proto.aa b() -> b
cn.jpush.im.proto.ab -> cn.jpush.im.proto.ab:
    cn.jpush.im.proto.ab a -> a
    int b -> b
    cn.jpush.im.proto.az c -> c
    cn.jpush.im.proto.bb d -> d
    cn.jpush.im.proto.aw e -> e
    cn.jpush.im.proto.as f -> f
    cn.jpush.im.proto.d g -> g
    cn.jpush.im.proto.h h -> h
    cn.jpush.im.proto.j i -> i
    cn.jpush.im.proto.o j -> j
    cn.jpush.im.proto.s k -> k
    cn.jpush.im.proto.m l -> l
    cn.jpush.im.proto.q m -> m
    cn.jpush.im.proto.u n -> n
    cn.jpush.im.proto.ao o -> o
    cn.jpush.im.proto.ak p -> p
    cn.jpush.im.proto.aq q -> q
    cn.jpush.im.proto.am r -> r
    cn.jpush.im.proto.b s -> s
    cn.jpush.im.proto.f t -> t
    cn.jpush.im.proto.af u -> u
    byte v -> v
    int w -> w
    cn.jpush.im.proto.ab a() -> a
    boolean b() -> b
    cn.jpush.im.proto.az d() -> d
    boolean e() -> e
    cn.jpush.im.proto.bb f() -> f
    boolean g() -> g
    cn.jpush.im.proto.aw h() -> h
    boolean i() -> i
    cn.jpush.im.proto.as j() -> j
    boolean k() -> k
    cn.jpush.im.proto.d l() -> l
    boolean m() -> m
    cn.jpush.im.proto.h n() -> n
    boolean o() -> o
    cn.jpush.im.proto.j p() -> p
    boolean q() -> q
    cn.jpush.im.proto.o r() -> r
    boolean s() -> s
    cn.jpush.im.proto.s t() -> t
    boolean u() -> u
    cn.jpush.im.proto.m v() -> v
    boolean w() -> w
    cn.jpush.im.proto.q x() -> x
    boolean y() -> y
    cn.jpush.im.proto.u z() -> z
    boolean A() -> A
    cn.jpush.im.proto.ao B() -> B
    boolean C() -> C
    cn.jpush.im.proto.ak D() -> D
    boolean E() -> E
    cn.jpush.im.proto.aq F() -> F
    boolean G() -> G
    cn.jpush.im.proto.am H() -> H
    boolean I() -> I
    cn.jpush.im.proto.b J() -> J
    boolean K() -> K
    cn.jpush.im.proto.f L() -> L
    boolean M() -> M
    cn.jpush.im.proto.af N() -> N
    boolean O() -> O
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.ac P() -> P
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.ab) -> a
    cn.jpush.im.proto.az a(cn.jpush.im.proto.ab,cn.jpush.im.proto.az) -> a
    cn.jpush.im.proto.bb a(cn.jpush.im.proto.ab,cn.jpush.im.proto.bb) -> a
    cn.jpush.im.proto.aw a(cn.jpush.im.proto.ab,cn.jpush.im.proto.aw) -> a
    cn.jpush.im.proto.as a(cn.jpush.im.proto.ab,cn.jpush.im.proto.as) -> a
    cn.jpush.im.proto.d a(cn.jpush.im.proto.ab,cn.jpush.im.proto.d) -> a
    cn.jpush.im.proto.h a(cn.jpush.im.proto.ab,cn.jpush.im.proto.h) -> a
    cn.jpush.im.proto.j a(cn.jpush.im.proto.ab,cn.jpush.im.proto.j) -> a
    cn.jpush.im.proto.o a(cn.jpush.im.proto.ab,cn.jpush.im.proto.o) -> a
    cn.jpush.im.proto.s a(cn.jpush.im.proto.ab,cn.jpush.im.proto.s) -> a
    cn.jpush.im.proto.m a(cn.jpush.im.proto.ab,cn.jpush.im.proto.m) -> a
    cn.jpush.im.proto.q a(cn.jpush.im.proto.ab,cn.jpush.im.proto.q) -> a
    cn.jpush.im.proto.u a(cn.jpush.im.proto.ab,cn.jpush.im.proto.u) -> a
    cn.jpush.im.proto.ao a(cn.jpush.im.proto.ab,cn.jpush.im.proto.ao) -> a
    cn.jpush.im.proto.ak a(cn.jpush.im.proto.ab,cn.jpush.im.proto.ak) -> a
    cn.jpush.im.proto.aq a(cn.jpush.im.proto.ab,cn.jpush.im.proto.aq) -> a
    cn.jpush.im.proto.am a(cn.jpush.im.proto.ab,cn.jpush.im.proto.am) -> a
    cn.jpush.im.proto.b a(cn.jpush.im.proto.ab,cn.jpush.im.proto.b) -> a
    cn.jpush.im.proto.f a(cn.jpush.im.proto.ab,cn.jpush.im.proto.f) -> a
    cn.jpush.im.proto.af a(cn.jpush.im.proto.ab,cn.jpush.im.proto.af) -> a
    int a(cn.jpush.im.proto.ab,int) -> a
cn.jpush.im.proto.ac -> cn.jpush.im.proto.ac:
    int a -> a
    cn.jpush.im.proto.az b -> b
    cn.jpush.im.proto.bb c -> c
    cn.jpush.im.proto.aw d -> d
    cn.jpush.im.proto.as e -> e
    cn.jpush.im.proto.d f -> f
    cn.jpush.im.proto.h g -> g
    cn.jpush.im.proto.j h -> h
    cn.jpush.im.proto.o i -> i
    cn.jpush.im.proto.s j -> j
    cn.jpush.im.proto.m k -> k
    cn.jpush.im.proto.q l -> l
    cn.jpush.im.proto.u m -> m
    cn.jpush.im.proto.ao n -> n
    cn.jpush.im.proto.ak o -> o
    cn.jpush.im.proto.aq p -> p
    cn.jpush.im.proto.am q -> q
    cn.jpush.im.proto.b r -> r
    cn.jpush.im.proto.f s -> s
    cn.jpush.im.proto.af t -> t
    cn.jpush.im.proto.ac f() -> f
    cn.jpush.im.proto.ab a() -> a
    cn.jpush.im.proto.ab b() -> b
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.ab) -> a
    cn.jpush.im.proto.ac c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.az) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.bb) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.aw) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.as) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.d) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.h) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.j) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.o) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.s) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.m) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.q) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.u) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.ao) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.ak) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.aq) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.am) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.b) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.f) -> a
    cn.jpush.im.proto.ac a(cn.jpush.im.proto.af) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.ac e() -> e
cn.jpush.im.proto.ad -> cn.jpush.im.proto.ad:
    cn.jpush.im.proto.ad a -> a
    int b -> b
    int c -> c
    int d -> d
    long e -> e
    com.google.protobuf.jpush.c f -> f
    cn.jpush.im.proto.x g -> g
    int h -> h
    byte i -> i
    int j -> j
    cn.jpush.im.proto.ad a() -> a
    boolean b() -> b
    int d() -> d
    boolean e() -> e
    int f() -> f
    boolean g() -> g
    long h() -> h
    boolean i() -> i
    com.google.protobuf.jpush.c j() -> j
    boolean k() -> k
    cn.jpush.im.proto.x l() -> l
    boolean m() -> m
    int n() -> n
    boolean o() -> o
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.ae p() -> p
    cn.jpush.im.proto.ae a(cn.jpush.im.proto.ad) -> a
    int a(cn.jpush.im.proto.ad,int) -> a
    int b(cn.jpush.im.proto.ad,int) -> b
    long a(cn.jpush.im.proto.ad,long) -> a
    com.google.protobuf.jpush.c a(cn.jpush.im.proto.ad,com.google.protobuf.jpush.c) -> a
    cn.jpush.im.proto.x a(cn.jpush.im.proto.ad,cn.jpush.im.proto.x) -> a
    int c(cn.jpush.im.proto.ad,int) -> c
    int d(cn.jpush.im.proto.ad,int) -> d
cn.jpush.im.proto.ae -> cn.jpush.im.proto.ae:
    int a -> a
    int b -> b
    int c -> c
    long d -> d
    com.google.protobuf.jpush.c e -> e
    cn.jpush.im.proto.x f -> f
    int g -> g
    cn.jpush.im.proto.ae f() -> f
    cn.jpush.im.proto.ad a() -> a
    cn.jpush.im.proto.ad b() -> b
    cn.jpush.im.proto.ae a(cn.jpush.im.proto.ad) -> a
    cn.jpush.im.proto.ae c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.im.proto.ae a(int) -> a
    cn.jpush.im.proto.ae b(int) -> b
    cn.jpush.im.proto.ae a(long) -> a
    cn.jpush.im.proto.ae a(com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.ae e() -> e
cn.jpush.im.proto.af -> cn.jpush.im.proto.af:
    cn.jpush.im.proto.af a -> a
    int b -> b
    int c -> c
    com.google.protobuf.jpush.c d -> d
    byte e -> e
    int f -> f
    cn.jpush.im.proto.af a() -> a
    boolean b() -> b
    int d() -> d
    boolean e() -> e
    com.google.protobuf.jpush.c f() -> f
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.ag g() -> g
    cn.jpush.im.proto.ag a(cn.jpush.im.proto.af) -> a
    int a(cn.jpush.im.proto.af,int) -> a
    com.google.protobuf.jpush.c a(cn.jpush.im.proto.af,com.google.protobuf.jpush.c) -> a
    int b(cn.jpush.im.proto.af,int) -> b
cn.jpush.im.proto.ag -> cn.jpush.im.proto.ag:
    int a -> a
    int b -> b
    com.google.protobuf.jpush.c c -> c
    cn.jpush.im.proto.ag e() -> e
    cn.jpush.im.proto.af a() -> a
    cn.jpush.im.proto.ag a(cn.jpush.im.proto.af) -> a
    cn.jpush.im.proto.ag c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.ag b() -> b
cn.jpush.im.proto.ah -> cn.jpush.im.proto.ah:
cn.jpush.im.proto.ai -> cn.jpush.im.proto.ai:
    cn.jpush.im.proto.ai a -> a
    int b -> b
    long c -> c
    long d -> d
    long e -> e
    int f -> f
    cn.jpush.im.proto.au g -> g
    int h -> h
    byte i -> i
    int j -> j
    cn.jpush.im.proto.ai a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    long f() -> f
    boolean g() -> g
    long h() -> h
    boolean i() -> i
    int j() -> j
    boolean k() -> k
    cn.jpush.im.proto.au l() -> l
    boolean m() -> m
    int n() -> n
    boolean o() -> o
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.aj p() -> p
    long a(cn.jpush.im.proto.ai,long) -> a
    long b(cn.jpush.im.proto.ai,long) -> b
    long c(cn.jpush.im.proto.ai,long) -> c
    int a(cn.jpush.im.proto.ai,int) -> a
    cn.jpush.im.proto.au a(cn.jpush.im.proto.ai,cn.jpush.im.proto.au) -> a
    int b(cn.jpush.im.proto.ai,int) -> b
    int c(cn.jpush.im.proto.ai,int) -> c
cn.jpush.im.proto.aj -> cn.jpush.im.proto.aj:
    int a -> a
    long b -> b
    long c -> c
    long d -> d
    int e -> e
    cn.jpush.im.proto.au f -> f
    int g -> g
    cn.jpush.im.proto.aj f() -> f
    cn.jpush.im.proto.ai a() -> a
    cn.jpush.im.proto.ai b() -> b
    cn.jpush.im.proto.aj c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.im.proto.aj a(long) -> a
    cn.jpush.im.proto.aj b(long) -> b
    cn.jpush.im.proto.aj c(long) -> c
    cn.jpush.im.proto.aj a(int) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.aj e() -> e
cn.jpush.im.proto.ak -> cn.jpush.im.proto.ak:
    cn.jpush.im.proto.ak a -> a
    java.util.List b -> b
    byte c -> c
    int d -> d
    cn.jpush.im.proto.ak a() -> a
    java.util.List b() -> b
    boolean d() -> d
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.al e() -> e
    cn.jpush.im.proto.al a(cn.jpush.im.proto.ak) -> a
    java.util.List a(cn.jpush.im.proto.ak,java.util.List) -> a
    java.util.List b(cn.jpush.im.proto.ak) -> b
cn.jpush.im.proto.al -> cn.jpush.im.proto.al:
    int a -> a
    java.util.List b -> b
    cn.jpush.im.proto.al f() -> f
    cn.jpush.im.proto.ak a() -> a
    cn.jpush.im.proto.ak b() -> b
    cn.jpush.im.proto.al a(cn.jpush.im.proto.ak) -> a
    cn.jpush.im.proto.al c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    void g() -> g
    cn.jpush.im.proto.al a(cn.jpush.im.proto.ai) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.al e() -> e
cn.jpush.im.proto.am -> cn.jpush.im.proto.am:
    cn.jpush.im.proto.am a -> a
    int b -> b
    long c -> c
    int d -> d
    int e -> e
    byte f -> f
    int g -> g
    cn.jpush.im.proto.am a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    int f() -> f
    boolean g() -> g
    int h() -> h
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.an i() -> i
    cn.jpush.im.proto.an a(cn.jpush.im.proto.am) -> a
    long a(cn.jpush.im.proto.am,long) -> a
    int a(cn.jpush.im.proto.am,int) -> a
    int b(cn.jpush.im.proto.am,int) -> b
    int c(cn.jpush.im.proto.am,int) -> c
cn.jpush.im.proto.an -> cn.jpush.im.proto.an:
    int a -> a
    long b -> b
    int c -> c
    int d -> d
    cn.jpush.im.proto.an e() -> e
    cn.jpush.im.proto.am a() -> a
    cn.jpush.im.proto.an a(cn.jpush.im.proto.am) -> a
    cn.jpush.im.proto.an c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.an b() -> b
cn.jpush.im.proto.ao -> cn.jpush.im.proto.ao:
    cn.jpush.im.proto.ao a -> a
    int b -> b
    long c -> c
    int d -> d
    long e -> e
    long f -> f
    java.util.List g -> g
    com.google.protobuf.jpush.c h -> h
    int i -> i
    byte j -> j
    int k -> k
    cn.jpush.im.proto.ao a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    int f() -> f
    boolean g() -> g
    long h() -> h
    boolean i() -> i
    long j() -> j
    boolean k() -> k
    com.google.protobuf.jpush.c l() -> l
    boolean m() -> m
    int n() -> n
    boolean o() -> o
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.ap p() -> p
    cn.jpush.im.proto.ap a(cn.jpush.im.proto.ao) -> a
    long a(cn.jpush.im.proto.ao,long) -> a
    int a(cn.jpush.im.proto.ao,int) -> a
    long b(cn.jpush.im.proto.ao,long) -> b
    long c(cn.jpush.im.proto.ao,long) -> c
    java.util.List a(cn.jpush.im.proto.ao,java.util.List) -> a
    com.google.protobuf.jpush.c a(cn.jpush.im.proto.ao,com.google.protobuf.jpush.c) -> a
    int b(cn.jpush.im.proto.ao,int) -> b
    int c(cn.jpush.im.proto.ao,int) -> c
    java.util.List b(cn.jpush.im.proto.ao) -> b
cn.jpush.im.proto.ap -> cn.jpush.im.proto.ap:
    int a -> a
    long b -> b
    int c -> c
    long d -> d
    long e -> e
    java.util.List f -> f
    com.google.protobuf.jpush.c g -> g
    int h -> h
    cn.jpush.im.proto.ap f() -> f
    cn.jpush.im.proto.ao a() -> a
    cn.jpush.im.proto.ao b() -> b
    cn.jpush.im.proto.ap a(cn.jpush.im.proto.ao) -> a
    cn.jpush.im.proto.ap c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.im.proto.ap a(long) -> a
    cn.jpush.im.proto.ap a(int) -> a
    cn.jpush.im.proto.ap b(long) -> b
    cn.jpush.im.proto.ap c(long) -> c
    void g() -> g
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.ap e() -> e
cn.jpush.im.proto.aq -> cn.jpush.im.proto.aq:
    cn.jpush.im.proto.aq a -> a
    int b -> b
    long c -> c
    int d -> d
    long e -> e
    long f -> f
    com.google.protobuf.jpush.c g -> g
    byte h -> h
    int i -> i
    cn.jpush.im.proto.aq a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    int f() -> f
    boolean g() -> g
    long h() -> h
    boolean i() -> i
    long j() -> j
    boolean k() -> k
    com.google.protobuf.jpush.c l() -> l
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.ar m() -> m
    cn.jpush.im.proto.ar a(cn.jpush.im.proto.aq) -> a
    long a(cn.jpush.im.proto.aq,long) -> a
    int a(cn.jpush.im.proto.aq,int) -> a
    long b(cn.jpush.im.proto.aq,long) -> b
    long c(cn.jpush.im.proto.aq,long) -> c
    com.google.protobuf.jpush.c a(cn.jpush.im.proto.aq,com.google.protobuf.jpush.c) -> a
    int b(cn.jpush.im.proto.aq,int) -> b
cn.jpush.im.proto.ar -> cn.jpush.im.proto.ar:
    int a -> a
    long b -> b
    int c -> c
    long d -> d
    long e -> e
    com.google.protobuf.jpush.c f -> f
    cn.jpush.im.proto.ar e() -> e
    cn.jpush.im.proto.aq a() -> a
    cn.jpush.im.proto.ar a(cn.jpush.im.proto.aq) -> a
    cn.jpush.im.proto.ar c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.ar b() -> b
cn.jpush.im.proto.as -> cn.jpush.im.proto.as:
    cn.jpush.im.proto.as a -> a
    int b -> b
    long c -> c
    cn.jpush.im.proto.au d -> d
    long e -> e
    byte f -> f
    int g -> g
    cn.jpush.im.proto.as a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    cn.jpush.im.proto.au f() -> f
    boolean g() -> g
    long h() -> h
    boolean i() -> i
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.at j() -> j
    cn.jpush.im.proto.at a(cn.jpush.im.proto.as) -> a
    long a(cn.jpush.im.proto.as,long) -> a
    cn.jpush.im.proto.au a(cn.jpush.im.proto.as,cn.jpush.im.proto.au) -> a
    long b(cn.jpush.im.proto.as,long) -> b
    int a(cn.jpush.im.proto.as,int) -> a
cn.jpush.im.proto.at -> cn.jpush.im.proto.at:
    int a -> a
    long b -> b
    cn.jpush.im.proto.au c -> c
    long d -> d
    cn.jpush.im.proto.at f() -> f
    cn.jpush.im.proto.as a() -> a
    cn.jpush.im.proto.as b() -> b
    cn.jpush.im.proto.at a(cn.jpush.im.proto.as) -> a
    cn.jpush.im.proto.at c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.im.proto.at a(long) -> a
    cn.jpush.im.proto.at a(cn.jpush.im.proto.au) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.at e() -> e
cn.jpush.im.proto.au -> cn.jpush.im.proto.au:
    cn.jpush.im.proto.au a -> a
    int b -> b
    com.google.protobuf.jpush.c c -> c
    com.google.protobuf.jpush.c d -> d
    com.google.protobuf.jpush.c e -> e
    byte f -> f
    int g -> g
    cn.jpush.im.proto.au a() -> a
    boolean b() -> b
    com.google.protobuf.jpush.c d() -> d
    boolean e() -> e
    com.google.protobuf.jpush.c f() -> f
    boolean g() -> g
    com.google.protobuf.jpush.c h() -> h
    boolean i() -> i
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.av j() -> j
    cn.jpush.im.proto.av a(cn.jpush.im.proto.au) -> a
    com.google.protobuf.jpush.c a(cn.jpush.im.proto.au,com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.c b(cn.jpush.im.proto.au,com.google.protobuf.jpush.c) -> b
    com.google.protobuf.jpush.c c(cn.jpush.im.proto.au,com.google.protobuf.jpush.c) -> c
    int a(cn.jpush.im.proto.au,int) -> a
cn.jpush.im.proto.av -> cn.jpush.im.proto.av:
    int a -> a
    com.google.protobuf.jpush.c b -> b
    com.google.protobuf.jpush.c c -> c
    com.google.protobuf.jpush.c d -> d
    cn.jpush.im.proto.av f() -> f
    cn.jpush.im.proto.au a() -> a
    cn.jpush.im.proto.au b() -> b
    cn.jpush.im.proto.av a(cn.jpush.im.proto.au) -> a
    cn.jpush.im.proto.av c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.im.proto.av a(com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.av e() -> e
cn.jpush.im.proto.aw -> cn.jpush.im.proto.aw:
    cn.jpush.im.proto.aw a -> a
    int b -> b
    long c -> c
    cn.jpush.im.proto.au d -> d
    long e -> e
    byte f -> f
    int g -> g
    cn.jpush.im.proto.aw a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    cn.jpush.im.proto.au f() -> f
    boolean g() -> g
    long h() -> h
    boolean i() -> i
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.ax j() -> j
    cn.jpush.im.proto.ax a(cn.jpush.im.proto.aw) -> a
    long a(cn.jpush.im.proto.aw,long) -> a
    cn.jpush.im.proto.au a(cn.jpush.im.proto.aw,cn.jpush.im.proto.au) -> a
    long b(cn.jpush.im.proto.aw,long) -> b
    int a(cn.jpush.im.proto.aw,int) -> a
cn.jpush.im.proto.ax -> cn.jpush.im.proto.ax:
    int a -> a
    long b -> b
    cn.jpush.im.proto.au c -> c
    long d -> d
    cn.jpush.im.proto.ax f() -> f
    cn.jpush.im.proto.aw a() -> a
    cn.jpush.im.proto.aw b() -> b
    cn.jpush.im.proto.ax a(cn.jpush.im.proto.aw) -> a
    cn.jpush.im.proto.ax c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.im.proto.ax a(long) -> a
    cn.jpush.im.proto.ax a(cn.jpush.im.proto.au) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.ax e() -> e
cn.jpush.im.proto.ay -> cn.jpush.im.proto.ay:
cn.jpush.im.proto.az -> cn.jpush.im.proto.az:
    cn.jpush.im.proto.az a -> a
    int b -> b
    com.google.protobuf.jpush.c c -> c
    com.google.protobuf.jpush.c d -> d
    int e -> e
    byte f -> f
    int g -> g
    cn.jpush.im.proto.az a() -> a
    boolean b() -> b
    com.google.protobuf.jpush.c d() -> d
    boolean e() -> e
    com.google.protobuf.jpush.c f() -> f
    boolean g() -> g
    int h() -> h
    boolean i() -> i
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.ba j() -> j
    cn.jpush.im.proto.ba a(cn.jpush.im.proto.az) -> a
    com.google.protobuf.jpush.c a(cn.jpush.im.proto.az,com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.c b(cn.jpush.im.proto.az,com.google.protobuf.jpush.c) -> b
    int a(cn.jpush.im.proto.az,int) -> a
    int b(cn.jpush.im.proto.az,int) -> b
cn.jpush.im.proto.b -> cn.jpush.im.proto.b:
    cn.jpush.im.proto.b a -> a
    java.util.List b -> b
    byte c -> c
    int d -> d
    cn.jpush.im.proto.b a() -> a
    boolean b() -> b
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.c d() -> d
    cn.jpush.im.proto.c a(cn.jpush.im.proto.b) -> a
    java.util.List a(cn.jpush.im.proto.b,java.util.List) -> a
    java.util.List b(cn.jpush.im.proto.b) -> b
cn.jpush.im.proto.ba -> cn.jpush.im.proto.ba:
    int a -> a
    com.google.protobuf.jpush.c b -> b
    com.google.protobuf.jpush.c c -> c
    int d -> d
    cn.jpush.im.proto.ba f() -> f
    cn.jpush.im.proto.az a() -> a
    cn.jpush.im.proto.az b() -> b
    cn.jpush.im.proto.ba a(cn.jpush.im.proto.az) -> a
    cn.jpush.im.proto.ba c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.im.proto.ba a(com.google.protobuf.jpush.c) -> a
    cn.jpush.im.proto.ba b(com.google.protobuf.jpush.c) -> b
    cn.jpush.im.proto.ba a(int) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.ba e() -> e
cn.jpush.im.proto.bb -> cn.jpush.im.proto.bb:
    cn.jpush.im.proto.bb a -> a
    int b -> b
    com.google.protobuf.jpush.c c -> c
    byte d -> d
    int e -> e
    cn.jpush.im.proto.bb a() -> a
    boolean b() -> b
    com.google.protobuf.jpush.c d() -> d
    boolean e() -> e
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.bc f() -> f
    cn.jpush.im.proto.bc a(cn.jpush.im.proto.bb) -> a
    com.google.protobuf.jpush.c a(cn.jpush.im.proto.bb,com.google.protobuf.jpush.c) -> a
    int a(cn.jpush.im.proto.bb,int) -> a
cn.jpush.im.proto.bc -> cn.jpush.im.proto.bc:
    int a -> a
    com.google.protobuf.jpush.c b -> b
    cn.jpush.im.proto.bc f() -> f
    cn.jpush.im.proto.bb a() -> a
    cn.jpush.im.proto.bb b() -> b
    cn.jpush.im.proto.bc a(cn.jpush.im.proto.bb) -> a
    cn.jpush.im.proto.bc c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.im.proto.bc a(com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.bc e() -> e
cn.jpush.im.proto.c -> cn.jpush.im.proto.c:
    int a -> a
    java.util.List b -> b
    cn.jpush.im.proto.c f() -> f
    cn.jpush.im.proto.b a() -> a
    cn.jpush.im.proto.b b() -> b
    cn.jpush.im.proto.c a(cn.jpush.im.proto.b) -> a
    cn.jpush.im.proto.c c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    void g() -> g
    cn.jpush.im.proto.c a(java.lang.Iterable) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.c e() -> e
cn.jpush.im.proto.d -> cn.jpush.im.proto.d:
    cn.jpush.im.proto.d a -> a
    int b -> b
    long c -> c
    com.google.protobuf.jpush.c d -> d
    byte e -> e
    int f -> f
    cn.jpush.im.proto.d a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    com.google.protobuf.jpush.c f() -> f
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.e g() -> g
    cn.jpush.im.proto.e a(cn.jpush.im.proto.d) -> a
    long a(cn.jpush.im.proto.d,long) -> a
    com.google.protobuf.jpush.c a(cn.jpush.im.proto.d,com.google.protobuf.jpush.c) -> a
    int a(cn.jpush.im.proto.d,int) -> a
cn.jpush.im.proto.e -> cn.jpush.im.proto.e:
    int a -> a
    long b -> b
    com.google.protobuf.jpush.c c -> c
    cn.jpush.im.proto.e e() -> e
    cn.jpush.im.proto.d a() -> a
    cn.jpush.im.proto.e a(cn.jpush.im.proto.d) -> a
    cn.jpush.im.proto.e c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.e b() -> b
cn.jpush.im.proto.f -> cn.jpush.im.proto.f:
    cn.jpush.im.proto.f a -> a
    java.util.List b -> b
    byte c -> c
    int d -> d
    cn.jpush.im.proto.f a() -> a
    boolean b() -> b
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.g d() -> d
    cn.jpush.im.proto.g a(cn.jpush.im.proto.f) -> a
    java.util.List a(cn.jpush.im.proto.f,java.util.List) -> a
    java.util.List b(cn.jpush.im.proto.f) -> b
cn.jpush.im.proto.g -> cn.jpush.im.proto.g:
    int a -> a
    java.util.List b -> b
    cn.jpush.im.proto.g f() -> f
    cn.jpush.im.proto.f a() -> a
    cn.jpush.im.proto.f b() -> b
    cn.jpush.im.proto.g a(cn.jpush.im.proto.f) -> a
    cn.jpush.im.proto.g c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    void g() -> g
    cn.jpush.im.proto.g a(java.lang.Iterable) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.g e() -> e
cn.jpush.im.proto.h -> cn.jpush.im.proto.h:
    cn.jpush.im.proto.h a -> a
    java.util.List b -> b
    byte c -> c
    int d -> d
    cn.jpush.im.proto.h a() -> a
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.i b() -> b
    cn.jpush.im.proto.i a(cn.jpush.im.proto.h) -> a
    java.util.List a(cn.jpush.im.proto.h,java.util.List) -> a
    java.util.List b(cn.jpush.im.proto.h) -> b
cn.jpush.im.proto.i -> cn.jpush.im.proto.i:
    int a -> a
    java.util.List b -> b
    cn.jpush.im.proto.i e() -> e
    cn.jpush.im.proto.h a() -> a
    cn.jpush.im.proto.i a(cn.jpush.im.proto.h) -> a
    cn.jpush.im.proto.i c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    void f() -> f
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.i b() -> b
cn.jpush.im.proto.j -> cn.jpush.im.proto.j:
    cn.jpush.im.proto.j a -> a
    int b -> b
    long c -> c
    com.google.protobuf.jpush.c d -> d
    byte e -> e
    int f -> f
    cn.jpush.im.proto.j a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    com.google.protobuf.jpush.c f() -> f
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.k g() -> g
    cn.jpush.im.proto.k a(cn.jpush.im.proto.j) -> a
    long a(cn.jpush.im.proto.j,long) -> a
    com.google.protobuf.jpush.c a(cn.jpush.im.proto.j,com.google.protobuf.jpush.c) -> a
    int a(cn.jpush.im.proto.j,int) -> a
cn.jpush.im.proto.k -> cn.jpush.im.proto.k:
    int a -> a
    long b -> b
    com.google.protobuf.jpush.c c -> c
    cn.jpush.im.proto.k e() -> e
    cn.jpush.im.proto.j a() -> a
    cn.jpush.im.proto.k a(cn.jpush.im.proto.j) -> a
    cn.jpush.im.proto.k c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.k b() -> b
cn.jpush.im.proto.l -> cn.jpush.im.proto.l:
cn.jpush.im.proto.m -> cn.jpush.im.proto.m:
    cn.jpush.im.proto.m a -> a
    int b -> b
    long c -> c
    int d -> d
    java.util.List e -> e
    byte f -> f
    int g -> g
    cn.jpush.im.proto.m a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    int f() -> f
    boolean g() -> g
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.n h() -> h
    cn.jpush.im.proto.n a(cn.jpush.im.proto.m) -> a
    long a(cn.jpush.im.proto.m,long) -> a
    int a(cn.jpush.im.proto.m,int) -> a
    java.util.List a(cn.jpush.im.proto.m,java.util.List) -> a
    int b(cn.jpush.im.proto.m,int) -> b
    java.util.List b(cn.jpush.im.proto.m) -> b
cn.jpush.im.proto.n -> cn.jpush.im.proto.n:
    int a -> a
    long b -> b
    int c -> c
    java.util.List d -> d
    cn.jpush.im.proto.n f() -> f
    cn.jpush.im.proto.m a() -> a
    cn.jpush.im.proto.m b() -> b
    cn.jpush.im.proto.n a(cn.jpush.im.proto.m) -> a
    cn.jpush.im.proto.n c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.im.proto.n a(long) -> a
    cn.jpush.im.proto.n a(int) -> a
    void g() -> g
    cn.jpush.im.proto.n a(java.lang.Iterable) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.n e() -> e
cn.jpush.im.proto.o -> cn.jpush.im.proto.o:
    cn.jpush.im.proto.o a -> a
    int b -> b
    com.google.protobuf.jpush.c c -> c
    com.google.protobuf.jpush.c d -> d
    int e -> e
    int f -> f
    long g -> g
    byte h -> h
    int i -> i
    cn.jpush.im.proto.o a() -> a
    boolean b() -> b
    com.google.protobuf.jpush.c d() -> d
    boolean e() -> e
    com.google.protobuf.jpush.c f() -> f
    boolean g() -> g
    int h() -> h
    boolean i() -> i
    int j() -> j
    boolean k() -> k
    long l() -> l
    boolean m() -> m
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.p n() -> n
    cn.jpush.im.proto.p a(cn.jpush.im.proto.o) -> a
    com.google.protobuf.jpush.c a(cn.jpush.im.proto.o,com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.c b(cn.jpush.im.proto.o,com.google.protobuf.jpush.c) -> b
    int a(cn.jpush.im.proto.o,int) -> a
    int b(cn.jpush.im.proto.o,int) -> b
    long a(cn.jpush.im.proto.o,long) -> a
    int c(cn.jpush.im.proto.o,int) -> c
cn.jpush.im.proto.p -> cn.jpush.im.proto.p:
    int a -> a
    com.google.protobuf.jpush.c b -> b
    com.google.protobuf.jpush.c c -> c
    int d -> d
    int e -> e
    long f -> f
    cn.jpush.im.proto.p f() -> f
    cn.jpush.im.proto.o a() -> a
    cn.jpush.im.proto.o b() -> b
    cn.jpush.im.proto.p a(cn.jpush.im.proto.o) -> a
    cn.jpush.im.proto.p c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.im.proto.p a(com.google.protobuf.jpush.c) -> a
    cn.jpush.im.proto.p b(com.google.protobuf.jpush.c) -> b
    cn.jpush.im.proto.p a(int) -> a
    cn.jpush.im.proto.p b(int) -> b
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.p e() -> e
cn.jpush.im.proto.q -> cn.jpush.im.proto.q:
    cn.jpush.im.proto.q a -> a
    int b -> b
    long c -> c
    int d -> d
    java.util.List e -> e
    byte f -> f
    int g -> g
    cn.jpush.im.proto.q a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    int f() -> f
    boolean g() -> g
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.r h() -> h
    cn.jpush.im.proto.r a(cn.jpush.im.proto.q) -> a
    long a(cn.jpush.im.proto.q,long) -> a
    int a(cn.jpush.im.proto.q,int) -> a
    java.util.List a(cn.jpush.im.proto.q,java.util.List) -> a
    int b(cn.jpush.im.proto.q,int) -> b
    java.util.List b(cn.jpush.im.proto.q) -> b
cn.jpush.im.proto.r -> cn.jpush.im.proto.r:
    int a -> a
    long b -> b
    int c -> c
    java.util.List d -> d
    cn.jpush.im.proto.r f() -> f
    cn.jpush.im.proto.q a() -> a
    cn.jpush.im.proto.q b() -> b
    cn.jpush.im.proto.r a(cn.jpush.im.proto.q) -> a
    cn.jpush.im.proto.r c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.im.proto.r a(long) -> a
    cn.jpush.im.proto.r a(int) -> a
    void g() -> g
    cn.jpush.im.proto.r a(java.lang.Iterable) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.r e() -> e
cn.jpush.im.proto.s -> cn.jpush.im.proto.s:
    cn.jpush.im.proto.s a -> a
    int b -> b
    long c -> c
    byte d -> d
    int e -> e
    cn.jpush.im.proto.s a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.t f() -> f
    cn.jpush.im.proto.t a(cn.jpush.im.proto.s) -> a
    long a(cn.jpush.im.proto.s,long) -> a
    int a(cn.jpush.im.proto.s,int) -> a
cn.jpush.im.proto.t -> cn.jpush.im.proto.t:
    int a -> a
    long b -> b
    cn.jpush.im.proto.t f() -> f
    cn.jpush.im.proto.s a() -> a
    cn.jpush.im.proto.s b() -> b
    cn.jpush.im.proto.t a(cn.jpush.im.proto.s) -> a
    cn.jpush.im.proto.t c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.im.proto.t a(long) -> a
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.t e() -> e
cn.jpush.im.proto.u -> cn.jpush.im.proto.u:
    cn.jpush.im.proto.u a -> a
    int b -> b
    long c -> c
    com.google.protobuf.jpush.c d -> d
    com.google.protobuf.jpush.c e -> e
    byte f -> f
    int g -> g
    cn.jpush.im.proto.u a() -> a
    boolean b() -> b
    long d() -> d
    boolean e() -> e
    com.google.protobuf.jpush.c f() -> f
    boolean g() -> g
    com.google.protobuf.jpush.c h() -> h
    boolean i() -> i
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.v j() -> j
    cn.jpush.im.proto.v a(cn.jpush.im.proto.u) -> a
    long a(cn.jpush.im.proto.u,long) -> a
    com.google.protobuf.jpush.c a(cn.jpush.im.proto.u,com.google.protobuf.jpush.c) -> a
    com.google.protobuf.jpush.c b(cn.jpush.im.proto.u,com.google.protobuf.jpush.c) -> b
    int a(cn.jpush.im.proto.u,int) -> a
cn.jpush.im.proto.v -> cn.jpush.im.proto.v:
    int a -> a
    long b -> b
    com.google.protobuf.jpush.c c -> c
    com.google.protobuf.jpush.c d -> d
    cn.jpush.im.proto.v f() -> f
    cn.jpush.im.proto.u a() -> a
    cn.jpush.im.proto.u b() -> b
    cn.jpush.im.proto.v a(cn.jpush.im.proto.u) -> a
    cn.jpush.im.proto.v c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    cn.jpush.im.proto.v a(long) -> a
    cn.jpush.im.proto.v a(com.google.protobuf.jpush.c) -> a
    cn.jpush.im.proto.v b(com.google.protobuf.jpush.c) -> b
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.v e() -> e
cn.jpush.im.proto.w -> cn.jpush.im.proto.w:
cn.jpush.im.proto.x -> cn.jpush.im.proto.x:
    cn.jpush.im.proto.x a -> a
    java.util.List b -> b
    byte c -> c
    int d -> d
    cn.jpush.im.proto.x a() -> a
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.y b() -> b
    cn.jpush.im.proto.y a(cn.jpush.im.proto.x) -> a
    java.util.List a(cn.jpush.im.proto.x,java.util.List) -> a
    java.util.List b(cn.jpush.im.proto.x) -> b
cn.jpush.im.proto.y -> cn.jpush.im.proto.y:
    int a -> a
    java.util.List b -> b
    cn.jpush.im.proto.y e() -> e
    cn.jpush.im.proto.x a() -> a
    cn.jpush.im.proto.y a(cn.jpush.im.proto.x) -> a
    cn.jpush.im.proto.y c(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> c
    void f() -> f
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
    java.lang.Object clone() -> clone
    cn.jpush.im.proto.y b() -> b
cn.jpush.im.proto.z -> cn.jpush.im.proto.z:
    cn.jpush.im.proto.z a -> a
    int b -> b
    cn.jpush.im.proto.ad c -> c
    cn.jpush.im.proto.ab d -> d
    byte e -> e
    int f -> f
    cn.jpush.im.proto.z a() -> a
    boolean b() -> b
    cn.jpush.im.proto.ad d() -> d
    boolean e() -> e
    cn.jpush.im.proto.ab f() -> f
    boolean g() -> g
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
    cn.jpush.im.proto.z a(byte[]) -> a
    cn.jpush.im.proto.aa h() -> h
    cn.jpush.im.proto.ad a(cn.jpush.im.proto.z,cn.jpush.im.proto.ad) -> a
    cn.jpush.im.proto.ab a(cn.jpush.im.proto.z,cn.jpush.im.proto.ab) -> a
    int a(cn.jpush.im.proto.z,int) -> a
cn.jpush.proto.common.commands.a -> cn.jpush.proto.common.commands.a:
    int a -> a
    int b -> b
    int c -> c
    long d -> d
    java.lang.String[] z -> z
    int a() -> a
    void b() -> b
    void c() -> c
    java.lang.String toString() -> toString
cn.jpush.proto.common.commands.b -> cn.jpush.proto.common.commands.b:
    int a -> a
    cn.jpush.proto.common.imcommands.h b -> b
    java.lang.String[] z -> z
    cn.jpush.proto.common.imcommands.h a() -> a
    void b() -> b
    void c() -> c
    java.lang.String toString() -> toString
cn.jpush.proto.common.commands.c -> cn.jpush.proto.common.commands.c:
    int a -> a
    cn.jpush.proto.common.imcommands.h b -> b
    java.lang.String[] z -> z
    cn.jpush.proto.common.imcommands.h a() -> a
    void b() -> b
    void c() -> c
    java.lang.String toString() -> toString
cn.jpush.proto.common.commands.d -> cn.jpush.proto.common.commands.d:
    java.lang.String[] z -> z
    cn.jpush.proto.common.commands.h a(byte[]) -> a
cn.jpush.proto.common.commands.e -> cn.jpush.proto.common.commands.e:
    int a -> a
    int b -> b
    int c -> c
    java.lang.Long d -> d
    int e -> e
    long f -> f
    boolean g -> g
    java.lang.String[] z -> z
    java.lang.Long a() -> a
    long b() -> b
    byte[] c() -> c
    java.lang.String toString() -> toString
cn.jpush.proto.common.commands.f -> cn.jpush.proto.common.commands.f:
    boolean a -> a
    cn.jpush.proto.common.commands.e e -> e
    java.nio.ByteBuffer f -> f
    java.lang.String[] z -> z
    int d() -> d
    cn.jpush.proto.common.commands.e e() -> e
    void c() -> c
    void b() -> b
    void a(byte[]) -> a
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void a(long) -> a
    void a(java.lang.String) -> a
    byte[] f() -> f
    byte[] a() -> a
    java.lang.String toString() -> toString
cn.jpush.proto.common.commands.g -> cn.jpush.proto.common.commands.g:
    void d(int) -> d
    void b(long) -> b
cn.jpush.proto.common.commands.h -> cn.jpush.proto.common.commands.h:
    int g -> g
    java.lang.String h -> h
    java.lang.String[] z -> z
    void b() -> b
    void c() -> c
    java.lang.String toString() -> toString
cn.jpush.proto.common.commands.i -> cn.jpush.proto.common.commands.i:
    int a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String[] z -> z
    void b() -> b
    void c() -> c
    int a() -> a
    int g() -> g
    java.lang.String toString() -> toString
cn.jpush.proto.common.commands.j -> cn.jpush.proto.common.commands.j:
    int a -> a
    long b -> b
    java.lang.String c -> c
    java.lang.String[] z -> z
    void b() -> b
    void c() -> c
    int a() -> a
    long g() -> g
    java.lang.String h() -> h
    java.lang.String toString() -> toString
cn.jpush.proto.common.commands.k -> cn.jpush.proto.common.commands.k:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String i -> i
    java.lang.String[] z -> z
    void b() -> b
    void c() -> c
    long a() -> a
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String toString() -> toString
cn.jpush.proto.common.commands.l -> cn.jpush.proto.common.commands.l:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String[] z -> z
    void c() -> c
    void b() -> b
    java.lang.String a() -> a
    java.lang.String toString() -> toString
cn.jpush.proto.common.commands.m -> cn.jpush.proto.common.commands.m:
    int a -> a
    java.lang.String[] z -> z
    void b() -> b
    void c() -> c
    java.lang.String toString() -> toString
cn.jpush.proto.common.imcommands.a -> cn.jpush.proto.common.imcommands.a:
    java.util.List a -> a
    cn.jpush.proto.common.imcommands.h a(long,java.lang.String) -> a
cn.jpush.proto.common.imcommands.b -> cn.jpush.proto.common.imcommands.b:
    long a -> a
    java.util.List b -> b
    cn.jpush.proto.common.imcommands.h a(long,java.lang.String) -> a
cn.jpush.proto.common.imcommands.c -> cn.jpush.proto.common.imcommands.c:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    cn.jpush.proto.common.imcommands.h a(long,java.lang.String) -> a
cn.jpush.proto.common.imcommands.d -> cn.jpush.proto.common.imcommands.d:
    java.util.List a -> a
    cn.jpush.proto.common.imcommands.h a(long,java.lang.String) -> a
cn.jpush.proto.common.imcommands.e -> cn.jpush.proto.common.imcommands.e:
    long a -> a
    java.util.List b -> b
    cn.jpush.proto.common.imcommands.h a(long,java.lang.String) -> a
cn.jpush.proto.common.imcommands.f -> cn.jpush.proto.common.imcommands.f:
    long a -> a
    cn.jpush.proto.common.imcommands.h a(long,java.lang.String) -> a
cn.jpush.proto.common.imcommands.g -> cn.jpush.proto.common.imcommands.g:
    long a -> a
    java.lang.String b -> b
    cn.jpush.proto.common.imcommands.h a(long,java.lang.String) -> a
cn.jpush.proto.common.imcommands.h -> cn.jpush.proto.common.imcommands.h:
    int a -> a
    int b -> b
    long c -> c
    java.lang.String d -> d
    java.lang.Object e -> e
    cn.jpush.im.proto.af f -> f
    int g -> g
    java.lang.String h -> h
    java.lang.String[] z -> z
    cn.jpush.im.proto.z a() -> a
    int b() -> b
    java.lang.String toString() -> toString
cn.jpush.proto.common.imcommands.i -> cn.jpush.proto.common.imcommands.i:
    com.google.gson.jpush.k e -> e
    long f -> f
    long g -> g
    java.lang.String z -> z
    cn.jpush.proto.common.imcommands.h a(long,java.lang.String) -> a
    cn.jpush.proto.common.commands.b a(java.lang.String) -> a
    cn.jpush.proto.common.imcommands.i a(java.lang.String,int) -> a
cn.jpush.proto.common.imcommands.j -> cn.jpush.proto.common.imcommands.j:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    cn.jpush.proto.common.imcommands.h a(long,java.lang.String) -> a
cn.jpush.proto.common.imcommands.k -> cn.jpush.proto.common.imcommands.k:
    java.lang.String a -> a
    cn.jpush.proto.common.imcommands.h a(long,java.lang.String) -> a
cn.jpush.proto.common.imcommands.l -> cn.jpush.proto.common.imcommands.l:
    java.lang.String[] z -> z
    void a(android.content.Context,android.os.Handler,cn.jpush.proto.common.commands.h,byte[]) -> a
    void a(android.os.Handler,long,cn.jpush.proto.common.imcommands.h) -> a
cn.jpush.proto.common.imcommands.m -> cn.jpush.proto.common.imcommands.m:
    java.lang.String a -> a
    long b -> b
    java.lang.String c -> c
    cn.jpush.proto.common.imcommands.h a(long,java.lang.String) -> a
cn.jpush.proto.common.imcommands.n -> cn.jpush.proto.common.imcommands.n:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    cn.jpush.proto.common.imcommands.h a(long,java.lang.String) -> a
cn.jpush.proto.common.utils.a -> cn.jpush.proto.common.utils.a:
    java.lang.String z -> z
    byte[] a(java.nio.ByteBuffer) -> a
    byte[] a(java.lang.String) -> a
    void a(byte[],int,int) -> a
    void a(byte[],java.lang.String,int) -> a
    java.lang.String b(java.nio.ByteBuffer) -> b
cn.jpush.proto.common.utils.b -> cn.jpush.proto.common.utils.b:
    java.lang.String z -> z
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
cn.jpush.proto.common.utils.c -> cn.jpush.proto.common.utils.c:
    java.lang.String z -> z
    java.lang.String a(byte[]) -> a
com.android.internal.http.multipart.FilePart -> com.android.internal.http.multipart.FilePart:
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    java.lang.String DEFAULT_TRANSFER_ENCODING -> DEFAULT_TRANSFER_ENCODING
com.android.internal.http.multipart.MultipartEntity -> com.android.internal.http.multipart.MultipartEntity:
    java.lang.String MULTIPART_BOUNDARY -> MULTIPART_BOUNDARY
    com.android.internal.http.multipart.Part[] parts -> a
    boolean isRepeatable() -> isRepeatable
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.http.Header getContentType() -> getContentType
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isStreaming() -> isStreaming
com.android.internal.http.multipart.Part -> com.android.internal.http.multipart.a:
    byte[] BOUNDARY_BYTES -> a
    byte[] CHARSET_BYTES -> b
    byte[] CONTENT_DISPOSITION_BYTES -> c
    byte[] CONTENT_TRANSFER_ENCODING_BYTES -> d
    byte[] CONTENT_TYPE_BYTES -> e
    byte[] CRLF_BYTES -> f
    byte[] EXTRA_BYTES -> g
    byte[] QUOTE_BYTES -> h
    java.lang.String getBoundary() -> getBoundary
    java.lang.String getName() -> getName
    java.lang.String getContentType() -> getContentType
    java.lang.String getCharSet() -> getCharSet
    java.lang.String getTransferEncoding() -> getTransferEncoding
    boolean isRepeatable() -> isRepeatable
    void send(java.io.OutputStream) -> send
    long length() -> length
    java.lang.String toString() -> toString
    void sendParts(java.io.OutputStream,com.android.internal.http.multipart.Part[]) -> sendParts
    void sendParts(java.io.OutputStream,com.android.internal.http.multipart.Part[],byte[]) -> sendParts
    long getLengthOfParts(com.android.internal.http.multipart.Part[]) -> getLengthOfParts
    long getLengthOfParts(com.android.internal.http.multipart.Part[],byte[]) -> getLengthOfParts
com.android.internal.http.multipart.PartBase -> com.android.internal.http.multipart.b:
    java.lang.String getName() -> getName
    java.lang.String getContentType() -> getContentType
    java.lang.String getCharSet() -> getCharSet
    java.lang.String getTransferEncoding() -> getTransferEncoding
    void setCharSet(java.lang.String) -> setCharSet
    void setContentType(java.lang.String) -> setContentType
    void setName(java.lang.String) -> setName
    void setTransferEncoding(java.lang.String) -> setTransferEncoding
com.android.internal.http.multipart.PartSource -> com.android.internal.http.multipart.c:
com.android.internal.http.multipart.StringPart -> com.android.internal.http.multipart.StringPart:
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    java.lang.String DEFAULT_TRANSFER_ENCODING -> DEFAULT_TRANSFER_ENCODING
    void setCharSet(java.lang.String) -> setCharSet
com.baidu.a.a.a.a -> com.baidu.a.a.a.a:
    java.lang.String a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,android.os.Bundle) -> a
com.baidu.a.a.a.a$a -> com.baidu.a.a.a.a$a:
    com.baidu.a.a.a.a a(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.a.a.a.a$a$a -> com.baidu.a.a.a.a$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,android.os.Bundle) -> a
com.baidu.a.a.a.b -> com.baidu.a.a.a.b:
    void a(com.baidu.a.a.a.c) -> a
com.baidu.a.a.a.b$a -> com.baidu.a.a.a.b$a:
    com.baidu.a.a.a.b a(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.a.a.a.b$a$a -> com.baidu.a.a.a.b$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void a(com.baidu.a.a.a.c) -> a
com.baidu.a.a.a.c -> com.baidu.a.a.a.c:
    void a(android.os.IBinder) -> a
com.baidu.a.a.a.c$a -> com.baidu.a.a.a.c$a:
    com.baidu.a.a.a.c b(android.os.IBinder) -> b
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.a.a.a.c$a$a -> com.baidu.a.a.a.c$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void a(android.os.IBinder) -> a
com.baidu.android.bbalbs.common.a.a -> com.baidu.android.bbalbs.common.a.a:
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(java.lang.String,java.lang.String,byte[]) -> b
com.baidu.android.bbalbs.common.a.b -> com.baidu.android.bbalbs.common.a.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.android.bbalbs.common.a.c -> com.baidu.android.bbalbs.common.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.android.bbalbs.common.util.CommonParam -> com.baidu.android.bbalbs.common.util.CommonParam:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
com.baidu.android.bbalbs.common.util.a -> com.baidu.android.bbalbs.common.util.a:
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.android.bbalbs.common.util.a$a -> com.baidu.android.bbalbs.common.util.a$a:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.android.bbalbs.common.util.a$a a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
com.baidu.lbsapi.auth.ErrorMessage -> com.baidu.lbsapi.auth.ErrorMessage:
    java.lang.String a(java.lang.String) -> a
com.baidu.lbsapi.auth.LBSAuthManager -> com.baidu.lbsapi.auth.LBSAuthManager:
    boolean debug -> debug
    int CODE_UNAUTHENTICATE -> CODE_UNAUTHENTICATE
    int CODE_AUTHENTICATING -> CODE_AUTHENTICATING
    int CODE_AUTHENTICATE_SUCC -> CODE_AUTHENTICATE_SUCC
    int CODE_INNER_ERROR -> CODE_INNER_ERROR
    java.lang.String VERSION -> VERSION
    java.lang.String API_KEY -> API_KEY
    java.lang.String CACHE_FILE_NAME -> CACHE_FILE_NAME
    java.lang.String CACHE_KEY -> CACHE_KEY
    java.lang.String AUTH_URL -> AUTH_URL
    android.content.Context mContext -> mContext
    com.baidu.lbsapi.auth.c mHttpAsyncTask -> mHttpAsyncTask
    com.baidu.lbsapi.auth.f mHttpSyncTask -> mHttpSyncTask
    com.baidu.lbsapi.auth.m mThreadLooper -> mThreadLooper
    int mAuthCounter -> mAuthCounter
    int AUTH_TIMEOUT -> AUTH_TIMEOUT
    java.util.Hashtable listenerTable -> listenerTable
    com.baidu.lbsapi.auth.LBSAuthManager instance -> instance
    android.os.Handler mHandler -> mHandler
    void createAuthThread() -> createAuthThread
    com.baidu.lbsapi.auth.LBSAuthManager getInstance(android.content.Context) -> getInstance
    java.lang.String getPublicKey(android.content.Context) -> getPublicKey
    java.lang.String getPublicKey(android.content.Context,java.lang.String) -> getPublicKey
    void callbackToMainThread(java.lang.String,java.lang.String) -> callbackToMainThread
    int parseAuthMessage(java.lang.String) -> parseAuthMessage
    int authenticate(com.baidu.lbsapi.auth.LBSAuthManagerListener) -> authenticate
    int authenticate(boolean,java.util.Hashtable,com.baidu.lbsapi.auth.LBSAuthManagerListener) -> authenticate
    int authenticate(boolean,java.lang.String,java.util.Hashtable,com.baidu.lbsapi.auth.LBSAuthManagerListener) -> authenticate
    boolean checkAkChanged(java.lang.String) -> checkAkChanged
    void sendAuthRequest(boolean,java.lang.String,java.util.Hashtable,java.lang.String) -> sendAuthRequest
    void sendAuthRequests(boolean,java.lang.String,java.util.Hashtable,java.lang.String[],java.lang.String) -> sendAuthRequests
    java.lang.String getAuthString() -> getAuthString
    void saveAuthString(java.lang.String) -> saveAuthString
    java.lang.String getCurProcessName(android.content.Context) -> getCurProcessName
    java.util.Hashtable access$0() -> access$0
    boolean access$1(com.baidu.lbsapi.auth.LBSAuthManager,java.lang.String) -> access$1
    android.content.Context access$2() -> access$2
    void access$3(com.baidu.lbsapi.auth.LBSAuthManager,boolean,java.lang.String,java.util.Hashtable,java.lang.String[],java.lang.String) -> access$3
    void access$4(com.baidu.lbsapi.auth.LBSAuthManager,boolean,java.lang.String,java.util.Hashtable,java.lang.String) -> access$4
    com.baidu.lbsapi.auth.m access$5() -> access$5
    void access$6(com.baidu.lbsapi.auth.LBSAuthManager,java.lang.String,java.lang.String) -> access$6
com.baidu.lbsapi.auth.LBSAuthManagerListener -> com.baidu.lbsapi.auth.LBSAuthManagerListener:
    void onAuthResult(int,java.lang.String) -> onAuthResult
com.baidu.lbsapi.auth.a -> com.baidu.lbsapi.auth.a:
    boolean a -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
com.baidu.lbsapi.auth.b -> com.baidu.lbsapi.auth.b:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String[] b(android.content.Context) -> b
    java.lang.String[] b(android.content.Context,java.lang.String) -> b
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    boolean c(android.content.Context,java.lang.String) -> c
    java.lang.String a() -> a
com.baidu.lbsapi.auth.b$a -> com.baidu.lbsapi.auth.b$a:
    java.lang.String a(byte[]) -> a
com.baidu.lbsapi.auth.c -> com.baidu.lbsapi.auth.c:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.HashMap e -> e
    com.baidu.lbsapi.auth.c$a f -> f
    void a(java.util.HashMap,com.baidu.lbsapi.auth.c$a) -> a
    void a(java.lang.String) -> a
    boolean a(org.apache.http.client.HttpClient) -> a
    void b(org.apache.http.client.HttpClient) -> b
    void a(org.apache.http.client.HttpClient,java.lang.String,java.util.HashMap) -> a
    void a(java.lang.String,java.util.HashMap) -> a
    java.lang.String a(android.content.Context) -> a
    java.util.HashMap a(java.util.HashMap) -> a
    org.apache.http.client.HttpClient a() -> a
    java.lang.String a(com.baidu.lbsapi.auth.c) -> a
    java.util.HashMap b(com.baidu.lbsapi.auth.c) -> b
    void a(com.baidu.lbsapi.auth.c,java.lang.String,java.util.HashMap) -> a
com.baidu.lbsapi.auth.c$a -> com.baidu.lbsapi.auth.c$a:
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.c$b -> com.baidu.lbsapi.auth.c$b:
    javax.net.ssl.SSLContext a -> a
    com.baidu.lbsapi.auth.c b -> b
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.baidu.lbsapi.auth.d -> com.baidu.lbsapi.auth.d:
    com.baidu.lbsapi.auth.c a -> a
    void run() -> run
com.baidu.lbsapi.auth.e -> com.baidu.lbsapi.auth.e:
    com.baidu.lbsapi.auth.c$b a -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.baidu.lbsapi.auth.f -> com.baidu.lbsapi.auth.f:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.List e -> e
    com.baidu.lbsapi.auth.f$a f -> f
    void a(java.util.HashMap,java.lang.String[],com.baidu.lbsapi.auth.f$a) -> a
    void a(java.lang.String) -> a
    boolean a(org.apache.http.client.HttpClient) -> a
    void b(org.apache.http.client.HttpClient) -> b
    java.lang.String a(org.apache.http.client.HttpClient,java.lang.String,java.util.HashMap) -> a
    void a(java.util.List) -> a
    java.lang.String a(android.content.Context) -> a
    java.util.List a(java.util.HashMap,java.lang.String[]) -> a
    org.apache.http.client.HttpClient a() -> a
    java.util.List a(com.baidu.lbsapi.auth.f) -> a
    void a(com.baidu.lbsapi.auth.f,java.util.List) -> a
com.baidu.lbsapi.auth.f$a -> com.baidu.lbsapi.auth.f$a:
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.f$b -> com.baidu.lbsapi.auth.f$b:
    javax.net.ssl.SSLContext a -> a
    com.baidu.lbsapi.auth.f b -> b
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.baidu.lbsapi.auth.g -> com.baidu.lbsapi.auth.g:
    com.baidu.lbsapi.auth.f a -> a
    void run() -> run
com.baidu.lbsapi.auth.h -> com.baidu.lbsapi.auth.h:
    com.baidu.lbsapi.auth.f$b a -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.baidu.lbsapi.auth.i -> com.baidu.lbsapi.auth.i:
    com.baidu.lbsapi.auth.LBSAuthManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.lbsapi.auth.j -> com.baidu.lbsapi.auth.j:
    com.baidu.lbsapi.auth.LBSAuthManager a -> a
    int b -> b
    boolean c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.util.Hashtable f -> f
    void run() -> run
com.baidu.lbsapi.auth.k -> com.baidu.lbsapi.auth.k:
    com.baidu.lbsapi.auth.LBSAuthManager a -> a
    java.lang.String b -> b
    void a(java.lang.String) -> a
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.l -> com.baidu.lbsapi.auth.l:
    com.baidu.lbsapi.auth.LBSAuthManager a -> a
    java.lang.String b -> b
    void a(java.lang.String) -> a
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.m -> com.baidu.lbsapi.auth.m:
    android.os.Handler a -> a
    java.lang.Object b -> b
    boolean c -> c
    boolean d -> d
    void run() -> run
    void a() -> a
    void b() -> b
    void c() -> c
com.baidu.location.Address -> com.baidu.location.Address:
    java.lang.String country -> country
    java.lang.String countryCode -> countryCode
    java.lang.String province -> province
    java.lang.String city -> city
    java.lang.String cityCode -> cityCode
    java.lang.String district -> district
    java.lang.String street -> street
    java.lang.String streetNumber -> streetNumber
    java.lang.String address -> address
com.baidu.location.Address$1 -> com.baidu.location.Address$1:
com.baidu.location.Address$Builder -> com.baidu.location.Address$Builder:
    java.lang.String new -> new
    java.lang.String try -> try
    java.lang.String if -> if
    java.lang.String byte -> byte
    java.lang.String char -> char
    java.lang.String goto -> goto
    java.lang.String else -> else
    java.lang.String for -> for
    java.lang.String long -> long
    java.lang.String do -> do
    java.lang.String int -> int
    java.lang.String case -> case
    java.lang.String a -> a
    com.baidu.location.Address$Builder country(java.lang.String) -> country
    com.baidu.location.Address$Builder countryCode(java.lang.String) -> countryCode
    com.baidu.location.Address$Builder province(java.lang.String) -> province
    com.baidu.location.Address$Builder city(java.lang.String) -> city
    com.baidu.location.Address$Builder cityCode(java.lang.String) -> cityCode
    com.baidu.location.Address$Builder district(java.lang.String) -> district
    com.baidu.location.Address$Builder street(java.lang.String) -> street
    com.baidu.location.Address$Builder streetNumber(java.lang.String) -> streetNumber
    com.baidu.location.Address build() -> build
    java.lang.String int(com.baidu.location.Address$Builder) -> int
    java.lang.String do(com.baidu.location.Address$Builder) -> do
    java.lang.String case(com.baidu.location.Address$Builder) -> case
    java.lang.String if(com.baidu.location.Address$Builder) -> if
    java.lang.String byte(com.baidu.location.Address$Builder) -> byte
    java.lang.String new(com.baidu.location.Address$Builder) -> new
    java.lang.String for(com.baidu.location.Address$Builder) -> for
    java.lang.String a(com.baidu.location.Address$Builder) -> a
    java.lang.String try(com.baidu.location.Address$Builder) -> try
com.baidu.location.BDLocation -> com.baidu.location.BDLocation:
    int TypeNone -> TypeNone
    int TypeGpsLocation -> TypeGpsLocation
    int TypeCriteriaException -> TypeCriteriaException
    int TypeNetWorkException -> TypeNetWorkException
    int TypeOffLineLocation -> TypeOffLineLocation
    int TypeOffLineLocationFail -> TypeOffLineLocationFail
    int TypeOffLineLocationNetworkFail -> TypeOffLineLocationNetworkFail
    int TypeNetWorkLocation -> TypeNetWorkLocation
    int TypeCacheLocation -> TypeCacheLocation
    int TypeServerError -> TypeServerError
    int LOCATION_WHERE_UNKNOW -> LOCATION_WHERE_UNKNOW
    int LOCATION_WHERE_IN_CN -> LOCATION_WHERE_IN_CN
    int LOCATION_WHERE_OUT_CN -> LOCATION_WHERE_OUT_CN
    int OPERATORS_TYPE_UNKONW -> OPERATORS_TYPE_UNKONW
    int OPERATORS_TYPE_MOBILE -> OPERATORS_TYPE_MOBILE
    int OPERATORS_TYPE_UNICOM -> OPERATORS_TYPE_UNICOM
    int OPERATORS_TYPE_TELECOMU -> OPERATORS_TYPE_TELECOMU
    java.lang.String BDLOCATION_GCJ02_TO_BD09 -> BDLOCATION_GCJ02_TO_BD09
    java.lang.String BDLOCATION_GCJ02_TO_BD09LL -> BDLOCATION_GCJ02_TO_BD09LL
    java.lang.String BDLOCATION_BD09_TO_GCJ02 -> BDLOCATION_BD09_TO_GCJ02
    java.lang.String BDLOCATION_BD09LL_TO_GCJ02 -> BDLOCATION_BD09LL_TO_GCJ02
    int kW -> kW
    java.lang.String k1 -> k1
    double kB -> kB
    double kX -> kX
    boolean kD -> kD
    double kK -> kK
    boolean kE -> kE
    float k0 -> k0
    boolean kN -> kN
    float kS -> kS
    boolean kZ -> kZ
    int kA -> kA
    float kI -> kI
    java.lang.String k2 -> k2
    boolean kT -> kT
    java.lang.String kz -> kz
    java.lang.String kG -> kG
    java.lang.String kJ -> kJ
    java.lang.String kY -> kY
    boolean kL -> kL
    com.baidu.location.Address kM -> kM
    java.lang.String kC -> kC
    java.lang.String kO -> kO
    java.lang.String kV -> kV
    boolean kF -> kF
    int kR -> kR
    int kQ -> kQ
    java.lang.String kP -> kP
    int k3 -> k3
    java.lang.String kH -> kH
    java.util.List kU -> kU
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getPoiList() -> getPoiList
    void setPoiList(java.util.List) -> setPoiList
    void if(java.lang.Boolean) -> if
    boolean isCellChangeFlag() -> isCellChangeFlag
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getAltitude() -> getAltitude
    void setAltitude(double) -> setAltitude
    float getSpeed() -> getSpeed
    void setSpeed(float) -> setSpeed
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    void setAddrStr(java.lang.String) -> setAddrStr
    boolean hasAltitude() -> hasAltitude
    boolean hasSpeed() -> hasSpeed
    boolean hasRadius() -> hasRadius
    void setLocType(int) -> setLocType
    int getLocType() -> getLocType
    void setSatelliteNumber(int) -> setSatelliteNumber
    int getSatelliteNumber() -> getSatelliteNumber
    float getDerect() -> getDerect
    float getDirection() -> getDirection
    void setDirection(float) -> setDirection
    boolean hasSateNumber() -> hasSateNumber
    boolean hasAddr() -> hasAddr
    com.baidu.location.Address getAddress() -> getAddress
    void setAddr(com.baidu.location.Address) -> setAddr
    java.lang.String getAddrStr() -> getAddrStr
    java.lang.String getProvince() -> getProvince
    java.lang.String getCity() -> getCity
    java.lang.String getCityCode() -> getCityCode
    java.lang.String getCountry() -> getCountry
    java.lang.String getCountryCode() -> getCountryCode
    java.lang.String getDistrict() -> getDistrict
    java.lang.String getStreet() -> getStreet
    java.lang.String getStreetNumber() -> getStreetNumber
    java.lang.String getLocationDescribe() -> getLocationDescribe
    void setLocationDescribe(java.lang.String) -> setLocationDescribe
    java.lang.String getFloor() -> getFloor
    void setFloor(java.lang.String) -> setFloor
    java.lang.String getBuildingID() -> getBuildingID
    void setBuildingID(java.lang.String) -> setBuildingID
    java.lang.String getBuildingName() -> getBuildingName
    void setBuildingName(java.lang.String) -> setBuildingName
    int isParkAvailable() -> isParkAvailable
    void setParkAvailable(int) -> setParkAvailable
    boolean isIndoorLocMode() -> isIndoorLocMode
    void setIndoorLocMode(boolean) -> setIndoorLocMode
    int getLocationWhere() -> getLocationWhere
    void setLocationWhere(int) -> setLocationWhere
    java.lang.String getSemaAptag() -> getSemaAptag
    java.lang.String dE() -> dE
    java.lang.String dG() -> dG
    java.lang.String getNetworkLocationType() -> getNetworkLocationType
    void setNetworkLocationType(java.lang.String) -> setNetworkLocationType
    int getOperators() -> getOperators
    void setOperators(int) -> setOperators
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String dF() -> dF
    java.lang.String getAdUrl(java.lang.String) -> getAdUrl
    java.lang.String dH() -> dH
    void internalSet(int,java.lang.String) -> internalSet
com.baidu.location.BDLocationListener -> com.baidu.location.BDLocationListener:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.baidu.location.BDNotifyListener -> com.baidu.location.BDNotifyListener:
    double mLatitude -> mLatitude
    double mLongitude -> mLongitude
    float mRadius -> mRadius
    float differDistance -> differDistance
    java.lang.String mCoorType -> mCoorType
    double mLatitudeC -> mLatitudeC
    double mLongitudeC -> mLongitudeC
    int Notified -> Notified
    boolean isAdded -> isAdded
    com.baidu.location.d.a mNotifyCache -> mNotifyCache
    void SetNotifyLocation(double,double,float,java.lang.String) -> SetNotifyLocation
    void onNotify(com.baidu.location.BDLocation,float) -> onNotify
com.baidu.location.Jni -> com.baidu.location.Jni:
    int ld -> ld
    int lb -> lb
    int lc -> lc
    int k7 -> k7
    int k9 -> k9
    int k5 -> k5
    int k4 -> k4
    int k8 -> k8
    int k6 -> k6
    boolean la -> la
    java.lang.String a(byte[],int) -> a
    java.lang.String b(double,double,int,int) -> b
    java.lang.String c(byte[],int) -> c
    java.lang.String ib(byte[],byte[]) -> ib
    java.lang.String sky() -> sky
    java.lang.String ee(java.lang.String,int) -> ee
    byte[] encrypt(byte[]) -> encrypt
    java.lang.String g(byte[]) -> g
    void f(byte[],byte[]) -> f
    java.lang.String H(java.lang.String) -> H
    java.lang.String if(byte[],byte[]) -> if
    java.lang.String F(java.lang.String) -> F
    java.lang.String J(java.lang.String) -> J
    long murmur(java.lang.String) -> murmur
    java.lang.Long I(java.lang.String) -> I
    java.lang.String dI() -> dI
    java.lang.String G(java.lang.String) -> G
    java.lang.String K(java.lang.String) -> K
    java.lang.String encodeNotLimit(java.lang.String,int) -> encodeNotLimit
    double[] if(double,double,java.lang.String) -> if
    void int(java.lang.String,java.lang.String) -> int
    java.lang.String L(java.lang.String) -> L
    java.lang.String E(java.lang.String) -> E
    java.lang.String if(byte[]) -> if
com.baidu.location.LLSInterface -> com.baidu.location.LLSInterface:
    void onCreate(android.content.Context) -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnBind(android.content.Intent) -> onUnBind
    void onDestroy() -> onDestroy
    double getVersion() -> getVersion
com.baidu.location.LocationClient -> com.baidu.location.LocationClient:
    java.lang.String lh -> lh
    int lk -> lk
    int lJ -> lJ
    int lr -> lr
    int lU -> lU
    int lF -> lF
    int lI -> lI
    int lx -> lx
    int ls -> ls
    int lv -> lv
    int lf -> lf
    int lQ -> lQ
    int lG -> lG
    int lo -> lo
    long lL -> lL
    java.lang.String lT -> lT
    com.baidu.location.LocationClientOption lE -> lE
    boolean lK -> lK
    android.content.Context lA -> lA
    android.os.Messenger lC -> lC
    com.baidu.location.LocationClient$a lg -> lg
    android.os.Messenger lz -> lz
    java.util.ArrayList lX -> lX
    com.baidu.location.BDLocation lP -> lP
    boolean lu -> lu
    boolean lS -> lS
    boolean lw -> lw
    com.baidu.location.LocationClient$b ll -> ll
    boolean le -> le
    java.lang.Object lj -> lj
    long lD -> lD
    long lM -> lM
    com.baidu.location.d.a ln -> ln
    com.baidu.location.BDLocationListener lt -> lt
    java.lang.String lR -> lR
    java.lang.String lO -> lO
    boolean lq -> lq
    boolean lV -> lV
    java.lang.Boolean lp -> lp
    java.lang.Boolean lm -> lm
    java.lang.Boolean lH -> lH
    boolean ly -> ly
    com.baidu.location.e.p lW -> lW
    boolean lB -> lB
    boolean li -> li
    android.content.ServiceConnection lN -> lN
    com.baidu.location.LocationClientOption getLocOption() -> getLocOption
    void setLocOption(com.baidu.location.LocationClientOption) -> setLocOption
    boolean updateLocation(android.location.Location) -> updateLocation
    void requestNotifyLocation() -> requestNotifyLocation
    int requestOfflineLocation() -> requestOfflineLocation
    void dN() -> dN
    int requestLocation() -> requestLocation
    boolean isStarted() -> isStarted
    com.baidu.location.BDLocation getLastKnownLocation() -> getLastKnownLocation
    java.lang.String getVersion() -> getVersion
    void start() -> start
    void dK() -> dK
    void stop() -> stop
    void dL() -> dL
    void registerNotify(com.baidu.location.BDNotifyListener) -> registerNotify
    void void(android.os.Message) -> void
    void removeNotifyEvent(com.baidu.location.BDNotifyListener) -> removeNotifyEvent
    void i(android.os.Message) -> i
    void e(android.os.Message) -> e
    android.os.Bundle dJ() -> dJ
    void registerNotifyLocationListener(com.baidu.location.BDLocationListener) -> registerNotifyLocationListener
    void k(android.os.Message) -> k
    void registerLocationListener(com.baidu.location.BDLocationListener) -> registerLocationListener
    void j(android.os.Message) -> j
    void unRegisterLocationListener(com.baidu.location.BDLocationListener) -> unRegisterLocationListener
    void d(android.os.Message) -> d
    void dM() -> dM
    void dO() -> dO
    void if(android.os.Message,int) -> if
    void h(android.os.Message) -> h
    void k(int) -> k
    java.lang.String getAccessKey() -> getAccessKey
    com.baidu.location.BDLocation getBDLocationInCoorType(com.baidu.location.BDLocation,java.lang.String) -> getBDLocationInCoorType
    void byte(com.baidu.location.BDLocation) -> byte
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    android.os.Messenger if(com.baidu.location.LocationClient,android.os.Messenger) -> if
    android.os.Messenger h(com.baidu.location.LocationClient) -> h
    boolean for(com.baidu.location.LocationClient,boolean) -> for
    boolean case(com.baidu.location.LocationClient) -> case
    com.baidu.location.LocationClient$a new(com.baidu.location.LocationClient) -> new
    android.os.Messenger try(com.baidu.location.LocationClient) -> try
    android.os.Bundle do(com.baidu.location.LocationClient) -> do
    com.baidu.location.LocationClientOption char(com.baidu.location.LocationClient) -> char
    java.lang.Boolean int(com.baidu.location.LocationClient) -> int
    java.lang.Boolean if(com.baidu.location.LocationClient,java.lang.Boolean) -> if
    java.lang.Object long(com.baidu.location.LocationClient) -> long
    boolean int(com.baidu.location.LocationClient,boolean) -> int
    java.util.ArrayList d(com.baidu.location.LocationClient) -> d
    boolean if(com.baidu.location.LocationClient) -> if
    com.baidu.location.LocationClient$b void(com.baidu.location.LocationClient) -> void
    com.baidu.location.LocationClient$b if(com.baidu.location.LocationClient,com.baidu.location.LocationClient$b) -> if
    void byte(com.baidu.location.LocationClient,android.os.Message) -> byte
    void try(com.baidu.location.LocationClient,android.os.Message) -> try
    void new(com.baidu.location.LocationClient,android.os.Message) -> new
    void int(com.baidu.location.LocationClient,android.os.Message) -> int
    void do(com.baidu.location.LocationClient,android.os.Message) -> do
    void for(com.baidu.location.LocationClient,android.os.Message) -> for
    void for(com.baidu.location.LocationClient) -> for
    void else(com.baidu.location.LocationClient) -> else
    void i(com.baidu.location.LocationClient) -> i
    void byte(com.baidu.location.LocationClient) -> byte
    void e(com.baidu.location.LocationClient) -> e
    boolean do(com.baidu.location.LocationClient,boolean) -> do
    boolean goto(com.baidu.location.LocationClient) -> goto
    boolean j(com.baidu.location.LocationClient) -> j
    boolean if(com.baidu.location.LocationClient,boolean) -> if
    void if(com.baidu.location.LocationClient,android.os.Message,int) -> if
    void if(com.baidu.location.LocationClient,android.os.Message) -> if
    void if(com.baidu.location.LocationClient,com.baidu.location.BDLocation) -> if
com.baidu.location.LocationClient$a -> com.baidu.location.LocationClient$a:
    com.baidu.location.LocationClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.LocationClient$b -> com.baidu.location.LocationClient$b:
    com.baidu.location.LocationClient a -> a
    void run() -> run
com.baidu.location.LocationClientOption -> com.baidu.location.LocationClientOption:
    int MIN_SCAN_SPAN -> MIN_SCAN_SPAN
    int GpsFirst -> GpsFirst
    int NetWorkFirst -> NetWorkFirst
    int GpsOnly -> GpsOnly
    java.lang.String coorType -> coorType
    java.lang.String addrType -> addrType
    boolean openGps -> openGps
    int scanSpan -> scanSpan
    int timeOut -> timeOut
    java.lang.String prodName -> prodName
    int priority -> priority
    boolean location_change_notify -> location_change_notify
    boolean disableLocCache -> disableLocCache
    boolean enableSimulateGps -> enableSimulateGps
    java.lang.String serviceName -> serviceName
    boolean isIgnoreCacheException -> isIgnoreCacheException
    boolean isIgnoreKillProcess -> isIgnoreKillProcess
    boolean mIsNeedDeviceDirect -> mIsNeedDeviceDirect
    boolean isNeedAptag -> isNeedAptag
    boolean isNeedAptagd -> isNeedAptagd
    boolean isNeedPoiRegion -> isNeedPoiRegion
    boolean isNeedRegular -> isNeedRegular
    boolean isNeedAltitude -> isNeedAltitude
    com.baidu.location.LocationClientOption$LocationMode a -> a
    boolean equals(com.baidu.location.LocationClientOption) -> equals
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    java.lang.String getAddrType() -> getAddrType
    void setAddrType(java.lang.String) -> setAddrType
    void setIsNeedAddress(boolean) -> setIsNeedAddress
    boolean isOpenGps() -> isOpenGps
    void setOpenGps(boolean) -> setOpenGps
    boolean isLocationNotify() -> isLocationNotify
    void setLocationNotify(boolean) -> setLocationNotify
    int getScanSpan() -> getScanSpan
    void setScanSpan(int) -> setScanSpan
    int getTimeOut() -> getTimeOut
    void setTimeOut(int) -> setTimeOut
    java.lang.String getProdName() -> getProdName
    void setProdName(java.lang.String) -> setProdName
    int getPriority() -> getPriority
    void setPriority(int) -> setPriority
    void setLocationMode(com.baidu.location.LocationClientOption$LocationMode) -> setLocationMode
    com.baidu.location.LocationClientOption$LocationMode getLocationMode() -> getLocationMode
    void setNeedDeviceDirect(boolean) -> setNeedDeviceDirect
    java.lang.String getServiceName() -> getServiceName
    void setServiceName(java.lang.String) -> setServiceName
    void setIsNeedLocationDescribe(boolean) -> setIsNeedLocationDescribe
    void a(boolean) -> a
    void setIsNeedLocationPoiList(boolean) -> setIsNeedLocationPoiList
    void setSema(boolean,boolean,boolean) -> setSema
    void disableCache(boolean) -> disableCache
    boolean isDisableCache() -> isDisableCache
    void SetIgnoreCacheException(boolean) -> SetIgnoreCacheException
    void setIgnoreKillProcess(boolean) -> setIgnoreKillProcess
    void setEnableSimulateGps(boolean) -> setEnableSimulateGps
com.baidu.location.LocationClientOption$1 -> com.baidu.location.LocationClientOption$1:
    int[] a -> a
com.baidu.location.LocationClientOption$LocationMode -> com.baidu.location.LocationClientOption$LocationMode:
    com.baidu.location.LocationClientOption$LocationMode Hight_Accuracy -> Hight_Accuracy
    com.baidu.location.LocationClientOption$LocationMode Battery_Saving -> Battery_Saving
    com.baidu.location.LocationClientOption$LocationMode Device_Sensors -> Device_Sensors
    com.baidu.location.LocationClientOption$LocationMode[] a -> a
    com.baidu.location.LocationClientOption$LocationMode[] values() -> values
    com.baidu.location.LocationClientOption$LocationMode valueOf(java.lang.String) -> valueOf
com.baidu.location.Poi -> com.baidu.location.Poi:
    double a -> a
    java.lang.String do -> do
    java.lang.String if -> if
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> getId
    double getRank() -> getRank
    java.lang.String getName() -> getName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.location.a -> com.baidu.location.a:
    com.baidu.location.BDLocation a(android.os.Parcel) -> a
    com.baidu.location.BDLocation[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.location.a.a -> com.baidu.location.a.a:
    com.baidu.location.a.a$a l3 -> l3
    android.os.Messenger l5 -> l5
    android.os.Looper l6 -> l6
    android.os.HandlerThread l2 -> l2
    boolean l4 -> l4
    long l7 -> l7
    void onCreate(android.content.Context) -> onCreate
    void dS() -> dS
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void dR() -> dR
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.Handler dQ() -> dQ
    long dP() -> dP
    void m(android.os.Message) -> m
    void l(android.os.Message) -> l
    void n(android.os.Message) -> n
    boolean onUnBind(android.content.Intent) -> onUnBind
    double getVersion() -> getVersion
    void do(com.baidu.location.a.a,android.os.Message) -> do
    void for(com.baidu.location.a.a,android.os.Message) -> for
    void if(com.baidu.location.a.a,android.os.Message) -> if
    void if(com.baidu.location.a.a) -> if
    void do(com.baidu.location.a.a) -> do
com.baidu.location.a.a$a -> com.baidu.location.a.a$a:
    com.baidu.location.a.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.b -> com.baidu.location.b:
    com.baidu.location.LocationClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.b.a -> com.baidu.location.b.a:
    java.lang.String a -> a
    java.lang.String do -> do
    boolean if -> if
    java.lang.String if() -> if
    void a(java.lang.String) -> a
    java.lang.String do() -> do
    void if(java.lang.String) -> if
    boolean a() -> a
    void a(boolean) -> a
    java.lang.String toString() -> toString
com.baidu.location.b.b -> com.baidu.location.b.b:
    boolean a -> a
com.baidu.location.b.c -> com.baidu.location.b.c:
    com.baidu.location.b.c bq -> bq
    java.lang.String bo -> bo
    java.lang.String bm -> bm
    boolean bp -> bp
    java.lang.String bn -> bn
    java.lang.String bj -> bj
    java.lang.String bk -> bk
    java.lang.String bl -> bl
    com.baidu.location.b.c N() -> N
    void do(android.content.Context) -> do
    void if(java.lang.String,java.lang.String) -> if
    java.lang.String L() -> L
    java.lang.String P() -> P
    java.lang.String M() -> M
    java.lang.String K() -> K
    java.lang.String do(boolean) -> do
    java.lang.String if(boolean,java.lang.String) -> if
    java.lang.String O() -> O
com.baidu.location.b.d -> com.baidu.location.b.d:
    com.baidu.location.b.d bw -> bw
    long bs -> bs
    long bu -> bu
    long by -> by
    java.lang.String bv -> bv
    java.lang.String br -> br
    java.lang.String bA -> bA
    java.lang.String bz -> bz
    int bx -> bx
    com.baidu.location.b.d$a bt -> bt
    com.baidu.location.b.d U() -> U
    java.lang.String S() -> S
    java.lang.String V() -> V
    java.lang.String R() -> R
    void Q() -> Q
    void T() -> T
    void case(java.lang.String) -> case
    java.lang.String for(com.baidu.location.b.d) -> for
    long do(com.baidu.location.b.d) -> do
    java.lang.String int(com.baidu.location.b.d,java.lang.String) -> int
    java.lang.String for(com.baidu.location.b.d,java.lang.String) -> for
    int if(com.baidu.location.b.d,int) -> if
    long if(com.baidu.location.b.d,long) -> if
    long if(com.baidu.location.b.d) -> if
    void int(com.baidu.location.b.d) -> int
    java.lang.String do(com.baidu.location.b.d,java.lang.String) -> do
    java.lang.String if(com.baidu.location.b.d,java.lang.String) -> if
    long do(com.baidu.location.b.d,long) -> do
com.baidu.location.b.d$a -> com.baidu.location.b.d$a:
    boolean c -> c
    com.baidu.location.b.d b -> b
    void au() -> au
    void int(boolean) -> int
    void a() -> a
    void b() -> b
com.baidu.location.b.e -> com.baidu.location.b.e:
    java.lang.String do -> do
    java.util.List for -> for
    com.baidu.location.b.e a -> a
    android.content.Context if -> if
    java.lang.String int -> int
    com.baidu.location.b.e do() -> do
    java.lang.String for() -> for
    java.util.List if() -> if
    java.util.List int() -> int
    java.util.List a() -> a
    boolean a(java.lang.String) -> a
com.baidu.location.b.f -> com.baidu.location.b.f:
    float bi -> bi
    java.lang.String bg -> bg
    int bh -> bh
com.baidu.location.b.g -> com.baidu.location.b.g:
    java.lang.String m -> m
    int Q -> Q
    int d -> d
    int byte -> byte
    int for -> for
    int o -> o
    int w -> w
    int p -> p
    int Y -> Y
    int g -> g
    int V -> V
    int ab -> ab
    int goto -> goto
    int P -> P
    int long -> long
    int v -> v
    int U -> U
    int R -> R
    int t -> t
    int b -> b
    int do -> do
    int else -> else
    int u -> u
    int s -> s
    int l -> l
    int E -> E
    int h -> h
    int case -> case
    int N -> N
    int i -> i
    int O -> O
    int H -> H
    int M -> M
    int G -> G
    int r -> r
    int W -> W
    int A -> A
    int y -> y
    int X -> X
    int S -> S
    int D -> D
    int F -> F
    int C -> C
    int try -> try
    int q -> q
    int k -> k
    int int -> int
    int if -> if
    int L -> L
    int char -> char
    int K -> K
    int z -> z
    int void -> void
    int a -> a
    int c -> c
    int aa -> aa
    int n -> n
    int T -> T
    int new -> new
    int f -> f
    int j -> j
    int e -> e
    int B -> B
    int J -> J
    int x -> x
    int I -> I
    int Z -> Z
com.baidu.location.b.h -> com.baidu.location.b.h:
    com.baidu.location.b.h bD -> bD
    double[][] bC -> bC
    java.util.LinkedList bB -> bB
    com.baidu.location.b.h W() -> W
    boolean for(double,double) -> for
    int if(double) -> if
com.baidu.location.b.h$a -> com.baidu.location.b.h$a:
    double a -> a
    double b -> b
    com.baidu.location.b.h c -> c
com.baidu.location.b.h$b -> com.baidu.location.b.h$b:
    com.baidu.location.b.h$a a -> a
    com.baidu.location.b.h$a b -> b
    com.baidu.location.b.h c -> c
    double a(com.baidu.location.b.h$a) -> a
    boolean b(com.baidu.location.b.h$a) -> b
com.baidu.location.b.i -> com.baidu.location.b.i:
    boolean if -> if
    boolean for -> for
    boolean int -> int
    boolean do -> do
    boolean a -> a
com.baidu.location.b.j -> com.baidu.location.b.j:
    java.lang.String if(android.content.Context) -> if
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.location.b.j$a -> com.baidu.location.b.j$a:
    java.lang.String a(byte[]) -> a
com.baidu.location.b.k -> com.baidu.location.b.k:
    boolean cm -> cm
    boolean cG -> cG
    boolean bY -> bY
    int b1 -> b1
    java.lang.String bN -> bN
    java.lang.String cv -> cv
    java.lang.String b6 -> b6
    java.lang.String bU -> bU
    java.lang.String b5 -> b5
    java.lang.String bE -> bE
    java.lang.String bZ -> bZ
    java.lang.String bV -> bV
    boolean ce -> ce
    java.lang.String cf -> cf
    boolean bX -> bX
    boolean bP -> bP
    boolean ci -> ci
    boolean bS -> bS
    boolean cj -> cj
    java.lang.String cN -> cN
    boolean cl -> cl
    int b3 -> b3
    double cp -> cp
    double cE -> cE
    double bG -> bG
    double b4 -> b4
    int co -> co
    byte[] b2 -> b2
    boolean cM -> cM
    int b0 -> b0
    float cQ -> cQ
    float bW -> bW
    float ck -> ck
    float cA -> cA
    int b7 -> b7
    int cq -> cq
    int cC -> cC
    int bJ -> bJ
    int bH -> bH
    int cI -> cI
    int bQ -> bQ
    float ch -> ch
    float cg -> cg
    float cO -> cO
    float cx -> cx
    int cD -> cD
    float bL -> bL
    int cy -> cy
    float bF -> bF
    float cb -> cb
    float ca -> ca
    int b9 -> b9
    int b8 -> b8
    int cw -> cw
    boolean bR -> bR
    boolean bK -> bK
    int cB -> cB
    int cF -> cF
    int cr -> cr
    long cs -> cs
    long cJ -> cJ
    long cu -> cu
    long ct -> ct
    long cH -> cH
    long cP -> cP
    int bT -> bT
    int cL -> cL
    int bI -> bI
    int bM -> bM
    float cn -> cn
    float cd -> cd
    float cz -> cz
    int cc -> cc
    int cK -> cK
    int bO -> bO
    int for(java.lang.String,java.lang.String,java.lang.String) -> for
    float do(java.lang.String,java.lang.String,java.lang.String) -> do
    double int(java.lang.String,java.lang.String,java.lang.String) -> int
    java.lang.String if(java.lang.String,java.lang.String,java.lang.String,double) -> if
    java.lang.String ad() -> ad
    java.lang.String X() -> X
    java.lang.String if(com.baidu.location.h.h,com.baidu.location.h.f,android.location.Location,java.lang.String,int) -> if
    boolean for(android.content.Context) -> for
    java.lang.String if(com.baidu.location.h.h,com.baidu.location.h.f,android.location.Location,java.lang.String) -> if
    boolean do(com.baidu.location.BDLocation) -> do
    java.lang.String Z() -> Z
    java.lang.String ab() -> ab
    java.lang.String aa() -> aa
    java.lang.String ae() -> ae
    java.lang.String ac() -> ac
    java.lang.String ag() -> ag
    java.lang.String Y() -> Y
    java.lang.String af() -> af
    java.lang.String ah() -> ah
    java.lang.String ai() -> ai
    java.lang.String if(java.io.File) -> if
com.baidu.location.b.l -> com.baidu.location.b.l:
    long cT -> cT
    long c3 -> c3
    long cR -> cR
    long cY -> cY
    int c4 -> c4
    java.lang.String c1 -> c1
    java.lang.String cU -> cU
    java.lang.String cS -> cS
    java.lang.String c2 -> c2
    java.lang.String cV -> cV
    java.lang.String cZ -> cZ
    java.lang.String cW -> cW
    java.lang.String c0 -> c0
    java.lang.String cX -> cX
    void aj() -> aj
    void do(long) -> do
    void if(long) -> if
    void for(long) -> for
    void int(long) -> int
    void for(boolean) -> for
    void char(java.lang.String) -> char
    void else(java.lang.String) -> else
    java.lang.String ak() -> ak
com.baidu.location.b.m -> com.baidu.location.b.m:
    boolean c9 -> c9
    int c8 -> c8
    java.lang.String dd -> dd
    int df -> df
    java.lang.String c5 -> c5
    int dg -> dg
    org.apache.http.HttpEntity c6 -> c6
    java.util.List c7 -> c7
    java.lang.String dc -> dc
    byte[] db -> db
    java.lang.String da -> da
    int de -> de
    void au() -> au
    void int(boolean) -> int
    void as() -> as
    void ap() -> ap
    void ao() -> ao
    void at() -> at
    void an() -> an
    void av() -> av
    org.apache.http.client.HttpClient if(org.apache.http.params.HttpParams) -> if
    void am() -> am
    int aq() -> aq
    int if(android.content.Context,android.net.NetworkInfo) -> if
    boolean int(android.content.Context) -> int
    void if(com.baidu.location.b.m) -> if
    java.lang.String al() -> al
    int ar() -> ar
    boolean if(com.baidu.location.b.m,boolean) -> if
com.baidu.location.b.m$a -> com.baidu.location.b.m$a:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.baidu.location.b.n -> com.baidu.location.b.n:
    java.lang.String try -> try
    int for -> for
    com.baidu.location.b.n if -> if
    int do -> do
    int a -> a
    int new -> new
    int int -> int
    com.baidu.location.b.n if() -> if
    void a(int,long) -> a
    long a(int) -> a
    long do() -> do
    void for(long) -> for
    long a() -> a
    void do(long) -> do
    long int() -> int
    void if(long) -> if
    long for() -> for
    void a(long) -> a
com.baidu.location.b.o -> com.baidu.location.b.o:
    com.baidu.location.b.o e0 -> e0
    java.lang.String e3 -> e3
    int fc -> fc
    int e9 -> e9
    int e5 -> e5
    int e2 -> e2
    int e8 -> e8
    int e4 -> e4
    java.lang.String eZ -> eZ
    java.lang.String fb -> fb
    java.lang.String fd -> fd
    java.text.SimpleDateFormat e7 -> e7
    com.baidu.location.b.l e1 -> e1
    com.baidu.location.b.o$a fa -> fa
    long e6 -> e6
    com.baidu.location.b.o aY() -> aY
    com.baidu.location.b.l aV() -> aV
    void aX() -> aX
    void if(com.baidu.location.b.l) -> if
    void j(java.lang.String) -> j
    void aW() -> aW
    void i(java.lang.String) -> i
    boolean if(java.lang.String,java.util.List) -> if
    void for(java.lang.String,java.lang.String) -> for
    long if(com.baidu.location.b.o,long) -> if
com.baidu.location.b.o$a -> com.baidu.location.b.o$a:
    java.lang.String c -> c
    boolean d -> d
    com.baidu.location.b.o b -> b
    boolean a() -> a
    void au() -> au
    void int(boolean) -> int
    void a(java.lang.String) -> a
com.baidu.location.b.p -> com.baidu.location.b.p:
    com.baidu.location.b.m a -> a
    void run() -> run
com.baidu.location.b.q -> com.baidu.location.b.q:
    com.baidu.location.b.m a -> a
    void run() -> run
com.baidu.location.b.r -> com.baidu.location.b.r:
    com.baidu.location.b.m a -> a
    void run() -> run
com.baidu.location.b.s -> com.baidu.location.b.s:
    com.baidu.location.b.m a -> a
    void run() -> run
com.baidu.location.b.t -> com.baidu.location.b.t:
    com.baidu.location.b.m a -> a
    void run() -> run
com.baidu.location.b.u -> com.baidu.location.b.u:
    com.baidu.location.b.m a -> a
    void run() -> run
com.baidu.location.b.v -> com.baidu.location.b.v:
    com.baidu.location.b.m$a a -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.baidu.location.c -> com.baidu.location.c:
    com.baidu.location.Poi a(android.os.Parcel) -> a
    com.baidu.location.Poi[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.location.c.a -> com.baidu.location.c.a:
    com.baidu.location.c.d b -> b
    int c -> c
    double d -> d
    double e -> e
    java.lang.Long f -> f
    com.baidu.location.c.a$b g -> g
    com.baidu.location.c.a$b h -> h
    android.database.sqlite.SQLiteDatabase i -> i
    android.database.sqlite.SQLiteDatabase j -> j
    java.lang.StringBuffer k -> k
    java.lang.StringBuffer l -> l
    java.util.HashSet m -> m
    java.util.concurrent.ConcurrentHashMap n -> n
    java.util.concurrent.ConcurrentHashMap o -> o
    java.lang.StringBuffer p -> p
    boolean q -> q
    android.database.sqlite.SQLiteDatabase a() -> a
    com.baidu.location.BDLocation a(java.lang.Long) -> a
    com.baidu.location.BDLocation a(java.util.LinkedHashMap,com.baidu.location.BDLocation,int) -> a
    void a(java.lang.String,java.lang.Long,com.baidu.location.BDLocation) -> a
    void a(java.util.LinkedHashMap) -> a
    void a(com.baidu.location.BDLocation,com.baidu.location.BDLocation,com.baidu.location.BDLocation,java.lang.String,java.lang.Long) -> a
    android.database.Cursor a(com.baidu.location.c.h$a) -> a
    double a(double,double,double,double) -> a
    int a(java.util.ArrayList,double) -> a
    void b() -> b
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String[]) -> a
    void a(com.baidu.location.c.a,java.lang.String,java.lang.Long,com.baidu.location.BDLocation) -> a
    java.lang.StringBuffer a(com.baidu.location.c.a,java.lang.StringBuffer) -> a
    java.lang.StringBuffer b(com.baidu.location.c.a,java.lang.StringBuffer) -> b
    void a(com.baidu.location.c.a,java.util.LinkedHashMap) -> a
    void a(com.baidu.location.c.a,com.baidu.location.BDLocation,com.baidu.location.BDLocation,com.baidu.location.BDLocation,java.lang.String,java.lang.Long) -> a
    com.baidu.location.c.d a(com.baidu.location.c.a) -> a
    android.database.sqlite.SQLiteDatabase b(com.baidu.location.c.a) -> b
    android.database.sqlite.SQLiteDatabase c(com.baidu.location.c.a) -> c
    void a(com.baidu.location.c.a,java.lang.String[]) -> a
    void a(com.baidu.location.c.a,java.lang.String,java.lang.String,java.lang.String) -> a
    com.baidu.location.c.a$b d(com.baidu.location.c.a) -> d
com.baidu.location.c.a$a -> com.baidu.location.c.a$a:
    java.lang.String a -> a
    java.lang.Long c -> c
    com.baidu.location.BDLocation d -> d
    com.baidu.location.BDLocation e -> e
    com.baidu.location.BDLocation f -> f
    java.lang.String g -> g
    java.util.LinkedHashMap h -> h
    com.baidu.location.c.a b -> b
    void run() -> run
com.baidu.location.c.a$b -> com.baidu.location.c.a$b:
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    com.baidu.location.c.a f -> f
    boolean g -> g
    int h -> h
    long i -> i
    long j -> j
    long k -> k
    long l -> l
    com.baidu.location.c.a b -> b
    void au() -> au
    void int(boolean) -> int
    void a() -> a
    void b() -> b
    boolean c() -> c
    void d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    boolean i() -> i
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(com.baidu.location.c.a$b,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(com.baidu.location.c.a$b,boolean) -> a
    long a(com.baidu.location.c.a$b,long) -> a
    com.baidu.location.c.a a(com.baidu.location.c.a$b) -> a
    void b(com.baidu.location.c.a$b) -> b
com.baidu.location.c.a$c -> com.baidu.location.c.a$c:
    double a -> a
    double b -> b
    double c -> c
com.baidu.location.c.b -> com.baidu.location.c.b:
    com.baidu.location.c.b fg -> fg
    java.lang.String fm -> fm
    boolean fn -> fn
    boolean fu -> fu
    double fh -> fh
    double fr -> fr
    double fq -> fq
    double fl -> fl
    double fk -> fk
    boolean fp -> fp
    int fj -> fj
    int fe -> fe
    int fv -> fv
    java.lang.String fo -> fo
    java.lang.String ft -> ft
    java.lang.String fi -> fi
    java.lang.String fs -> fs
    android.os.Handler ff -> ff
    com.baidu.location.c.b a0() -> a0
    void a1() -> a1
    com.baidu.location.BDLocation try(boolean) -> try
    com.baidu.location.BDLocation if(java.lang.String,java.util.List,boolean) -> if
    void do(java.lang.String,java.util.List) -> do
    void if(java.lang.String,android.database.sqlite.SQLiteDatabase) -> if
    void if(java.util.List,android.database.sqlite.SQLiteDatabase) -> if
    void if(java.lang.String,com.baidu.location.h.h,android.database.sqlite.SQLiteDatabase) -> if
    void if(com.baidu.location.h.f,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> if
    void if(java.lang.String,com.baidu.location.h.h,com.baidu.location.h.f,com.baidu.location.BDLocation) -> if
    java.lang.String new(boolean) -> new
    void aZ() -> aZ
    void if(com.baidu.location.c.b) -> if
    void if(com.baidu.location.c.b,java.lang.String,java.util.List) -> if
    java.lang.String do(com.baidu.location.c.b,boolean) -> do
    boolean if(com.baidu.location.c.b,boolean) -> if
    java.lang.String a2() -> a2
    void if(com.baidu.location.c.b,java.lang.String,com.baidu.location.h.h,android.database.sqlite.SQLiteDatabase) -> if
    void if(com.baidu.location.c.b,com.baidu.location.h.f,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> if
com.baidu.location.c.b$a -> com.baidu.location.c.b$a:
    com.baidu.location.c.b a -> a
    java.lang.Boolean a(java.lang.Boolean[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.c.b$b -> com.baidu.location.c.b$b:
    com.baidu.location.c.b a -> a
    java.lang.Boolean a(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.c.c -> com.baidu.location.c.c:
    com.baidu.location.c.a a -> a
com.baidu.location.c.d -> com.baidu.location.c.d:
    android.content.Context an -> an
    com.baidu.location.c.d aq -> aq
    java.io.File af -> af
    com.baidu.location.c.q aj -> aj
    com.baidu.location.c.a al -> al
    com.baidu.location.c.k ah -> ah
    com.baidu.location.c.j ac -> ac
    java.lang.String ao -> ao
    java.lang.String ap -> ap
    java.lang.String ai -> ai
    java.lang.String ag -> ag
    java.lang.String ak -> ak
    java.lang.String ad -> ad
    java.lang.String am -> am
    java.lang.String ar -> ar
    java.lang.String ab -> ab
    java.lang.String ae -> ae
    java.lang.String as -> as
    int at -> at
    android.net.Uri int(java.lang.String) -> int
    com.baidu.location.c.d try() -> try
    void if(android.content.Context) -> if
    android.content.Context char() -> char
    java.io.File d() -> d
    com.baidu.location.BDLocation do(java.lang.String[]) -> do
    com.baidu.location.BDLocation if(com.baidu.location.h.h,com.baidu.location.h.f,com.baidu.location.BDLocation,com.baidu.location.c.d$c,com.baidu.location.c.d$b) -> if
    android.database.Cursor for(java.lang.String[]) -> for
    boolean long() -> long
    boolean e() -> e
    boolean case() -> case
    boolean goto() -> goto
    boolean m() -> m
    boolean i() -> i
    long if(java.lang.String) -> if
    boolean do(java.lang.String) -> do
    void k() -> k
    com.baidu.location.c.q j() -> j
    com.baidu.location.c.k l() -> l
    com.baidu.location.c.j new() -> new
    void int() -> int
    boolean void() -> void
    void n() -> n
    void h() -> h
    double byte() -> byte
    android.content.Context else() -> else
    com.baidu.location.c.j if(com.baidu.location.c.d) -> if
    android.net.Uri for(java.lang.String) -> for
    com.baidu.location.c.a do(com.baidu.location.c.d) -> do
com.baidu.location.c.d$a -> com.baidu.location.c.d$a:
    com.baidu.location.c.d$a a -> a
    com.baidu.location.c.d$a b -> b
    com.baidu.location.c.d$a c -> c
    com.baidu.location.c.d$a d -> d
    com.baidu.location.c.d$a e -> e
    com.baidu.location.c.d$a[] f -> f
    com.baidu.location.c.d$a[] values() -> values
    com.baidu.location.c.d$a valueOf(java.lang.String) -> valueOf
com.baidu.location.c.d$b -> com.baidu.location.c.d$b:
    com.baidu.location.c.d$b a -> a
    com.baidu.location.c.d$b do -> do
    com.baidu.location.c.d$b[] if -> if
    com.baidu.location.c.d$b[] values() -> values
    com.baidu.location.c.d$b valueOf(java.lang.String) -> valueOf
com.baidu.location.c.d$c -> com.baidu.location.c.d$c:
    com.baidu.location.c.d$c do -> do
    com.baidu.location.c.d$c if -> if
    com.baidu.location.c.d$c[] a -> a
    com.baidu.location.c.d$c[] values() -> values
    com.baidu.location.c.d$c valueOf(java.lang.String) -> valueOf
com.baidu.location.c.e -> com.baidu.location.c.e:
    com.baidu.location.c.a$b a -> a
    void run() -> run
com.baidu.location.c.f -> com.baidu.location.c.f:
    com.baidu.location.c.b a -> a
    void run() -> run
com.baidu.location.c.g -> com.baidu.location.c.g:
    java.lang.String a -> a
    java.util.List b -> b
    com.baidu.location.c.b c -> c
    java.lang.String a() -> a
    java.lang.Object call() -> call
com.baidu.location.c.h -> com.baidu.location.c.h:
    java.lang.String[] b -> b
    java.text.SimpleDateFormat c -> c
    com.baidu.location.BDLocation a(android.database.Cursor) -> a
    android.database.Cursor a(com.baidu.location.BDLocation) -> a
    java.lang.String[] a(com.baidu.location.h.h,com.baidu.location.h.f,com.baidu.location.BDLocation,java.lang.String,boolean,int) -> a
    java.lang.String a(com.baidu.location.BDLocation,int) -> a
    java.lang.String a(com.baidu.location.BDLocation,com.baidu.location.BDLocation,com.baidu.location.c.h$a) -> a
com.baidu.location.c.h$a -> com.baidu.location.c.h$a:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    int f -> f
    com.baidu.location.BDLocation g -> g
    boolean h -> h
    java.util.LinkedHashMap i -> i
com.baidu.location.c.i -> com.baidu.location.c.i:
    java.lang.String[] a -> a
    com.baidu.location.c.d b -> b
    com.baidu.location.BDLocation a() -> a
    java.lang.Object call() -> call
com.baidu.location.c.j -> com.baidu.location.c.j:
    com.baidu.location.c.d b -> b
    android.database.sqlite.SQLiteDatabase c -> c
    com.baidu.location.c.j$a d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    java.lang.String[] j -> j
    boolean k -> k
    int l -> l
    int m -> m
    int n -> n
    double o -> o
    double p -> p
    double q -> q
    double r -> r
    double s -> s
    int t -> t
    boolean u -> u
    long v -> v
    long w -> w
    long x -> x
    long y -> y
    long z -> z
    int a() -> a
    double b() -> b
    double c() -> c
    double d() -> d
    double e() -> e
    double f() -> f
    void g() -> g
    boolean h() -> h
    boolean i() -> i
    boolean j() -> j
    boolean k() -> k
    boolean l() -> l
    boolean m() -> m
    long a(java.lang.String) -> a
    int n() -> n
    java.lang.String[] o() -> o
    int p() -> p
    int q() -> q
    boolean b(java.lang.String) -> b
    void a(java.lang.String[]) -> a
    boolean a(com.baidu.location.c.j,boolean) -> a
    boolean b(com.baidu.location.c.j,boolean) -> b
    boolean c(com.baidu.location.c.j,boolean) -> c
    boolean d(com.baidu.location.c.j,boolean) -> d
    boolean e(com.baidu.location.c.j,boolean) -> e
    boolean f(com.baidu.location.c.j,boolean) -> f
    java.lang.String[] a(com.baidu.location.c.j,java.lang.String[]) -> a
    int a(com.baidu.location.c.j,int) -> a
    int b(com.baidu.location.c.j,int) -> b
    int c(com.baidu.location.c.j,int) -> c
    double a(com.baidu.location.c.j,double) -> a
    double b(com.baidu.location.c.j,double) -> b
    double c(com.baidu.location.c.j,double) -> c
    double d(com.baidu.location.c.j,double) -> d
    double e(com.baidu.location.c.j,double) -> e
    long a(com.baidu.location.c.j,long) -> a
    long b(com.baidu.location.c.j,long) -> b
    long c(com.baidu.location.c.j,long) -> c
    long d(com.baidu.location.c.j,long) -> d
    long e(com.baidu.location.c.j,long) -> e
    int d(com.baidu.location.c.j,int) -> d
    boolean a(com.baidu.location.c.j) -> a
    boolean b(com.baidu.location.c.j) -> b
    boolean c(com.baidu.location.c.j) -> c
    boolean d(com.baidu.location.c.j) -> d
    boolean e(com.baidu.location.c.j) -> e
    boolean f(com.baidu.location.c.j) -> f
    int g(com.baidu.location.c.j) -> g
    double h(com.baidu.location.c.j) -> h
    double i(com.baidu.location.c.j) -> i
    double j(com.baidu.location.c.j) -> j
    double k(com.baidu.location.c.j) -> k
    double l(com.baidu.location.c.j) -> l
    long m(com.baidu.location.c.j) -> m
    long n(com.baidu.location.c.j) -> n
    long o(com.baidu.location.c.j) -> o
    long p(com.baidu.location.c.j) -> p
    long q(com.baidu.location.c.j) -> q
    int r(com.baidu.location.c.j) -> r
    int s(com.baidu.location.c.j) -> s
    int t(com.baidu.location.c.j) -> t
    com.baidu.location.c.d u(com.baidu.location.c.j) -> u
com.baidu.location.c.j$1 -> com.baidu.location.c.j$1:
com.baidu.location.c.j$a -> com.baidu.location.c.j$a:
    int c -> c
    long d -> d
    long e -> e
    boolean f -> f
    java.lang.String g -> g
    com.baidu.location.c.j b -> b
    void au() -> au
    void int(boolean) -> int
    void a() -> a
    boolean b() -> b
    void a(com.baidu.location.c.j$a) -> a
com.baidu.location.c.k -> com.baidu.location.c.k:
    com.baidu.location.c.d b -> b
    double[] c -> c
    int d -> d
    android.database.sqlite.SQLiteDatabase e -> e
    int f -> f
    int g -> g
    boolean a() -> a
    org.json.JSONObject b() -> b
    void a(org.json.JSONObject) -> a
    com.baidu.location.Address a(double,double) -> a
    java.util.List b(double,double) -> b
    int a(int,int) -> a
    double[] b(double,double,double,double) -> b
    double c(double,double,double,double) -> c
    double a(double,double,double,double,double,double) -> a
    java.lang.String b(int,double,double) -> b
    java.lang.String a(int,double,double) -> a
    double[] c() -> c
    double[] a(double,double,double,double) -> a
com.baidu.location.c.k$a -> com.baidu.location.c.k$a:
    double a -> a
    double b -> b
    double a(com.baidu.location.c.k$a) -> a
    double b(com.baidu.location.c.k$a) -> b
    double a(com.baidu.location.c.k$a,double) -> a
    double b(com.baidu.location.c.k$a,double) -> b
com.baidu.location.c.k$b -> com.baidu.location.c.k$b:
    com.baidu.location.c.k$b a -> a
    com.baidu.location.c.k$b b -> b
    com.baidu.location.c.k$b c -> c
    com.baidu.location.c.k$b d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    com.baidu.location.c.k$b[] j -> j
    com.baidu.location.c.k$b[] values() -> values
    com.baidu.location.c.k$b valueOf(java.lang.String) -> valueOf
    java.util.List a(org.json.JSONObject,java.lang.String,int) -> a
    void b(java.lang.StringBuffer,java.lang.String,java.lang.String,int) -> b
    java.lang.String a(org.json.JSONObject) -> a
    java.lang.String a(int,double,double) -> a
    java.lang.String a(com.baidu.location.c.k$b) -> a
    java.lang.String b(com.baidu.location.c.k$b) -> b
    java.lang.String a(com.baidu.location.c.k$b,org.json.JSONObject) -> a
    int c(com.baidu.location.c.k$b) -> c
    java.lang.String a(com.baidu.location.c.k$b,int,double,double) -> a
    int d(com.baidu.location.c.k$b) -> d
    void a(java.lang.StringBuffer,java.lang.String,java.lang.String,int) -> a
com.baidu.location.c.l -> com.baidu.location.c.l:
    com.baidu.location.c.k a -> a
    int a(java.util.Map$Entry,java.util.Map$Entry) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.baidu.location.c.m -> com.baidu.location.c.m:
    java.util.List a(org.json.JSONObject,java.lang.String,int) -> a
com.baidu.location.c.n -> com.baidu.location.c.n:
    java.util.List a(org.json.JSONObject,java.lang.String,int) -> a
com.baidu.location.c.o -> com.baidu.location.c.o:
    java.util.List a(org.json.JSONObject,java.lang.String,int) -> a
com.baidu.location.c.p -> com.baidu.location.c.p:
    java.util.List a(org.json.JSONObject,java.lang.String,int) -> a
com.baidu.location.c.q -> com.baidu.location.c.q:
    java.lang.String b -> b
    android.database.sqlite.SQLiteDatabase c -> c
    com.baidu.location.c.q$a d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    void a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void a(boolean) -> a
    void a(com.baidu.location.c.q,boolean) -> a
    java.lang.String a(com.baidu.location.c.q) -> a
com.baidu.location.c.q$a -> com.baidu.location.c.q$a:
    int c -> c
    long d -> d
    java.lang.String e -> e
    boolean f -> f
    boolean g -> g
    com.baidu.location.c.q h -> h
    com.baidu.location.c.q b -> b
    void au() -> au
    void int(boolean) -> int
    void a() -> a
    void a(com.baidu.location.c.q$a) -> a
    boolean b(com.baidu.location.c.q$a) -> b
    com.baidu.location.c.q c(com.baidu.location.c.q$a) -> c
com.baidu.location.c.r -> com.baidu.location.c.r:
    com.baidu.location.c.q$a a -> a
    void run() -> run
com.baidu.location.d.a -> com.baidu.location.d.a:
    java.util.ArrayList fC -> fC
    float fG -> fG
    com.baidu.location.BDLocation fD -> fD
    long fI -> fI
    com.baidu.location.LocationClient fK -> fK
    android.content.Context fx -> fx
    int fw -> fw
    long fE -> fE
    boolean fH -> fH
    android.app.PendingIntent fB -> fB
    android.app.AlarmManager fy -> fy
    com.baidu.location.d.a$b fF -> fF
    java.lang.String fA -> fA
    com.baidu.location.d.a$a fz -> fz
    boolean fJ -> fJ
    void a4() -> a4
    int do(com.baidu.location.BDNotifyListener) -> do
    void if(com.baidu.location.BDNotifyListener) -> if
    int for(com.baidu.location.BDNotifyListener) -> for
    boolean a5() -> a5
    void a3() -> a3
    void new(long) -> new
    void for(com.baidu.location.BDLocation) -> for
    java.util.ArrayList do(com.baidu.location.d.a) -> do
    void if(com.baidu.location.d.a,com.baidu.location.BDLocation) -> if
    com.baidu.location.LocationClient if(com.baidu.location.d.a) -> if
com.baidu.location.d.a$a -> com.baidu.location.d.a$a:
    com.baidu.location.d.a a -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.baidu.location.d.a$b -> com.baidu.location.d.a$b:
    com.baidu.location.d.a a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.e.a -> com.baidu.location.e.a:
    long a -> a
    com.baidu.location.h.h if -> if
    android.location.Location for -> for
    java.lang.String do -> do
    void a(java.lang.String) -> a
    java.lang.String do() -> do
    long for() -> for
    void a(long) -> a
    com.baidu.location.h.h a() -> a
    void a(com.baidu.location.h.h) -> a
    android.location.Location if() -> if
    void a(android.location.Location) -> a
com.baidu.location.e.b -> com.baidu.location.e.b:
    com.baidu.location.h.f fQ -> fQ
    com.baidu.location.h.h fP -> fP
    boolean fN -> fN
    boolean fL -> fL
    java.lang.String fM -> fM
    android.os.Handler fO -> fO
    void if(android.os.Message) -> if
    void a6() -> a6
    java.lang.String k(java.lang.String) -> k
com.baidu.location.e.b$a -> com.baidu.location.e.b$a:
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.location.e.b d -> d
    void au() -> au
    void int(boolean) -> int
    void a(java.lang.String) -> a
com.baidu.location.e.b$b -> com.baidu.location.e.b$b:
    com.baidu.location.e.b a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.e.c -> com.baidu.location.e.c:
    com.baidu.location.e.c gm -> gm
    java.util.ArrayList gl -> gl
    boolean go -> go
    boolean gk -> gk
    boolean gn -> gn
    com.baidu.location.e.c br() -> br
    void bt() -> bt
    boolean bo() -> bo
    boolean bp() -> bp
    void long(android.os.Message) -> long
    void char(android.os.Message) -> char
    boolean goto(android.os.Message) -> goto
    void do(com.baidu.location.BDLocation,int) -> do
    void try(com.baidu.location.BDLocation) -> try
    void if(android.os.Bundle,int) -> if
    void l(java.lang.String) -> l
    void if(com.baidu.location.BDLocation,android.os.Message) -> if
    void bm() -> bm
    void bl() -> bl
    java.lang.String bu() -> bu
    int else(android.os.Message) -> else
    int case(android.os.Message) -> case
    com.baidu.location.e.c$a if(android.os.Messenger) -> if
    void if(com.baidu.location.e.c$a) -> if
    void bn() -> bn
    void bq() -> bq
    void bs() -> bs
com.baidu.location.e.c$a -> com.baidu.location.e.c$a:
    java.lang.String a -> a
    android.os.Messenger b -> b
    com.baidu.location.LocationClientOption c -> c
    int d -> d
    com.baidu.location.e.c e -> e
    void a(com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.BDLocation,int) -> a
    void b(com.baidu.location.BDLocation) -> b
    void a() -> a
    void b() -> b
    void c() -> c
    void a(int) -> a
    void a(int,java.lang.String,com.baidu.location.BDLocation) -> a
    void a(int,android.os.Bundle) -> a
    void a(com.baidu.location.e.c$a,int,android.os.Bundle) -> a
    void a(com.baidu.location.e.c$a,int) -> a
com.baidu.location.e.d -> com.baidu.location.e.d:
    java.lang.String eE -> eE
    java.lang.String eD -> eD
    java.lang.String eC -> eC
    java.lang.String eB -> eB
    int ez -> ez
    android.os.Handler eA -> eA
    com.baidu.location.e.d ey -> ey
    com.baidu.location.e.d aR() -> aR
    void aQ() -> aQ
    android.os.Handler aN() -> aN
    void au() -> au
    void int(boolean) -> int
    void aO() -> aO
    void aP() -> aP
    boolean aL() -> aL
    void aM() -> aM
    boolean do(java.lang.String,java.lang.String) -> do
    void if(java.io.File,java.io.File) -> if
    void do(com.baidu.location.e.d) -> do
    boolean for(com.baidu.location.e.d) -> for
    void if(com.baidu.location.e.d) -> if
com.baidu.location.e.e -> com.baidu.location.e.e:
    boolean gt -> gt
    java.lang.String gr -> gr
    com.baidu.location.e.e$a gs -> gs
    com.baidu.location.e.e gq -> gq
    int gp -> gp
    com.baidu.location.e.e bx() -> bx
    void bz() -> bz
    void bA() -> bA
    java.lang.String bw() -> bw
    boolean bv() -> bv
    int by() -> by
    boolean if(com.baidu.location.e.e,boolean) -> if
    int if(com.baidu.location.e.e,int) -> if
    java.lang.String if(com.baidu.location.e.e,java.lang.String) -> if
com.baidu.location.e.e$a -> com.baidu.location.e.e$a:
    com.baidu.location.e.e a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.e.f -> com.baidu.location.e.f:
    com.baidu.location.e.f gD -> gD
    com.baidu.location.e.f$a gx -> gx
    boolean gA -> gA
    boolean gC -> gC
    boolean gF -> gF
    boolean gu -> gu
    boolean gH -> gH
    boolean gv -> gv
    boolean gz -> gz
    boolean gE -> gE
    int gB -> gB
    java.lang.String gw -> gw
    int gG -> gG
    int gy -> gy
    int gI -> gI
    com.baidu.location.e.f bC() -> bC
    void bI() -> bI
    void bF() -> bF
    void bG() -> bG
    boolean n(java.lang.String) -> n
    void bB() -> bB
    void bH() -> bH
    void bE() -> bE
    void m(java.lang.String) -> m
    void if(org.apache.http.HttpEntity) -> if
    void do(org.apache.http.HttpEntity) -> do
    void do(int) -> do
    void bD() -> bD
    void bJ() -> bJ
    void if(int) -> if
    void do(com.baidu.location.e.f,org.apache.http.HttpEntity) -> do
    void if(com.baidu.location.e.f,org.apache.http.HttpEntity) -> if
com.baidu.location.e.f$a -> com.baidu.location.e.f$a:
    java.lang.String b -> b
    boolean c -> c
    boolean d -> d
    com.baidu.location.e.f e -> e
    void au() -> au
    void int(boolean) -> int
    void a(java.lang.String,boolean) -> a
com.baidu.location.e.g -> com.baidu.location.e.g:
    com.baidu.location.e.d a -> a
    void run() -> run
com.baidu.location.e.h -> com.baidu.location.e.h:
    com.baidu.location.e.h hr -> hr
    int gX -> gX
    java.lang.String g5 -> g5
    long gL -> gL
    java.lang.String hg -> hg
    int gZ -> gZ
    double gR -> gR
    java.lang.String gM -> gM
    int g3 -> g3
    int g4 -> g4
    int gK -> gK
    int hl -> hl
    double gN -> gN
    double g8 -> g8
    double hc -> hc
    int hu -> hu
    int gP -> gP
    int gT -> gT
    int hk -> hk
    int hb -> hb
    long hm -> hm
    com.baidu.location.e.h$a gY -> gY
    boolean gQ -> gQ
    boolean gU -> gU
    int g2 -> g2
    float g7 -> g7
    float gO -> gO
    long g0 -> g0
    int gS -> gS
    long he -> he
    android.location.Location g9 -> g9
    android.location.Location hs -> hs
    java.lang.StringBuilder g6 -> g6
    long ha -> ha
    android.os.Handler gJ -> gJ
    java.lang.String ht -> ht
    byte[] hp -> hp
    byte[] gW -> gW
    int hj -> hj
    java.util.List hd -> hd
    int hq -> hq
    java.lang.String gV -> gV
    java.lang.String g1 -> g1
    java.lang.String hh -> hh
    boolean hi -> hi
    int ho -> ho
    double hf -> hf
    double hn -> hn
    com.baidu.location.e.h bK() -> bK
    void bR() -> bR
    void bQ() -> bQ
    void bL() -> bL
    boolean if(java.lang.String,android.content.Context) -> if
    void for(android.location.Location) -> for
    void do(android.location.Location) -> do
    boolean bS() -> bS
    void bN() -> bN
    void bT() -> bT
    void new(android.location.Location) -> new
    void bP() -> bP
    byte[] for(int) -> for
    void if(android.location.Location) -> if
    void int(android.location.Location) -> int
    void int(int) -> int
    byte[] q(java.lang.String) -> q
    java.lang.String if(java.io.File,java.lang.String) -> if
    void bU() -> bU
    java.lang.String o(java.lang.String) -> o
    void bO() -> bO
    void p(java.lang.String) -> p
    void r(java.lang.String) -> r
    void new(int) -> new
    void s(java.lang.String) -> s
    void bM() -> bM
    void if(com.baidu.location.e.h,android.location.Location) -> if
    java.lang.String if(com.baidu.location.e.h,java.io.File,java.lang.String) -> if
    void if(com.baidu.location.e.h,java.lang.String) -> if
    android.os.Handler if(com.baidu.location.e.h) -> if
com.baidu.location.e.h$a -> com.baidu.location.e.h$a:
    java.lang.String b -> b
    com.baidu.location.e.h c -> c
    void au() -> au
    void int(boolean) -> int
    void a(java.lang.String) -> a
com.baidu.location.e.i -> com.baidu.location.e.i:
    com.baidu.location.e.i hv -> hv
    com.baidu.location.e.i$a hC -> hC
    boolean hA -> hA
    boolean hz -> hz
    boolean hB -> hB
    boolean hx -> hx
    boolean hw -> hw
    android.os.Handler hy -> hy
    com.baidu.location.e.i bY() -> bY
    void bX() -> bX
    void b0() -> b0
    void bZ() -> bZ
    void b1() -> b1
    void bW() -> bW
    void bV() -> bV
    boolean if(com.baidu.location.e.i) -> if
    boolean do(com.baidu.location.e.i) -> do
    boolean if(com.baidu.location.e.i,boolean) -> if
    void for(com.baidu.location.e.i) -> for
com.baidu.location.e.i$1 -> com.baidu.location.e.i$1:
com.baidu.location.e.i$a -> com.baidu.location.e.i$a:
    com.baidu.location.e.i a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.e.i$b -> com.baidu.location.e.i$b:
    com.baidu.location.e.i b -> b
    void run() -> run
com.baidu.location.e.j -> com.baidu.location.e.j:
    com.baidu.location.e.d a -> a
    void run() -> run
com.baidu.location.e.k -> com.baidu.location.e.k:
    com.baidu.location.e.k h6 -> h6
    java.lang.String hW -> hW
    java.io.File hM -> hM
    int hJ -> hJ
    int hS -> hS
    int h0 -> h0
    int h3 -> h3
    int hZ -> hZ
    int h1 -> h1
    int hL -> hL
    int hN -> hN
    java.lang.StringBuffer hK -> hK
    boolean hR -> hR
    int hX -> hX
    int h5 -> h5
    long hQ -> hQ
    long hP -> hP
    long h7 -> h7
    double hU -> hU
    double hV -> hV
    int hO -> hO
    int hT -> hT
    int hY -> hY
    java.lang.String h2 -> h2
    boolean h4 -> h4
    com.baidu.location.e.k b8() -> b8
    void b7() -> b7
    void cb() -> cb
    boolean try(android.location.Location) -> try
    boolean if(android.location.Location,int,int) -> if
    boolean ca() -> ca
    boolean u(java.lang.String) -> u
    java.lang.String try(int) -> try
    void b5() -> b5
    void b6() -> b6
    java.lang.String b9() -> b9
    boolean b4() -> b4
    boolean if(int,int,int) -> if
com.baidu.location.e.l -> com.baidu.location.e.l:
    float[] ig -> ig
    float[] ic -> ic
    android.hardware.SensorManager h8 -> h8
    com.baidu.location.e.l id -> id
    float ib -> ib
    double ie -> ie
    boolean ia -> ia
    boolean h9 -> h9
    boolean ih -> ih
    com.baidu.location.e.l cg() -> cg
    void ce() -> ce
    void ch() -> ch
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void byte(boolean) -> byte
    void case(boolean) -> case
    boolean cd() -> cd
    boolean cc() -> cc
    float ci() -> ci
    double cf() -> cf
com.baidu.location.e.m -> com.baidu.location.e.m:
    com.baidu.location.e.m fV -> fV
    int gh -> gh
    int fR -> fR
    boolean gb -> gb
    com.baidu.location.e.b$a fS -> fS
    java.lang.String gi -> gi
    com.baidu.location.BDLocation gf -> gf
    com.baidu.location.BDLocation gg -> gg
    com.baidu.location.h.f f7 -> f7
    com.baidu.location.h.h f4 -> f4
    com.baidu.location.h.f gj -> gj
    com.baidu.location.h.h f0 -> f0
    boolean gc -> gc
    boolean fT -> fT
    boolean f8 -> f8
    long f2 -> f2
    long f3 -> f3
    com.baidu.location.Address ge -> ge
    java.lang.String fZ -> fZ
    java.util.List f1 -> f1
    double f6 -> f6
    double f9 -> f9
    boolean fU -> fU
    long ga -> ga
    long fW -> fW
    com.baidu.location.e.m$b fY -> fY
    boolean f5 -> f5
    boolean fX -> fX
    boolean gd -> gd
    android.os.Handler fO -> fO
    com.baidu.location.e.m bb() -> bb
    void do(android.os.Message) -> do
    void bj() -> bj
    void bc() -> bc
    void try(android.os.Message) -> try
    void byte(android.os.Message) -> byte
    void for(android.os.Message) -> for
    com.baidu.location.Address new(com.baidu.location.BDLocation) -> new
    java.lang.String be() -> be
    java.util.List bg() -> bg
    void int(android.os.Message) -> int
    boolean do(com.baidu.location.h.f) -> do
    boolean a8() -> a8
    boolean bh() -> bh
    boolean do(com.baidu.location.h.h) -> do
    boolean if(com.baidu.location.h.f) -> if
    boolean if(com.baidu.location.h.h) -> if
    boolean bi() -> bi
    void new(android.os.Message) -> new
    void ba() -> ba
    void if(android.os.Message) -> if
    void a6() -> a6
    void bf() -> bf
    void int(com.baidu.location.BDLocation) -> int
    void a9() -> a9
    void bk() -> bk
    void bd() -> bd
    com.baidu.location.BDLocation a7() -> a7
    boolean do(com.baidu.location.e.m) -> do
    boolean do(com.baidu.location.e.m,boolean) -> do
    void if(com.baidu.location.e.m,android.os.Message) -> if
    boolean for(com.baidu.location.e.m) -> for
    boolean if(com.baidu.location.e.m,boolean) -> if
    boolean if(com.baidu.location.e.m) -> if
com.baidu.location.e.m$a -> com.baidu.location.e.m$a:
    com.baidu.location.e.m a -> a
    void run() -> run
com.baidu.location.e.m$b -> com.baidu.location.e.m$b:
    com.baidu.location.e.m a -> a
    void run() -> run
com.baidu.location.e.n -> com.baidu.location.e.n:
    android.os.HandlerThread a -> a
    android.os.HandlerThread a() -> a
com.baidu.location.e.o -> com.baidu.location.e.o:
    java.util.ArrayList il -> il
    java.util.ArrayList iI -> iI
    java.util.ArrayList in -> in
    java.lang.String iK -> iK
    java.lang.String is -> is
    java.lang.String iF -> iF
    java.lang.String ij -> ij
    java.lang.String iy -> iy
    int it -> it
    int iB -> iB
    int iC -> iC
    int iJ -> iJ
    java.io.File iz -> iz
    int iL -> iL
    int ir -> ir
    int iD -> iD
    int iN -> iN
    double iH -> iH
    double ii -> ii
    double iw -> iw
    double iG -> iG
    int ip -> ip
    int ix -> ix
    int io -> io
    android.location.Location iv -> iv
    android.location.Location iq -> iq
    android.location.Location ik -> ik
    com.baidu.location.h.f im -> im
    com.baidu.location.e.o$b iM -> iM
    com.baidu.location.e.o iA -> iA
    int iE -> iE
    long iu -> iu
    com.baidu.location.e.o co() -> co
    java.lang.String cn() -> cn
    void do(com.baidu.location.h.h,com.baidu.location.h.f,android.location.Location,java.lang.String) -> do
    void new(double,double,double,double) -> new
    boolean if(android.location.Location,boolean) -> if
    boolean byte(android.location.Location) -> byte
    boolean if(android.location.Location,com.baidu.location.h.f) -> if
    void cl() -> cl
    void cm() -> cm
    void cq() -> cq
    void y(java.lang.String) -> y
    void x(java.lang.String) -> x
    void A(java.lang.String) -> A
    int if(java.util.List,int) -> if
    boolean if(int,int,int,int,long) -> if
    void v(java.lang.String) -> v
    void w(java.lang.String) -> w
    void if(int,boolean) -> if
    boolean for(java.lang.String,java.util.List) -> for
    java.lang.String cp() -> cp
    void cj() -> cj
    java.lang.String byte(int) -> byte
    java.lang.String ck() -> ck
    void z(java.lang.String) -> z
    java.lang.String if(com.baidu.location.h.h,com.baidu.location.h.f,android.location.Location,java.lang.String,java.lang.String) -> if
com.baidu.location.e.o$a -> com.baidu.location.e.o$a:
    java.lang.String c -> c
    com.baidu.location.e.o b -> b
    void au() -> au
    void int(boolean) -> int
    void a() -> a
com.baidu.location.e.o$b -> com.baidu.location.e.o$b:
    boolean b -> b
    int c -> c
    int d -> d
    java.util.ArrayList f -> f
    com.baidu.location.e.o e -> e
    void au() -> au
    void int(boolean) -> int
    void a() -> a
com.baidu.location.e.p -> com.baidu.location.e.p:
    android.content.Context iR -> iR
    android.telephony.TelephonyManager iU -> iU
    com.baidu.location.e.p$b iQ -> iQ
    java.lang.reflect.Method iZ -> iZ
    java.lang.reflect.Method iV -> iV
    java.lang.reflect.Method iS -> iS
    java.lang.Class i1 -> i1
    android.net.wifi.WifiManager iX -> iX
    com.baidu.location.e.p$c iW -> iW
    java.lang.String iP -> iP
    com.baidu.location.LocationClientOption i0 -> i0
    com.baidu.location.e.p$a iO -> iO
    java.lang.String iT -> iT
    com.baidu.location.e.p$d iY -> iY
    java.lang.String cs() -> cs
    java.lang.String ct() -> ct
    java.lang.String char(int) -> char
    java.lang.String case(int) -> case
    void cr() -> cr
    void if(android.telephony.CellLocation) -> if
    android.content.Context for(com.baidu.location.e.p) -> for
    com.baidu.location.LocationClientOption if(com.baidu.location.e.p) -> if
    com.baidu.location.e.p$a do(com.baidu.location.e.p) -> do
com.baidu.location.e.p$1 -> com.baidu.location.e.p$1:
com.baidu.location.e.p$a -> com.baidu.location.e.p$a:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.baidu.location.e.p$b -> com.baidu.location.e.p$b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    char e -> e
    com.baidu.location.e.p f -> f
    boolean b() -> b
    java.lang.String toString() -> toString
    java.lang.String a() -> a
    boolean a(com.baidu.location.e.p$b) -> a
com.baidu.location.e.p$c -> com.baidu.location.e.p$c:
    java.util.List if -> if
    long do -> do
    com.baidu.location.e.p a -> a
    int if() -> if
    java.lang.String a(int) -> a
    void a() -> a
com.baidu.location.e.p$d -> com.baidu.location.e.p$d:
    java.lang.String b -> b
    com.baidu.location.e.p c -> c
    void au() -> au
    void int(boolean) -> int
    void a(java.lang.String) -> a
com.baidu.location.e.q -> com.baidu.location.e.q:
    com.baidu.location.e.d a -> a
    void run() -> run
com.baidu.location.e.r -> com.baidu.location.e.r:
    com.baidu.location.e.d a -> a
    void run() -> run
com.baidu.location.e.s -> com.baidu.location.e.s:
    android.location.Location a -> a
    com.baidu.location.e.h b -> b
    void run() -> run
com.baidu.location.e.t -> com.baidu.location.e.t:
    com.baidu.location.e.h a -> a
    void run() -> run
com.baidu.location.e.u -> com.baidu.location.e.u:
    com.baidu.location.e.h a -> a
    void run() -> run
com.baidu.location.e.v -> com.baidu.location.e.v:
    com.baidu.location.e.i$b a -> a
    void run() -> run
com.baidu.location.e.w -> com.baidu.location.e.w:
    com.baidu.location.e.w b -> b
    com.baidu.location.h.f c -> c
    com.baidu.location.h.h d -> d
    long e -> e
    long f -> f
    java.lang.String g -> g
    com.baidu.location.e.w a() -> a
    void b() -> b
    boolean a(com.baidu.location.h.h) -> a
    boolean a(com.baidu.location.h.f) -> a
    void a(java.lang.String) -> a
    void a(com.baidu.location.e.w,java.lang.String) -> a
com.baidu.location.e.w$a -> com.baidu.location.e.w$a:
    java.lang.String c -> c
    com.baidu.location.e.w b -> b
    void a(java.lang.String) -> a
    void au() -> au
    void int(boolean) -> int
com.baidu.location.e.x -> com.baidu.location.e.x:
    com.baidu.location.e.m a -> a
    void run() -> run
com.baidu.location.f -> com.baidu.location.f:
    com.baidu.location.LLSInterface lY -> lY
    com.baidu.location.LLSInterface l0 -> l0
    com.baidu.location.LLSInterface l1 -> l1
    java.lang.String replaceFileName -> replaceFileName
    java.lang.String lZ -> lZ
    android.content.Context mC -> mC
    boolean isServing -> isServing
    void onCreate() -> onCreate
    boolean do(java.io.File) -> do
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onDestroy() -> onDestroy
    float getFrameVersion() -> getFrameVersion
    java.lang.String getJarFileName() -> getJarFileName
    android.content.Context getServiceContext() -> getServiceContext
com.baidu.location.f.a.a -> com.baidu.location.f.a.a:
    boolean a -> a
    java.lang.String if -> if
    java.lang.String if(android.content.Context) -> if
    java.lang.String a(android.content.Context) -> a
com.baidu.location.f.a.b -> com.baidu.location.f.a.b:
    java.lang.String do -> do
    boolean a -> a
    java.lang.String int -> int
    java.lang.String for -> for
    java.lang.String if -> if
    java.lang.String a(android.content.Context) -> a
    java.lang.String do(android.content.Context) -> do
    java.lang.String if(android.content.Context) -> if
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.location.f.a.b$a -> com.baidu.location.f.a.b$a:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.location.f.a.b$a a(android.content.Context) -> a
com.baidu.location.f.a.c -> com.baidu.location.f.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.location.f.b.a -> com.baidu.location.f.b.a:
    java.lang.String if -> if
    java.lang.String a -> a
    byte[] if(java.lang.String,java.lang.String,byte[]) -> if
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
com.baidu.location.f.b.b -> com.baidu.location.f.b.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.location.g.a -> com.baidu.location.g.a:
    double i -> i
    double j -> j
    float k -> k
    boolean l -> l
    boolean m -> m
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    boolean a() -> a
    boolean b() -> b
    double c() -> c
    double d() -> d
    float e() -> e
com.baidu.location.g.b -> com.baidu.location.g.b:
    com.baidu.location.h.h jf -> jf
    com.baidu.location.h.f jh -> jh
    com.baidu.location.g.a jk -> jk
    boolean jj -> jj
    long je -> je
    java.text.SimpleDateFormat ji -> ji
    com.baidu.location.b.l jg -> jg
    void cB() -> cB
    com.baidu.location.b.l if(com.baidu.location.g.b) -> if
    java.text.SimpleDateFormat cA() -> cA
com.baidu.location.g.b$a -> com.baidu.location.g.b$a:
    com.baidu.location.g.b b -> b
    void au() -> au
    void int(boolean) -> int
    void a(java.lang.String) -> a
com.baidu.location.h.a -> com.baidu.location.h.a:
    long jK -> jK
    long jn -> jn
    int jv -> jv
    com.baidu.location.h.a jz -> jz
    android.content.Context jF -> jF
    android.location.LocationManager jL -> jL
    android.location.Location jJ -> jJ
    com.baidu.location.h.a$b jI -> jI
    com.baidu.location.h.a$c jD -> jD
    android.location.GpsStatus jw -> jw
    com.baidu.location.h.a$a jx -> jx
    int jH -> jH
    long jq -> jq
    boolean jm -> jm
    boolean jt -> jt
    java.lang.String jr -> jr
    boolean jG -> jG
    long jC -> jC
    java.lang.String jy -> jy
    android.os.Handler jE -> jE
    int jB -> jB
    int jo -> jo
    int ju -> ju
    int js -> js
    int jA -> jA
    int jp -> jp
    java.util.HashMap jl -> jl
    com.baidu.location.h.a cN() -> cN
    void cC() -> cC
    void if(java.lang.String,android.location.Location) -> if
    void cH() -> cH
    void cK() -> cK
    void cG() -> cG
    boolean cM() -> cM
    java.lang.String cL() -> cL
    void char(boolean) -> char
    java.lang.String cI() -> cI
    java.lang.String long(android.location.Location) -> long
    java.lang.String cF() -> cF
    android.location.Location cD() -> cD
    boolean cE() -> cE
    boolean cJ() -> cJ
    boolean if(android.location.Location,android.location.Location,boolean) -> if
    void char(android.location.Location) -> char
    void case(android.location.Location) -> case
    void if(double,double,float) -> if
    void else(boolean) -> else
    java.lang.String goto(android.location.Location) -> goto
    java.lang.String else(android.location.Location) -> else
    java.lang.String if(android.location.GpsSatellite,java.util.HashMap) -> if
    int if(java.util.HashMap) -> if
    double[] if(java.util.List) -> if
    double[] int(double,double) -> int
    double[] new(double,double) -> new
    int if(com.baidu.location.h.m,int) -> if
    void if(com.baidu.location.h.a,android.location.Location) -> if
    com.baidu.location.h.a$a do(com.baidu.location.h.a) -> do
    void if(com.baidu.location.h.a,java.lang.String,android.location.Location) -> if
    boolean int(com.baidu.location.h.a) -> int
    android.os.Handler try(com.baidu.location.h.a) -> try
    long do(com.baidu.location.h.a,long) -> do
    void if(com.baidu.location.h.a,boolean) -> if
    void do(com.baidu.location.h.a,android.location.Location) -> do
    boolean do(com.baidu.location.h.a,boolean) -> do
    long if(com.baidu.location.h.a,long) -> if
    android.location.LocationManager for(com.baidu.location.h.a) -> for
    android.location.GpsStatus new(com.baidu.location.h.a) -> new
    android.location.GpsStatus if(com.baidu.location.h.a,android.location.GpsStatus) -> if
    int do(com.baidu.location.h.a,int) -> do
    int if(com.baidu.location.h.a,int) -> if
    java.util.HashMap if(com.baidu.location.h.a,java.util.HashMap) -> if
    int if(com.baidu.location.h.a) -> if
    java.util.HashMap byte(com.baidu.location.h.a) -> byte
    java.lang.String if(com.baidu.location.h.a,android.location.GpsSatellite,java.util.HashMap) -> if
    int else(int) -> else
    int case(com.baidu.location.h.a) -> case
    int if(com.baidu.location.h.a,com.baidu.location.h.m,int) -> if
    java.lang.String B(java.lang.String) -> B
com.baidu.location.h.a$a -> com.baidu.location.h.a$a:
    long a -> a
    long c -> c
    int d -> d
    boolean e -> e
    java.util.List f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    com.baidu.location.h.a b -> b
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.baidu.location.h.a$b -> com.baidu.location.h.a$b:
    com.baidu.location.h.a a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.h.a$c -> com.baidu.location.h.a$c:
    long b -> b
    com.baidu.location.h.a a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.h.b -> com.baidu.location.h.b:
    com.baidu.location.h.b j2 -> j2
    android.telephony.TelephonyManager jM -> jM
    com.baidu.location.h.h jS -> jS
    com.baidu.location.h.h jP -> jP
    java.util.List jZ -> jZ
    com.baidu.location.h.b$a j0 -> j0
    boolean jQ -> jQ
    java.lang.reflect.Method j1 -> j1
    java.lang.reflect.Method jO -> jO
    java.lang.reflect.Method jW -> jW
    java.lang.reflect.Method jN -> jN
    java.lang.reflect.Method j3 -> j3
    java.lang.Class jX -> jX
    long jV -> jV
    int jY -> jY
    boolean jU -> jU
    int jT -> jT
    int jR -> jR
    com.baidu.location.h.b cW() -> cW
    void cP() -> cP
    void cT() -> cT
    boolean cX() -> cX
    void cU() -> cU
    void cY() -> cY
    int cR() -> cR
    java.lang.String cQ() -> cQ
    com.baidu.location.h.h cO() -> cO
    void cV() -> cV
    com.baidu.location.h.h do(android.telephony.CellLocation) -> do
    void try(com.baidu.location.h.h) -> try
    com.baidu.location.h.h cZ() -> cZ
    com.baidu.location.h.h if(android.telephony.CellInfo) -> if
    int void(int) -> void
    int cS() -> cS
    java.lang.String byte(com.baidu.location.h.h) -> byte
    java.lang.String int(com.baidu.location.h.h) -> int
    java.lang.String new(com.baidu.location.h.h) -> new
    void if(com.baidu.location.h.b) -> if
    com.baidu.location.h.h do(com.baidu.location.h.b) -> do
com.baidu.location.h.b$a -> com.baidu.location.h.b$a:
    com.baidu.location.h.b a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.baidu.location.h.c -> com.baidu.location.h.c:
    int case -> case
    int e -> e
    int goto -> goto
    int f -> f
    int int -> int
    int b -> b
    int new -> new
    int else -> else
    int char -> char
    int d -> d
    int byte -> byte
    int a -> a
    int for -> for
    int try -> try
    int long -> long
    int void -> void
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String c -> c
    java.lang.String if -> if
    java.lang.String do -> do
    java.lang.String a(int) -> a
    com.baidu.location.h.j a() -> a
com.baidu.location.h.d -> com.baidu.location.h.d:
    com.baidu.location.h.g a() -> a
com.baidu.location.h.e -> com.baidu.location.h.e:
    int j5 -> j5
    long j4 -> j4
    long ka -> ka
    long kc -> kc
    com.baidu.location.h.e ke -> ke
    android.net.wifi.WifiManager kd -> kd
    com.baidu.location.h.e$a ki -> ki
    com.baidu.location.h.f j8 -> j8
    long kb -> kb
    long kh -> kh
    boolean kg -> kg
    java.lang.Object j9 -> j9
    java.lang.reflect.Method kf -> kf
    boolean j6 -> j6
    long j7 -> j7
    com.baidu.location.h.e dg() -> dg
    void c6() -> c6
    void dd() -> dd
    boolean c0() -> c0
    boolean c5() -> c5
    boolean da() -> da
    boolean db() -> db
    int dc() -> dc
    java.lang.String c9() -> c9
    boolean c2() -> c2
    com.baidu.location.h.f c8() -> c8
    com.baidu.location.h.f de() -> de
    com.baidu.location.h.f c4() -> c4
    void df() -> df
    void c3() -> c3
    boolean c1() -> c1
    boolean if(com.baidu.location.h.f,com.baidu.location.h.f,float) -> if
    boolean if(java.util.List,java.util.List,float) -> if
    double if(com.baidu.location.h.f,com.baidu.location.h.f) -> if
    java.lang.String c7() -> c7
    boolean D(java.lang.String) -> D
    com.baidu.location.h.f do(java.util.List) -> do
    void if(com.baidu.location.h.e) -> if
com.baidu.location.h.e$1 -> com.baidu.location.h.e$1:
com.baidu.location.h.e$a -> com.baidu.location.h.e$a:
    com.baidu.location.h.e a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.h.f -> com.baidu.location.h.f:
    java.util.List km -> km
    long kk -> kk
    long kn -> kn
    boolean kl -> kl
    boolean ko -> ko
    long kj -> kj
    java.lang.String dk() -> dk
    int dn() -> dn
    java.lang.String dr() -> dr
    java.lang.String dm() -> dm
    java.lang.String e(int) -> e
    java.lang.String do(int,boolean) -> do
    java.lang.String i(int) -> i
    java.lang.String d(int) -> d
    java.lang.String if(int,java.util.List) -> if
    java.lang.String dq() -> dq
    void di() -> di
    java.lang.String j(int) -> j
    java.lang.String h(int) -> h
    boolean new(com.baidu.location.h.f) -> new
    boolean int(com.baidu.location.h.f) -> int
    boolean try(com.baidu.location.h.f) -> try
    int dh() -> dh
    boolean dj() -> dj
    boolean ds() -> ds
    boolean dp() -> dp
    boolean dl() -> dl
com.baidu.location.h.g -> com.baidu.location.h.g:
    void cC() -> cC
    void cH() -> cH
    void cK() -> cK
    void cG() -> cG
    void char(boolean) -> char
    java.lang.String cI() -> cI
    java.lang.String cF() -> cF
    android.location.Location cD() -> cD
    boolean cE() -> cE
    boolean cJ() -> cJ
com.baidu.location.h.h -> com.baidu.location.h.h:
    int kp -> kp
    int kt -> kt
    int kw -> kw
    int kx -> kx
    int ky -> ky
    int ks -> ks
    long kr -> kr
    int ku -> ku
    char kv -> kv
    boolean kq -> kq
    boolean case(com.baidu.location.h.h) -> case
    int dv() -> dv
    boolean dw() -> dw
    boolean du() -> du
    boolean dx() -> dx
    boolean dD() -> dD
    boolean dA() -> dA
    void dt() -> dt
    java.lang.String dC() -> dC
    java.lang.String dy() -> dy
    java.lang.String dB() -> dB
    java.lang.String dz() -> dz
com.baidu.location.h.i -> com.baidu.location.h.i:
    com.baidu.location.h.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.h.j -> com.baidu.location.h.j:
    void cP() -> cP
    void cT() -> cT
    java.lang.String cQ() -> cQ
    com.baidu.location.h.h cO() -> cO
    java.lang.String int(com.baidu.location.h.h) -> int
    int cR() -> cR
    int cS() -> cS
    void goto(int) -> goto
    void C(java.lang.String) -> C
    void long(int) -> long
com.baidu.location.h.k -> com.baidu.location.h.k:
    void c6() -> c6
    void dd() -> dd
    boolean c0() -> c0
    boolean c5() -> c5
    boolean da() -> da
    boolean c2() -> c2
    boolean db() -> db
    com.baidu.location.h.f c8() -> c8
    com.baidu.location.h.f de() -> de
    com.baidu.location.h.f c4() -> c4
    com.baidu.location.h.f do(java.util.List) -> do
    boolean c1() -> c1
    java.lang.String c7() -> c7
    java.lang.String c9() -> c9
    int dc() -> dc
    boolean D(java.lang.String) -> D
    void c3() -> c3
com.baidu.location.h.l -> com.baidu.location.h.l:
    com.baidu.location.h.k a() -> a
com.baidu.location.h.m -> com.baidu.location.h.m:
    boolean c -> c
    java.lang.String d -> d
    boolean e -> e
    double f -> f
    double g -> g
    java.lang.String a -> a
    int b -> b
    void d() -> d
    boolean a(java.lang.String) -> a
    boolean a() -> a
    double b() -> b
    double c() -> c
com.baidu.mapapi.BMapManager -> com.baidu.mapapi.BMapManager:
    void init() -> init
    void destroy() -> destroy
    android.content.Context getContext() -> getContext
com.baidu.mapapi.MessageCenter -> com.baidu.mapapi.MessageCenter:
    void registMessage(int,android.os.Handler) -> registMessage
    void unregistMessage(int,android.os.Handler) -> unregistMessage
com.baidu.mapapi.SDKInitializer -> com.baidu.mapapi.SDKInitializer:
    java.lang.String SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_OK -> SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_OK
    java.lang.String SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR -> SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR
    java.lang.String SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR -> SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR
    java.lang.String SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE -> SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE
    void initialize(java.lang.String,android.content.Context) -> initialize
    void initialize(android.content.Context) -> initialize
com.baidu.mapapi.UIMsg -> com.baidu.mapapi.UIMsg:
    java.lang.String UI_TIP_MAX_SCALE -> UI_TIP_MAX_SCALE
    java.lang.String UI_TIP_MIN_SCALE -> UI_TIP_MIN_SCALE
    java.lang.String UI_TIP_GEO_ERROR -> UI_TIP_GEO_ERROR
    java.lang.String UI_TIP_LOCATION -> UI_TIP_LOCATION
    java.lang.String UI_TIP_LOCATION_ERROR -> UI_TIP_LOCATION_ERROR
    java.lang.String UI_TIP_LOCATION_CHANGE -> UI_TIP_LOCATION_CHANGE
    java.lang.String UI_TIP_POI_SEARCH_ERROR -> UI_TIP_POI_SEARCH_ERROR
    java.lang.String UI_TIP_TRAFFIC_ON -> UI_TIP_TRAFFIC_ON
    java.lang.String UI_TIP_TRAFFIC_OFF -> UI_TIP_TRAFFIC_OFF
    java.lang.String UI_TIP_TRAFFIC_NO -> UI_TIP_TRAFFIC_NO
    java.lang.String UI_TIP_TRAFFIC_CHINA_NO -> UI_TIP_TRAFFIC_CHINA_NO
    java.lang.String UI_TIP_FRIEND_ON -> UI_TIP_FRIEND_ON
    java.lang.String UI_TIP_FRIEND_OFF -> UI_TIP_FRIEND_OFF
    java.lang.String UI_TIP_FAVORITE_ON -> UI_TIP_FAVORITE_ON
    java.lang.String UI_TIP_FAVORITE_OFF -> UI_TIP_FAVORITE_OFF
    java.lang.String UI_TIP_SATELLITE_ON -> UI_TIP_SATELLITE_ON
    java.lang.String UI_TIP_SATELLITE_OFF -> UI_TIP_SATELLITE_OFF
    java.lang.String UI_TIP_SATELLITE_NO -> UI_TIP_SATELLITE_NO
    java.lang.String UI_TIP_SHOW_TO_FRIEND -> UI_TIP_SHOW_TO_FRIEND
    java.lang.String UI_TIP_HIDE_TO_FRIEND -> UI_TIP_HIDE_TO_FRIEND
    java.lang.String UI_TIP_NEW_VERSION -> UI_TIP_NEW_VERSION
    java.lang.String UI_TIP_NET_NETWORK_CONNECT_ERROR -> UI_TIP_NET_NETWORK_CONNECT_ERROR
    java.lang.String UI_TIP_NET_USER_CANCEL -> UI_TIP_NET_USER_CANCEL
    java.lang.String UI_TIP_NET_NETWORK_DATA_ERROR -> UI_TIP_NET_NETWORK_DATA_ERROR
    java.lang.String UI_TIP_NET_NETWORK_TIMEOUT_ERROR -> UI_TIP_NET_NETWORK_TIMEOUT_ERROR
    java.lang.String UI_TIP_NET_RESULT_NOT_FOUND -> UI_TIP_NET_RESULT_NOT_FOUND
    java.lang.String UI_TIP_NET_CORE_MEMORY_ALLOCATE_ERROR -> UI_TIP_NET_CORE_MEMORY_ALLOCATE_ERROR
    java.lang.String UI_TIP_NET_CORE_TRANS_CODE_ERROR -> UI_TIP_NET_CORE_TRANS_CODE_ERROR
    java.lang.String UI_TIP_NET_NETWORK_ERROR_404 -> UI_TIP_NET_NETWORK_ERROR_404
    java.lang.String UI_TIP_NET_RP_NOT_SUPPORT_BUS -> UI_TIP_NET_RP_NOT_SUPPORT_BUS
    java.lang.String UI_TIP_NET_RP_NOT_SUPPORT_BUS_2CITY -> UI_TIP_NET_RP_NOT_SUPPORT_BUS_2CITY
    java.lang.String UI_TIP_NET_RP_ST_EN_TOO_NEAR -> UI_TIP_NET_RP_ST_EN_TOO_NEAR
    java.lang.String UI_TIP_NET_NETWORK_GET_CITYID_ERROR -> UI_TIP_NET_NETWORK_GET_CITYID_ERROR
    java.lang.String UI_TIP_NET_UNDEFINED_ERROR -> UI_TIP_NET_UNDEFINED_ERROR
    java.lang.String UI_TIP_INPUT_START -> UI_TIP_INPUT_START
    java.lang.String UI_TIP_INPUT_GOALS -> UI_TIP_INPUT_GOALS
    java.lang.String UI_TIP_INPUT_START_EQUALS_GOAL -> UI_TIP_INPUT_START_EQUALS_GOAL
    java.lang.String UI_TIP_START_INVALID -> UI_TIP_START_INVALID
    java.lang.String UI_TIP_GOALS_INVALID -> UI_TIP_GOALS_INVALID
    java.lang.String UI_TIP_START_FAILURE -> UI_TIP_START_FAILURE
    java.lang.String UI_TIP_GOALS_FAILURE -> UI_TIP_GOALS_FAILURE
    java.lang.String UI_TIP_SEARCHING -> UI_TIP_SEARCHING
    java.lang.String UI_TIP_AR_ENTERING -> UI_TIP_AR_ENTERING
    java.lang.String UI_TIP_YOUR_SEARCH_START -> UI_TIP_YOUR_SEARCH_START
    java.lang.String UI_TIP_YOUR_SEARCH_GOALS -> UI_TIP_YOUR_SEARCH_GOALS
    java.lang.String UI_TIP_YOUR_SEARCH_START_IN_CITY -> UI_TIP_YOUR_SEARCH_START_IN_CITY
    java.lang.String UI_TIP_YOUR_SEARCH_GOALS_IN_CITY -> UI_TIP_YOUR_SEARCH_GOALS_IN_CITY
    java.lang.String UI_TIP_INDOOR_NOT_IN_BUILDING -> UI_TIP_INDOOR_NOT_IN_BUILDING
    java.lang.String UI_TIP_INDOOR_NO_GPS -> UI_TIP_INDOOR_NO_GPS
    java.lang.String UI_TIP_SDCARD_NO_SPACE -> UI_TIP_SDCARD_NO_SPACE
com.baidu.mapapi.UIMsg$UIGPSStatus -> com.baidu.mapapi.UIMsg$UIGPSStatus:
    int GPS_DEVICE_DISABLED -> GPS_DEVICE_DISABLED
    int GPS_DEVICE_ENABLED -> GPS_DEVICE_ENABLED
    int GPS_SIGNAL_CONNECTED -> GPS_SIGNAL_CONNECTED
    int GPS_SIGNAL_NOT_CONNECTED -> GPS_SIGNAL_NOT_CONNECTED
    int GPS_SIGNAL_SATELLITE_NUM -> GPS_SIGNAL_SATELLITE_NUM
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.UIMsg$UIHttpType -> com.baidu.mapapi.UIMsg$UIHttpType:
    int NET_HTTP_NONE -> NET_HTTP_NONE
    int APP_SEARCH_REQ -> APP_SEARCH_REQ
    int MAP_IMAGE_REQ -> MAP_IMAGE_REQ
    int VERSION_UPDATE -> VERSION_UPDATE
    int NET_HTTP_FLS -> NET_HTTP_FLS
    int ADD_FLS -> ADD_FLS
    int VOICE_SEARCH_REQ -> VOICE_SEARCH_REQ
    int VERSION_UPDATE_NAV_MODULE -> VERSION_UPDATE_NAV_MODULE
    int SHOW_TO_FRI_REQ -> SHOW_TO_FRI_REQ
    int HIDE_TO_FRI_REQ -> HIDE_TO_FRI_REQ
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.UIMsg$UIOffType -> com.baidu.mapapi.UIMsg$UIOffType:
    int MSG_OFFLINE_WIFICONNECT -> MSG_OFFLINE_WIFICONNECT
    int MSG_DATARUN_EXCEPTION -> MSG_DATARUN_EXCEPTION
    int MSG_OFFLINE_UPDATE -> MSG_OFFLINE_UPDATE
    int MSG_OFFLINE_FIRSTLOC -> MSG_OFFLINE_FIRSTLOC
    int MSG_OFFLINE_SECONDLOC -> MSG_OFFLINE_SECONDLOC
    int MSG_OFFLINE_VERUPDATE -> MSG_OFFLINE_VERUPDATE
    int MSG_OFFLINE_MEMENOUGH -> MSG_OFFLINE_MEMENOUGH
    int MSG_OFFLINE_FIND -> MSG_OFFLINE_FIND
    int MSG_TEMPORY_UPDATE -> MSG_TEMPORY_UPDATE
    int MSG_OFFLINE_DOWNLOADING -> MSG_OFFLINE_DOWNLOADING
    int MSG_OFFLINE_ADD -> MSG_OFFLINE_ADD
    int MSG_OFFLINE_NETERROR -> MSG_OFFLINE_NETERROR
    int MSG_OFFLINE_DELETE -> MSG_OFFLINE_DELETE
    int MSG_OFFLINE_DETECTED -> MSG_OFFLINE_DETECTED
    int MSG_OFFLINE_PROGRESS -> MSG_OFFLINE_PROGRESS
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.UIMsg$d_ResultType -> com.baidu.mapapi.UIMsg$d_ResultType:
    int TYPE_ERROR -> TYPE_ERROR
    int CITY_QUERY -> CITY_QUERY
    int CENTER_CITY -> CENTER_CITY
    int POI_DETAIL -> POI_DETAIL
    int CITY_LIST -> CITY_LIST
    int POI_LIST -> POI_LIST
    int CIRCUM_SEARCH_LIST -> CIRCUM_SEARCH_LIST
    int BUS_ROUTE -> BUS_ROUTE
    int BUS_DETAIL -> BUS_DETAIL
    int BUS_REPORT -> BUS_REPORT
    int CAR_ROUTE -> CAR_ROUTE
    int AREA_SEARCH_LIST -> AREA_SEARCH_LIST
    int NEARBY_CENTER_LIST -> NEARBY_CENTER_LIST
    int ADDR_LIST -> ADDR_LIST
    int ESPECIAL_QUERY -> ESPECIAL_QUERY
    int FOOT_ROUTE -> FOOT_ROUTE
    int POIRGC_DETAIL -> POIRGC_DETAIL
    int REVERSE_GEOCODING_SEARCH -> REVERSE_GEOCODING_SEARCH
    int SHORT_URL -> SHORT_URL
    int VERSION_CHECK -> VERSION_CHECK
    int NEWVERSION_DOWNLOAD -> NEWVERSION_DOWNLOAD
    int CELLID_LOCATE_REQ -> CELLID_LOCATE_REQ
    int LOC_INFO_UPLOAD -> LOC_INFO_UPLOAD
    int ITS_ROAD_SEARCH -> ITS_ROAD_SEARCH
    int SUGGESTION_SEARCH -> SUGGESTION_SEARCH
    int OFFLINETASK_SEARCH -> OFFLINETASK_SEARCH
    int LONG_URL -> LONG_URL
    int FLS_REQ -> FLS_REQ
    int POI_BKG_DATA -> POI_BKG_DATA
    int CITY_SUP_ITS -> CITY_SUP_ITS
    int VOICE_REQ -> VOICE_REQ
    int RECOMMANDLINK_SEARCH -> RECOMMANDLINK_SEARCH
    int VERSION_CHECK_NAV_MODULE -> VERSION_CHECK_NAV_MODULE
    int NEWVERSION_DOWNLOAD_NAV_MODULE -> NEWVERSION_DOWNLOAD_NAV_MODULE
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.UIMsg$f_FUN -> com.baidu.mapapi.UIMsg$f_FUN:
    int FUN_ID_MAP -> FUN_ID_MAP
    int FUN_ID_MAP_ACTION -> FUN_ID_MAP_ACTION
    int FUN_ID_MAP_ACTION_ZOOM_IN -> FUN_ID_MAP_ACTION_ZOOM_IN
    int FUN_ID_MAP_ACTION_ZOOM_OUT -> FUN_ID_MAP_ACTION_ZOOM_OUT
    int FUN_ID_MAP_ACTION_CLICK_DOWN -> FUN_ID_MAP_ACTION_CLICK_DOWN
    int FUN_ID_MAP_ACTION_CLICK_MOVE -> FUN_ID_MAP_ACTION_CLICK_MOVE
    int FUN_ID_MAP_ACTION_CLICK_UP -> FUN_ID_MAP_ACTION_CLICK_UP
    int FUN_ID_MAP_ACTION_FOCUS_AT -> FUN_ID_MAP_ACTION_FOCUS_AT
    int FUN_ID_MAP_OPTION -> FUN_ID_MAP_OPTION
    int FUN_ID_MAP_OPTION_POI -> FUN_ID_MAP_OPTION_POI
    int FUN_ID_MAP_OPTION_STATION -> FUN_ID_MAP_OPTION_STATION
    int FUN_ID_MAP_OPTION_ROUTE -> FUN_ID_MAP_OPTION_ROUTE
    int FUN_ID_MAP_OPTION_FAVORITE -> FUN_ID_MAP_OPTION_FAVORITE
    int FUN_ID_MAP_OPTION_REAL_ITS -> FUN_ID_MAP_OPTION_REAL_ITS
    int FUN_ID_MAP_OPTION_PREV_ITS -> FUN_ID_MAP_OPTION_PREV_ITS
    int FUN_ID_MAP_OPTION_SCALE -> FUN_ID_MAP_OPTION_SCALE
    int FUN_ID_MAP_OPTION_FLS -> FUN_ID_MAP_OPTION_FLS
    int FUN_ID_MAP_OPTION_RGC -> FUN_ID_MAP_OPTION_RGC
    int FUN_ID_MAP_OPTION_POI_SMS -> FUN_ID_MAP_OPTION_POI_SMS
    int FUN_ID_MAP_OPTION_RGC_SMS -> FUN_ID_MAP_OPTION_RGC_SMS
    int FUN_ID_MAP_STATE -> FUN_ID_MAP_STATE
    int FUN_ID_MAP_STATE_NORMAL -> FUN_ID_MAP_STATE_NORMAL
    int FUN_ID_MAP_STATE_LOCATE -> FUN_ID_MAP_STATE_LOCATE
    int FUN_ID_SCH -> FUN_ID_SCH
    int FUN_ID_SCH_POI -> FUN_ID_SCH_POI
    int FUN_ID_SCH_POI_OPTION -> FUN_ID_SCH_POI_OPTION
    int FUN_ID_SCH_POI_OPTION_ONE -> FUN_ID_SCH_POI_OPTION_ONE
    int FUN_ID_SCH_POI_OPTION_FORCE -> FUN_ID_SCH_POI_OPTION_FORCE
    int FUN_ID_SCH_POI_OPTION_CIRCUM -> FUN_ID_SCH_POI_OPTION_CIRCUM
    int FUN_ID_SCH_POI_OPTION_AREA -> FUN_ID_SCH_POI_OPTION_AREA
    int FUN_ID_SCH_POI_OPTION_BSLD -> FUN_ID_SCH_POI_OPTION_BSLD
    int FUN_ID_SCH_POI_OPTION_SUGGEST -> FUN_ID_SCH_POI_OPTION_SUGGEST
    int FUN_ID_SCH_POI_OPTION_OFFLINETASK -> FUN_ID_SCH_POI_OPTION_OFFLINETASK
    int FUN_ID_SCH_POI_OPTION_RGC -> FUN_ID_SCH_POI_OPTION_RGC
    int FUN_ID_SCH_POI_OPTION_RGC_SHORTURL -> FUN_ID_SCH_POI_OPTION_RGC_SHORTURL
    int FUN_ID_SCH_POI_OPTION_RECOMMANDLINK -> FUN_ID_SCH_POI_OPTION_RECOMMANDLINK
    int FUN_ID_SCH_POI_OPTION_NEARBY_CENTER -> FUN_ID_SCH_POI_OPTION_NEARBY_CENTER
    int FUN_ID_SCH_POI_ACTION -> FUN_ID_SCH_POI_ACTION
    int FUN_ID_SCH_POI_ACTION_SET_KEY -> FUN_ID_SCH_POI_ACTION_SET_KEY
    int FUN_ID_SCH_POI_ACTION_SET_PAGE -> FUN_ID_SCH_POI_ACTION_SET_PAGE
    int FUN_ID_SCH_POI_ACTION_SEARCH -> FUN_ID_SCH_POI_ACTION_SEARCH
    int FUN_ID_SCH_POI_ACTION_RECV_RET -> FUN_ID_SCH_POI_ACTION_RECV_RET
    int FUN_ID_SCH_POI_ACTION_VIEW_RCD -> FUN_ID_SCH_POI_ACTION_VIEW_RCD
    int FUN_ID_SCH_NAV -> FUN_ID_SCH_NAV
    int FUN_ID_SCH_NAV_OPTION -> FUN_ID_SCH_NAV_OPTION
    int FUN_ID_SCH_NAV_OPTION_BUS -> FUN_ID_SCH_NAV_OPTION_BUS
    int FUN_ID_SCH_NAV_OPTION_CAR -> FUN_ID_SCH_NAV_OPTION_CAR
    int FUN_ID_SCH_NAV_OPTION_FOOT -> FUN_ID_SCH_NAV_OPTION_FOOT
    int FUN_ID_SCH_NAV_OPTION_ALERT_START -> FUN_ID_SCH_NAV_OPTION_ALERT_START
    int FUN_ID_SCH_NAV_OPTION_ALERT_PAUSE -> FUN_ID_SCH_NAV_OPTION_ALERT_PAUSE
    int FUN_ID_SCH_NAV_OPTION_ALERT_STOP -> FUN_ID_SCH_NAV_OPTION_ALERT_STOP
    int FUN_ID_SCH_NAV_OPTION_ALERT_SETTING -> FUN_ID_SCH_NAV_OPTION_ALERT_SETTING
    int FUN_ID_SCH_NAV_ACTION -> FUN_ID_SCH_NAV_ACTION
    int FUN_ID_SCH_NAV_ACTION_SET_KEY -> FUN_ID_SCH_NAV_ACTION_SET_KEY
    int FUN_ID_SCH_NAV_ACTION_SET_PAGE -> FUN_ID_SCH_NAV_ACTION_SET_PAGE
    int FUN_ID_SCH_NAV_ACTION_SEARCH -> FUN_ID_SCH_NAV_ACTION_SEARCH
    int FUN_ID_SCH_NAV_ACTION_RECV_RET -> FUN_ID_SCH_NAV_ACTION_RECV_RET
    int FUN_ID_SCH_NAV_ACTION_VIEW_RCD -> FUN_ID_SCH_NAV_ACTION_VIEW_RCD
    int FUN_ID_SCH_NAV_ACTION_SEARCH_CHANGE -> FUN_ID_SCH_NAV_ACTION_SEARCH_CHANGE
    int FUN_ID_SCH_NAV_ACTION_SEARCH_BACK -> FUN_ID_SCH_NAV_ACTION_SEARCH_BACK
    int FUN_ID_SCH_NAV_ACTION_SEARCH_POILIST -> FUN_ID_SCH_NAV_ACTION_SEARCH_POILIST
    int FUN_ID_SCH_NAV_ACTION_SEARCH_CITY -> FUN_ID_SCH_NAV_ACTION_SEARCH_CITY
    int FUN_ID_SCH_NAV_ACTION_ALERT -> FUN_ID_SCH_NAV_ACTION_ALERT
    int FUN_ID_SCH_NAV_ACTION_ALERT_RECV_RET -> FUN_ID_SCH_NAV_ACTION_ALERT_RECV_RET
    int FUN_ID_SCH_NAV_ACTION_RECV_BUSREPORT -> FUN_ID_SCH_NAV_ACTION_RECV_BUSREPORT
    int FUN_ID_SCH_NAV_ACTION_RESET_POS -> FUN_ID_SCH_NAV_ACTION_RESET_POS
    int FUN_ID_NET -> FUN_ID_NET
    int FUN_ID_NET_OPTION -> FUN_ID_NET_OPTION
    int FUN_ID_GBS -> FUN_ID_GBS
    int FUN_ID_GBS_OPTION -> FUN_ID_GBS_OPTION
    int FUN_ID_GBS_OPTION_GPS -> FUN_ID_GBS_OPTION_GPS
    int FUN_ID_GBS_OPTION_CELL -> FUN_ID_GBS_OPTION_CELL
    int FUN_ID_HIS -> FUN_ID_HIS
    int FUN_ID_HIS_OPTION -> FUN_ID_HIS_OPTION
    int FUN_ID_HIS_OPTION_POI -> FUN_ID_HIS_OPTION_POI
    int FUN_ID_HIS_OPTION_ROT -> FUN_ID_HIS_OPTION_ROT
    int FUN_ID_HIS_ACTION -> FUN_ID_HIS_ACTION
    int FUN_ID_HIS_ACTION_VIEW_RET -> FUN_ID_HIS_ACTION_VIEW_RET
    int FUN_ID_HIS_ACTION_ADD -> FUN_ID_HIS_ACTION_ADD
    int FUN_ID_HIS_ACTION_EDIT_RCD -> FUN_ID_HIS_ACTION_EDIT_RCD
    int FUN_ID_HIS_ACTION_REMOVEAT -> FUN_ID_HIS_ACTION_REMOVEAT
    int FUN_ID_HIS_ACTION_VIEW_RCD -> FUN_ID_HIS_ACTION_VIEW_RCD
    int FUN_ID_HIS_ACTION_HOTKEY -> FUN_ID_HIS_ACTION_HOTKEY
    int FUN_ID_HIS_ACTION_HOTKEY_SET -> FUN_ID_HIS_ACTION_HOTKEY_SET
    int FUN_ID_HIS_ACTION_HOTKEY_GET -> FUN_ID_HIS_ACTION_HOTKEY_GET
    int FUN_ID_UTIL -> FUN_ID_UTIL
    int FUN_ID_UTIL_ACTION -> FUN_ID_UTIL_ACTION
    int FUN_ID_UTIL_ACTION_SCREENTOGEM -> FUN_ID_UTIL_ACTION_SCREENTOGEM
    int FUN_ID_UTIL_ACTION_LATILONGI_TO_BAIDUGEO -> FUN_ID_UTIL_ACTION_LATILONGI_TO_BAIDUGEO
    int FUN_ID_UTIL_ACTION_GEMTOSCREEN -> FUN_ID_UTIL_ACTION_GEMTOSCREEN
    int FUN_ID_UTIL_ACTION_SMS -> FUN_ID_UTIL_ACTION_SMS
    int FUN_ID_UTIL_ACTION_MMS -> FUN_ID_UTIL_ACTION_MMS
    int FUN_ID_UTIL_ACTION_SMSCALLBACK -> FUN_ID_UTIL_ACTION_SMSCALLBACK
    int FUN_ID_UTIL_OPTION_POI -> FUN_ID_UTIL_OPTION_POI
    int FUN_ID_UTIL_OPTION_POI_RGC -> FUN_ID_UTIL_OPTION_POI_RGC
    int FUN_ID_UTIL_OPTION_ROT -> FUN_ID_UTIL_OPTION_ROT
    int FUN_ID_UTIL_OPTION_FLS_ACTION -> FUN_ID_UTIL_OPTION_FLS_ACTION
    int FUN_ID_UTIL_ACTION_REQUIRE -> FUN_ID_UTIL_ACTION_REQUIRE
    int FUN_ID_UTIL_ACTION_UPDATE -> FUN_ID_UTIL_ACTION_UPDATE
    int FUN_ID_UTIL_OPTION_UPDATE_CHECK -> FUN_ID_UTIL_OPTION_UPDATE_CHECK
    int FUN_ID_UTIL_OPTION_UPDATE_START -> FUN_ID_UTIL_OPTION_UPDATE_START
    int FUN_ID_UTIL_OPTION_UPDATE_DESC -> FUN_ID_UTIL_OPTION_UPDATE_DESC
    int FUN_ID_UTIL_ACTION_UPDATE_NAV_MODULE -> FUN_ID_UTIL_ACTION_UPDATE_NAV_MODULE
    int FUN_ID_UTIL_OPTION_UPDATE_CHECK_NAV_MODULE -> FUN_ID_UTIL_OPTION_UPDATE_CHECK_NAV_MODULE
    int FUN_ID_UTIL_OPTION_UPDATE_START_NAV_MODULE -> FUN_ID_UTIL_OPTION_UPDATE_START_NAV_MODULE
    int FUN_ID_UTIL_OPTION_UPDATE_DESC_NAV_MODULE -> FUN_ID_UTIL_OPTION_UPDATE_DESC_NAV_MODULE
    int FUN_ID_UTIL_ACTION_SYSINFO -> FUN_ID_UTIL_ACTION_SYSINFO
    int FUN_ID_UTIL_OPTION_NOWIFI -> FUN_ID_UTIL_OPTION_NOWIFI
    int FUN_ID_UTIL_OPTION_SETWIFI -> FUN_ID_UTIL_OPTION_SETWIFI
    int FUN_ID_UTIL_OPTION_OTHERSYS -> FUN_ID_UTIL_OPTION_OTHERSYS
    int FUN_ID_UTIL_OPTION_GETINSTALL -> FUN_ID_UTIL_OPTION_GETINSTALL
    int FUN_ID_UTIL_OPTION_SETINSTALL -> FUN_ID_UTIL_OPTION_SETINSTALL
    int FUN_ID_UTIL_ACTION_LOC -> FUN_ID_UTIL_ACTION_LOC
    int FUN_ID_UTIL_OPTION_LOC_SET -> FUN_ID_UTIL_OPTION_LOC_SET
    int FUN_ID_UTIL_OPTION_LOC_GET -> FUN_ID_UTIL_OPTION_LOC_GET
    int FUN_ID_UTIL_ACTION_RESET -> FUN_ID_UTIL_ACTION_RESET
    int FUN_ID_UTIL_ACTION_ALRIGHT -> FUN_ID_UTIL_ACTION_ALRIGHT
    int FUN_ID_UTIL_OPTION_ALRIGHT_SET -> FUN_ID_UTIL_OPTION_ALRIGHT_SET
    int FUN_ID_UTIL_OPTION_ALRIGHT_GET -> FUN_ID_UTIL_OPTION_ALRIGHT_GET
    int FUN_ID_UTIL_ACTION_MAP -> FUN_ID_UTIL_ACTION_MAP
    int FUN_ID_UTIL_OPTION_MAPTMPAUTOUPDATE_SET -> FUN_ID_UTIL_OPTION_MAPTMPAUTOUPDATE_SET
    int FUN_ID_UTIL_OPTION_MAPTMPAUTOUPDATE_GET -> FUN_ID_UTIL_OPTION_MAPTMPAUTOUPDATE_GET
    int FUN_ID_UTIL_OPTION_MAPDATATMPSIZE_GET -> FUN_ID_UTIL_OPTION_MAPDATATMPSIZE_GET
    int FUN_ID_UTIL_OPTION_MAPDATAVMPSIZE_GET -> FUN_ID_UTIL_OPTION_MAPDATAVMPSIZE_GET
    int FUN_ID_UTIL_OPTION_MAPANIMATION -> FUN_ID_UTIL_OPTION_MAPANIMATION
    int FUN_ID_UTIL_OPTION_MAPDATADOMSIZE_GET -> FUN_ID_UTIL_OPTION_MAPDATADOMSIZE_GET
    int FUN_ID_UTIL_ACTION_SHOWPAOPAO -> FUN_ID_UTIL_ACTION_SHOWPAOPAO
    int FUN_ID_UTIL_ACTION_FLS_ADDPAOPAO -> FUN_ID_UTIL_ACTION_FLS_ADDPAOPAO
    int FUN_ID_UTIL_ACTION_FLS_SHOWPAOPAO -> FUN_ID_UTIL_ACTION_FLS_SHOWPAOPAO
    int FUN_ID_UTIL_ACTION_GETSCALEDATA -> FUN_ID_UTIL_ACTION_GETSCALEDATA
    int FUN_ID_OFFLINE_ACTION_CURRENTCITY -> FUN_ID_OFFLINE_ACTION_CURRENTCITY
    int FUN_ID_OFFLINE_ACTION_HOTCITYGETALL -> FUN_ID_OFFLINE_ACTION_HOTCITYGETALL
    int FUN_ID_OFFLINE_ACTION_DIRCITYSEARCH -> FUN_ID_OFFLINE_ACTION_DIRCITYSEARCH
    int FUN_ID_OFFLINE_ACTION_USRCITYGETALL -> FUN_ID_OFFLINE_ACTION_USRCITYGETALL
    int FUN_ID_OFFLINE_ACTION_USRCITYADDRCD -> FUN_ID_OFFLINE_ACTION_USRCITYADDRCD
    int FUN_ID_OFFLINE_ACTION_USRCITYBEGINLOAD -> FUN_ID_OFFLINE_ACTION_USRCITYBEGINLOAD
    int FUN_ID_OFFLINE_ACTION_USRCITYUPDATELOAD -> FUN_ID_OFFLINE_ACTION_USRCITYUPDATELOAD
    int FUN_ID_OFFLINE_ACTION_USRCITYSUSPEND -> FUN_ID_OFFLINE_ACTION_USRCITYSUSPEND
    int FUN_ID_OFFLINE_ACTION_USRCITYREMOVE -> FUN_ID_OFFLINE_ACTION_USRCITYREMOVE
    int FUN_ID_OFFLINE_ACTION_OFFLINEREQSUSPEND -> FUN_ID_OFFLINE_ACTION_OFFLINEREQSUSPEND
    int FUN_ID_OFFLINE_ACTION_OFFLINEREQRESUME -> FUN_ID_OFFLINE_ACTION_OFFLINEREQRESUME
    int FUN_ID_OFFLINE_ACTION_USRCITYBATBEGIN -> FUN_ID_OFFLINE_ACTION_USRCITYBATBEGIN
    int FUN_ID_OFFLINE_ACTION_USRCITYBATSUSPEND -> FUN_ID_OFFLINE_ACTION_USRCITYBATSUSPEND
    int FUN_ID_SET_POI_INFOR -> FUN_ID_SET_POI_INFOR
    int FUN_ID_VOICE -> FUN_ID_VOICE
    int FUN_ID_VOICE_SCH -> FUN_ID_VOICE_SCH
    int FUN_ID_VOICE_SCH_ACTION -> FUN_ID_VOICE_SCH_ACTION
    int FUN_ID_VOICE_SCH_ACTION_SEARCH -> FUN_ID_VOICE_SCH_ACTION_SEARCH
    int FUN_ID_VOICE_SCH_ACTION_RECV_RET -> FUN_ID_VOICE_SCH_ACTION_RECV_RET
    int FUN_ID_VOICE_SCH_OPTION -> FUN_ID_VOICE_SCH_OPTION
    int FUN_ID_VOICE_SCH_OPTION_IDENTITY -> FUN_ID_VOICE_SCH_OPTION_IDENTITY
    int FUN_ID_VOICE_SCH_OPTION_GLOBAL_KEY -> FUN_ID_VOICE_SCH_OPTION_GLOBAL_KEY
    int FUN_ID_ITS -> FUN_ID_ITS
    int FUN_ID_ITS_ACTION_VIEW_EVENT_RCD -> FUN_ID_ITS_ACTION_VIEW_EVENT_RCD
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.UIMsg$k_event -> com.baidu.mapapi.UIMsg$k_event:
    int V_WM_KEYDOWN -> V_WM_KEYDOWN
    int V_WM_KEYUP -> V_WM_KEYUP
    int V_WM_MOUSEMOVE -> V_WM_MOUSEMOVE
    int V_WM_LBUTTONDOWN -> V_WM_LBUTTONDOWN
    int V_WM_LBUTTONUP -> V_WM_LBUTTONUP
    int V_WM_ROTATEMOVE -> V_WM_ROTATEMOVE
    int V_WM_TRACKBALLMOVE -> V_WM_TRACKBALLMOVE
    int V_WM_ONFING -> V_WM_ONFING
    int V_LEFT -> V_LEFT
    int V_UP -> V_UP
    int V_RIGHT -> V_RIGHT
    int V_DOWN -> V_DOWN
    int V_W -> V_W
    int V_A -> V_A
    int V_S -> V_S
    int V_D -> V_D
    int MV_SCREENSIZE_CHANGE -> MV_SCREENSIZE_CHANGE
    int V_WM_CANCELREQ -> V_WM_CANCELREQ
    int V_WM_GLRENDER -> V_WM_GLRENDER
    int V_WM_GLCHANGE -> V_WM_GLCHANGE
    int V_WM_STATUS_CHANGE -> V_WM_STATUS_CHANGE
    int V_WM_LONGPRESS -> V_WM_LONGPRESS
    int V_WM_STREET_JUMP -> V_WM_STREET_JUMP
    int MV_MAP_ZOOMIN -> MV_MAP_ZOOMIN
    int MV_MAP_ZOOMOUT -> MV_MAP_ZOOMOUT
    int MV_MAP_ITS -> MV_MAP_ITS
    int MV_MAP_SHOWONMAP -> MV_MAP_SHOWONMAP
    int MV_MAP_LOCATION -> MV_MAP_LOCATION
    int MV_MAP_CLEANRESAULT -> MV_MAP_CLEANRESAULT
    int MV_MAP_MOVETOGEO -> MV_MAP_MOVETOGEO
    int MV_MAP_MOVETOSCREEN -> MV_MAP_MOVETOSCREEN
    int MV_MAP_MOVETOGEOBOUND -> MV_MAP_MOVETOGEOBOUND
    int MV_MAP_SAVEMAP -> MV_MAP_SAVEMAP
    int MV_MAP_CALDISTANCE -> MV_MAP_CALDISTANCE
    int MV_MAP_ADDLOGOBJ -> MV_MAP_ADDLOGOBJ
    int MV_MAP_SETMAPMODE -> MV_MAP_SETMAPMODE
    int MV_MAP_GETSAVEFLAX -> MV_MAP_GETSAVEFLAX
    int MV_MAP_RESETOPENGLRES -> MV_MAP_RESETOPENGLRES
    int MV_MAP_CHANGETO2D -> MV_MAP_CHANGETO2D
    int MV_MAP_GETMAPMODE -> MV_MAP_GETMAPMODE
    int MV_MAP_SATELLITE -> MV_MAP_SATELLITE
    int MV_MAP_CLEARSATECACHE -> MV_MAP_CLEARSATECACHE
    int MV_MAP_SETRENDER -> MV_MAP_SETRENDER
    int MV_MAP_SENDPVLOGOBJ -> MV_MAP_SENDPVLOGOBJ
    int MV_MAP_ZOOMTO -> MV_MAP_ZOOMTO
    int V_WM_ROTATE -> V_WM_ROTATE
    int V_WM_GETLASTCLRSATETIME -> V_WM_GETLASTCLRSATETIME
    int V_WM_DBCLICK -> V_WM_DBCLICK
    int MV_MAP_CACHEMANAGE -> MV_MAP_CACHEMANAGE
    int MV_MAP_CLEARLOCINFO -> MV_MAP_CLEARLOCINFO
    int MV_MAP_STOPUPDATEFLS -> MV_MAP_STOPUPDATEFLS
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.UIMsg$l_ErrorNo -> com.baidu.mapapi.UIMsg$l_ErrorNo:
    int REQUEST_OK -> REQUEST_OK
    int USER_CANCEL -> USER_CANCEL
    int NETWORK_CONNECT_ERROR -> NETWORK_CONNECT_ERROR
    int NETWORK_DATA_ERROR -> NETWORK_DATA_ERROR
    int NETWORK_SETTING_ERROR -> NETWORK_SETTING_ERROR
    int NETWORK_INITIALING -> NETWORK_INITIALING
    int NETWORK_INITIAL_OK -> NETWORK_INITIAL_OK
    int NETWORK_TIMEOUT_ERROR -> NETWORK_TIMEOUT_ERROR
    int RESULT_NOT_FOUND -> RESULT_NOT_FOUND
    int RP_NOT_SUPPORT_BUS -> RP_NOT_SUPPORT_BUS
    int RP_NOT_SUPPORT_BUS_2CITY -> RP_NOT_SUPPORT_BUS_2CITY
    int RP_ST_EN_TOO_NEAR -> RP_ST_EN_TOO_NEAR
    int CORE_MEMORY_ALLOCATE_ERROR -> CORE_MEMORY_ALLOCATE_ERROR
    int CORE_TRANS_CODE_ERROR -> CORE_TRANS_CODE_ERROR
    int NETWORK_ERROR_404 -> NETWORK_ERROR_404
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.UIMsg$m_AppUI -> com.baidu.mapapi.UIMsg$m_AppUI:
    int MSG_GET_GL_OK -> MSG_GET_GL_OK
    int MSG_APP_DATA_OK -> MSG_APP_DATA_OK
    int MSG_APP_VERSION -> MSG_APP_VERSION
    int MSG_APP_VERSION_FORCE -> MSG_APP_VERSION_FORCE
    int MSG_APP_VERSION_COMMEND -> MSG_APP_VERSION_COMMEND
    int MSG_CLOUD_SEARCH_RETURN_RESULT -> MSG_CLOUD_SEARCH_RETURN_RESULT
    int MSG_RADAR_SEARCH_RETURN_RESULT -> MSG_RADAR_SEARCH_RETURN_RESULT
    int MSG_APP_VERSION_NAV_MODULE -> MSG_APP_VERSION_NAV_MODULE
    int MSG_APP_VERSION_FORCE_NAV_MODULE -> MSG_APP_VERSION_FORCE_NAV_MODULE
    int MSG_APP_VERSION_COMMEND_NAV_MODULE -> MSG_APP_VERSION_COMMEND_NAV_MODULE
    int MSG_APP_GPS -> MSG_APP_GPS
    int MSG_APP_SAVESCREEN -> MSG_APP_SAVESCREEN
    int MSG_SCALE_UPDATE -> MSG_SCALE_UPDATE
    int CELLDATA_UPLOAD_REQ -> CELLDATA_UPLOAD_REQ
    int MSG_COMPASS_REQ -> MSG_COMPASS_REQ
    int MSG_LOCICON_TIMER -> MSG_LOCICON_TIMER
    int MSG_BKG_DATA_OK -> MSG_BKG_DATA_OK
    int MSG_CLICK_POPUP -> MSG_CLICK_POPUP
    int MSG_MAPMODE_UPDATE -> MSG_MAPMODE_UPDATE
    int MSG_CLICK_FLS_POPUP -> MSG_CLICK_FLS_POPUP
    int MSG_CITY_SUP_ITS -> MSG_CITY_SUP_ITS
    int MSG_CHINA_SUP_ITS -> MSG_CHINA_SUP_ITS
    int MSG_CITY_SUP_DOM -> MSG_CITY_SUP_DOM
    int MSG_COMPASS_DISPLAY -> MSG_COMPASS_DISPLAY
    int MSG_SET_SENSOR_STATUS -> MSG_SET_SENSOR_STATUS
    int MSG_PLACEFIELD_RELOAD -> MSG_PLACEFIELD_RELOAD
    int MSG_MAP_PAOPAO -> MSG_MAP_PAOPAO
    int MSG_MAP_OFFLINE -> MSG_MAP_OFFLINE
    int MSG_MAP_HOTKEYS -> MSG_MAP_HOTKEYS
    int MSG_MAP_HOTKEYSOPEN -> MSG_MAP_HOTKEYSOPEN
    int V_WM_INIT_OK -> V_WM_INIT_OK
    int V_WM_INIT_ERROR -> V_WM_INIT_ERROR
    int V_WM_DESTROY -> V_WM_DESTROY
    int V_WM_PAINT -> V_WM_PAINT
    int V_WM_SCALEFINISHED -> V_WM_SCALEFINISHED
    int MSG_SUG_TEXTCHAGNE -> MSG_SUG_TEXTCHAGNE
    int MSG_FAV_BUS_OLD -> MSG_FAV_BUS_OLD
    int MSG_CLICK_ITEM -> MSG_CLICK_ITEM
    int V_WM_WIFISTATECHANGE -> V_WM_WIFISTATECHANGE
    int V_WM_FLSPUDATE -> V_WM_FLSPUDATE
    int V_WM_HOTKEY -> V_WM_HOTKEY
    int V_WM_VDATAENGINE -> V_WM_VDATAENGINE
    int V_WM_GETPOIUID -> V_WM_GETPOIUID
    int V_WM_GETCITYITS -> V_WM_GETCITYITS
    int V_WM_GETBKGDATA -> V_WM_GETBKGDATA
    int MSG_MAP_ROUTEALERT_GPSSTATE -> MSG_MAP_ROUTEALERT_GPSSTATE
    int V_WM_PERMCHECK -> V_WM_PERMCHECK
    int V_WM_ADDLISTUPDATE -> V_WM_ADDLISTUPDATE
    int V_WM_LISTLISTUPDATE -> V_WM_LISTLISTUPDATE
    int MSG_SENSOR -> MSG_SENSOR
    int MSG_AUTOHIDE_TIMER -> MSG_AUTOHIDE_TIMER
    int MSG_ARMODE_ENTER -> MSG_ARMODE_ENTER
    int MSG_ARMODE_UIENTER -> MSG_ARMODE_UIENTER
    int MSG_ARTOAST_TIMER -> MSG_ARTOAST_TIMER
    int MSG_ARMODE_RESULT -> MSG_ARMODE_RESULT
    com.baidu.mapapi.UIMsg a -> a
com.baidu.mapapi.VersionInfo -> com.baidu.mapapi.VersionInfo:
    java.lang.String VERSION_INFO -> VERSION_INFO
    java.lang.String VERSION_DESC -> VERSION_DESC
    java.lang.String KIT_NAME -> KIT_NAME
    java.lang.String getApiVersion() -> getApiVersion
    java.lang.String getVersionDesc() -> getVersionDesc
    java.lang.String getKitName() -> getKitName
com.baidu.mapapi.a.a.a -> com.baidu.mapapi.a.a.a:
com.baidu.mapapi.a.a.b -> com.baidu.mapapi.a.a.b:
    java.lang.String a() -> a
    java.lang.String b() -> b
com.baidu.mapapi.cloud.BaseCloudSearchInfo -> com.baidu.mapapi.cloud.BaseCloudSearchInfo:
    java.lang.String q -> q
    java.lang.String tags -> tags
    java.lang.String sortby -> sortby
    java.lang.String filter -> filter
    int pageIndex -> pageIndex
    int pageSize -> pageSize
    java.lang.String a() -> a
com.baidu.mapapi.cloud.BaseSearchInfo -> com.baidu.mapapi.cloud.BaseSearchInfo:
    java.lang.String a -> a
    java.lang.String ak -> ak
    int geoTableId -> geoTableId
    java.lang.String sn -> sn
    java.lang.String a() -> a
com.baidu.mapapi.cloud.BaseSearchResult -> com.baidu.mapapi.cloud.BaseSearchResult:
    int STATUS_CODE_SUCCEED -> STATUS_CODE_SUCCEED
    int STATUS_CODE_RESULT_NOTFOUND -> STATUS_CODE_RESULT_NOTFOUND
    int STATUS_CODE_NETWORK_ERROR -> STATUS_CODE_NETWORK_ERROR
    int STATUS_CODE_NETWORK_TIME_OUT -> STATUS_CODE_NETWORK_TIME_OUT
    int status -> status
    int size -> size
    int total -> total
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.BoundSearchInfo -> com.baidu.mapapi.cloud.BoundSearchInfo:
    java.lang.String bound -> bound
    java.lang.String a() -> a
com.baidu.mapapi.cloud.CloudListener -> com.baidu.mapapi.cloud.CloudListener:
    void onGetSearchResult(com.baidu.mapapi.cloud.CloudSearchResult,int) -> onGetSearchResult
    void onGetDetailSearchResult(com.baidu.mapapi.cloud.DetailSearchResult,int) -> onGetDetailSearchResult
com.baidu.mapapi.cloud.CloudManager -> com.baidu.mapapi.cloud.CloudManager:
    java.lang.String a -> a
    android.os.Bundle b -> b
    com.baidu.mapapi.cloud.CloudManager c -> c
    com.baidu.platform.comjni.map.cloud.a d -> d
    android.os.Handler e -> e
    com.baidu.mapapi.cloud.CloudListener f -> f
    com.baidu.mapapi.cloud.CloudManager getInstance() -> getInstance
    void init(com.baidu.mapapi.cloud.CloudListener) -> init
    int a(int) -> a
    void destroy() -> destroy
    boolean localSearch(com.baidu.mapapi.cloud.LocalSearchInfo) -> localSearch
    boolean nearbySearch(com.baidu.mapapi.cloud.NearbySearchInfo) -> nearbySearch
    boolean boundSearch(com.baidu.mapapi.cloud.BoundSearchInfo) -> boundSearch
    boolean a(com.baidu.mapapi.cloud.BaseCloudSearchInfo) -> a
    boolean detailSearch(com.baidu.mapapi.cloud.DetailSearchInfo) -> detailSearch
    java.lang.String b(int) -> b
    com.baidu.platform.comjni.map.cloud.a a(com.baidu.mapapi.cloud.CloudManager) -> a
    com.baidu.mapapi.cloud.CloudListener b(com.baidu.mapapi.cloud.CloudManager) -> b
    java.lang.String a(com.baidu.mapapi.cloud.CloudManager,int) -> a
    int b(com.baidu.mapapi.cloud.CloudManager,int) -> b
com.baidu.mapapi.cloud.CloudPoiInfo -> com.baidu.mapapi.cloud.CloudPoiInfo:
    int uid -> uid
    int geotableId -> geotableId
    java.lang.String title -> title
    java.lang.String address -> address
    java.lang.String province -> province
    java.lang.String city -> city
    java.lang.String district -> district
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String tags -> tags
    int distance -> distance
    int weight -> weight
    java.util.Map extras -> extras
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.CloudSearchResult -> com.baidu.mapapi.cloud.CloudSearchResult:
    java.util.List poiList -> poiList
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.DetailSearchInfo -> com.baidu.mapapi.cloud.DetailSearchInfo:
    int uid -> uid
    java.lang.String a() -> a
com.baidu.mapapi.cloud.DetailSearchResult -> com.baidu.mapapi.cloud.DetailSearchResult:
    com.baidu.mapapi.cloud.CloudPoiInfo poiInfo -> poiInfo
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.LocalSearchInfo -> com.baidu.mapapi.cloud.LocalSearchInfo:
    java.lang.String region -> region
    java.lang.String a() -> a
com.baidu.mapapi.cloud.NearbySearchInfo -> com.baidu.mapapi.cloud.NearbySearchInfo:
    java.lang.String location -> location
    int radius -> radius
    java.lang.String a() -> a
com.baidu.mapapi.cloud.VersionInfo -> com.baidu.mapapi.cloud.VersionInfo:
    java.lang.String VERSION_INFO -> VERSION_INFO
    java.lang.String VERSION_DESC -> VERSION_DESC
    java.lang.String KIT_NAME -> KIT_NAME
    java.lang.String getApiVersion() -> getApiVersion
    java.lang.String getVersionDesc() -> getVersionDesc
    java.lang.String getKitName() -> getKitName
com.baidu.mapapi.cloud.a -> com.baidu.mapapi.cloud.a:
    com.baidu.mapapi.cloud.CloudManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.common.AppTools -> com.baidu.mapapi.common.AppTools:
    java.lang.String getBaiduMapToken() -> getBaiduMapToken
com.baidu.mapapi.common.BaiduMapSDKException -> com.baidu.mapapi.common.BaiduMapSDKException:
com.baidu.mapapi.common.EnvironmentUtilities -> com.baidu.mapapi.common.EnvironmentUtilities:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    com.baidu.platform.comapi.util.e g -> g
    void initAppDirectory(android.content.Context) -> initAppDirectory
    java.lang.String getSDCardPath() -> getSDCardPath
    void setSDCardPath(java.lang.String) -> setSDCardPath
    java.lang.String getAppSDCardPath() -> getAppSDCardPath
    java.lang.String getAppCachePath() -> getAppCachePath
    java.lang.String getAppSecondCachePath() -> getAppSecondCachePath
    int getMapTmpStgMax() -> getMapTmpStgMax
    int getDomTmpStgMax() -> getDomTmpStgMax
    int getItsTmpStgMax() -> getItsTmpStgMax
com.baidu.mapapi.common.Logger -> com.baidu.mapapi.common.Logger:
    void logD(java.lang.String,java.lang.String) -> logD
    void logI(java.lang.String,java.lang.String) -> logI
    void logE(java.lang.String,java.lang.String) -> logE
    void logW(java.lang.String,java.lang.String) -> logW
    void logV(java.lang.String,java.lang.String) -> logV
com.baidu.mapapi.common.SysOSUtil -> com.baidu.mapapi.common.SysOSUtil:
    int getDensityDpi() -> getDensityDpi
    float getDensity() -> getDensity
    java.lang.String getModuleFileName() -> getModuleFileName
    java.lang.String getDeviceID() -> getDeviceID
    int getScreenSizeX() -> getScreenSizeX
    int getScreenSizeY() -> getScreenSizeY
com.baidu.mapapi.favorite.FavoriteManager -> com.baidu.mapapi.favorite.FavoriteManager:
    com.baidu.mapapi.favorite.FavoriteManager a -> a
    com.baidu.platform.comapi.favrite.a b -> b
    com.baidu.mapapi.favorite.FavoriteManager getInstance() -> getInstance
    void init() -> init
    int add(com.baidu.mapapi.favorite.FavoritePoiInfo) -> add
    com.baidu.mapapi.favorite.FavoritePoiInfo getFavPoi(java.lang.String) -> getFavPoi
    java.util.List getAllFavPois() -> getAllFavPois
    boolean deleteFavPoi(java.lang.String) -> deleteFavPoi
    boolean clearAllFavPois() -> clearAllFavPois
    boolean updateFavPoi(java.lang.String,com.baidu.mapapi.favorite.FavoritePoiInfo) -> updateFavPoi
    void destroy() -> destroy
com.baidu.mapapi.favorite.FavoritePoiInfo -> com.baidu.mapapi.favorite.FavoritePoiInfo:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    long g -> g
    com.baidu.mapapi.favorite.FavoritePoiInfo poiName(java.lang.String) -> poiName
    com.baidu.mapapi.favorite.FavoritePoiInfo pt(com.baidu.mapapi.model.LatLng) -> pt
    com.baidu.mapapi.favorite.FavoritePoiInfo addr(java.lang.String) -> addr
    com.baidu.mapapi.favorite.FavoritePoiInfo cityName(java.lang.String) -> cityName
    com.baidu.mapapi.favorite.FavoritePoiInfo uid(java.lang.String) -> uid
    java.lang.String getID() -> getID
    java.lang.String getPoiName() -> getPoiName
    com.baidu.mapapi.model.LatLng getPt() -> getPt
    java.lang.String getAddr() -> getAddr
    java.lang.String getUid() -> getUid
    java.lang.String getCityName() -> getCityName
    long getTimeStamp() -> getTimeStamp
com.baidu.mapapi.favorite.a -> com.baidu.mapapi.favorite.a:
    com.baidu.platform.comapi.favrite.FavSyncPoi a(com.baidu.mapapi.favorite.FavoritePoiInfo) -> a
    com.baidu.mapapi.favorite.FavoritePoiInfo a(com.baidu.platform.comapi.favrite.FavSyncPoi) -> a
    com.baidu.mapapi.favorite.FavoritePoiInfo a(org.json.JSONObject) -> a
com.baidu.mapapi.map.Arc -> com.baidu.mapapi.map.Arc:
    java.lang.String f -> f
    int a -> a
    int b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.model.LatLng d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int getColor() -> getColor
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getMiddlePoint() -> getMiddlePoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    int getWidth() -> getWidth
    void setColor(int) -> setColor
    void setPoints(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> setPoints
    void setWidth(int) -> setWidth
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.ArcOptions -> com.baidu.mapapi.map.ArcOptions:
    java.lang.String d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.model.LatLng g -> g
    com.baidu.mapapi.model.LatLng h -> h
    com.baidu.mapapi.model.LatLng i -> i
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getColor() -> getColor
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getMiddlePoint() -> getMiddlePoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    int getWidth() -> getWidth
    com.baidu.mapapi.map.ArcOptions color(int) -> color
    com.baidu.mapapi.map.ArcOptions points(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> points
    com.baidu.mapapi.map.ArcOptions width(int) -> width
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.ArcOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.ArcOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.ArcOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.BaiduMap -> com.baidu.mapapi.map.BaiduMap:
    int MAP_TYPE_NORMAL -> MAP_TYPE_NORMAL
    int MAP_TYPE_SATELLITE -> MAP_TYPE_SATELLITE
    java.lang.String d -> d
    com.baidu.mapapi.map.Projection e -> e
    com.baidu.mapapi.map.UiSettings f -> f
    com.baidu.platform.comapi.map.g g -> g
    com.baidu.platform.comapi.map.c h -> h
    com.baidu.platform.comapi.map.C i -> i
    java.util.List j -> j
    java.util.List k -> k
    com.baidu.mapapi.map.Overlay$a l -> l
    com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener m -> m
    com.baidu.mapapi.map.BaiduMap$OnMapTouchListener n -> n
    com.baidu.mapapi.map.BaiduMap$OnMapClickListener o -> o
    com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback p -> p
    com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener q -> q
    com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener r -> r
    java.util.concurrent.CopyOnWriteArrayList s -> s
    java.util.concurrent.CopyOnWriteArrayList t -> t
    com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener u -> u
    com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener v -> v
    com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback w -> w
    com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback x -> x
    com.baidu.mapapi.map.TileOverlay y -> y
    com.baidu.mapapi.map.HeatMap z -> z
    java.util.concurrent.locks.Lock A -> A
    java.util.concurrent.locks.Lock B -> B
    com.baidu.mapapi.map.InfoWindow C -> C
    com.baidu.mapapi.map.Marker D -> D
    android.view.View E -> E
    com.baidu.mapapi.map.Marker F -> F
    com.baidu.mapapi.map.MyLocationData G -> G
    com.baidu.mapapi.map.MyLocationConfiguration H -> H
    com.baidu.mapapi.map.MapView a -> a
    com.baidu.mapapi.map.TextureMapView b -> b
    com.baidu.platform.comapi.map.A c -> c
    boolean I -> I
    void c() -> c
    com.baidu.mapapi.map.Overlay addOverlay(com.baidu.mapapi.map.OverlayOptions) -> addOverlay
    void clear() -> clear
    void setMapStatus(com.baidu.mapapi.map.MapStatusUpdate) -> setMapStatus
    com.baidu.mapapi.map.MapStatus getMapStatus() -> getMapStatus
    void animateMapStatus(com.baidu.mapapi.map.MapStatusUpdate,int) -> animateMapStatus
    void animateMapStatus(com.baidu.mapapi.map.MapStatusUpdate) -> animateMapStatus
    com.baidu.platform.comapi.map.B a(com.baidu.mapapi.map.MapStatusUpdate) -> a
    void setMapType(int) -> setMapType
    int getMapType() -> getMapType
    float getMaxZoomLevel() -> getMaxZoomLevel
    void setMaxAndMinZoomLevel(float,float) -> setMaxAndMinZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    com.baidu.mapapi.map.Projection getProjection() -> getProjection
    com.baidu.mapapi.map.UiSettings getUiSettings() -> getUiSettings
    void setBuildingsEnabled(boolean) -> setBuildingsEnabled
    boolean isBuildingsEnabled() -> isBuildingsEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationData(com.baidu.mapapi.map.MyLocationData) -> setMyLocationData
    com.baidu.mapapi.map.MyLocationData getLocationData() -> getLocationData
    void setMyLocationConfigeration(com.baidu.mapapi.map.MyLocationConfiguration) -> setMyLocationConfigeration
    com.baidu.mapapi.map.MyLocationConfiguration getLocationConfigeration() -> getLocationConfigeration
    void a(com.baidu.mapapi.map.MyLocationData,com.baidu.mapapi.map.MyLocationConfiguration) -> a
    void addHeatMap(com.baidu.mapapi.map.HeatMap) -> addHeatMap
    void a(com.baidu.mapapi.map.HeatMap) -> a
    void a() -> a
    void setBaiduHeatMapEnabled(boolean) -> setBaiduHeatMapEnabled
    boolean isBaiduHeatMapEnabled() -> isBaiduHeatMapEnabled
    boolean isSupportBaiduHeatMap() -> isSupportBaiduHeatMap
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    boolean isTrafficEnabled() -> isTrafficEnabled
    void showMapPoi(boolean) -> showMapPoi
    void snapshot(com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback) -> snapshot
    void snapshotScope(android.graphics.Rect,com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback) -> snapshotScope
    void showInfoWindow(com.baidu.mapapi.map.InfoWindow) -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    void setOnMapStatusChangeListener(com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener) -> setOnMapStatusChangeListener
    void setOnMapTouchListener(com.baidu.mapapi.map.BaiduMap$OnMapTouchListener) -> setOnMapTouchListener
    void setOnMapClickListener(com.baidu.mapapi.map.BaiduMap$OnMapClickListener) -> setOnMapClickListener
    void setOnMapLoadedCallback(com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback) -> setOnMapLoadedCallback
    void setOnMapDoubleClickListener(com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener) -> setOnMapDoubleClickListener
    void setOnMapLongClickListener(com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener) -> setOnMapLongClickListener
    void setOnPolylineClickListener(com.baidu.mapapi.map.BaiduMap$OnPolylineClickListener) -> setOnPolylineClickListener
    void setOnMarkerClickListener(com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener) -> setOnMarkerClickListener
    void setOnMarkerDragListener(com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener) -> setOnMarkerDragListener
    void setOnMyLocationClickListener(com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener) -> setOnMyLocationClickListener
    void setOnMapDrawFrameCallback(com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback) -> setOnMapDrawFrameCallback
    void removeMarkerClickListener(com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener) -> removeMarkerClickListener
    com.baidu.mapapi.map.TileOverlay addTileLayer(com.baidu.mapapi.map.TileOverlayOptions) -> addTileLayer
    boolean b() -> b
    void a(com.baidu.mapapi.map.TileOverlay) -> a
    java.util.List a(com.baidu.mapapi.map.BaiduMap) -> a
    com.baidu.platform.comapi.map.c b(com.baidu.mapapi.map.BaiduMap) -> b
    java.util.List c(com.baidu.mapapi.map.BaiduMap) -> c
    android.view.View d(com.baidu.mapapi.map.BaiduMap) -> d
    com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener e(com.baidu.mapapi.map.BaiduMap) -> e
    com.baidu.mapapi.map.BaiduMap$OnMapTouchListener f(com.baidu.mapapi.map.BaiduMap) -> f
    com.baidu.mapapi.map.BaiduMap$OnMapClickListener g(com.baidu.mapapi.map.BaiduMap) -> g
    com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener h(com.baidu.mapapi.map.BaiduMap) -> h
    com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener i(com.baidu.mapapi.map.BaiduMap) -> i
    com.baidu.mapapi.map.Projection a(com.baidu.mapapi.map.BaiduMap,com.baidu.mapapi.map.Projection) -> a
    boolean a(com.baidu.mapapi.map.BaiduMap,boolean) -> a
    com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback j(com.baidu.mapapi.map.BaiduMap) -> j
    com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback k(com.baidu.mapapi.map.BaiduMap) -> k
    com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener l(com.baidu.mapapi.map.BaiduMap) -> l
    com.baidu.mapapi.map.InfoWindow m(com.baidu.mapapi.map.BaiduMap) -> m
    com.baidu.mapapi.map.Marker n(com.baidu.mapapi.map.BaiduMap) -> n
    java.util.concurrent.CopyOnWriteArrayList o(com.baidu.mapapi.map.BaiduMap) -> o
    java.util.concurrent.CopyOnWriteArrayList p(com.baidu.mapapi.map.BaiduMap) -> p
    com.baidu.mapapi.map.Marker q(com.baidu.mapapi.map.BaiduMap) -> q
    com.baidu.mapapi.map.Projection r(com.baidu.mapapi.map.BaiduMap) -> r
    com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener s(com.baidu.mapapi.map.BaiduMap) -> s
    com.baidu.mapapi.map.Marker a(com.baidu.mapapi.map.BaiduMap,com.baidu.mapapi.map.Marker) -> a
    java.util.concurrent.locks.Lock t(com.baidu.mapapi.map.BaiduMap) -> t
    com.baidu.mapapi.map.HeatMap u(com.baidu.mapapi.map.BaiduMap) -> u
    com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback v(com.baidu.mapapi.map.BaiduMap) -> v
    java.util.concurrent.locks.Lock w(com.baidu.mapapi.map.BaiduMap) -> w
    com.baidu.mapapi.map.TileOverlay x(com.baidu.mapapi.map.BaiduMap) -> x
com.baidu.mapapi.map.BaiduMap$1 -> com.baidu.mapapi.map.BaiduMap$1:
    int[] a -> a
    int[] b -> b
com.baidu.mapapi.map.BaiduMap$OnMapClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapClickListener:
    void onMapClick(com.baidu.mapapi.model.LatLng) -> onMapClick
    boolean onMapPoiClick(com.baidu.mapapi.map.MapPoi) -> onMapPoiClick
com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener:
    void onMapDoubleClick(com.baidu.mapapi.model.LatLng) -> onMapDoubleClick
com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback -> com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback:
    void onMapDrawFrame(javax.microedition.khronos.opengles.GL10,com.baidu.mapapi.map.MapStatus) -> onMapDrawFrame
com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback -> com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback:
    void onMapLoaded() -> onMapLoaded
com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener:
    void onMapLongClick(com.baidu.mapapi.model.LatLng) -> onMapLongClick
com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener -> com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener:
    void onMapStatusChangeStart(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeStart
    void onMapStatusChange(com.baidu.mapapi.map.MapStatus) -> onMapStatusChange
    void onMapStatusChangeFinish(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeFinish
com.baidu.mapapi.map.BaiduMap$OnMapTouchListener -> com.baidu.mapapi.map.BaiduMap$OnMapTouchListener:
    void onTouch(android.view.MotionEvent) -> onTouch
com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener -> com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener:
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener -> com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener:
    void onMarkerDrag(com.baidu.mapapi.map.Marker) -> onMarkerDrag
    void onMarkerDragEnd(com.baidu.mapapi.map.Marker) -> onMarkerDragEnd
    void onMarkerDragStart(com.baidu.mapapi.map.Marker) -> onMarkerDragStart
com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener -> com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener:
    boolean onMyLocationClick() -> onMyLocationClick
com.baidu.mapapi.map.BaiduMap$OnPolylineClickListener -> com.baidu.mapapi.map.BaiduMap$OnPolylineClickListener:
    boolean onPolylineClick(com.baidu.mapapi.map.Polyline) -> onPolylineClick
com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback -> com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback:
    void onSnapshotReady(android.graphics.Bitmap) -> onSnapshotReady
com.baidu.mapapi.map.BaiduMapOptions -> com.baidu.mapapi.map.BaiduMapOptions:
    com.baidu.mapapi.map.MapStatus a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    com.baidu.mapapi.map.BaiduMapOptions mapStatus(com.baidu.mapapi.map.MapStatus) -> mapStatus
    com.baidu.mapapi.map.BaiduMapOptions compassEnabled(boolean) -> compassEnabled
    com.baidu.mapapi.map.BaiduMapOptions mapType(int) -> mapType
    com.baidu.mapapi.map.BaiduMapOptions rotateGesturesEnabled(boolean) -> rotateGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions scrollGesturesEnabled(boolean) -> scrollGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions overlookingGesturesEnabled(boolean) -> overlookingGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions zoomControlsEnabled(boolean) -> zoomControlsEnabled
    com.baidu.mapapi.map.BaiduMapOptions zoomGesturesEnabled(boolean) -> zoomGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions scaleControlEnabled(boolean) -> scaleControlEnabled
    com.baidu.platform.comapi.map.z a() -> a
com.baidu.mapapi.map.BitmapDescriptor -> com.baidu.mapapi.map.BitmapDescriptor:
    android.graphics.Bitmap a -> a
    android.os.Bundle b -> b
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    byte[] a() -> a
    android.os.Bundle b() -> b
    void recycle() -> recycle
com.baidu.mapapi.map.BitmapDescriptorFactory -> com.baidu.mapapi.map.BitmapDescriptorFactory:
    com.baidu.mapapi.map.BitmapDescriptor fromAsset(java.lang.String) -> fromAsset
    com.baidu.mapapi.map.BitmapDescriptor fromAssetWithDpi(java.lang.String) -> fromAssetWithDpi
    com.baidu.mapapi.map.BitmapDescriptor fromBitmap(android.graphics.Bitmap) -> fromBitmap
    com.baidu.mapapi.map.BitmapDescriptor fromFile(java.lang.String) -> fromFile
    com.baidu.mapapi.map.BitmapDescriptor fromPath(java.lang.String) -> fromPath
    com.baidu.mapapi.map.BitmapDescriptor fromResource(int) -> fromResource
    com.baidu.mapapi.map.BitmapDescriptor fromView(android.view.View) -> fromView
com.baidu.mapapi.map.Circle -> com.baidu.mapapi.map.Circle:
    com.baidu.mapapi.model.LatLng a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.map.Stroke d -> d
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getFillColor() -> getFillColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    void setCenter(com.baidu.mapapi.model.LatLng) -> setCenter
    void setFillColor(int) -> setFillColor
    void setRadius(int) -> setRadius
    void setStroke(com.baidu.mapapi.map.Stroke) -> setStroke
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.CircleOptions -> com.baidu.mapapi.map.CircleOptions:
    java.lang.String d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    com.baidu.mapapi.map.Stroke h -> h
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getFillColor() -> getFillColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    com.baidu.mapapi.map.CircleOptions center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.map.CircleOptions fillColor(int) -> fillColor
    com.baidu.mapapi.map.CircleOptions radius(int) -> radius
    com.baidu.mapapi.map.CircleOptions stroke(com.baidu.mapapi.map.Stroke) -> stroke
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.CircleOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.CircleOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.CircleOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Dot -> com.baidu.mapapi.map.Dot:
    com.baidu.mapapi.model.LatLng a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getColor() -> getColor
    int getRadius() -> getRadius
    void setCenter(com.baidu.mapapi.model.LatLng) -> setCenter
    void setColor(int) -> setColor
    void setRadius(int) -> setRadius
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.DotOptions -> com.baidu.mapapi.map.DotOptions:
    com.baidu.mapapi.model.LatLng d -> d
    int e -> e
    int f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getColor() -> getColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.DotOptions center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.map.DotOptions color(int) -> color
    com.baidu.mapapi.map.DotOptions radius(int) -> radius
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.DotOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.DotOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.DotOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.FileTileProvider -> com.baidu.mapapi.map.FileTileProvider:
    com.baidu.mapapi.map.Tile getTile(int,int,int) -> getTile
com.baidu.mapapi.map.Gradient -> com.baidu.mapapi.map.Gradient:
    int a -> a
    int[] b -> b
    float[] c -> c
    java.util.HashMap a() -> a
    int[] a(double) -> a
    int a(int,int,float) -> a
com.baidu.mapapi.map.Gradient$1 -> com.baidu.mapapi.map.Gradient$1:
com.baidu.mapapi.map.Gradient$a -> com.baidu.mapapi.map.Gradient$a:
    int b -> b
    int c -> c
    float d -> d
    com.baidu.mapapi.map.Gradient a -> a
    float a(com.baidu.mapapi.map.Gradient$a) -> a
    int b(com.baidu.mapapi.map.Gradient$a) -> b
    int c(com.baidu.mapapi.map.Gradient$a) -> c
com.baidu.mapapi.map.GroundOverlay -> com.baidu.mapapi.map.GroundOverlay:
    java.lang.String j -> j
    int a -> a
    com.baidu.mapapi.map.BitmapDescriptor b -> b
    com.baidu.mapapi.model.LatLng c -> c
    double d -> d
    double e -> e
    float f -> f
    float g -> g
    com.baidu.mapapi.model.LatLngBounds h -> h
    float i -> i
    void setImage(com.baidu.mapapi.map.BitmapDescriptor) -> setImage
    com.baidu.mapapi.map.BitmapDescriptor getImage() -> getImage
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void setDimensions(int) -> setDimensions
    void setDimensions(int,int) -> setDimensions
    double getWidth() -> getWidth
    double getHeight() -> getHeight
    void setAnchor(float,float) -> setAnchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    void setPositionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> setPositionFromBounds
    com.baidu.mapapi.model.LatLngBounds getBounds() -> getBounds
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.GroundOverlayOptions -> com.baidu.mapapi.map.GroundOverlayOptions:
    com.baidu.mapapi.map.BitmapDescriptor d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    float h -> h
    float i -> i
    com.baidu.mapapi.model.LatLngBounds j -> j
    float k -> k
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.map.GroundOverlayOptions image(com.baidu.mapapi.map.BitmapDescriptor) -> image
    com.baidu.mapapi.map.BitmapDescriptor getImage() -> getImage
    com.baidu.mapapi.map.GroundOverlayOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    com.baidu.mapapi.map.GroundOverlayOptions dimensions(int) -> dimensions
    com.baidu.mapapi.map.GroundOverlayOptions dimensions(int,int) -> dimensions
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.baidu.mapapi.map.GroundOverlayOptions anchor(float,float) -> anchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    com.baidu.mapapi.map.GroundOverlayOptions positionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> positionFromBounds
    com.baidu.mapapi.model.LatLngBounds getBounds() -> getBounds
    com.baidu.mapapi.map.GroundOverlayOptions transparency(float) -> transparency
    float getTransparency() -> getTransparency
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.GroundOverlayOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.GroundOverlayOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.GroundOverlayOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.HeatMap -> com.baidu.mapapi.map.HeatMap:
    java.lang.String b -> b
    android.util.SparseIntArray c -> c
    int[] d -> d
    float[] e -> e
    com.baidu.mapapi.map.j f -> f
    java.util.Collection g -> g
    int h -> h
    com.baidu.mapapi.map.Gradient i -> i
    double j -> j
    com.baidu.mapapi.map.e k -> k
    int[] l -> l
    double[] m -> m
    double[] n -> n
    java.util.HashMap o -> o
    java.util.concurrent.ExecutorService p -> p
    java.util.HashSet q -> q
    com.baidu.mapapi.map.BaiduMap a -> a
    int DEFAULT_RADIUS -> DEFAULT_RADIUS
    double DEFAULT_OPACITY -> DEFAULT_OPACITY
    com.baidu.mapapi.map.Gradient DEFAULT_GRADIENT -> DEFAULT_GRADIENT
    int r -> r
    void removeHeatMap() -> removeHeatMap
    void b(java.util.Collection) -> b
    java.util.Collection c(java.util.Collection) -> c
    com.baidu.mapapi.map.Tile a(int,int,int) -> a
    boolean a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    com.baidu.mapapi.map.Tile c(java.lang.String) -> c
    void a(java.lang.String,com.baidu.mapapi.map.Tile) -> a
    void d() -> d
    void b() -> b
    void c() -> c
    void b(int,int,int) -> b
    void a(com.baidu.mapapi.map.Gradient) -> a
    double[] a(int) -> a
    com.baidu.mapapi.map.Tile a(android.graphics.Bitmap) -> a
    com.baidu.mapapi.map.e d(java.util.Collection) -> d
    double[] a(int,double) -> a
    double[][] a(double[][],double[]) -> a
    android.graphics.Bitmap a(double[][],int[],double) -> a
    double a(java.util.Collection,com.baidu.mapapi.map.e,int,int) -> a
    java.util.Collection a(java.util.Collection) -> a
    void a(com.baidu.mapapi.map.HeatMap,int,int,int) -> a
com.baidu.mapapi.map.HeatMap$Builder -> com.baidu.mapapi.map.HeatMap$Builder:
    java.util.Collection a -> a
    int b -> b
    com.baidu.mapapi.map.Gradient c -> c
    double d -> d
    com.baidu.mapapi.map.HeatMap$Builder data(java.util.Collection) -> data
    com.baidu.mapapi.map.HeatMap$Builder weightedData(java.util.Collection) -> weightedData
    com.baidu.mapapi.map.HeatMap$Builder radius(int) -> radius
    com.baidu.mapapi.map.HeatMap$Builder gradient(com.baidu.mapapi.map.Gradient) -> gradient
    com.baidu.mapapi.map.HeatMap$Builder opacity(double) -> opacity
    com.baidu.mapapi.map.HeatMap build() -> build
    java.util.Collection a(com.baidu.mapapi.map.HeatMap$Builder) -> a
    int b(com.baidu.mapapi.map.HeatMap$Builder) -> b
    com.baidu.mapapi.map.Gradient c(com.baidu.mapapi.map.HeatMap$Builder) -> c
    double d(com.baidu.mapapi.map.HeatMap$Builder) -> d
com.baidu.mapapi.map.InfoWindow -> com.baidu.mapapi.map.InfoWindow:
    com.baidu.mapapi.map.BitmapDescriptor a -> a
    android.view.View b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener d -> d
    int e -> e
com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener -> com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener:
    void onInfoWindowClick() -> onInfoWindowClick
com.baidu.mapapi.map.MapFragment -> com.baidu.mapapi.map.MapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.MapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.MapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.MapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    com.baidu.mapapi.map.MapView getMapView() -> getMapView
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.MapPoi -> com.baidu.mapapi.map.MapPoi:
    java.lang.String c -> c
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    java.lang.String getName() -> getName
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.map.MapStatus -> com.baidu.mapapi.map.MapStatus:
    float rotate -> rotate
    com.baidu.mapapi.model.LatLng target -> target
    float overlook -> overlook
    float zoom -> zoom
    android.graphics.Point targetScreen -> targetScreen
    com.baidu.mapapi.model.LatLngBounds bound -> bound
    double b -> b
    double c -> c
    com.baidu.platform.comapi.map.B a -> a
    double a() -> a
    double b() -> b
    com.baidu.mapapi.map.MapStatus a(com.baidu.platform.comapi.map.B) -> a
    com.baidu.platform.comapi.map.B c() -> c
    com.baidu.platform.comapi.map.B b(com.baidu.platform.comapi.map.B) -> b
    java.lang.String toString() -> toString
com.baidu.mapapi.map.MapStatus$Builder -> com.baidu.mapapi.map.MapStatus$Builder:
    float a -> a
    com.baidu.mapapi.model.LatLng b -> b
    float c -> c
    float d -> d
    android.graphics.Point e -> e
    com.baidu.mapapi.model.LatLngBounds f -> f
    double g -> g
    double h -> h
    com.baidu.mapapi.map.MapStatus$Builder rotate(float) -> rotate
    com.baidu.mapapi.map.MapStatus$Builder target(com.baidu.mapapi.model.LatLng) -> target
    com.baidu.mapapi.map.MapStatus$Builder overlook(float) -> overlook
    com.baidu.mapapi.map.MapStatus$Builder zoom(float) -> zoom
    com.baidu.mapapi.map.MapStatus$Builder targetScreen(android.graphics.Point) -> targetScreen
    com.baidu.mapapi.map.MapStatus build() -> build
com.baidu.mapapi.map.MapStatusUpdate -> com.baidu.mapapi.map.MapStatusUpdate:
    java.lang.String l -> l
    int a -> a
    com.baidu.mapapi.map.MapStatus b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.model.LatLngBounds d -> d
    int e -> e
    int f -> f
    float g -> g
    int h -> h
    int i -> i
    float j -> j
    android.graphics.Point k -> k
    com.baidu.mapapi.map.MapStatus a(com.baidu.platform.comapi.map.c,com.baidu.mapapi.map.MapStatus) -> a
com.baidu.mapapi.map.MapStatusUpdateFactory -> com.baidu.mapapi.map.MapStatusUpdateFactory:
    com.baidu.mapapi.map.MapStatusUpdate newMapStatus(com.baidu.mapapi.map.MapStatus) -> newMapStatus
    com.baidu.mapapi.map.MapStatusUpdate newLatLng(com.baidu.mapapi.model.LatLng) -> newLatLng
    com.baidu.mapapi.map.MapStatusUpdate newLatLngBounds(com.baidu.mapapi.model.LatLngBounds) -> newLatLngBounds
    com.baidu.mapapi.map.MapStatusUpdate newLatLngBounds(com.baidu.mapapi.model.LatLngBounds,int,int) -> newLatLngBounds
    com.baidu.mapapi.map.MapStatusUpdate newLatLngZoom(com.baidu.mapapi.model.LatLng,float) -> newLatLngZoom
    com.baidu.mapapi.map.MapStatusUpdate scrollBy(int,int) -> scrollBy
    com.baidu.mapapi.map.MapStatusUpdate zoomBy(float) -> zoomBy
    com.baidu.mapapi.map.MapStatusUpdate zoomBy(float,android.graphics.Point) -> zoomBy
    com.baidu.mapapi.map.MapStatusUpdate zoomIn() -> zoomIn
    com.baidu.mapapi.map.MapStatusUpdate zoomOut() -> zoomOut
    com.baidu.mapapi.map.MapStatusUpdate zoomTo(float) -> zoomTo
com.baidu.mapapi.map.MapView -> com.baidu.mapapi.map.MapView:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.g b -> b
    com.baidu.mapapi.map.BaiduMap c -> c
    android.widget.ImageView d -> d
    android.graphics.Bitmap e -> e
    android.widget.ZoomControls f -> f
    android.graphics.Point g -> g
    android.graphics.Point h -> h
    android.widget.RelativeLayout i -> i
    android.widget.TextView j -> j
    android.widget.TextView k -> k
    android.widget.ImageView l -> l
    android.util.SparseArray m -> m
    float n -> n
    com.baidu.platform.comapi.map.i o -> o
    void a(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> a
    void b(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void b() -> b
    void c(android.content.Context) -> c
    com.baidu.mapapi.map.BaiduMap getMap() -> getMap
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void onLayout(boolean,int,int,int,int) -> onLayout
    void a(android.view.View) -> a
    void showZoomControls(boolean) -> showZoomControls
    void setZoomControlsPosition(android.graphics.Point) -> setZoomControlsPosition
    void showScaleControl(boolean) -> showScaleControl
    void setScaleControlPosition(android.graphics.Point) -> setScaleControlPosition
    com.baidu.platform.comapi.map.g a(com.baidu.mapapi.map.MapView) -> a
    float b(com.baidu.mapapi.map.MapView) -> b
    android.util.SparseArray a() -> a
    android.widget.ImageView c(com.baidu.mapapi.map.MapView) -> c
    android.widget.TextView d(com.baidu.mapapi.map.MapView) -> d
    android.widget.TextView e(com.baidu.mapapi.map.MapView) -> e
    float a(com.baidu.mapapi.map.MapView,float) -> a
    void f(com.baidu.mapapi.map.MapView) -> f
com.baidu.mapapi.map.MapViewLayoutParams -> com.baidu.mapapi.map.MapViewLayoutParams:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    com.baidu.mapapi.model.LatLng a -> a
    android.graphics.Point b -> b
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode c -> c
    float d -> d
    float e -> e
    int f -> f
com.baidu.mapapi.map.MapViewLayoutParams$Builder -> com.baidu.mapapi.map.MapViewLayoutParams$Builder:
    int a -> a
    int b -> b
    com.baidu.mapapi.model.LatLng c -> c
    android.graphics.Point d -> d
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode e -> e
    int f -> f
    int g -> g
    int h -> h
    com.baidu.mapapi.map.MapViewLayoutParams build() -> build
    com.baidu.mapapi.map.MapViewLayoutParams$Builder width(int) -> width
    com.baidu.mapapi.map.MapViewLayoutParams$Builder height(int) -> height
    com.baidu.mapapi.map.MapViewLayoutParams$Builder align(int,int) -> align
    com.baidu.mapapi.map.MapViewLayoutParams$Builder position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.map.MapViewLayoutParams$Builder point(android.graphics.Point) -> point
    com.baidu.mapapi.map.MapViewLayoutParams$Builder layoutMode(com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode) -> layoutMode
    com.baidu.mapapi.map.MapViewLayoutParams$Builder yOffset(int) -> yOffset
com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode -> com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode:
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode mapMode -> mapMode
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode absoluteMode -> absoluteMode
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode[] $VALUES -> $VALUES
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode[] values() -> values
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.Marker -> com.baidu.mapapi.map.Marker:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.map.BitmapDescriptor b -> b
    float c -> c
    float d -> d
    boolean e -> e
    boolean f -> f
    float g -> g
    java.lang.String h -> h
    int i -> i
    boolean j -> j
    boolean k -> k
    float l -> l
    int m -> m
    java.util.ArrayList n -> n
    int o -> o
    void setIcon(com.baidu.mapapi.map.BitmapDescriptor) -> setIcon
    com.baidu.mapapi.map.BitmapDescriptor getIcon() -> getIcon
    void setIcons(java.util.ArrayList) -> setIcons
    java.util.ArrayList getIcons() -> getIcons
    void setPeriod(int) -> setPeriod
    void setAlpha(float) -> setAlpha
    float getAlpha() -> getAlpha
    int getPeriod() -> getPeriod
    void setToTop() -> setToTop
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void setPerspective(boolean) -> setPerspective
    boolean isPerspective() -> isPerspective
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    boolean isFlat() -> isFlat
    void setFlat(boolean) -> setFlat
    void setAnchor(float,float) -> setAnchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    void setRotate(float) -> setRotate
    float getRotate() -> getRotate
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    android.os.Bundle a(android.os.Bundle) -> a
    void a(java.util.ArrayList,android.os.Bundle) -> a
com.baidu.mapapi.map.MarkerOptions -> com.baidu.mapapi.map.MarkerOptions:
    com.baidu.mapapi.model.LatLng d -> d
    com.baidu.mapapi.map.BitmapDescriptor e -> e
    float f -> f
    float g -> g
    boolean h -> h
    boolean i -> i
    float j -> j
    java.lang.String k -> k
    int l -> l
    boolean m -> m
    java.util.ArrayList n -> n
    int o -> o
    float p -> p
    int q -> q
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.map.MarkerOptions icon(com.baidu.mapapi.map.BitmapDescriptor) -> icon
    com.baidu.mapapi.map.MarkerOptions animateType(com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType) -> animateType
    com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType getAnimateType() -> getAnimateType
    com.baidu.mapapi.map.MarkerOptions alpha(float) -> alpha
    float getAlpha() -> getAlpha
    com.baidu.mapapi.map.BitmapDescriptor getIcon() -> getIcon
    com.baidu.mapapi.map.MarkerOptions icons(java.util.ArrayList) -> icons
    java.util.ArrayList getIcons() -> getIcons
    com.baidu.mapapi.map.MarkerOptions period(int) -> period
    int getPeriod() -> getPeriod
    com.baidu.mapapi.map.MarkerOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    com.baidu.mapapi.map.MarkerOptions perspective(boolean) -> perspective
    boolean isPerspective() -> isPerspective
    com.baidu.mapapi.map.MarkerOptions a(int) -> a
    com.baidu.mapapi.map.MarkerOptions draggable(boolean) -> draggable
    boolean isFlat() -> isFlat
    com.baidu.mapapi.map.MarkerOptions flat(boolean) -> flat
    boolean isDraggable() -> isDraggable
    com.baidu.mapapi.map.MarkerOptions anchor(float,float) -> anchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    com.baidu.mapapi.map.MarkerOptions rotate(float) -> rotate
    float getRotate() -> getRotate
    com.baidu.mapapi.map.MarkerOptions title(java.lang.String) -> title
    java.lang.String getTitle() -> getTitle
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.MarkerOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.MarkerOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.MarkerOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType -> com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType:
    com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType none -> none
    com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType drop -> drop
    com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType grow -> grow
    com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType[] a -> a
    com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType[] values() -> values
    com.baidu.mapapi.map.MarkerOptions$MarkerAnimateType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.MyLocationConfiguration -> com.baidu.mapapi.map.MyLocationConfiguration:
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode locationMode -> locationMode
    boolean enableDirection -> enableDirection
    com.baidu.mapapi.map.BitmapDescriptor customMarker -> customMarker
com.baidu.mapapi.map.MyLocationConfiguration$LocationMode -> com.baidu.mapapi.map.MyLocationConfiguration$LocationMode:
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode NORMAL -> NORMAL
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode FOLLOWING -> FOLLOWING
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode COMPASS -> COMPASS
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode[] a -> a
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode[] values() -> values
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.MyLocationData -> com.baidu.mapapi.map.MyLocationData:
    double latitude -> latitude
    double longitude -> longitude
    float speed -> speed
    float direction -> direction
    float accuracy -> accuracy
    int satellitesNum -> satellitesNum
com.baidu.mapapi.map.MyLocationData$Builder -> com.baidu.mapapi.map.MyLocationData$Builder:
    double a -> a
    double b -> b
    float c -> c
    float d -> d
    float e -> e
    int f -> f
    com.baidu.mapapi.map.MyLocationData$Builder latitude(double) -> latitude
    com.baidu.mapapi.map.MyLocationData$Builder longitude(double) -> longitude
    com.baidu.mapapi.map.MyLocationData$Builder speed(float) -> speed
    com.baidu.mapapi.map.MyLocationData$Builder direction(float) -> direction
    com.baidu.mapapi.map.MyLocationData$Builder accuracy(float) -> accuracy
    com.baidu.mapapi.map.MyLocationData$Builder satellitesNum(int) -> satellitesNum
    com.baidu.mapapi.map.MyLocationData build() -> build
com.baidu.mapapi.map.Overlay -> com.baidu.mapapi.map.Overlay:
    java.lang.String p -> p
    com.baidu.platform.comapi.map.f q -> q
    int r -> r
    boolean s -> s
    android.os.Bundle t -> t
    com.baidu.mapapi.map.Overlay$a listener -> listener
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    int getZIndex() -> getZIndex
    void setZIndex(int) -> setZIndex
    android.os.Bundle getExtraInfo() -> getExtraInfo
    void setExtraInfo(android.os.Bundle) -> setExtraInfo
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a() -> a
    void remove() -> remove
    void a(int,android.os.Bundle) -> a
    void a(java.util.List,android.os.Bundle) -> a
com.baidu.mapapi.map.Overlay$a -> com.baidu.mapapi.map.Overlay$a:
    void a(com.baidu.mapapi.map.Overlay) -> a
    void b(com.baidu.mapapi.map.Overlay) -> b
com.baidu.mapapi.map.OverlayOptions -> com.baidu.mapapi.map.OverlayOptions:
    com.baidu.mapapi.map.Overlay a() -> a
com.baidu.mapapi.map.Polygon -> com.baidu.mapapi.map.Polygon:
    com.baidu.mapapi.map.Stroke a -> a
    int b -> b
    java.util.List c -> c
    int getFillColor() -> getFillColor
    java.util.List getPoints() -> getPoints
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    void setFillColor(int) -> setFillColor
    void setPoints(java.util.List) -> setPoints
    void setStroke(com.baidu.mapapi.map.Stroke) -> setStroke
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.PolygonOptions -> com.baidu.mapapi.map.PolygonOptions:
    com.baidu.mapapi.map.Stroke d -> d
    int e -> e
    java.util.List f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getFillColor() -> getFillColor
    java.util.List getPoints() -> getPoints
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    com.baidu.mapapi.map.PolygonOptions fillColor(int) -> fillColor
    com.baidu.mapapi.map.PolygonOptions points(java.util.List) -> points
    com.baidu.mapapi.map.PolygonOptions stroke(com.baidu.mapapi.map.Stroke) -> stroke
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.PolygonOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.PolygonOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.PolygonOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Polyline -> com.baidu.mapapi.map.Polyline:
    int a -> a
    java.util.List b -> b
    int[] c -> c
    int[] d -> d
    int e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    com.baidu.mapapi.map.BitmapDescriptor i -> i
    java.util.List j -> j
    int getColor() -> getColor
    java.util.List getPoints() -> getPoints
    int getWidth() -> getWidth
    void setColor(int) -> setColor
    void setDottedLine(boolean) -> setDottedLine
    void setFocus(boolean) -> setFocus
    boolean isFocus() -> isFocus
    boolean isDottedLine() -> isDottedLine
    void setPoints(java.util.List) -> setPoints
    void setWidth(int) -> setWidth
    void a(int[],android.os.Bundle) -> a
    void b(int[],android.os.Bundle) -> b
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a(boolean) -> a
    android.os.Bundle b(boolean) -> b
com.baidu.mapapi.map.PolylineOptions -> com.baidu.mapapi.map.PolylineOptions:
    int e -> e
    java.util.List f -> f
    java.util.List g -> g
    java.util.List h -> h
    int i -> i
    com.baidu.mapapi.map.BitmapDescriptor j -> j
    java.util.List k -> k
    boolean l -> l
    boolean m -> m
    int a -> a
    boolean b -> b
    boolean c -> c
    android.os.Bundle d -> d
    int getColor() -> getColor
    java.util.List getPoints() -> getPoints
    java.util.List getTextureIndexs() -> getTextureIndexs
    int getWidth() -> getWidth
    com.baidu.mapapi.map.PolylineOptions color(int) -> color
    com.baidu.mapapi.map.PolylineOptions keepScale(boolean) -> keepScale
    com.baidu.mapapi.map.PolylineOptions customTexture(com.baidu.mapapi.map.BitmapDescriptor) -> customTexture
    com.baidu.mapapi.map.PolylineOptions customTextureList(java.util.List) -> customTextureList
    java.util.List getCustomTextureList() -> getCustomTextureList
    com.baidu.mapapi.map.BitmapDescriptor getCustomTexture() -> getCustomTexture
    com.baidu.mapapi.map.PolylineOptions points(java.util.List) -> points
    com.baidu.mapapi.map.PolylineOptions colorsValues(java.util.List) -> colorsValues
    com.baidu.mapapi.map.PolylineOptions textureIndex(java.util.List) -> textureIndex
    com.baidu.mapapi.map.PolylineOptions width(int) -> width
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.PolylineOptions visible(boolean) -> visible
    com.baidu.mapapi.map.PolylineOptions focus(boolean) -> focus
    com.baidu.mapapi.map.PolylineOptions dottedLine(boolean) -> dottedLine
    boolean isDottedLine() -> isDottedLine
    boolean isVisible() -> isVisible
    boolean isFocus() -> isFocus
    com.baidu.mapapi.map.PolylineOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.PolylineOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Projection -> com.baidu.mapapi.map.Projection:
    com.baidu.platform.comapi.map.c a -> a
    com.baidu.mapapi.model.LatLng fromScreenLocation(android.graphics.Point) -> fromScreenLocation
    android.graphics.Point toScreenLocation(com.baidu.mapapi.model.LatLng) -> toScreenLocation
    android.graphics.PointF toOpenGLLocation(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.map.MapStatus) -> toOpenGLLocation
    float metersToEquatorPixels(float) -> metersToEquatorPixels
com.baidu.mapapi.map.Stroke -> com.baidu.mapapi.map.Stroke:
    int strokeWidth -> strokeWidth
    int color -> color
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.SupportMapFragment -> com.baidu.mapapi.map.SupportMapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.MapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.SupportMapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.SupportMapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    com.baidu.mapapi.map.MapView getMapView() -> getMapView
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.Text -> com.baidu.mapapi.map.Text:
    java.lang.String k -> k
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    int c -> c
    int d -> d
    int e -> e
    android.graphics.Typeface f -> f
    int g -> g
    int h -> h
    float i -> i
    int j -> j
    java.lang.String getText() -> getText
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    int getBgColor() -> getBgColor
    int getFontColor() -> getFontColor
    int getFontSize() -> getFontSize
    android.graphics.Typeface getTypeface() -> getTypeface
    float getAlignX() -> getAlignX
    float getAlignY() -> getAlignY
    float getRotate() -> getRotate
    void setText(java.lang.String) -> setText
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    void setBgColor(int) -> setBgColor
    void setFontColor(int) -> setFontColor
    void setFontSize(int) -> setFontSize
    void setTypeface(android.graphics.Typeface) -> setTypeface
    void setAlign(int,int) -> setAlign
    void setRotate(float) -> setRotate
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a() -> a
com.baidu.mapapi.map.TextOptions -> com.baidu.mapapi.map.TextOptions:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    java.lang.String d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    int h -> h
    android.graphics.Typeface i -> i
    int j -> j
    int k -> k
    float l -> l
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    java.lang.String getText() -> getText
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    int getBgColor() -> getBgColor
    int getFontColor() -> getFontColor
    int getFontSize() -> getFontSize
    android.graphics.Typeface getTypeface() -> getTypeface
    float getAlignX() -> getAlignX
    float getAlignY() -> getAlignY
    float getRotate() -> getRotate
    com.baidu.mapapi.map.TextOptions text(java.lang.String) -> text
    com.baidu.mapapi.map.TextOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.map.TextOptions bgColor(int) -> bgColor
    com.baidu.mapapi.map.TextOptions fontColor(int) -> fontColor
    com.baidu.mapapi.map.TextOptions fontSize(int) -> fontSize
    com.baidu.mapapi.map.TextOptions typeface(android.graphics.Typeface) -> typeface
    com.baidu.mapapi.map.TextOptions align(int,int) -> align
    com.baidu.mapapi.map.TextOptions rotate(float) -> rotate
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.TextOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.TextOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.TextOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.TextureMapFragment -> com.baidu.mapapi.map.TextureMapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.TextureMapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.TextureMapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.TextureMapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    com.baidu.mapapi.map.TextureMapView getMapView() -> getMapView
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.TextureMapView -> com.baidu.mapapi.map.TextureMapView:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.C b -> b
    com.baidu.mapapi.map.BaiduMap c -> c
    android.widget.ImageView d -> d
    android.graphics.Bitmap e -> e
    android.widget.ZoomControls f -> f
    android.graphics.Point g -> g
    android.graphics.Point h -> h
    android.widget.RelativeLayout i -> i
    android.widget.TextView j -> j
    android.widget.TextView k -> k
    android.widget.ImageView l -> l
    android.util.SparseArray m -> m
    float n -> n
    com.baidu.platform.comapi.map.i o -> o
    void a(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> a
    void b(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void b() -> b
    void c(android.content.Context) -> c
    com.baidu.mapapi.map.BaiduMap getMap() -> getMap
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void onLayout(boolean,int,int,int,int) -> onLayout
    void a(android.view.View) -> a
    void showZoomControls(boolean) -> showZoomControls
    void setZoomControlsPosition(android.graphics.Point) -> setZoomControlsPosition
    void showScaleControl(boolean) -> showScaleControl
    void setScaleControlPosition(android.graphics.Point) -> setScaleControlPosition
    com.baidu.platform.comapi.map.C a(com.baidu.mapapi.map.TextureMapView) -> a
    float b(com.baidu.mapapi.map.TextureMapView) -> b
    android.util.SparseArray a() -> a
    android.widget.ImageView c(com.baidu.mapapi.map.TextureMapView) -> c
    android.widget.TextView d(com.baidu.mapapi.map.TextureMapView) -> d
    android.widget.TextView e(com.baidu.mapapi.map.TextureMapView) -> e
    float a(com.baidu.mapapi.map.TextureMapView,float) -> a
    void f(com.baidu.mapapi.map.TextureMapView) -> f
com.baidu.mapapi.map.TextureSupportMapFragment -> com.baidu.mapapi.map.TextureSupportMapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.TextureMapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.TextureSupportMapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.TextureSupportMapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    com.baidu.mapapi.map.TextureMapView getMapView() -> getMapView
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.Tile -> com.baidu.mapapi.map.Tile:
    byte[] data -> data
    int height -> height
    int width -> width
    android.os.Bundle a() -> a
com.baidu.mapapi.map.TileOverlay -> com.baidu.mapapi.map.TileOverlay:
    java.lang.String b -> b
    com.baidu.mapapi.map.BaiduMap a -> a
    java.util.concurrent.ExecutorService c -> c
    java.util.HashMap d -> d
    java.util.HashSet e -> e
    int f -> f
    com.baidu.mapapi.map.TileProvider g -> g
    com.baidu.mapapi.map.Tile a(java.lang.String) -> a
    void a(java.lang.String,com.baidu.mapapi.map.Tile) -> a
    boolean b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a() -> a
    boolean clearTileCache() -> clearTileCache
    void b() -> b
    void removeTileOverlay() -> removeTileOverlay
    com.baidu.mapapi.map.Tile a(int,int,int) -> a
    com.baidu.mapapi.map.TileProvider a(com.baidu.mapapi.map.TileOverlay) -> a
    void a(com.baidu.mapapi.map.TileOverlay,java.lang.String,com.baidu.mapapi.map.Tile) -> a
    java.lang.String c() -> c
    java.util.HashSet b(com.baidu.mapapi.map.TileOverlay) -> b
com.baidu.mapapi.map.TileOverlayOptions -> com.baidu.mapapi.map.TileOverlayOptions:
    int a -> a
    com.baidu.mapapi.map.TileProvider b -> b
    android.os.Bundle c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int datasource -> datasource
    java.lang.String urlString -> urlString
    java.lang.String j -> j
    com.baidu.mapapi.map.TileOverlayOptions setMaxTileTmp(int) -> setMaxTileTmp
    com.baidu.mapapi.map.TileOverlayOptions tileProvider(com.baidu.mapapi.map.TileProvider) -> tileProvider
    com.baidu.mapapi.map.TileOverlayOptions a(int,int) -> a
    com.baidu.mapapi.map.TileOverlayOptions setPositionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> setPositionFromBounds
    com.baidu.mapapi.map.TileOverlay a(com.baidu.mapapi.map.BaiduMap) -> a
    android.os.Bundle a() -> a
com.baidu.mapapi.map.TileProvider -> com.baidu.mapapi.map.TileProvider:
    int getMaxDisLevel() -> getMaxDisLevel
    int getMinDisLevel() -> getMinDisLevel
com.baidu.mapapi.map.UiSettings -> com.baidu.mapapi.map.UiSettings:
    com.baidu.platform.comapi.map.c a -> a
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isOverlookingGesturesEnabled() -> isOverlookingGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setCompassPosition(android.graphics.Point) -> setCompassPosition
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setOverlookingGesturesEnabled(boolean) -> setOverlookingGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
com.baidu.mapapi.map.UrlTileProvider -> com.baidu.mapapi.map.UrlTileProvider:
    java.lang.String getTileUrl() -> getTileUrl
com.baidu.mapapi.map.WeightedLatLng -> com.baidu.mapapi.map.WeightedLatLng:
    android.graphics.Point a -> a
    double DEFAULT_INTENSITY -> DEFAULT_INTENSITY
    double intensity -> intensity
    com.baidu.mapapi.model.LatLng latLng -> latLng
    android.graphics.Point a() -> a
com.baidu.mapapi.map.a -> com.baidu.mapapi.map.a:
    com.baidu.mapapi.map.BaiduMap a -> a
    void a(com.baidu.mapapi.map.Overlay) -> a
    void b(com.baidu.mapapi.map.Overlay) -> b
com.baidu.mapapi.map.b -> com.baidu.mapapi.map.b:
    com.baidu.mapapi.map.BaiduMap a -> a
    void a() -> a
    void a(com.baidu.platform.comapi.map.B) -> a
    void b(com.baidu.platform.comapi.map.B) -> b
    void c(com.baidu.platform.comapi.map.B) -> c
    void a(android.view.MotionEvent) -> a
    void a(com.baidu.mapapi.model.inner.GeoPoint) -> a
    void b(com.baidu.mapapi.model.inner.GeoPoint) -> b
    void c(com.baidu.mapapi.model.inner.GeoPoint) -> c
    void b() -> b
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void d(com.baidu.mapapi.model.inner.GeoPoint) -> d
    void e(com.baidu.mapapi.model.inner.GeoPoint) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.B) -> a
    void d() -> d
    void e() -> e
com.baidu.mapapi.map.c -> com.baidu.mapapi.map.c:
    com.baidu.mapapi.map.BaiduMap a -> a
    android.os.Bundle a(int,int,int) -> a
com.baidu.mapapi.map.d -> com.baidu.mapapi.map.d:
    com.baidu.mapapi.map.BaiduMap a -> a
    android.os.Bundle a(int,int,int,android.content.Context) -> a
com.baidu.mapapi.map.e -> com.baidu.mapapi.map.e:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    double e -> e
    double f -> f
    boolean a(double,double) -> a
    boolean a(android.graphics.Point) -> a
    boolean a(double,double,double,double) -> a
    boolean a(com.baidu.mapapi.map.e) -> a
    boolean b(com.baidu.mapapi.map.e) -> b
    java.lang.String toString() -> toString
com.baidu.mapapi.map.f -> com.baidu.mapapi.map.f:
    int a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.map.HeatMap d -> d
    void run() -> run
com.baidu.mapapi.map.g -> com.baidu.mapapi.map.g:
    com.baidu.mapapi.map.MapView a -> a
    void a() -> a
    void a(com.baidu.mapapi.model.inner.GeoPoint) -> a
    void b(com.baidu.mapapi.model.inner.GeoPoint) -> b
    void c(com.baidu.mapapi.model.inner.GeoPoint) -> c
    void b() -> b
    void a(com.baidu.platform.comapi.map.B) -> a
    void b(com.baidu.platform.comapi.map.B) -> b
    void c(com.baidu.platform.comapi.map.B) -> c
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void d(com.baidu.mapapi.model.inner.GeoPoint) -> d
    void e(com.baidu.mapapi.model.inner.GeoPoint) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.B) -> a
    void d() -> d
    void e() -> e
    void a(android.view.MotionEvent) -> a
com.baidu.mapapi.map.h -> com.baidu.mapapi.map.h:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.i -> com.baidu.mapapi.map.i:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.j -> com.baidu.mapapi.map.j:
    com.baidu.mapapi.map.e a -> a
    int b -> b
    java.util.List c -> c
    java.util.List d -> d
    void a(com.baidu.mapapi.map.j$a) -> a
    void a(double,double,com.baidu.mapapi.map.j$a) -> a
    void a() -> a
    java.util.Collection a(com.baidu.mapapi.map.e) -> a
    void a(com.baidu.mapapi.map.e,java.util.Collection) -> a
com.baidu.mapapi.map.j$a -> com.baidu.mapapi.map.j$a:
    android.graphics.Point a() -> a
com.baidu.mapapi.map.k -> com.baidu.mapapi.map.k:
    com.baidu.mapapi.map.TextureMapView a -> a
    void a() -> a
    void a(com.baidu.mapapi.model.inner.GeoPoint) -> a
    void b(com.baidu.mapapi.model.inner.GeoPoint) -> b
    void c(com.baidu.mapapi.model.inner.GeoPoint) -> c
    void b() -> b
    void a(com.baidu.platform.comapi.map.B) -> a
    void b(com.baidu.platform.comapi.map.B) -> b
    void c(com.baidu.platform.comapi.map.B) -> c
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void d(com.baidu.mapapi.model.inner.GeoPoint) -> d
    void e(com.baidu.mapapi.model.inner.GeoPoint) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.B) -> a
    void d() -> d
    void e() -> e
    void a(android.view.MotionEvent) -> a
com.baidu.mapapi.map.l -> com.baidu.mapapi.map.l:
    com.baidu.mapapi.map.TextureMapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.m -> com.baidu.mapapi.map.m:
    com.baidu.mapapi.map.TextureMapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.n -> com.baidu.mapapi.map.n:
    int a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    com.baidu.mapapi.map.TileOverlay e -> e
    void run() -> run
com.baidu.mapapi.map.offline.MKOLSearchRecord -> com.baidu.mapapi.map.offline.MKOLSearchRecord:
    int cityID -> cityID
    int size -> size
    java.lang.String cityName -> cityName
    int cityType -> cityType
    java.util.ArrayList childCities -> childCities
com.baidu.mapapi.map.offline.MKOLUpdateElement -> com.baidu.mapapi.map.offline.MKOLUpdateElement:
    int UNDEFINED -> UNDEFINED
    int DOWNLOADING -> DOWNLOADING
    int WAITING -> WAITING
    int SUSPENDED -> SUSPENDED
    int FINISHED -> FINISHED
    int eOLDSMd5Error -> eOLDSMd5Error
    int eOLDSNetError -> eOLDSNetError
    int eOLDSIOError -> eOLDSIOError
    int eOLDSWifiError -> eOLDSWifiError
    int eOLDSFormatError -> eOLDSFormatError
    int eOLDSInstalling -> eOLDSInstalling
    int cityID -> cityID
    java.lang.String cityName -> cityName
    int ratio -> ratio
    int status -> status
    com.baidu.mapapi.model.LatLng geoPt -> geoPt
    int size -> size
    int serversize -> serversize
    int level -> level
    boolean update -> update
com.baidu.mapapi.map.offline.MKOfflineMap -> com.baidu.mapapi.map.offline.MKOfflineMap:
    java.lang.String a -> a
    int TYPE_NEW_OFFLINE -> TYPE_NEW_OFFLINE
    int TYPE_DOWNLOAD_UPDATE -> TYPE_DOWNLOAD_UPDATE
    int TYPE_VER_UPDATE -> TYPE_VER_UPDATE
    com.baidu.platform.comapi.map.r b -> b
    com.baidu.mapapi.map.offline.MKOfflineMapListener c -> c
    boolean init(com.baidu.mapapi.map.offline.MKOfflineMapListener) -> init
    boolean start(int) -> start
    boolean update(int) -> update
    boolean pause(int) -> pause
    void destroy() -> destroy
    boolean remove(int) -> remove
    java.util.ArrayList getHotCityList() -> getHotCityList
    java.util.ArrayList getOfflineCityList() -> getOfflineCityList
    java.util.ArrayList searchCity(java.lang.String) -> searchCity
    java.util.ArrayList getAllUpdateInfo() -> getAllUpdateInfo
    com.baidu.mapapi.map.offline.MKOLUpdateElement getUpdateInfo(int) -> getUpdateInfo
    int importOfflineData() -> importOfflineData
    int importOfflineData(boolean) -> importOfflineData
    com.baidu.platform.comapi.map.r a(com.baidu.mapapi.map.offline.MKOfflineMap) -> a
    com.baidu.mapapi.map.offline.MKOfflineMapListener b(com.baidu.mapapi.map.offline.MKOfflineMap) -> b
com.baidu.mapapi.map.offline.MKOfflineMapListener -> com.baidu.mapapi.map.offline.MKOfflineMapListener:
    void onGetOfflineMapState(int,int) -> onGetOfflineMapState
com.baidu.mapapi.map.offline.OfflineMapUtil -> com.baidu.mapapi.map.offline.OfflineMapUtil:
    com.baidu.mapapi.map.offline.MKOLSearchRecord getSearchRecordFromLocalCityInfo(com.baidu.platform.comapi.map.q) -> getSearchRecordFromLocalCityInfo
    com.baidu.mapapi.map.offline.MKOLUpdateElement getUpdatElementFromLocalMapElement(com.baidu.platform.comapi.map.t) -> getUpdatElementFromLocalMapElement
com.baidu.mapapi.map.offline.a -> com.baidu.mapapi.map.offline.a:
    com.baidu.mapapi.map.offline.MKOfflineMap a -> a
    void a(int,int) -> a
com.baidu.mapapi.model.CoordUtil -> com.baidu.mapapi.model.CoordUtil:
    com.baidu.mapapi.model.LatLng mc2ll(com.baidu.mapapi.model.inner.GeoPoint) -> mc2ll
    com.baidu.mapapi.model.inner.GeoPoint ll2mc(com.baidu.mapapi.model.LatLng) -> ll2mc
    com.baidu.mapapi.model.inner.Point ll2point(com.baidu.mapapi.model.LatLng) -> ll2point
    int getMCDistanceByOneLatLngAndRadius(com.baidu.mapapi.model.LatLng,int) -> getMCDistanceByOneLatLngAndRadius
    com.baidu.mapapi.model.LatLng decodeLocation(java.lang.String) -> decodeLocation
    com.baidu.mapapi.model.LatLng decodeNodeLocation(java.lang.String) -> decodeNodeLocation
    java.util.List decodeLocationList(java.lang.String) -> decodeLocationList
    java.util.List decodeLocationList2D(java.lang.String) -> decodeLocationList2D
    com.baidu.mapapi.model.inner.Point Coordinate_encryptEx(float,float,java.lang.String) -> Coordinate_encryptEx
    double getDistance(com.baidu.mapapi.model.inner.Point,com.baidu.mapapi.model.inner.Point) -> getDistance
com.baidu.mapapi.model.LatLng -> com.baidu.mapapi.model.LatLng:
    java.lang.String a -> a
    double latitude -> latitude
    double longitude -> longitude
    double latitudeE6 -> latitudeE6
    double longitudeE6 -> longitudeE6
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.model.LatLngBounds -> com.baidu.mapapi.model.LatLngBounds:
    com.baidu.mapapi.model.LatLng northeast -> northeast
    com.baidu.mapapi.model.LatLng southwest -> southwest
    boolean contains(com.baidu.mapapi.model.LatLng) -> contains
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    java.lang.String toString() -> toString
com.baidu.mapapi.model.LatLngBounds$Builder -> com.baidu.mapapi.model.LatLngBounds$Builder:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    boolean e -> e
    com.baidu.mapapi.model.LatLngBounds build() -> build
    com.baidu.mapapi.model.LatLngBounds$Builder include(com.baidu.mapapi.model.LatLng) -> include
com.baidu.mapapi.model.ParcelItem -> com.baidu.mapapi.model.ParcelItem:
    android.os.Bundle a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setBundle(android.os.Bundle) -> setBundle
    android.os.Bundle getBundle() -> getBundle
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.baidu.mapapi.model.a -> com.baidu.mapapi.model.a:
    com.baidu.mapapi.model.LatLng a(android.os.Parcel) -> a
    com.baidu.mapapi.model.LatLng[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.model.b -> com.baidu.mapapi.model.b:
    com.baidu.mapapi.model.ParcelItem a(android.os.Parcel) -> a
    com.baidu.mapapi.model.ParcelItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.model.inner.GeoPoint -> com.baidu.mapapi.model.inner.GeoPoint:
    double a -> a
    double b -> b
    double getLatitudeE6() -> getLatitudeE6
    double getLongitudeE6() -> getLongitudeE6
    void setLatitudeE6(double) -> setLatitudeE6
    void setLongitudeE6(double) -> setLongitudeE6
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.mapapi.model.inner.MapBound -> com.baidu.mapapi.model.inner.MapBound:
    com.baidu.mapapi.model.inner.Point ptLB -> ptLB
    com.baidu.mapapi.model.inner.Point ptRT -> ptRT
    com.baidu.mapapi.model.inner.Point getPtLB() -> getPtLB
    void setPtLB(com.baidu.mapapi.model.inner.Point) -> setPtLB
    com.baidu.mapapi.model.inner.Point getPtRT() -> getPtRT
    void setPtRT(com.baidu.mapapi.model.inner.Point) -> setPtRT
com.baidu.mapapi.model.inner.Point -> com.baidu.mapapi.model.inner.Point:
    int x -> x
    int y -> y
    int getmPtx() -> getmPtx
    void setmPtx(int) -> setmPtx
    int getmPty() -> getmPty
    void setmPty(int) -> setmPty
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.mapapi.model.inner.a -> com.baidu.mapapi.model.inner.a:
    int a -> a
    com.baidu.mapapi.model.inner.Point b -> b
    com.baidu.mapapi.model.inner.Point c -> c
    java.util.ArrayList d -> d
com.baidu.mapapi.navi.BaiduMapAppNotSupportNaviException -> com.baidu.mapapi.navi.BaiduMapAppNotSupportNaviException:
com.baidu.mapapi.navi.BaiduMapNavigation -> com.baidu.mapapi.navi.BaiduMapNavigation:
    boolean a -> a
    void setSupportWebNavi(boolean) -> setSupportWebNavi
    boolean openBaiduMapNavi(com.baidu.mapapi.navi.NaviParaOption,android.content.Context) -> openBaiduMapNavi
    boolean openBaiduMapWalkNavi(com.baidu.mapapi.navi.NaviParaOption,android.content.Context) -> openBaiduMapWalkNavi
    boolean openBaiduMapBikeNavi(com.baidu.mapapi.navi.NaviParaOption,android.content.Context) -> openBaiduMapBikeNavi
    void openWebBaiduMapNavi(com.baidu.mapapi.navi.NaviParaOption,android.content.Context) -> openWebBaiduMapNavi
    void a(com.baidu.mapapi.navi.NaviParaOption,android.content.Context) -> a
    void finish(android.content.Context) -> finish
    java.lang.String a(android.content.Context) -> a
com.baidu.mapapi.navi.IllegalNaviArgumentException -> com.baidu.mapapi.navi.IllegalNaviArgumentException:
com.baidu.mapapi.navi.NaviParaOption -> com.baidu.mapapi.navi.NaviParaOption:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng c -> c
    java.lang.String d -> d
    com.baidu.mapapi.navi.NaviParaOption startPoint(com.baidu.mapapi.model.LatLng) -> startPoint
    com.baidu.mapapi.navi.NaviParaOption startName(java.lang.String) -> startName
    com.baidu.mapapi.navi.NaviParaOption endPoint(com.baidu.mapapi.model.LatLng) -> endPoint
    com.baidu.mapapi.navi.NaviParaOption endName(java.lang.String) -> endName
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    java.lang.String getStartName() -> getStartName
    java.lang.String getEndName() -> getEndName
com.baidu.mapapi.search.busline.BusLineResult -> com.baidu.mapapi.search.busline.BusLineResult:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    java.util.Date d -> d
    java.util.Date e -> e
    java.lang.String f -> f
    java.util.List g -> g
    java.util.List h -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getBusCompany() -> getBusCompany
    java.lang.String getBusLineName() -> getBusLineName
    void a(java.lang.String) -> a
    boolean isMonthTicket() -> isMonthTicket
    void a(boolean) -> a
    java.util.Date getStartTime() -> getStartTime
    void a(java.util.Date) -> a
    java.util.Date getEndTime() -> getEndTime
    void b(java.util.Date) -> b
    java.util.List getStations() -> getStations
    void a(java.util.List) -> a
    java.util.List getSteps() -> getSteps
    void b(java.util.List) -> b
    java.lang.String getUid() -> getUid
    void b(java.lang.String) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.busline.BusLineResult$BusStation -> com.baidu.mapapi.search.busline.BusLineResult$BusStation:
com.baidu.mapapi.search.busline.BusLineResult$BusStep -> com.baidu.mapapi.search.busline.BusLineResult$BusStep:
com.baidu.mapapi.search.busline.BusLineSearch -> com.baidu.mapapi.search.busline.BusLineSearch:
    com.baidu.platform.comapi.search.d a -> a
    com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener b -> b
    boolean c -> c
    com.baidu.mapapi.search.busline.BusLineSearch newInstance() -> newInstance
    boolean searchBusLine(com.baidu.mapapi.search.busline.BusLineSearchOption) -> searchBusLine
    void setOnGetBusLineSearchResultListener(com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener) -> setOnGetBusLineSearchResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.busline.BusLineSearch) -> a
    com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener b(com.baidu.mapapi.search.busline.BusLineSearch) -> b
com.baidu.mapapi.search.busline.BusLineSearch$1 -> com.baidu.mapapi.search.busline.BusLineSearch$1:
com.baidu.mapapi.search.busline.BusLineSearch$a -> com.baidu.mapapi.search.busline.BusLineSearch$a:
    com.baidu.mapapi.search.busline.BusLineSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.busline.BusLineSearchOption -> com.baidu.mapapi.search.busline.BusLineSearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.busline.BusLineSearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.busline.BusLineSearchOption uid(java.lang.String) -> uid
com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener -> com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener:
    void onGetBusLineResult(com.baidu.mapapi.search.busline.BusLineResult) -> onGetBusLineResult
com.baidu.mapapi.search.busline.a -> com.baidu.mapapi.search.busline.a:
    com.baidu.mapapi.search.busline.BusLineResult[] a(int) -> a
    com.baidu.mapapi.search.busline.BusLineResult a(android.os.Parcel) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.busline.b -> com.baidu.mapapi.search.busline.b:
    com.baidu.mapapi.search.busline.BusLineResult a(java.lang.String) -> a
com.baidu.mapapi.search.core.CityInfo -> com.baidu.mapapi.search.core.CityInfo:
    java.lang.String city -> city
    int num -> num
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.core.PoiInfo -> com.baidu.mapapi.search.core.PoiInfo:
    java.lang.String name -> name
    java.lang.String uid -> uid
    java.lang.String address -> address
    java.lang.String city -> city
    java.lang.String phoneNum -> phoneNum
    java.lang.String postCode -> postCode
    com.baidu.mapapi.search.core.PoiInfo$POITYPE type -> type
    com.baidu.mapapi.model.LatLng location -> location
    boolean hasCaterDetails -> hasCaterDetails
    boolean isPano -> isPano
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.core.PoiInfo$POITYPE -> com.baidu.mapapi.search.core.PoiInfo$POITYPE:
    com.baidu.mapapi.search.core.PoiInfo$POITYPE POINT -> POINT
    com.baidu.mapapi.search.core.PoiInfo$POITYPE BUS_STATION -> BUS_STATION
    com.baidu.mapapi.search.core.PoiInfo$POITYPE BUS_LINE -> BUS_LINE
    com.baidu.mapapi.search.core.PoiInfo$POITYPE SUBWAY_STATION -> SUBWAY_STATION
    com.baidu.mapapi.search.core.PoiInfo$POITYPE SUBWAY_LINE -> SUBWAY_LINE
    int a -> a
    com.baidu.mapapi.search.core.PoiInfo$POITYPE[] $VALUES -> $VALUES
    com.baidu.mapapi.search.core.PoiInfo$POITYPE[] values() -> values
    com.baidu.mapapi.search.core.PoiInfo$POITYPE valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
    com.baidu.mapapi.search.core.PoiInfo$POITYPE fromInt(int) -> fromInt
com.baidu.mapapi.search.core.RouteLine -> com.baidu.mapapi.search.core.RouteLine:
    com.baidu.mapapi.search.core.RouteNode b -> b
    com.baidu.mapapi.search.core.RouteNode c -> c
    java.lang.String d -> d
    java.util.List e -> e
    int f -> f
    int g -> g
    com.baidu.mapapi.search.core.RouteLine$TYPE a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.baidu.mapapi.search.core.RouteLine$TYPE getType() -> getType
    void setType(com.baidu.mapapi.search.core.RouteLine$TYPE) -> setType
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    com.baidu.mapapi.search.core.RouteNode getStarting() -> getStarting
    void setStarting(com.baidu.mapapi.search.core.RouteNode) -> setStarting
    com.baidu.mapapi.search.core.RouteNode getTerminal() -> getTerminal
    void setTerminal(com.baidu.mapapi.search.core.RouteNode) -> setTerminal
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    void setSteps(java.util.List) -> setSteps
    java.util.List getAllStep() -> getAllStep
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.core.RouteLine$TYPE -> com.baidu.mapapi.search.core.RouteLine$TYPE:
    com.baidu.mapapi.search.core.RouteLine$TYPE DRIVESTEP -> DRIVESTEP
    com.baidu.mapapi.search.core.RouteLine$TYPE TRANSITSTEP -> TRANSITSTEP
    com.baidu.mapapi.search.core.RouteLine$TYPE WALKSTEP -> WALKSTEP
    int a -> a
    com.baidu.mapapi.search.core.RouteLine$TYPE[] b -> b
    com.baidu.mapapi.search.core.RouteLine$TYPE[] values() -> values
    com.baidu.mapapi.search.core.RouteLine$TYPE valueOf(java.lang.String) -> valueOf
    int a() -> a
    int a(com.baidu.mapapi.search.core.RouteLine$TYPE) -> a
com.baidu.mapapi.search.core.RouteNode -> com.baidu.mapapi.search.core.RouteNode:
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    java.lang.String c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.baidu.mapapi.search.core.RouteNode titleAndLocation(java.lang.String,com.baidu.mapapi.model.LatLng) -> titleAndLocation
    com.baidu.mapapi.search.core.RouteNode location(com.baidu.mapapi.model.LatLng) -> location
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void setLocation(com.baidu.mapapi.model.LatLng) -> setLocation
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.core.RouteStep -> com.baidu.mapapi.search.core.RouteStep:
    int a -> a
    int b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List mWayPoints -> mWayPoints
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    java.util.List getWayPoints() -> getWayPoints
    void setWayPoints(java.util.List) -> setWayPoints
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.core.SearchResult -> com.baidu.mapapi.search.core.SearchResult:
    com.baidu.mapapi.search.core.SearchResult$ERRORNO error -> error
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.core.SearchResult$ERRORNO -> com.baidu.mapapi.search.core.SearchResult$ERRORNO:
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NO_ERROR -> NO_ERROR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO RESULT_NOT_FOUND -> RESULT_NOT_FOUND
    com.baidu.mapapi.search.core.SearchResult$ERRORNO AMBIGUOUS_KEYWORD -> AMBIGUOUS_KEYWORD
    com.baidu.mapapi.search.core.SearchResult$ERRORNO AMBIGUOUS_ROURE_ADDR -> AMBIGUOUS_ROURE_ADDR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NOT_SUPPORT_BUS -> NOT_SUPPORT_BUS
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NOT_SUPPORT_BUS_2CITY -> NOT_SUPPORT_BUS_2CITY
    com.baidu.mapapi.search.core.SearchResult$ERRORNO ST_EN_TOO_NEAR -> ST_EN_TOO_NEAR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO KEY_ERROR -> KEY_ERROR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO PERMISSION_UNFINISHED -> PERMISSION_UNFINISHED
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NETWORK_TIME_OUT -> NETWORK_TIME_OUT
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NETWORK_ERROR -> NETWORK_ERROR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO[] $VALUES -> $VALUES
    com.baidu.mapapi.search.core.SearchResult$ERRORNO[] values() -> values
    com.baidu.mapapi.search.core.SearchResult$ERRORNO valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.search.core.TaxiInfo -> com.baidu.mapapi.search.core.TaxiInfo:
    float a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    float e -> e
    float f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    float getTotalPrice() -> getTotalPrice
    void setTotalPrice(float) -> setTotalPrice
    java.lang.String getDesc() -> getDesc
    void setDesc(java.lang.String) -> setDesc
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    float getPerKMPrice() -> getPerKMPrice
    void setPerKMPrice(float) -> setPerKMPrice
    float getStartPrice() -> getStartPrice
    void setStartPrice(float) -> setStartPrice
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.core.VehicleInfo -> com.baidu.mapapi.search.core.VehicleInfo:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
    int getPassStationNum() -> getPassStationNum
    void setPassStationNum(int) -> setPassStationNum
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    int getZonePrice() -> getZonePrice
    void setZonePrice(int) -> setZonePrice
    int getTotalPrice() -> getTotalPrice
    void setTotalPrice(int) -> setTotalPrice
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.core.a -> com.baidu.mapapi.search.core.a:
    com.baidu.mapapi.search.core.CityInfo[] a(int) -> a
    com.baidu.mapapi.search.core.CityInfo a(android.os.Parcel) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.core.b -> com.baidu.mapapi.search.core.b:
    com.baidu.mapapi.search.core.PoiInfo[] a(int) -> a
    com.baidu.mapapi.search.core.PoiInfo a(android.os.Parcel) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.core.c -> com.baidu.mapapi.search.core.c:
    com.baidu.mapapi.search.core.RouteLine a(android.os.Parcel) -> a
    com.baidu.mapapi.search.core.RouteLine[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.core.d -> com.baidu.mapapi.search.core.d:
    com.baidu.mapapi.search.core.RouteNode a(android.os.Parcel) -> a
    com.baidu.mapapi.search.core.RouteNode[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.core.e -> com.baidu.mapapi.search.core.e:
    com.baidu.mapapi.search.core.RouteStep a(android.os.Parcel) -> a
    com.baidu.mapapi.search.core.RouteStep[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.core.f -> com.baidu.mapapi.search.core.f:
    com.baidu.mapapi.search.core.SearchResult a(android.os.Parcel) -> a
    com.baidu.mapapi.search.core.SearchResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.core.g -> com.baidu.mapapi.search.core.g:
com.baidu.mapapi.search.core.h -> com.baidu.mapapi.search.core.h:
    com.baidu.mapapi.search.core.TaxiInfo[] a(int) -> a
    com.baidu.mapapi.search.core.TaxiInfo a(android.os.Parcel) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.core.i -> com.baidu.mapapi.search.core.i:
    com.baidu.mapapi.search.core.VehicleInfo a(android.os.Parcel) -> a
    com.baidu.mapapi.search.core.VehicleInfo[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.core.j -> com.baidu.mapapi.search.core.j:
    java.lang.String a() -> a
    java.lang.String b() -> b
com.baidu.mapapi.search.geocode.GeoCodeOption -> com.baidu.mapapi.search.geocode.GeoCodeOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.geocode.GeoCodeOption city(java.lang.String) -> city
    com.baidu.mapapi.search.geocode.GeoCodeOption address(java.lang.String) -> address
com.baidu.mapapi.search.geocode.GeoCodeResult -> com.baidu.mapapi.search.geocode.GeoCodeResult:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void a(com.baidu.mapapi.model.LatLng) -> a
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.geocode.GeoCoder -> com.baidu.mapapi.search.geocode.GeoCoder:
    com.baidu.platform.comapi.search.d a -> a
    com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.geocode.GeoCoder newInstance() -> newInstance
    boolean geocode(com.baidu.mapapi.search.geocode.GeoCodeOption) -> geocode
    boolean reverseGeoCode(com.baidu.mapapi.search.geocode.ReverseGeoCodeOption) -> reverseGeoCode
    void setOnGetGeoCodeResultListener(com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener) -> setOnGetGeoCodeResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.geocode.GeoCoder) -> a
    com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener b(com.baidu.mapapi.search.geocode.GeoCoder) -> b
    int c(com.baidu.mapapi.search.geocode.GeoCoder) -> c
com.baidu.mapapi.search.geocode.GeoCoder$1 -> com.baidu.mapapi.search.geocode.GeoCoder$1:
com.baidu.mapapi.search.geocode.GeoCoder$a -> com.baidu.mapapi.search.geocode.GeoCoder$a:
    com.baidu.mapapi.search.geocode.GeoCoder a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener -> com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener:
    void onGetGeoCodeResult(com.baidu.mapapi.search.geocode.GeoCodeResult) -> onGetGeoCodeResult
    void onGetReverseGeoCodeResult(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult) -> onGetReverseGeoCodeResult
com.baidu.mapapi.search.geocode.ReverseGeoCodeOption -> com.baidu.mapapi.search.geocode.ReverseGeoCodeOption:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.search.geocode.ReverseGeoCodeOption location(com.baidu.mapapi.model.LatLng) -> location
com.baidu.mapapi.search.geocode.ReverseGeoCodeResult -> com.baidu.mapapi.search.geocode.ReverseGeoCodeResult:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent c -> c
    com.baidu.mapapi.model.LatLng d -> d
    java.util.List e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getBusinessCircle() -> getBusinessCircle
    void a(java.lang.String) -> a
    java.lang.String getAddress() -> getAddress
    void b(java.lang.String) -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent getAddressDetail() -> getAddressDetail
    void a(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent) -> a
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void a(com.baidu.mapapi.model.LatLng) -> a
    java.util.List getPoiList() -> getPoiList
    void a(java.util.List) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent -> com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent:
    java.lang.String streetNumber -> streetNumber
    java.lang.String street -> street
    java.lang.String district -> district
    java.lang.String city -> city
    java.lang.String province -> province
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.geocode.a -> com.baidu.mapapi.search.geocode.a:
    com.baidu.mapapi.search.geocode.GeoCodeResult a(android.os.Parcel) -> a
    com.baidu.mapapi.search.geocode.GeoCodeResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.geocode.b -> com.baidu.mapapi.search.geocode.b:
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult a(java.lang.String) -> a
    com.baidu.mapapi.search.geocode.GeoCodeResult b(java.lang.String) -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent a(org.json.JSONObject,java.lang.String) -> a
    com.baidu.mapapi.model.LatLng b(org.json.JSONObject,java.lang.String) -> b
    java.util.List c(org.json.JSONObject,java.lang.String) -> c
com.baidu.mapapi.search.geocode.c -> com.baidu.mapapi.search.geocode.c:
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult a(android.os.Parcel) -> a
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.geocode.d -> com.baidu.mapapi.search.geocode.d:
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent a(android.os.Parcel) -> a
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener -> com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener:
    void onGetPoiResult(com.baidu.mapapi.search.poi.PoiResult) -> onGetPoiResult
    void onGetPoiDetailResult(com.baidu.mapapi.search.poi.PoiDetailResult) -> onGetPoiDetailResult
com.baidu.mapapi.search.poi.PoiAddrInfo -> com.baidu.mapapi.search.poi.PoiAddrInfo:
    java.lang.String address -> address
    com.baidu.mapapi.model.LatLng location -> location
    java.lang.String name -> name
com.baidu.mapapi.search.poi.PoiBoundSearchOption -> com.baidu.mapapi.search.poi.PoiBoundSearchOption:
    com.baidu.mapapi.model.LatLngBounds a -> a
    java.lang.String b -> b
    float c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.poi.PoiBoundSearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiBoundSearchOption bound(com.baidu.mapapi.model.LatLngBounds) -> bound
    com.baidu.mapapi.search.poi.PoiBoundSearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiBoundSearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiCitySearchOption -> com.baidu.mapapi.search.poi.PoiCitySearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    float c -> c
    com.baidu.mapapi.model.LatLng d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.search.poi.PoiCitySearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.poi.PoiCitySearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiCitySearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiCitySearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiDetailResult -> com.baidu.mapapi.search.poi.PoiDetailResult:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.mapapi.model.LatLng d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    double k -> k
    double l -> l
    double m -> m
    double n -> n
    double o -> o
    double p -> p
    double q -> q
    double r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    java.lang.String x -> x
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getName() -> getName
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    java.lang.String getAddress() -> getAddress
    java.lang.String getTelephone() -> getTelephone
    java.lang.String getUid() -> getUid
    java.lang.String getTag() -> getTag
    java.lang.String getDetailUrl() -> getDetailUrl
    java.lang.String getType() -> getType
    double getPrice() -> getPrice
    double getOverallRating() -> getOverallRating
    double getTasteRating() -> getTasteRating
    double getServiceRating() -> getServiceRating
    double getEnvironmentRating() -> getEnvironmentRating
    double getFacilityRating() -> getFacilityRating
    double getHygieneRating() -> getHygieneRating
    double getTechnologyRating() -> getTechnologyRating
    int getImageNum() -> getImageNum
    int getGrouponNum() -> getGrouponNum
    int getCommentNum() -> getCommentNum
    int getFavoriteNum() -> getFavoriteNum
    int getCheckinNum() -> getCheckinNum
    java.lang.String getShopHours() -> getShopHours
    boolean a(java.lang.String) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.poi.PoiDetailSearchOption -> com.baidu.mapapi.search.poi.PoiDetailSearchOption:
    java.lang.String a -> a
    boolean b -> b
    com.baidu.mapapi.search.poi.PoiDetailSearchOption poiUid(java.lang.String) -> poiUid
com.baidu.mapapi.search.poi.PoiNearbySearchOption -> com.baidu.mapapi.search.poi.PoiNearbySearchOption:
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    int c -> c
    float d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.search.poi.PoiSortType g -> g
    com.baidu.mapapi.search.poi.PoiNearbySearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiNearbySearchOption location(com.baidu.mapapi.model.LatLng) -> location
    com.baidu.mapapi.search.poi.PoiNearbySearchOption sortType(com.baidu.mapapi.search.poi.PoiSortType) -> sortType
    com.baidu.mapapi.search.poi.PoiNearbySearchOption radius(int) -> radius
    com.baidu.mapapi.search.poi.PoiNearbySearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiNearbySearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiResult -> com.baidu.mapapi.search.poi.PoiResult:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.util.List g -> g
    boolean h -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getCurrentPageNum() -> getCurrentPageNum
    void a(int) -> a
    int getTotalPageNum() -> getTotalPageNum
    void b(int) -> b
    int getCurrentPageCapacity() -> getCurrentPageCapacity
    void c(int) -> c
    int getTotalPoiNum() -> getTotalPoiNum
    void d(int) -> d
    java.util.List getAllPoi() -> getAllPoi
    void a(java.util.List) -> a
    java.util.List getAllAddr() -> getAllAddr
    void b(java.util.List) -> b
    boolean isHasAddrInfo() -> isHasAddrInfo
    void a(boolean) -> a
    java.util.List getSuggestCityList() -> getSuggestCityList
    void c(java.util.List) -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.poi.PoiSearch -> com.baidu.mapapi.search.poi.PoiSearch:
    com.baidu.platform.comapi.search.d a -> a
    com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    boolean f -> f
    int g -> g
    com.baidu.mapapi.search.poi.PoiSearch newInstance() -> newInstance
    void setOnGetPoiSearchResultListener(com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener) -> setOnGetPoiSearchResultListener
    boolean searchInCity(com.baidu.mapapi.search.poi.PoiCitySearchOption) -> searchInCity
    boolean searchNearby(com.baidu.mapapi.search.poi.PoiNearbySearchOption) -> searchNearby
    boolean searchInBound(com.baidu.mapapi.search.poi.PoiBoundSearchOption) -> searchInBound
    boolean searchPoiDetail(com.baidu.mapapi.search.poi.PoiDetailSearchOption) -> searchPoiDetail
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.poi.PoiSearch) -> a
    com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener b(com.baidu.mapapi.search.poi.PoiSearch) -> b
    int c(com.baidu.mapapi.search.poi.PoiSearch) -> c
    com.baidu.platform.comapi.search.d d(com.baidu.mapapi.search.poi.PoiSearch) -> d
    int e(com.baidu.mapapi.search.poi.PoiSearch) -> e
com.baidu.mapapi.search.poi.PoiSearch$1 -> com.baidu.mapapi.search.poi.PoiSearch$1:
com.baidu.mapapi.search.poi.PoiSearch$a -> com.baidu.mapapi.search.poi.PoiSearch$a:
    com.baidu.mapapi.search.poi.PoiSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.poi.PoiSortType -> com.baidu.mapapi.search.poi.PoiSortType:
    com.baidu.mapapi.search.poi.PoiSortType comprehensive -> comprehensive
    com.baidu.mapapi.search.poi.PoiSortType distance_from_near_to_far -> distance_from_near_to_far
    com.baidu.mapapi.search.poi.PoiSortType[] a -> a
    com.baidu.mapapi.search.poi.PoiSortType[] values() -> values
    com.baidu.mapapi.search.poi.PoiSortType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.search.poi.a -> com.baidu.mapapi.search.poi.a:
    com.baidu.mapapi.search.poi.PoiDetailResult a(android.os.Parcel) -> a
    com.baidu.mapapi.search.poi.PoiDetailResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.poi.b -> com.baidu.mapapi.search.poi.b:
    com.baidu.mapapi.search.poi.PoiResult[] a(int) -> a
    com.baidu.mapapi.search.poi.PoiResult a(android.os.Parcel) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.poi.c -> com.baidu.mapapi.search.poi.c:
    com.baidu.mapapi.search.poi.PoiResult a(java.lang.String,int,int) -> a
    com.baidu.mapapi.search.poi.PoiResult a(java.lang.String) -> a
com.baidu.mapapi.search.route.DrivingRouteLine -> com.baidu.mapapi.search.route.DrivingRouteLine:
    boolean b -> b
    java.util.List c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean isSupportTraffic() -> isSupportTraffic
    java.util.List getWayPoints() -> getWayPoints
    void a(java.util.List) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.route.DrivingRouteLine$DrivingStep -> com.baidu.mapapi.search.route.DrivingRouteLine$DrivingStep:
    int e -> e
    com.baidu.mapapi.search.core.RouteNode f -> f
    com.baidu.mapapi.search.core.RouteNode g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    int l -> l
    java.util.List c -> c
    int[] d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getWayPoints() -> getWayPoints
    int getDirection() -> getDirection
    void a(int) -> a
    com.baidu.mapapi.search.core.RouteNode getEntrance() -> getEntrance
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    int[] getTrafficList() -> getTrafficList
    void a(java.util.List) -> a
    void a(int[]) -> a
    java.lang.String getEntranceInstructions() -> getEntranceInstructions
    void a(java.lang.String) -> a
    java.lang.String getExitInstructions() -> getExitInstructions
    void b(java.lang.String) -> b
    java.lang.String getInstructions() -> getInstructions
    void c(java.lang.String) -> c
    int getNumTurns() -> getNumTurns
    void b(int) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.route.DrivingRoutePlanOption -> com.baidu.mapapi.search.route.DrivingRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy c -> c
    java.util.List d -> d
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy e -> e
    com.baidu.mapapi.search.route.DrivingRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.DrivingRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
    com.baidu.mapapi.search.route.DrivingRoutePlanOption passBy(java.util.List) -> passBy
    com.baidu.mapapi.search.route.DrivingRoutePlanOption trafficPolicy(com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy) -> trafficPolicy
    com.baidu.mapapi.search.route.DrivingRoutePlanOption policy(com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy) -> policy
com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy -> com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy:
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_AVOID_JAM -> ECAR_AVOID_JAM
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_TIME_FIRST -> ECAR_TIME_FIRST
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_DIS_FIRST -> ECAR_DIS_FIRST
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_FEE_FIRST -> ECAR_FEE_FIRST
    int a -> a
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy[] b -> b
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy[] values() -> values
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy -> com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy:
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy ROUTE_PATH -> ROUTE_PATH
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy ROUTE_PATH_AND_TRAFFIC -> ROUTE_PATH_AND_TRAFFIC
    int a -> a
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy[] b -> b
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy[] values() -> values
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingTrafficPolicy valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
com.baidu.mapapi.search.route.DrivingRouteResult -> com.baidu.mapapi.search.route.DrivingRouteResult:
    java.util.List a -> a
    com.baidu.mapapi.search.core.TaxiInfo b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(java.util.List) -> a
    java.util.List getRouteLines() -> getRouteLines
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.route.OnGetRoutePlanResultListener -> com.baidu.mapapi.search.route.OnGetRoutePlanResultListener:
    void onGetWalkingRouteResult(com.baidu.mapapi.search.route.WalkingRouteResult) -> onGetWalkingRouteResult
    void onGetTransitRouteResult(com.baidu.mapapi.search.route.TransitRouteResult) -> onGetTransitRouteResult
    void onGetDrivingRouteResult(com.baidu.mapapi.search.route.DrivingRouteResult) -> onGetDrivingRouteResult
com.baidu.mapapi.search.route.PlanNode -> com.baidu.mapapi.search.route.PlanNode:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.baidu.mapapi.model.LatLng a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    com.baidu.mapapi.search.route.PlanNode withLocation(com.baidu.mapapi.model.LatLng) -> withLocation
    com.baidu.mapapi.search.route.PlanNode withCityNameAndPlaceName(java.lang.String,java.lang.String) -> withCityNameAndPlaceName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.route.RoutePlanSearch -> com.baidu.mapapi.search.route.RoutePlanSearch:
    com.baidu.platform.comapi.search.d a -> a
    com.baidu.mapapi.search.route.OnGetRoutePlanResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.route.RoutePlanSearch newInstance() -> newInstance
    void setOnGetRoutePlanResultListener(com.baidu.mapapi.search.route.OnGetRoutePlanResultListener) -> setOnGetRoutePlanResultListener
    boolean transitSearch(com.baidu.mapapi.search.route.TransitRoutePlanOption) -> transitSearch
    boolean walkingSearch(com.baidu.mapapi.search.route.WalkingRoutePlanOption) -> walkingSearch
    boolean drivingSearch(com.baidu.mapapi.search.route.DrivingRoutePlanOption) -> drivingSearch
    java.util.ArrayList a(com.baidu.mapapi.search.route.DrivingRoutePlanOption) -> a
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.route.RoutePlanSearch) -> a
    com.baidu.mapapi.search.route.OnGetRoutePlanResultListener b(com.baidu.mapapi.search.route.RoutePlanSearch) -> b
    int c(com.baidu.mapapi.search.route.RoutePlanSearch) -> c
com.baidu.mapapi.search.route.RoutePlanSearch$1 -> com.baidu.mapapi.search.route.RoutePlanSearch$1:
com.baidu.mapapi.search.route.RoutePlanSearch$a -> com.baidu.mapapi.search.route.RoutePlanSearch$a:
    com.baidu.mapapi.search.route.RoutePlanSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.route.SuggestAddrInfo -> com.baidu.mapapi.search.route.SuggestAddrInfo:
    java.util.List a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.List e -> e
    java.util.List f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getSuggestStartNode() -> getSuggestStartNode
    void a(java.util.List) -> a
    java.util.List getSuggestEndNode() -> getSuggestEndNode
    void b(java.util.List) -> b
    java.util.List getSuggestWpNode() -> getSuggestWpNode
    void c(java.util.List) -> c
    java.util.List getSuggestStartCity() -> getSuggestStartCity
    void d(java.util.List) -> d
    java.util.List getSuggestEndCity() -> getSuggestEndCity
    void e(java.util.List) -> e
    java.util.List getSuggestWpCity() -> getSuggestWpCity
    void f(java.util.List) -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.route.TransitRouteLine -> com.baidu.mapapi.search.route.TransitRouteLine:
    com.baidu.mapapi.search.core.TaxiInfo b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.baidu.mapapi.search.core.TaxiInfo getTaxitInfo() -> getTaxitInfo
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.route.TransitRouteLine$TransitStep -> com.baidu.mapapi.search.route.TransitRouteLine$TransitStep:
    com.baidu.mapapi.search.core.VehicleInfo c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getInstructions() -> getInstructions
    void a(com.baidu.mapapi.search.core.VehicleInfo) -> a
    void a(java.lang.String) -> a
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType getStepType() -> getStepType
    void a(com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType) -> a
    void b(java.lang.String) -> b
    java.util.List getWayPoints() -> getWayPoints
    com.baidu.mapapi.search.core.RouteNode getEntrance() -> getEntrance
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    com.baidu.mapapi.search.core.VehicleInfo getVehicleInfo() -> getVehicleInfo
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType -> com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType:
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType BUSLINE -> BUSLINE
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType SUBWAY -> SUBWAY
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType WAKLING -> WAKLING
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType[] $VALUES -> $VALUES
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType[] values() -> values
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.search.route.TransitRoutePlanOption -> com.baidu.mapapi.search.route.TransitRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy d -> d
    com.baidu.mapapi.search.route.TransitRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.TransitRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
    com.baidu.mapapi.search.route.TransitRoutePlanOption city(java.lang.String) -> city
    com.baidu.mapapi.search.route.TransitRoutePlanOption policy(com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy) -> policy
com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy -> com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy:
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_TIME_FIRST -> EBUS_TIME_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_TRANSFER_FIRST -> EBUS_TRANSFER_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_WALK_FIRST -> EBUS_WALK_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_NO_SUBWAY -> EBUS_NO_SUBWAY
    int a -> a
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy[] b -> b
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy[] values() -> values
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
com.baidu.mapapi.search.route.TransitRouteResult -> com.baidu.mapapi.search.route.TransitRouteResult:
    com.baidu.mapapi.search.core.TaxiInfo a -> a
    java.util.List b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    void a(java.util.List) -> a
    java.util.List getRouteLines() -> getRouteLines
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.route.WalkingRouteLine -> com.baidu.mapapi.search.route.WalkingRouteLine:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.util.List getAllStep() -> getAllStep
com.baidu.mapapi.search.route.WalkingRouteLine$WalkingStep -> com.baidu.mapapi.search.route.WalkingRouteLine$WalkingStep:
    int c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getWayPoints() -> getWayPoints
    int getDirection() -> getDirection
    void a(int) -> a
    com.baidu.mapapi.search.core.RouteNode getEntrance() -> getEntrance
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    void a(java.lang.String) -> a
    java.lang.String getEntranceInstructions() -> getEntranceInstructions
    void b(java.lang.String) -> b
    java.lang.String getExitInstructions() -> getExitInstructions
    void c(java.lang.String) -> c
    java.lang.String getInstructions() -> getInstructions
    void d(java.lang.String) -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.route.WalkingRoutePlanOption -> com.baidu.mapapi.search.route.WalkingRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    com.baidu.mapapi.search.route.WalkingRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.WalkingRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
com.baidu.mapapi.search.route.WalkingRouteResult -> com.baidu.mapapi.search.route.WalkingRouteResult:
    java.util.List a -> a
    com.baidu.mapapi.search.core.TaxiInfo b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getRouteLines() -> getRouteLines
    void a(java.util.List) -> a
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.route.a -> com.baidu.mapapi.search.route.a:
    com.baidu.mapapi.search.route.DrivingRouteLine a(android.os.Parcel) -> a
    com.baidu.mapapi.search.route.DrivingRouteLine[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.route.b -> com.baidu.mapapi.search.route.b:
    com.baidu.mapapi.search.route.DrivingRouteLine$DrivingStep a(android.os.Parcel) -> a
    com.baidu.mapapi.search.route.DrivingRouteLine$DrivingStep[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.route.c -> com.baidu.mapapi.search.route.c:
    com.baidu.mapapi.search.route.DrivingRouteResult a(android.os.Parcel) -> a
    com.baidu.mapapi.search.route.DrivingRouteResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.route.d -> com.baidu.mapapi.search.route.d:
    com.baidu.mapapi.search.route.PlanNode a(android.os.Parcel) -> a
    com.baidu.mapapi.search.route.PlanNode[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.route.e -> com.baidu.mapapi.search.route.e:
    com.baidu.mapapi.search.route.TransitRouteResult a(java.lang.String) -> a
    com.baidu.mapapi.search.route.DrivingRouteResult b(java.lang.String) -> b
    com.baidu.mapapi.search.route.WalkingRouteResult c(java.lang.String) -> c
    com.baidu.mapapi.search.core.TaxiInfo d(java.lang.String) -> d
    com.baidu.mapapi.search.core.VehicleInfo e(java.lang.String) -> e
    com.baidu.mapapi.search.core.RouteNode b(org.json.JSONObject,java.lang.String) -> b
    com.baidu.mapapi.search.core.RouteNode c(org.json.JSONObject,java.lang.String) -> c
    java.util.List d(org.json.JSONObject,java.lang.String) -> d
    com.baidu.mapapi.search.route.SuggestAddrInfo f(java.lang.String) -> f
    java.util.List a(org.json.JSONObject,java.lang.String) -> a
    java.util.List a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    java.lang.String g(java.lang.String) -> g
com.baidu.mapapi.search.route.f -> com.baidu.mapapi.search.route.f:
    com.baidu.mapapi.search.route.SuggestAddrInfo[] a(int) -> a
    com.baidu.mapapi.search.route.SuggestAddrInfo a(android.os.Parcel) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.route.g -> com.baidu.mapapi.search.route.g:
    com.baidu.mapapi.search.route.TransitRouteLine a(android.os.Parcel) -> a
    com.baidu.mapapi.search.route.TransitRouteLine[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.route.h -> com.baidu.mapapi.search.route.h:
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep a(android.os.Parcel) -> a
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.route.i -> com.baidu.mapapi.search.route.i:
    com.baidu.mapapi.search.route.TransitRouteResult a(android.os.Parcel) -> a
    com.baidu.mapapi.search.route.TransitRouteResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.route.j -> com.baidu.mapapi.search.route.j:
    com.baidu.mapapi.search.route.WalkingRouteLine a(android.os.Parcel) -> a
    com.baidu.mapapi.search.route.WalkingRouteLine[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.route.k -> com.baidu.mapapi.search.route.k:
    com.baidu.mapapi.search.route.WalkingRouteLine$WalkingStep a(android.os.Parcel) -> a
    com.baidu.mapapi.search.route.WalkingRouteLine$WalkingStep[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.route.l -> com.baidu.mapapi.search.route.l:
    com.baidu.mapapi.search.route.WalkingRouteResult a(android.os.Parcel) -> a
    com.baidu.mapapi.search.route.WalkingRouteResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.share.LocationShareURLOption -> com.baidu.mapapi.search.share.LocationShareURLOption:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.share.LocationShareURLOption location(com.baidu.mapapi.model.LatLng) -> location
    com.baidu.mapapi.search.share.LocationShareURLOption name(java.lang.String) -> name
    com.baidu.mapapi.search.share.LocationShareURLOption snippet(java.lang.String) -> snippet
com.baidu.mapapi.search.share.OnGetShareUrlResultListener -> com.baidu.mapapi.search.share.OnGetShareUrlResultListener:
    void onGetPoiDetailShareUrlResult(com.baidu.mapapi.search.share.ShareUrlResult) -> onGetPoiDetailShareUrlResult
    void onGetLocationShareUrlResult(com.baidu.mapapi.search.share.ShareUrlResult) -> onGetLocationShareUrlResult
com.baidu.mapapi.search.share.PoiDetailShareURLOption -> com.baidu.mapapi.search.share.PoiDetailShareURLOption:
    java.lang.String a -> a
    com.baidu.mapapi.search.share.PoiDetailShareURLOption poiUid(java.lang.String) -> poiUid
com.baidu.mapapi.search.share.ShareUrlResult -> com.baidu.mapapi.search.share.ShareUrlResult:
    java.lang.String a -> a
    int b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getUrl() -> getUrl
    void a(java.lang.String) -> a
    void a(int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.share.ShareUrlSearch -> com.baidu.mapapi.search.share.ShareUrlSearch:
    com.baidu.platform.comapi.search.d a -> a
    com.baidu.mapapi.search.share.OnGetShareUrlResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.share.ShareUrlSearch newInstance() -> newInstance
    boolean requestPoiDetailShareUrl(com.baidu.mapapi.search.share.PoiDetailShareURLOption) -> requestPoiDetailShareUrl
    boolean requestLocationShareUrl(com.baidu.mapapi.search.share.LocationShareURLOption) -> requestLocationShareUrl
    void setOnGetShareUrlResultListener(com.baidu.mapapi.search.share.OnGetShareUrlResultListener) -> setOnGetShareUrlResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.share.ShareUrlSearch) -> a
    com.baidu.mapapi.search.share.OnGetShareUrlResultListener b(com.baidu.mapapi.search.share.ShareUrlSearch) -> b
    int c(com.baidu.mapapi.search.share.ShareUrlSearch) -> c
com.baidu.mapapi.search.share.ShareUrlSearch$1 -> com.baidu.mapapi.search.share.ShareUrlSearch$1:
com.baidu.mapapi.search.share.ShareUrlSearch$a -> com.baidu.mapapi.search.share.ShareUrlSearch$a:
    com.baidu.mapapi.search.share.ShareUrlSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.share.a -> com.baidu.mapapi.search.share.a:
    com.baidu.mapapi.search.share.ShareUrlResult a(android.os.Parcel) -> a
    com.baidu.mapapi.search.share.ShareUrlResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.share.b -> com.baidu.mapapi.search.share.b:
    com.baidu.mapapi.search.share.ShareUrlResult a(java.lang.String) -> a
com.baidu.mapapi.search.sug.OnGetSuggestionResultListener -> com.baidu.mapapi.search.sug.OnGetSuggestionResultListener:
    void onGetSuggestionResult(com.baidu.mapapi.search.sug.SuggestionResult) -> onGetSuggestionResult
com.baidu.mapapi.search.sug.SuggestionResult -> com.baidu.mapapi.search.sug.SuggestionResult:
    java.util.ArrayList a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getAllSuggestions() -> getAllSuggestions
    void a(java.util.ArrayList) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.sug.SuggestionResult$SuggestionInfo -> com.baidu.mapapi.search.sug.SuggestionResult$SuggestionInfo:
    java.lang.String key -> key
    java.lang.String city -> city
    java.lang.String district -> district
    com.baidu.mapapi.model.LatLng pt -> pt
    java.lang.String uid -> uid
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.mapapi.search.sug.SuggestionSearch -> com.baidu.mapapi.search.sug.SuggestionSearch:
    com.baidu.platform.comapi.search.d a -> a
    com.baidu.mapapi.search.sug.OnGetSuggestionResultListener b -> b
    boolean c -> c
    com.baidu.mapapi.search.sug.SuggestionSearch newInstance() -> newInstance
    boolean requestSuggestion(com.baidu.mapapi.search.sug.SuggestionSearchOption) -> requestSuggestion
    void setOnGetSuggestionResultListener(com.baidu.mapapi.search.sug.OnGetSuggestionResultListener) -> setOnGetSuggestionResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.sug.SuggestionSearch) -> a
    com.baidu.mapapi.search.sug.OnGetSuggestionResultListener b(com.baidu.mapapi.search.sug.SuggestionSearch) -> b
com.baidu.mapapi.search.sug.SuggestionSearch$1 -> com.baidu.mapapi.search.sug.SuggestionSearch$1:
com.baidu.mapapi.search.sug.SuggestionSearch$a -> com.baidu.mapapi.search.sug.SuggestionSearch$a:
    com.baidu.mapapi.search.sug.SuggestionSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.sug.SuggestionSearchOption -> com.baidu.mapapi.search.sug.SuggestionSearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.search.sug.SuggestionSearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.sug.SuggestionSearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.sug.SuggestionSearchOption location(com.baidu.mapapi.model.LatLng) -> location
com.baidu.mapapi.search.sug.a -> com.baidu.mapapi.search.sug.a:
    com.baidu.mapapi.search.sug.SuggestionResult[] a(int) -> a
    com.baidu.mapapi.search.sug.SuggestionResult a(android.os.Parcel) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.sug.b -> com.baidu.mapapi.search.sug.b:
    com.baidu.mapapi.search.sug.SuggestionResult$SuggestionInfo[] a(int) -> a
    com.baidu.mapapi.search.sug.SuggestionResult$SuggestionInfo a(android.os.Parcel) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.mapapi.search.sug.c -> com.baidu.mapapi.search.sug.c:
    com.baidu.mapapi.search.sug.SuggestionResult a(java.lang.String) -> a
com.baidu.mapapi.utils.AreaUtil -> com.baidu.mapapi.utils.AreaUtil:
    double calculateArea(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> calculateArea
com.baidu.mapapi.utils.CoordinateConverter -> com.baidu.mapapi.utils.CoordinateConverter:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.utils.CoordinateConverter$CoordType b -> b
    com.baidu.mapapi.utils.CoordinateConverter coord(com.baidu.mapapi.model.LatLng) -> coord
    com.baidu.mapapi.utils.CoordinateConverter from(com.baidu.mapapi.utils.CoordinateConverter$CoordType) -> from
    com.baidu.mapapi.model.LatLng convert() -> convert
    com.baidu.mapapi.model.LatLng a(com.baidu.mapapi.model.LatLng) -> a
    com.baidu.mapapi.model.LatLng b(com.baidu.mapapi.model.LatLng) -> b
    com.baidu.mapapi.model.LatLng a(com.baidu.mapapi.model.LatLng,java.lang.String) -> a
com.baidu.mapapi.utils.CoordinateConverter$1 -> com.baidu.mapapi.utils.CoordinateConverter$1:
    int[] a -> a
com.baidu.mapapi.utils.CoordinateConverter$CoordType -> com.baidu.mapapi.utils.CoordinateConverter$CoordType:
    com.baidu.mapapi.utils.CoordinateConverter$CoordType GPS -> GPS
    com.baidu.mapapi.utils.CoordinateConverter$CoordType COMMON -> COMMON
    com.baidu.mapapi.utils.CoordinateConverter$CoordType[] $VALUES -> $VALUES
    com.baidu.mapapi.utils.CoordinateConverter$CoordType[] values() -> values
    com.baidu.mapapi.utils.CoordinateConverter$CoordType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.utils.DistanceUtil -> com.baidu.mapapi.utils.DistanceUtil:
    double getDistance(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> getDistance
com.baidu.mapapi.utils.OpenClientUtil -> com.baidu.mapapi.utils.OpenClientUtil:
    int getBaiduMapVersion(android.content.Context) -> getBaiduMapVersion
    void getLatestBaiduMapApp(android.content.Context) -> getLatestBaiduMapApp
com.baidu.mapapi.utils.SpatialRelationUtil -> com.baidu.mapapi.utils.SpatialRelationUtil:
    boolean isPolygonContainsPoint(java.util.List,com.baidu.mapapi.model.LatLng) -> isPolygonContainsPoint
    boolean isCircleContainsPoint(com.baidu.mapapi.model.LatLng,int,com.baidu.mapapi.model.LatLng) -> isCircleContainsPoint
    com.baidu.mapapi.model.LatLng getNearestPointFromLine(java.util.List,com.baidu.mapapi.model.LatLng) -> getNearestPointFromLine
    boolean a(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> a
    com.baidu.mapapi.model.LatLng b(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> b
com.baidu.mapapi.utils.a -> com.baidu.mapapi.utils.a:
    java.lang.String c -> c
    com.baidu.a.a.a.b d -> d
    com.baidu.a.a.a.a e -> e
    int a -> a
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.util.List j -> j
    com.baidu.mapapi.model.LatLng k -> k
    com.baidu.mapapi.model.LatLng l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    com.baidu.mapapi.model.LatLng r -> r
    int s -> s
    boolean t -> t
    boolean u -> u
    android.content.ServiceConnection b -> b
    java.lang.String a() -> a
    void a(android.content.Context) -> a
    boolean a(com.baidu.mapapi.utils.route.RouteParaOption,android.content.Context,int) -> a
    boolean a(com.baidu.mapapi.utils.poi.PoiParaOption,android.content.Context,int) -> a
    boolean a(com.baidu.mapapi.navi.NaviParaOption,android.content.Context,int) -> a
    boolean a(java.util.List,android.content.Context,int) -> a
    boolean a(android.content.Context,int) -> a
    boolean a(int) -> a
    void b(android.content.Context) -> b
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    boolean i() -> i
    boolean j() -> j
    boolean k() -> k
    boolean l() -> l
    void b(com.baidu.mapapi.utils.route.RouteParaOption,android.content.Context,int) -> b
    void b(com.baidu.mapapi.utils.poi.PoiParaOption,android.content.Context,int) -> b
    void b(com.baidu.mapapi.navi.NaviParaOption,android.content.Context,int) -> b
    void a(java.util.List,android.content.Context) -> a
    java.lang.String c(android.content.Context) -> c
    java.lang.String b() -> b
    com.baidu.a.a.a.a c() -> c
    com.baidu.a.a.a.a a(com.baidu.a.a.a.a) -> a
    boolean a(boolean) -> a
    com.baidu.a.a.a.b d() -> d
    com.baidu.a.a.a.b a(com.baidu.a.a.a.b) -> a
    boolean e() -> e
com.baidu.mapapi.utils.b -> com.baidu.mapapi.utils.b:
    int a -> a
    void a(android.os.IBinder) -> a
com.baidu.mapapi.utils.c -> com.baidu.mapapi.utils.c:
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.mapapi.utils.d -> com.baidu.mapapi.utils.d:
    com.baidu.mapapi.utils.c a -> a
    void a(android.os.IBinder) -> a
com.baidu.mapapi.utils.poi.BaiduMapPoiSearch -> com.baidu.mapapi.utils.poi.BaiduMapPoiSearch:
    boolean a -> a
    void setSupportWebPoi(boolean) -> setSupportWebPoi
    boolean openBaiduMapPoiDetialsPage(com.baidu.mapapi.utils.poi.PoiParaOption,android.content.Context) -> openBaiduMapPoiDetialsPage
    boolean openBaiduMapPoiNearbySearch(com.baidu.mapapi.utils.poi.PoiParaOption,android.content.Context) -> openBaiduMapPoiNearbySearch
    boolean dispatchPoiToBaiduMap(java.util.List,android.content.Context) -> dispatchPoiToBaiduMap
    void finish(android.content.Context) -> finish
    void a(com.baidu.mapapi.utils.poi.PoiParaOption,android.content.Context) -> a
    void b(com.baidu.mapapi.utils.poi.PoiParaOption,android.content.Context) -> b
com.baidu.mapapi.utils.poi.DispathcPoiData -> com.baidu.mapapi.utils.poi.DispathcPoiData:
    java.lang.String name -> name
    com.baidu.mapapi.model.LatLng pt -> pt
    java.lang.String addr -> addr
    java.lang.String uid -> uid
com.baidu.mapapi.utils.poi.IllegalPoiSearchArgumentException -> com.baidu.mapapi.utils.poi.IllegalPoiSearchArgumentException:
com.baidu.mapapi.utils.poi.PoiParaOption -> com.baidu.mapapi.utils.poi.PoiParaOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng c -> c
    int d -> d
    com.baidu.mapapi.utils.poi.PoiParaOption uid(java.lang.String) -> uid
    java.lang.String getUid() -> getUid
    com.baidu.mapapi.utils.poi.PoiParaOption key(java.lang.String) -> key
    java.lang.String getKey() -> getKey
    com.baidu.mapapi.utils.poi.PoiParaOption center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    com.baidu.mapapi.utils.poi.PoiParaOption radius(int) -> radius
    int getRadius() -> getRadius
com.baidu.mapapi.utils.route.BaiduMapRoutePlan -> com.baidu.mapapi.utils.route.BaiduMapRoutePlan:
    boolean a -> a
    void setSupportWebRoute(boolean) -> setSupportWebRoute
    boolean openBaiduMapWalkingRoute(com.baidu.mapapi.utils.route.RouteParaOption,android.content.Context) -> openBaiduMapWalkingRoute
    boolean openBaiduMapTransitRoute(com.baidu.mapapi.utils.route.RouteParaOption,android.content.Context) -> openBaiduMapTransitRoute
    void finish(android.content.Context) -> finish
    boolean openBaiduMapDrivingRoute(com.baidu.mapapi.utils.route.RouteParaOption,android.content.Context) -> openBaiduMapDrivingRoute
    void a(com.baidu.mapapi.utils.route.RouteParaOption,android.content.Context,int) -> a
com.baidu.mapapi.utils.route.IllegalRoutePlanArgumentException -> com.baidu.mapapi.utils.route.IllegalRoutePlanArgumentException:
com.baidu.mapapi.utils.route.RouteParaOption -> com.baidu.mapapi.utils.route.RouteParaOption:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.model.LatLng b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType f -> f
    com.baidu.mapapi.utils.route.RouteParaOption startPoint(com.baidu.mapapi.model.LatLng) -> startPoint
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.utils.route.RouteParaOption endPoint(com.baidu.mapapi.model.LatLng) -> endPoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    com.baidu.mapapi.utils.route.RouteParaOption startName(java.lang.String) -> startName
    java.lang.String getStartName() -> getStartName
    com.baidu.mapapi.utils.route.RouteParaOption endName(java.lang.String) -> endName
    java.lang.String getEndName() -> getEndName
    com.baidu.mapapi.utils.route.RouteParaOption busStrategyType(com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType) -> busStrategyType
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType getBusStrategyType() -> getBusStrategyType
    com.baidu.mapapi.utils.route.RouteParaOption cityName(java.lang.String) -> cityName
    java.lang.String getCityName() -> getCityName
com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType -> com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType:
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType bus_time_first -> bus_time_first
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType bus_transfer_little -> bus_transfer_little
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType bus_walk_little -> bus_walk_little
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType bus_no_subway -> bus_no_subway
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType bus_recommend_way -> bus_recommend_way
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType[] a -> a
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType[] values() -> values
    com.baidu.mapapi.utils.route.RouteParaOption$EBusStrategyType valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.a -> com.baidu.platform.comapi.a:
    java.lang.String a -> a
    android.content.Context b -> b
    android.os.Handler c -> c
    com.baidu.platform.comapi.d d -> d
    int e -> e
    com.baidu.platform.comapi.a f -> f
    int g -> g
    com.baidu.platform.comapi.a a() -> a
    void a(android.content.Context) -> a
    void b() -> b
    boolean c() -> c
    void d() -> d
    android.content.Context e() -> e
    void f() -> f
    void g() -> g
    void a(android.os.Message) -> a
    void a(com.baidu.platform.comapi.util.PermissionCheck$b) -> a
com.baidu.platform.comapi.b -> com.baidu.platform.comapi.b:
    com.baidu.platform.comapi.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.c -> com.baidu.platform.comapi.c:
    boolean a -> a
    void a(java.lang.String,android.content.Context) -> a
com.baidu.platform.comapi.d -> com.baidu.platform.comapi.d:
    java.lang.String a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
com.baidu.platform.comapi.favrite.FavSyncPoi -> com.baidu.platform.comapi.favrite.FavSyncPoi:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.inner.Point c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    boolean i -> i
    java.lang.String j -> j
com.baidu.platform.comapi.favrite.a -> com.baidu.platform.comapi.favrite.a:
    com.baidu.platform.comjni.map.favorite.a a -> a
    com.baidu.platform.comapi.favrite.a b -> b
    boolean c -> c
    boolean d -> d
    java.util.Vector e -> e
    java.util.Vector f -> f
    boolean g -> g
    com.baidu.platform.comapi.favrite.a$c h -> h
    com.baidu.platform.comapi.favrite.a$b i -> i
    com.baidu.platform.comapi.favrite.a a() -> a
    boolean h() -> h
    void b() -> b
    boolean i() -> i
    int a(java.lang.String,com.baidu.platform.comapi.favrite.FavSyncPoi) -> a
    boolean a(java.lang.String) -> a
    boolean c() -> c
    void j() -> j
    java.util.ArrayList d() -> d
    java.util.ArrayList e() -> e
    com.baidu.platform.comapi.favrite.FavSyncPoi b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    boolean b(java.lang.String,com.baidu.platform.comapi.favrite.FavSyncPoi) -> b
    java.lang.String f() -> f
    boolean g() -> g
com.baidu.platform.comapi.favrite.a$1 -> com.baidu.platform.comapi.favrite.a$1:
com.baidu.platform.comapi.favrite.a$a -> com.baidu.platform.comapi.favrite.a$a:
    com.baidu.platform.comapi.favrite.a a -> a
    int a(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.baidu.platform.comapi.favrite.a$b -> com.baidu.platform.comapi.favrite.a$b:
    long b -> b
    long c -> c
    com.baidu.platform.comapi.favrite.a a -> a
    void a() -> a
    void b() -> b
    boolean c() -> c
    boolean a(com.baidu.platform.comapi.favrite.a$b) -> a
    void b(com.baidu.platform.comapi.favrite.a$b) -> b
    void c(com.baidu.platform.comapi.favrite.a$b) -> c
com.baidu.platform.comapi.favrite.a$c -> com.baidu.platform.comapi.favrite.a$c:
    java.lang.String b -> b
    long c -> c
    long d -> d
    com.baidu.platform.comapi.favrite.a a -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean a(com.baidu.platform.comapi.favrite.a$c) -> a
    boolean b(com.baidu.platform.comapi.favrite.a$c) -> b
    java.lang.String c(com.baidu.platform.comapi.favrite.a$c) -> c
    void a(com.baidu.platform.comapi.favrite.a$c,java.lang.String) -> a
com.baidu.platform.comapi.location.CoordinateType -> com.baidu.platform.comapi.location.CoordinateType:
    java.lang.String BD09LL -> BD09LL
    java.lang.String BD09MC -> BD09MC
    java.lang.String GCJ02 -> GCJ02
    java.lang.String WGS84 -> WGS84
com.baidu.platform.comapi.map.A -> com.baidu.platform.comapi.map.A:
    com.baidu.platform.comapi.map.A a -> a
    com.baidu.platform.comapi.map.A b -> b
    int c -> c
    com.baidu.platform.comapi.map.A[] d -> d
    com.baidu.platform.comapi.map.A[] values() -> values
    com.baidu.platform.comapi.map.A valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.B -> com.baidu.platform.comapi.map.B:
    java.lang.String t -> t
    float a -> a
    int b -> b
    int c -> c
    double d -> d
    double e -> e
    int f -> f
    int g -> g
    long h -> h
    long i -> i
    com.baidu.platform.comapi.map.B$b j -> j
    com.baidu.platform.comapi.map.B$a k -> k
    boolean l -> l
    double m -> m
    double n -> n
    int o -> o
    java.lang.String p -> p
    float q -> q
    boolean r -> r
    int s -> s
    void a(android.os.Bundle) -> a
    android.os.Bundle a(com.baidu.platform.comapi.map.c) -> a
com.baidu.platform.comapi.map.B$a -> com.baidu.platform.comapi.map.B$a:
    long a -> a
    long b -> b
    long c -> c
    long d -> d
    com.baidu.mapapi.model.inner.Point e -> e
    com.baidu.mapapi.model.inner.Point f -> f
    com.baidu.mapapi.model.inner.Point g -> g
    com.baidu.mapapi.model.inner.Point h -> h
    com.baidu.platform.comapi.map.B i -> i
com.baidu.platform.comapi.map.B$b -> com.baidu.platform.comapi.map.B$b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    com.baidu.platform.comapi.map.B e -> e
com.baidu.platform.comapi.map.C -> com.baidu.platform.comapi.map.C:
    android.view.GestureDetector c -> c
    android.os.Handler d -> d
    int a -> a
    int b -> b
    com.baidu.platform.comapi.map.j e -> e
    com.baidu.platform.comapi.map.c f -> f
    com.baidu.platform.comapi.map.c b() -> b
    void a(android.content.Context,com.baidu.platform.comapi.map.z) -> a
    void f() -> f
    void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    int a() -> a
    void c() -> c
    void d() -> d
    void e() -> e
    void a(java.lang.String,android.graphics.Rect) -> a
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    com.baidu.platform.comapi.map.c a(com.baidu.platform.comapi.map.C) -> a
    com.baidu.platform.comapi.map.j b(com.baidu.platform.comapi.map.C) -> b
com.baidu.platform.comapi.map.D -> com.baidu.platform.comapi.map.D:
    com.baidu.platform.comapi.map.C a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.E -> com.baidu.platform.comapi.map.E:
com.baidu.platform.comapi.map.F -> com.baidu.platform.comapi.map.F:
    com.baidu.platform.comjni.map.basemap.a a -> a
    com.baidu.mapapi.model.inner.GeoPoint a(int,int) -> a
    android.graphics.Point a(com.baidu.mapapi.model.inner.GeoPoint) -> a
com.baidu.platform.comapi.map.G -> com.baidu.platform.comapi.map.G:
    java.lang.String h -> h
    android.os.Bundle e -> e
    java.lang.String f -> f
    int g -> g
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    android.os.Bundle b() -> b
    void a(android.os.Bundle) -> a
com.baidu.platform.comapi.map.H -> com.baidu.platform.comapi.map.H:
com.baidu.platform.comapi.map.I -> com.baidu.platform.comapi.map.I:
    android.os.Bundle a(int,int,int,android.content.Context) -> a
com.baidu.platform.comapi.map.J -> com.baidu.platform.comapi.map.J:
com.baidu.platform.comapi.map.K -> com.baidu.platform.comapi.map.K:
    java.lang.String a() -> a
    java.lang.String b() -> b
com.baidu.platform.comapi.map.MapRenderer -> com.baidu.platform.comapi.map.MapRenderer:
    java.lang.String d -> d
    long e -> e
    com.baidu.platform.comapi.map.MapRenderer$a f -> f
    com.baidu.platform.comapi.map.g g -> g
    int a -> a
    int b -> b
    int c -> c
    void nativeInit(long) -> nativeInit
    void nativeResize(long,int,int) -> nativeResize
    int nativeRender(long) -> nativeRender
    void a(long) -> a
    boolean a() -> a
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void a(javax.microedition.khronos.opengles.GL10) -> a
com.baidu.platform.comapi.map.MapRenderer$a -> com.baidu.platform.comapi.map.MapRenderer$a:
    void c() -> c
com.baidu.platform.comapi.map.a -> com.baidu.platform.comapi.map.a:
com.baidu.platform.comapi.map.b -> com.baidu.platform.comapi.map.b:
    long a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
com.baidu.platform.comapi.map.c -> com.baidu.platform.comapi.map.c:
    java.lang.String n -> n
    float a -> a
    float b -> b
    boolean o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    boolean s -> s
    boolean t -> t
    boolean u -> u
    boolean c -> c
    boolean d -> d
    boolean v -> v
    boolean w -> w
    com.baidu.platform.comapi.map.J x -> x
    com.baidu.platform.comapi.map.I y -> y
    android.content.Context z -> z
    java.util.List e -> e
    com.baidu.platform.comjni.map.basemap.a f -> f
    long g -> g
    java.util.List A -> A
    com.baidu.platform.comapi.map.x B -> B
    com.baidu.platform.comapi.map.e C -> C
    com.baidu.platform.comapi.map.l D -> D
    com.baidu.platform.comapi.map.E E -> E
    com.baidu.platform.comapi.map.H F -> F
    com.baidu.platform.comapi.map.p G -> G
    com.baidu.platform.comapi.map.k H -> H
    com.baidu.platform.comapi.map.m I -> I
    com.baidu.platform.comapi.map.a J -> J
    com.baidu.platform.comapi.map.n K -> K
    com.baidu.platform.comapi.map.F L -> L
    boolean h -> h
    int M -> M
    int N -> N
    int O -> O
    int i -> i
    com.baidu.platform.comapi.map.g$a P -> P
    android.view.VelocityTracker Q -> Q
    long R -> R
    long S -> S
    long T -> T
    long U -> U
    int V -> V
    long j -> j
    float W -> W
    float X -> X
    boolean Y -> Y
    long Z -> Z
    long aa -> aa
    boolean k -> k
    boolean l -> l
    boolean m -> m
    void a() -> a
    void a(com.baidu.platform.comapi.map.z) -> a
    void a(int,int) -> a
    void a(android.graphics.Point) -> a
    void a(boolean) -> a
    void a(android.os.Handler) -> a
    void b(android.os.Handler) -> b
    void b() -> b
    boolean c() -> c
    void b(boolean) -> b
    void a(com.baidu.platform.comapi.map.b) -> a
    boolean a(android.os.Bundle) -> a
    boolean e(android.os.Bundle) -> e
    boolean f(android.os.Bundle) -> f
    void c(boolean) -> c
    void a(com.baidu.platform.comapi.map.I) -> a
    boolean d() -> d
    void e() -> e
    com.baidu.mapapi.model.inner.GeoPoint b(int,int) -> b
    android.graphics.Point a(com.baidu.mapapi.model.inner.GeoPoint) -> a
    boolean f() -> f
    void d(boolean) -> d
    boolean g() -> g
    boolean h() -> h
    void e(boolean) -> e
    boolean i() -> i
    void f(boolean) -> f
    boolean j() -> j
    void g(boolean) -> g
    void k() -> k
    void b(android.os.Bundle) -> b
    void c(android.os.Bundle) -> c
    void d(android.os.Bundle) -> d
    void g(android.os.Bundle) -> g
    void l() -> l
    int a(int,int,int) -> a
    float a(int,int,int,int,int,int) -> a
    boolean m() -> m
    void h(boolean) -> h
    boolean n() -> n
    void i(boolean) -> i
    void o() -> o
    void a(java.lang.String,android.os.Bundle) -> a
    boolean p() -> p
    void j(boolean) -> j
    void k(boolean) -> k
    boolean q() -> q
    void l(boolean) -> l
    boolean r() -> r
    void m(boolean) -> m
    boolean s() -> s
    void a(com.baidu.platform.comapi.map.i) -> a
    void a(com.baidu.platform.comapi.map.n) -> a
    void a(com.baidu.platform.comapi.map.B) -> a
    void a(com.baidu.platform.comapi.map.B,int) -> a
    void t() -> t
    void u() -> u
    void n(boolean) -> n
    com.baidu.platform.comapi.map.B v() -> v
    int w() -> w
    int x() -> x
    com.baidu.platform.comapi.map.B y() -> y
    double z() -> z
    void A() -> A
    void B() -> B
    int a(android.os.Bundle,long,int,android.os.Bundle) -> a
    boolean a(long) -> a
    boolean a(android.view.MotionEvent) -> a
    void b(android.view.MotionEvent) -> b
    boolean c(android.view.MotionEvent) -> c
    boolean d(android.view.MotionEvent) -> d
    boolean c(int,int) -> c
    void C() -> C
    void D() -> D
com.baidu.platform.comapi.map.d -> com.baidu.platform.comapi.map.d:
com.baidu.platform.comapi.map.e -> com.baidu.platform.comapi.map.e:
com.baidu.platform.comapi.map.f -> com.baidu.platform.comapi.map.f:
    com.baidu.platform.comapi.map.f a -> a
    com.baidu.platform.comapi.map.f b -> b
    com.baidu.platform.comapi.map.f c -> c
    com.baidu.platform.comapi.map.f d -> d
    com.baidu.platform.comapi.map.f e -> e
    com.baidu.platform.comapi.map.f f -> f
    com.baidu.platform.comapi.map.f g -> g
    com.baidu.platform.comapi.map.f h -> h
    com.baidu.platform.comapi.map.f i -> i
    com.baidu.platform.comapi.map.f j -> j
    com.baidu.platform.comapi.map.f[] k -> k
    com.baidu.platform.comapi.map.f[] values() -> values
    com.baidu.platform.comapi.map.f valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.g -> com.baidu.platform.comapi.map.g:
    java.lang.String a -> a
    android.os.Handler b -> b
    com.baidu.platform.comapi.map.MapRenderer c -> c
    int d -> d
    int e -> e
    android.view.GestureDetector f -> f
    com.baidu.platform.comapi.map.c g -> g
    com.baidu.platform.comapi.map.c a() -> a
    void d() -> d
    boolean a(int,int,int,int,int,int) -> a
    void e() -> e
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void b() -> b
    void a(java.lang.String,android.graphics.Rect) -> a
    void c() -> c
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    com.baidu.platform.comapi.map.c a(com.baidu.platform.comapi.map.g) -> a
    int b(com.baidu.platform.comapi.map.g) -> b
    int c(com.baidu.platform.comapi.map.g) -> c
com.baidu.platform.comapi.map.g$a -> com.baidu.platform.comapi.map.g$a:
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    boolean e -> e
    float f -> f
    float g -> g
    double h -> h
com.baidu.platform.comapi.map.h -> com.baidu.platform.comapi.map.h:
    com.baidu.platform.comapi.map.g a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.i -> com.baidu.platform.comapi.map.i:
    void a() -> a
    void a(com.baidu.platform.comapi.map.B) -> a
    void b(com.baidu.platform.comapi.map.B) -> b
    void c(com.baidu.platform.comapi.map.B) -> c
    void a(android.view.MotionEvent) -> a
    void a(com.baidu.mapapi.model.inner.GeoPoint) -> a
    void a(java.lang.String) -> a
    void b(com.baidu.mapapi.model.inner.GeoPoint) -> b
    void c(com.baidu.mapapi.model.inner.GeoPoint) -> c
    void b() -> b
    void a(android.graphics.Bitmap) -> a
    void d(com.baidu.mapapi.model.inner.GeoPoint) -> d
    void e(com.baidu.mapapi.model.inner.GeoPoint) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.B) -> a
    void d() -> d
    void e() -> e
com.baidu.platform.comapi.map.j -> com.baidu.platform.comapi.map.j:
    java.util.concurrent.atomic.AtomicBoolean a -> a
    android.graphics.SurfaceTexture b -> b
    com.baidu.platform.comapi.map.j$a c -> c
    javax.microedition.khronos.egl.EGL10 d -> d
    javax.microedition.khronos.egl.EGLDisplay e -> e
    javax.microedition.khronos.egl.EGLContext f -> f
    javax.microedition.khronos.egl.EGLSurface g -> g
    javax.microedition.khronos.opengles.GL10 h -> h
    int i -> i
    boolean j -> j
    com.baidu.platform.comapi.map.C k -> k
    void a() -> a
    void b() -> b
    void c() -> c
    boolean a(int,int,int,int,int,int) -> a
    void d() -> d
    void e() -> e
    void run() -> run
com.baidu.platform.comapi.map.j$a -> com.baidu.platform.comapi.map.j$a:
    int a() -> a
com.baidu.platform.comapi.map.k -> com.baidu.platform.comapi.map.k:
com.baidu.platform.comapi.map.l -> com.baidu.platform.comapi.map.l:
com.baidu.platform.comapi.map.m -> com.baidu.platform.comapi.map.m:
com.baidu.platform.comapi.map.n -> com.baidu.platform.comapi.map.n:
    android.os.Bundle a(int,int,int) -> a
com.baidu.platform.comapi.map.o -> com.baidu.platform.comapi.map.o:
com.baidu.platform.comapi.map.p -> com.baidu.platform.comapi.map.p:
com.baidu.platform.comapi.map.q -> com.baidu.platform.comapi.map.q:
    int a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    java.util.ArrayList e -> e
    void a(java.util.ArrayList) -> a
    java.util.ArrayList a() -> a
com.baidu.platform.comapi.map.r -> com.baidu.platform.comapi.map.r:
    java.lang.String a -> a
    com.baidu.platform.comjni.map.basemap.a b -> b
    com.baidu.platform.comapi.map.r c -> c
    com.baidu.platform.comapi.map.w d -> d
    android.os.Handler e -> e
    com.baidu.platform.comapi.map.r a() -> a
    void g() -> g
    void h() -> h
    void b() -> b
    void a(com.baidu.platform.comapi.map.v) -> a
    void b(com.baidu.platform.comapi.map.v) -> b
    boolean a(int) -> a
    boolean b(int) -> b
    boolean c(int) -> c
    boolean d(int) -> d
    boolean e(int) -> e
    boolean a(boolean,boolean) -> a
    boolean f(int) -> f
    java.util.ArrayList c() -> c
    java.util.ArrayList d() -> d
    java.util.ArrayList a(java.lang.String) -> a
    com.baidu.platform.comapi.map.u g(int) -> g
    java.util.ArrayList e() -> e
    com.baidu.platform.comapi.map.r f() -> f
    com.baidu.platform.comapi.map.w a(com.baidu.platform.comapi.map.r) -> a
com.baidu.platform.comapi.map.s -> com.baidu.platform.comapi.map.s:
    com.baidu.platform.comapi.map.r a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.t -> com.baidu.platform.comapi.map.t:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.model.inner.GeoPoint g -> g
    int h -> h
    int i -> i
    boolean j -> j
    int k -> k
    int l -> l
com.baidu.platform.comapi.map.u -> com.baidu.platform.comapi.map.u:
    com.baidu.platform.comapi.map.t a -> a
    void a(com.baidu.platform.comapi.map.t) -> a
    com.baidu.platform.comapi.map.t a() -> a
com.baidu.platform.comapi.map.v -> com.baidu.platform.comapi.map.v:
    void a(int,int) -> a
com.baidu.platform.comapi.map.w -> com.baidu.platform.comapi.map.w:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.v b -> b
    void a(com.baidu.platform.comapi.map.v) -> a
    void b(com.baidu.platform.comapi.map.v) -> b
    void a(android.os.Message) -> a
com.baidu.platform.comapi.map.x -> com.baidu.platform.comapi.map.x:
com.baidu.platform.comapi.map.y -> com.baidu.platform.comapi.map.y:
    com.baidu.platform.comapi.map.y a -> a
    com.baidu.platform.comapi.map.y b -> b
    com.baidu.platform.comapi.map.y c -> c
    int d -> d
    com.baidu.platform.comapi.map.y[] e -> e
    com.baidu.platform.comapi.map.y[] values() -> values
    com.baidu.platform.comapi.map.y valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.z -> com.baidu.platform.comapi.map.z:
    com.baidu.platform.comapi.map.B a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    com.baidu.platform.comapi.map.z a(com.baidu.platform.comapi.map.B) -> a
    com.baidu.platform.comapi.map.z a(boolean) -> a
    com.baidu.platform.comapi.map.z a(int) -> a
    com.baidu.platform.comapi.map.z b(boolean) -> b
    com.baidu.platform.comapi.map.z c(boolean) -> c
    com.baidu.platform.comapi.map.z d(boolean) -> d
    com.baidu.platform.comapi.map.z e(boolean) -> e
com.baidu.platform.comapi.search.Event -> com.baidu.platform.comapi.search.Event:
com.baidu.platform.comapi.search.a -> com.baidu.platform.comapi.search.a:
    int a -> a
    com.baidu.mapapi.model.inner.Point b -> b
    java.lang.String c -> c
    java.lang.String d -> d
com.baidu.platform.comapi.search.b -> com.baidu.platform.comapi.search.b:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.platform.comapi.search.c -> com.baidu.platform.comapi.search.c:
    java.lang.String a -> a
    com.baidu.platform.comapi.search.b b -> b
    com.baidu.platform.comapi.search.d c -> c
    void a(com.baidu.platform.comapi.search.b) -> a
    void a() -> a
    void a(com.baidu.platform.comapi.search.d) -> a
    void a(android.os.Message) -> a
com.baidu.platform.comapi.search.d -> com.baidu.platform.comapi.search.d:
    java.lang.String a -> a
    com.baidu.platform.comjni.map.search.a b -> b
    long c -> c
    com.baidu.platform.comapi.search.c d -> d
    android.os.Handler e -> e
    int f -> f
    android.os.Bundle g -> g
    void a(com.baidu.platform.comapi.search.b) -> a
    void a() -> a
    int b() -> b
    void a(int) -> a
    boolean a(java.lang.String,java.lang.String,int,com.baidu.mapapi.model.inner.MapBound,int,java.util.Map) -> a
    boolean a(java.lang.String,int,int,int,com.baidu.mapapi.model.inner.MapBound,com.baidu.mapapi.model.inner.MapBound,java.util.Map,int) -> a
    boolean a(java.lang.String,int,int,com.baidu.mapapi.model.inner.MapBound,int,com.baidu.mapapi.model.inner.Point,java.util.Map) -> a
    android.os.Bundle a(com.baidu.platform.comapi.search.a) -> a
    boolean a(com.baidu.platform.comapi.search.a,com.baidu.platform.comapi.search.a,java.lang.String,com.baidu.mapapi.model.inner.MapBound,int,int,java.util.Map) -> a
    boolean a(com.baidu.platform.comapi.search.a,com.baidu.platform.comapi.search.a,java.lang.String,java.lang.String,java.lang.String,com.baidu.mapapi.model.inner.MapBound,int,int,int,java.util.ArrayList,java.util.Map) -> a
    boolean a(com.baidu.platform.comapi.search.a,com.baidu.platform.comapi.search.a,java.lang.String,java.lang.String,java.lang.String,com.baidu.mapapi.model.inner.MapBound,int,java.util.Map) -> a
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,int,java.lang.String,com.baidu.mapapi.model.inner.MapBound,int,com.baidu.mapapi.model.inner.Point) -> a
    boolean a(com.baidu.mapapi.model.inner.Point) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(com.baidu.mapapi.model.inner.Point,java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    java.lang.String b(int) -> b
    android.os.Bundle c() -> c
    long a(com.baidu.platform.comapi.search.d) -> a
    com.baidu.platform.comapi.search.c b(com.baidu.platform.comapi.search.d) -> b
com.baidu.platform.comapi.search.e -> com.baidu.platform.comapi.search.e:
    com.baidu.platform.comapi.search.d a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.search.f -> com.baidu.platform.comapi.search.f:
    com.baidu.mapapi.model.inner.Point a -> a
    java.lang.String b -> b
    java.lang.String c -> c
com.baidu.platform.comapi.util.PermissionCheck -> com.baidu.platform.comapi.util.PermissionCheck:
    java.lang.String a -> a
    android.content.Context b -> b
    java.util.Hashtable c -> c
    com.baidu.lbsapi.auth.LBSAuthManager d -> d
    com.baidu.lbsapi.auth.LBSAuthManagerListener e -> e
    com.baidu.platform.comapi.util.PermissionCheck$c f -> f
    void setPermissionCheckResultListener(com.baidu.platform.comapi.util.PermissionCheck$c) -> setPermissionCheckResultListener
    void init(android.content.Context) -> init
    int permissionCheck() -> permissionCheck
    void destory() -> destory
    com.baidu.platform.comapi.util.PermissionCheck$c a() -> a
com.baidu.platform.comapi.util.PermissionCheck$1 -> com.baidu.platform.comapi.util.PermissionCheck$1:
com.baidu.platform.comapi.util.PermissionCheck$a -> com.baidu.platform.comapi.util.PermissionCheck$a:
    void onAuthResult(int,java.lang.String) -> onAuthResult
com.baidu.platform.comapi.util.PermissionCheck$b -> com.baidu.platform.comapi.util.PermissionCheck$b:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String toString() -> toString
com.baidu.platform.comapi.util.PermissionCheck$c -> com.baidu.platform.comapi.util.PermissionCheck$c:
    void a(com.baidu.platform.comapi.util.PermissionCheck$b) -> a
com.baidu.platform.comapi.util.a -> com.baidu.platform.comapi.util.a:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.platform.comapi.util.a$a -> com.baidu.platform.comapi.util.a$a:
    java.lang.String a(byte[]) -> a
com.baidu.platform.comapi.util.b -> com.baidu.platform.comapi.util.b:
    android.os.Bundle a -> a
    double[] b -> b
    double[] c -> c
    double[][] d -> d
    double[][] e -> e
    com.baidu.platform.comapi.util.b$a a(com.baidu.platform.comapi.util.b$a,double[]) -> a
    com.baidu.mapapi.model.LatLng a(com.baidu.mapapi.model.inner.GeoPoint) -> a
    com.baidu.mapapi.model.inner.GeoPoint a(com.baidu.mapapi.model.LatLng) -> a
    com.baidu.mapapi.model.inner.Point b(com.baidu.mapapi.model.LatLng) -> b
    int a(com.baidu.mapapi.model.LatLng,int) -> a
    com.baidu.mapapi.model.LatLng a(java.lang.String) -> a
    com.baidu.mapapi.model.LatLng b(java.lang.String) -> b
    java.util.List c(java.lang.String) -> c
    com.baidu.mapapi.model.inner.Point a(float,float,java.lang.String) -> a
    java.util.List d(java.lang.String) -> d
com.baidu.platform.comapi.util.b$a -> com.baidu.platform.comapi.util.b$a:
    double a -> a
    double b -> b
com.baidu.platform.comapi.util.c -> com.baidu.platform.comapi.util.c:
    boolean a -> a
    java.lang.String b -> b
    int c -> c
    void a(android.content.Context) -> a
    android.net.NetworkInfo b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean a(android.net.NetworkInfo) -> a
com.baidu.platform.comapi.util.d -> com.baidu.platform.comapi.util.d:
    boolean a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.util.e -> com.baidu.platform.comapi.util.e:
    com.baidu.platform.comapi.util.e a -> a
    boolean b -> b
    boolean c -> c
    java.util.List d -> d
    com.baidu.platform.comapi.util.d e -> e
    java.lang.String f -> f
    com.baidu.platform.comapi.util.e a() -> a
    void a(android.content.Context) -> a
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    com.baidu.platform.comapi.util.d b() -> b
    com.baidu.platform.comapi.util.d b(android.content.Context) -> b
    boolean a(android.content.Context,com.baidu.platform.comapi.util.d) -> a
    boolean a(java.lang.String) -> a
com.baidu.platform.comapi.util.f -> com.baidu.platform.comapi.util.f:
    java.lang.String E -> E
    com.baidu.platform.comjni.map.commonmemcache.a a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    android.content.Context A -> A
    int B -> B
    float C -> C
    boolean F -> F
    int G -> G
    int H -> H
    java.lang.String D -> D
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void e(android.content.Context) -> e
    void f(android.content.Context) -> f
    byte[] a(android.content.Context) -> a
    void g(android.content.Context) -> g
    void b(android.content.Context) -> b
    android.os.Bundle a() -> a
    void b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void d() -> d
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String e() -> e
    int f() -> f
    java.lang.String g() -> g
    int h() -> h
    java.lang.String i() -> i
    int j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
com.baidu.platform.comjni.engine.AppEngine -> com.baidu.platform.comjni.engine.AppEngine:
    void despatchMessage(int,int,int,long) -> despatchMessage
    void InitClass() -> InitClass
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
com.baidu.platform.comjni.engine.JNIEngine -> com.baidu.platform.comjni.engine.JNIEngine:
    int initClass(java.lang.Object,int) -> initClass
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
com.baidu.platform.comjni.engine.a -> com.baidu.platform.comjni.engine.a:
    java.lang.String a -> a
    android.util.SparseArray b -> b
    void a(int,android.os.Handler) -> a
    void b(int,android.os.Handler) -> b
    void a(int,int,int,long) -> a
    void a() -> a
com.baidu.platform.comjni.map.basemap.BaseMapCallback -> com.baidu.platform.comjni.map.basemap.BaseMapCallback:
    android.util.LongSparseArray a -> a
    void addLayerDataInterface(long,com.baidu.platform.comjni.map.basemap.b) -> addLayerDataInterface
    void removeLayerDataInterface(long) -> removeLayerDataInterface
    int ReqLayerData(android.os.Bundle,long,int,android.os.Bundle) -> ReqLayerData
com.baidu.platform.comjni.map.basemap.JNIBaseMap -> com.baidu.platform.comjni.map.basemap.JNIBaseMap:
    long a -> a
    long Create() -> Create
    int SetCallback(long,com.baidu.platform.comjni.map.basemap.BaseMapCallback) -> SetCallback
    int Release(long) -> Release
    boolean Init(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> Init
    void OnPause(long) -> OnPause
    void OnResume(long) -> OnResume
    void ResetImageRes(long) -> ResetImageRes
    void SetMapStatus(long,android.os.Bundle) -> SetMapStatus
    int SetMapControlMode(long,int) -> SetMapControlMode
    android.os.Bundle GetMapStatus(long) -> GetMapStatus
    android.os.Bundle getDrawingMapStatus(long) -> getDrawingMapStatus
    float GetZoomToBound(long,android.os.Bundle) -> GetZoomToBound
    void ShowSatelliteMap(long,boolean) -> ShowSatelliteMap
    void ShowTrafficMap(long,boolean) -> ShowTrafficMap
    void ShowHotMap(long,boolean) -> ShowHotMap
    boolean GetBaiduHotMapCityInfo(long) -> GetBaiduHotMapCityInfo
    void ShowLayers(long,long,boolean) -> ShowLayers
    void UpdateLayers(long,long) -> UpdateLayers
    long AddLayer(long,int,int,java.lang.String) -> AddLayer
    void ClearLayer(long,long) -> ClearLayer
    java.lang.String GetNearlyObjID(long,long,int,int,int) -> GetNearlyObjID
    java.lang.String ScrPtToGeoPoint(long,int,int) -> ScrPtToGeoPoint
    java.lang.String GeoPtToScrPoint(long,int,int) -> GeoPtToScrPoint
    void SaveScreenToLocal(long,java.lang.String,android.os.Bundle) -> SaveScreenToLocal
    boolean OnRecordAdd(long,int) -> OnRecordAdd
    boolean OnRecordStart(long,int,boolean,int) -> OnRecordStart
    boolean OnRecordSuspend(long,int,boolean,int) -> OnRecordSuspend
    boolean OnRecordReload(long,int,boolean) -> OnRecordReload
    boolean OnRecordRemove(long,int,boolean) -> OnRecordRemove
    java.lang.String OnRecordGetAll(long) -> OnRecordGetAll
    java.lang.String OnRecordGetAt(long,int) -> OnRecordGetAt
    boolean OnRecordImport(long,boolean,boolean) -> OnRecordImport
    java.lang.String OnHotcityGet(long) -> OnHotcityGet
    java.lang.String OnSchcityGet(long,java.lang.String) -> OnSchcityGet
    void addOneOverlayItem(long,android.os.Bundle) -> addOneOverlayItem
    boolean addtileOverlay(long,android.os.Bundle) -> addtileOverlay
    void updateOneOverlayItem(long,android.os.Bundle) -> updateOneOverlayItem
    boolean updateSDKTile(long,android.os.Bundle) -> updateSDKTile
    boolean cleanSDKTileDataCache(long,long) -> cleanSDKTileDataCache
    void removeOneOverlayItem(long,android.os.Bundle) -> removeOneOverlayItem
    void PostStatInfo(long) -> PostStatInfo
    int MapProc(long,int,int,int) -> MapProc
    long CreateDuplicate(long) -> CreateDuplicate
    int[] GetScreenBuf(long,int[],int,int) -> GetScreenBuf
    void enableDrawHouseHeight(long,boolean) -> enableDrawHouseHeight
    boolean isDrawHouseHeightEnable(long) -> isDrawHouseHeightEnable
    void clearHeatMapLayerCache(long) -> clearHeatMapLayerCache
com.baidu.platform.comjni.map.basemap.a -> com.baidu.platform.comjni.map.basemap.a:
    java.lang.String a -> a
    long b -> b
    com.baidu.platform.comjni.map.basemap.JNIBaseMap c -> c
    java.util.List d -> d
    boolean a() -> a
    boolean b() -> b
    long c() -> c
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> a
    void d() -> d
    void e() -> e
    void f() -> f
    void a(android.os.Bundle) -> a
    int a(int) -> a
    android.os.Bundle g() -> g
    android.os.Bundle h() -> h
    float b(android.os.Bundle) -> b
    void a(boolean) -> a
    void b(boolean) -> b
    boolean i() -> i
    void c(boolean) -> c
    void a(long,boolean) -> a
    void a(long) -> a
    boolean c(android.os.Bundle) -> c
    boolean b(long) -> b
    boolean d(android.os.Bundle) -> d
    long a(int,int,java.lang.String) -> a
    void c(long) -> c
    java.lang.String a(int,int,int,int) -> a
    java.lang.String a(int,int) -> a
    java.lang.String b(int,int) -> b
    void a(java.lang.String,android.os.Bundle) -> a
    boolean b(int) -> b
    boolean a(int,boolean,int) -> a
    boolean b(int,boolean,int) -> b
    boolean a(int,boolean) -> a
    boolean b(int,boolean) -> b
    java.lang.String j() -> j
    java.lang.String c(int) -> c
    boolean a(boolean,boolean) -> a
    java.lang.String k() -> k
    java.lang.String a(java.lang.String) -> a
    void e(android.os.Bundle) -> e
    void f(android.os.Bundle) -> f
    void g(android.os.Bundle) -> g
    void l() -> l
    int a(long,int,int,int) -> a
    int[] a(int[],int,int) -> a
    void d(boolean) -> d
    boolean m() -> m
    void n() -> n
    void a(android.content.Context) -> a
com.baidu.platform.comjni.map.basemap.b -> com.baidu.platform.comjni.map.basemap.b:
    int a(android.os.Bundle,long,int,android.os.Bundle) -> a
    boolean a(long) -> a
com.baidu.platform.comjni.map.cloud.JniCloud -> com.baidu.platform.comjni.map.cloud.JniCloud:
    long create() -> create
    int release(long) -> release
    java.lang.String getSearchResult(long,int) -> getSearchResult
    void cloudSearch(long,android.os.Bundle) -> cloudSearch
    void cloudDetailSearch(long,android.os.Bundle) -> cloudDetailSearch
com.baidu.platform.comjni.map.cloud.a -> com.baidu.platform.comjni.map.cloud.a:
    java.lang.String a -> a
    long b -> b
    com.baidu.platform.comjni.map.cloud.JniCloud c -> c
    long a() -> a
    int b() -> b
    java.lang.String a(int) -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache -> com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache:
    long Create() -> Create
    void Init(long,android.os.Bundle) -> Init
com.baidu.platform.comjni.map.commonmemcache.a -> com.baidu.platform.comjni.map.commonmemcache.a:
    long a -> a
    com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache b -> b
    long a() -> a
    void a(android.os.Bundle) -> a
com.baidu.platform.comjni.map.favorite.JNIFavorite -> com.baidu.platform.comjni.map.favorite.JNIFavorite:
    long Create() -> Create
    int Release(long) -> Release
    boolean Load(long,java.lang.String,java.lang.String,java.lang.String,int,int,int) -> Load
    boolean SetType(long,int) -> SetType
    boolean Add(long,java.lang.String,java.lang.String) -> Add
    boolean Update(long,java.lang.String,java.lang.String) -> Update
    boolean Remove(long,java.lang.String) -> Remove
    boolean Clear(long) -> Clear
    java.lang.String GetValue(long,java.lang.String) -> GetValue
    int GetAll(long,android.os.Bundle) -> GetAll
    boolean IsExist(long,java.lang.String) -> IsExist
    boolean SaveCache(long) -> SaveCache
com.baidu.platform.comjni.map.favorite.a -> com.baidu.platform.comjni.map.favorite.a:
    long a -> a
    com.baidu.platform.comjni.map.favorite.JNIFavorite b -> b
    long a() -> a
    int b() -> b
    boolean a(java.lang.String,java.lang.String,java.lang.String,int,int,int) -> a
    boolean a(int) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(java.lang.String) -> a
    boolean c() -> c
    java.lang.String b(java.lang.String) -> b
    int a(android.os.Bundle) -> a
    boolean c(java.lang.String) -> c
    boolean d() -> d
com.baidu.platform.comjni.map.favorite.a$a -> com.baidu.platform.comjni.map.favorite.a$a:
    boolean a -> a
    void b() -> b
    void a() -> a
com.baidu.platform.comjni.map.search.JNISearch -> com.baidu.platform.comjni.map.search.JNISearch:
    long Create() -> Create
    int Release(long) -> Release
    java.lang.String GetSearchResult(long,int) -> GetSearchResult
    boolean ForceSearchByCityName(long,android.os.Bundle) -> ForceSearchByCityName
    boolean AreaSearch(long,android.os.Bundle) -> AreaSearch
    boolean RoutePlanByBus(long,android.os.Bundle) -> RoutePlanByBus
    boolean RoutePlanByCar(long,android.os.Bundle) -> RoutePlanByCar
    boolean RoutePlanByFoot(long,android.os.Bundle) -> RoutePlanByFoot
    boolean POIDetailSearchPlace(long,java.lang.String) -> POIDetailSearchPlace
    boolean BusLineDetailSearch(long,java.lang.String,java.lang.String) -> BusLineDetailSearch
    boolean SuggestionSearch(long,android.os.Bundle) -> SuggestionSearch
    boolean ReverseGeocodeSearch(long,int,int) -> ReverseGeocodeSearch
    boolean geocode(long,java.lang.String,java.lang.String) -> geocode
    boolean PoiRGCShareUrlSearch(long,int,int,java.lang.String,java.lang.String) -> PoiRGCShareUrlSearch
    boolean PoiDetailShareUrlSearch(long,java.lang.String) -> PoiDetailShareUrlSearch
    boolean MapBoundSearch(long,android.os.Bundle) -> MapBoundSearch
com.baidu.platform.comjni.map.search.a -> com.baidu.platform.comjni.map.search.a:
    java.lang.String a -> a
    long b -> b
    com.baidu.platform.comjni.map.search.JNISearch c -> c
    long a() -> a
    int b() -> b
    java.lang.String a(int) -> a
    boolean a(android.os.Bundle) -> a
    boolean b(android.os.Bundle) -> b
    boolean c(android.os.Bundle) -> c
    boolean d(android.os.Bundle) -> d
    boolean e(android.os.Bundle) -> e
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean f(android.os.Bundle) -> f
    boolean a(int,int) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(int,int,java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    boolean g(android.os.Bundle) -> g
com.baidu.platform.comjni.tools.BundleKeySet -> com.baidu.platform.comjni.tools.BundleKeySet:
    java.lang.String[] getBundleKeys(android.os.Bundle) -> getBundleKeys
com.baidu.platform.comjni.tools.JNITools -> com.baidu.platform.comjni.tools.JNITools:
    boolean TransGeoStr2Pt(java.lang.Object) -> TransGeoStr2Pt
    void TransNodeStr2Pt(java.lang.Object) -> TransNodeStr2Pt
    boolean TransGeoStr2ComplexPt(java.lang.Object) -> TransGeoStr2ComplexPt
    void GetDistanceByMC(java.lang.Object) -> GetDistanceByMC
    boolean CoordinateEncryptEx(float,float,java.lang.String,java.lang.Object) -> CoordinateEncryptEx
    java.lang.String GetToken() -> GetToken
com.baidu.platform.comjni.tools.ParcelItem -> com.baidu.platform.comjni.tools.ParcelItem:
    android.os.Bundle b -> b
    android.os.Parcelable$Creator a -> a
    void setBundle(android.os.Bundle) -> setBundle
    android.os.Bundle getBundle() -> getBundle
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.baidu.platform.comjni.tools.a -> com.baidu.platform.comjni.tools.a:
    com.baidu.mapapi.model.inner.a a(java.lang.String) -> a
    double a(com.baidu.mapapi.model.inner.Point,com.baidu.mapapi.model.inner.Point) -> a
    java.lang.String a() -> a
com.baidu.platform.comjni.tools.b -> com.baidu.platform.comjni.tools.b:
    com.baidu.platform.comjni.tools.ParcelItem a(android.os.Parcel) -> a
    com.baidu.platform.comjni.tools.ParcelItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.vi.VDeviceAPI -> com.baidu.vi.VDeviceAPI:
    android.os.PowerManager$WakeLock a -> a
    android.content.BroadcastReceiver b -> b
    long getTotalSpace() -> getTotalSpace
    long getFreeSpace() -> getFreeSpace
    long getSdcardTotalSpace() -> getSdcardTotalSpace
    long getSdcardFreeSpace() -> getSdcardFreeSpace
    long getTotalMemory() -> getTotalMemory
    long getAvailableMemory() -> getAvailableMemory
    java.lang.String getOsVersion() -> getOsVersion
    void setupSoftware(java.lang.String) -> setupSoftware
    java.lang.String getModuleFileName() -> getModuleFileName
    java.lang.String getSdcardPath() -> getSdcardPath
    java.lang.String getCachePath() -> getCachePath
    java.lang.String getAppVersion() -> getAppVersion
    int getCurrentNetworkType() -> getCurrentNetworkType
    boolean isWifiConnected() -> isWifiConnected
    com.baidu.vi.c getNetworkInfo(int) -> getNetworkInfo
    void setNetworkChangedCallback() -> setNetworkChangedCallback
    void unsetNetworkChangedCallback() -> unsetNetworkChangedCallback
    void onNetworkStateChanged() -> onNetworkStateChanged
    android.net.wifi.ScanResult[] getWifiHotpot() -> getWifiHotpot
    float getSystemMetricsX() -> getSystemMetricsX
    float getSystemMetricsY() -> getSystemMetricsY
    float getScreenDensity() -> getScreenDensity
    int getScreenDensityDpi() -> getScreenDensityDpi
    void setScreenAlwaysOn(boolean) -> setScreenAlwaysOn
    int getScreenBrightness() -> getScreenBrightness
    void makeCall(java.lang.String) -> makeCall
    void sendSMS(java.lang.String,java.lang.String) -> sendSMS
    int sendMMS(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMMS
    void openUrl(java.lang.String) -> openUrl
    java.lang.String getCellId() -> getCellId
    java.lang.String getLac() -> getLac
    java.lang.String getImei() -> getImei
    java.lang.String getImsi() -> getImsi
com.baidu.vi.VMsg -> com.baidu.vi.VMsg:
    java.lang.String a -> a
    android.os.Handler b -> b
    android.os.HandlerThread c -> c
    void init() -> init
    void destroy() -> destroy
    void postMessage(int,int,int,long) -> postMessage
    void OnUserCommand1(int,int,int,long) -> OnUserCommand1
    void a(int,int,int,long) -> a
com.baidu.vi.VMsg$a -> com.baidu.vi.VMsg$a:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.vi.a -> com.baidu.vi.a:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.vi.b -> com.baidu.vi.b:
    android.content.Context a -> a
    void a(android.content.Context) -> a
    android.content.Context a() -> a
com.baidu.vi.c -> com.baidu.vi.c:
    java.lang.String a -> a
    int b -> b
    int c -> c
com.baidu.vi.c$1 -> com.baidu.vi.c$1:
    int[] a -> a
com.cn7782.management.BuildConfig -> com.cn7782.management.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.cn7782.management.Manifest -> com.cn7782.management.Manifest:
com.cn7782.management.Manifest$permission -> com.cn7782.management.Manifest$permission:
    java.lang.String JPUSH_MESSAGE -> JPUSH_MESSAGE
com.cn7782.management.R -> com.cn7782.management.R:
com.cn7782.management.R$anim -> com.cn7782.management.R$anim:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_grow_fade_in_from_bottom -> abc_grow_fade_in_from_bottom
    int abc_popup_enter -> abc_popup_enter
    int abc_popup_exit -> abc_popup_exit
    int abc_shrink_fade_out_from_bottom -> abc_shrink_fade_out_from_bottom
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
    int alpha_in -> alpha_in
    int alpha_out -> alpha_out
    int fade_in -> fade_in
    int fade_out -> fade_out
    int head_in -> head_in
    int head_out -> head_out
    int hold -> hold
    int move_left_in_activity -> move_left_in_activity
    int move_left_out_activity -> move_left_out_activity
    int move_right_in_activity -> move_right_in_activity
    int move_right_out_activity -> move_right_out_activity
    int push_bottom_in -> push_bottom_in
    int push_bottom_out -> push_bottom_out
    int push_top_in -> push_top_in
    int push_top_in2 -> push_top_in2
    int push_top_out -> push_top_out
    int push_top_out2 -> push_top_out2
    int slide_alpha_in_right -> slide_alpha_in_right
    int slide_alpha_out_left -> slide_alpha_out_left
    int slide_bottom_to_up -> slide_bottom_to_up
    int slide_in_from_left -> slide_in_from_left
    int slide_in_from_right -> slide_in_from_right
    int slide_in_left -> slide_in_left
    int slide_in_right -> slide_in_right
    int slide_out_left -> slide_out_left
    int slide_out_right -> slide_out_right
    int slide_out_to_left -> slide_out_to_left
    int slide_out_to_right -> slide_out_to_right
    int slide_up_to_bottom -> slide_up_to_bottom
    int tip -> tip
    int voice_from_icon -> voice_from_icon
    int voice_to_icon -> voice_to_icon
com.cn7782.management.R$attr -> com.cn7782.management.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarPopupTheme -> actionBarPopupTheme
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarTheme -> actionBarTheme
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionOverflowMenuStyle -> actionOverflowMenuStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int alertDialogButtonGroupStyle -> alertDialogButtonGroupStyle
    int alertDialogCenterButtons -> alertDialogCenterButtons
    int alertDialogStyle -> alertDialogStyle
    int alertDialogTheme -> alertDialogTheme
    int alphaFactor -> alphaFactor
    int autoCompleteTextViewStyle -> autoCompleteTextViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int backgroundTint -> backgroundTint
    int backgroundTintMode -> backgroundTintMode
    int barSize -> barSize
    int borderWidth -> borderWidth
    int borderlessButtonStyle -> borderlessButtonStyle
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarNegativeButtonStyle -> buttonBarNegativeButtonStyle
    int buttonBarNeutralButtonStyle -> buttonBarNeutralButtonStyle
    int buttonBarPositiveButtonStyle -> buttonBarPositiveButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int buttonPanelSideLayout -> buttonPanelSideLayout
    int buttonStyle -> buttonStyle
    int buttonStyleSmall -> buttonStyleSmall
    int checkboxStyle -> checkboxStyle
    int checkedTextViewStyle -> checkedTextViewStyle
    int closeIcon -> closeIcon
    int closeItemLayout -> closeItemLayout
    int collapseContentDescription -> collapseContentDescription
    int collapseIcon -> collapseIcon
    int color -> color
    int colorAccent -> colorAccent
    int colorButtonNormal -> colorButtonNormal
    int colorControlActivated -> colorControlActivated
    int colorControlHighlight -> colorControlHighlight
    int colorControlNormal -> colorControlNormal
    int colorPrimary -> colorPrimary
    int colorPrimaryDark -> colorPrimaryDark
    int colorSwitchThumbNormal -> colorSwitchThumbNormal
    int commitIcon -> commitIcon
    int contentInsetEnd -> contentInsetEnd
    int contentInsetLeft -> contentInsetLeft
    int contentInsetRight -> contentInsetRight
    int contentInsetStart -> contentInsetStart
    int ctsListInitialLetterBg -> ctsListInitialLetterBg
    int ctsListInitialLetterColor -> ctsListInitialLetterColor
    int ctsListPrimaryTextColor -> ctsListPrimaryTextColor
    int ctsListPrimaryTextSize -> ctsListPrimaryTextSize
    int ctsListShowSiderBar -> ctsListShowSiderBar
    int customNavigationLayout -> customNavigationLayout
    int cvsListPrimaryTextColor -> cvsListPrimaryTextColor
    int cvsListPrimaryTextSize -> cvsListPrimaryTextSize
    int cvsListSecondaryTextColor -> cvsListSecondaryTextColor
    int cvsListSecondaryTextSize -> cvsListSecondaryTextSize
    int cvsListTimeTextColor -> cvsListTimeTextColor
    int cvsListTimeTextSize -> cvsListTimeTextSize
    int defaultQueryHint -> defaultQueryHint
    int dialogPreferredPadding -> dialogPreferredPadding
    int dialogTheme -> dialogTheme
    int disableChildrenWhenDisabled -> disableChildrenWhenDisabled
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int drawableSize -> drawableSize
    int drawerArrowStyle -> drawerArrowStyle
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int editTextBackground -> editTextBackground
    int editTextColor -> editTextColor
    int editTextStyle -> editTextStyle
    int elevation -> elevation
    int emojiconColumns -> emojiconColumns
    int emojiconRows -> emojiconRows
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int gapBetweenBars -> gapBetweenBars
    int goIcon -> goIcon
    int height -> height
    int hideOnContentScroll -> hideOnContentScroll
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int hover -> hover
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int isLightTheme -> isLightTheme
    int is_open_camera -> is_open_camera
    int itemPadding -> itemPadding
    int layout -> layout
    int layoutManager -> layoutManager
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listDividerAlertDialog -> listDividerAlertDialog
    int listItemLayout -> listItemLayout
    int listLayout -> listLayout
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int maxButtonHeight -> maxButtonHeight
    int measureWithLargestChild -> measureWithLargestChild
    int middleBarArrowSize -> middleBarArrowSize
    int msgListMyBubbleBackground -> msgListMyBubbleBackground
    int msgListOtherBubbleBackground -> msgListOtherBubbleBackground
    int msgListShowUserAvatar -> msgListShowUserAvatar
    int msgListShowUserNick -> msgListShowUserNick
    int multiChoiceItemLayout -> multiChoiceItemLayout
    int navigationContentDescription -> navigationContentDescription
    int navigationIcon -> navigationIcon
    int navigationMode -> navigationMode
    int numColumns -> numColumns
    int offBorderColor -> offBorderColor
    int offColor -> offColor
    int onColor -> onColor
    int overlapAnchor -> overlapAnchor
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int panelBackground -> panelBackground
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupPromptView -> popupPromptView
    int popupTheme -> popupTheme
    int popupWindowStyle -> popupWindowStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int prompt -> prompt
    int queryBackground -> queryBackground
    int queryHint -> queryHint
    int radioButtonStyle -> radioButtonStyle
    int ratingBarStyle -> ratingBarStyle
    int record_max_time -> record_max_time
    int reverseLayout -> reverseLayout
    int rippleColor -> rippleColor
    int searchHintIcon -> searchHintIcon
    int searchIcon -> searchIcon
    int searchViewStyle -> searchViewStyle
    int selectableItemBackground -> selectableItemBackground
    int selectableItemBackgroundBorderless -> selectableItemBackgroundBorderless
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int showText -> showText
    int singleChoiceItemLayout -> singleChoiceItemLayout
    int spanCount -> spanCount
    int spinBars -> spinBars
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerMode -> spinnerMode
    int spinnerStyle -> spinnerStyle
    int splitTrack -> splitTrack
    int spotColor -> spotColor
    int stackFromEnd -> stackFromEnd
    int state_above_anchor -> state_above_anchor
    int submitBackground -> submitBackground
    int subtitle -> subtitle
    int subtitleTextAppearance -> subtitleTextAppearance
    int subtitleTextStyle -> subtitleTextStyle
    int suggestionRowLayout -> suggestionRowLayout
    int switchCloseImage -> switchCloseImage
    int switchMinWidth -> switchMinWidth
    int switchOpenImage -> switchOpenImage
    int switchPadding -> switchPadding
    int switchStatus -> switchStatus
    int switchStyle -> switchStyle
    int switchTextAppearance -> switchTextAppearance
    int text -> text
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorAlertDialogListItem -> textColorAlertDialogListItem
    int textColorSearchUrl -> textColorSearchUrl
    int theme -> theme
    int thickness -> thickness
    int thumbTextPadding -> thumbTextPadding
    int title -> title
    int titleBarBackground -> titleBarBackground
    int titleBarLeftImage -> titleBarLeftImage
    int titleBarRightImage -> titleBarRightImage
    int titleBarTitle -> titleBarTitle
    int titleMarginBottom -> titleMarginBottom
    int titleMarginEnd -> titleMarginEnd
    int titleMarginStart -> titleMarginStart
    int titleMarginTop -> titleMarginTop
    int titleMargins -> titleMargins
    int titleTextAppearance -> titleTextAppearance
    int titleTextStyle -> titleTextStyle
    int toolbarNavigationButtonStyle -> toolbarNavigationButtonStyle
    int toolbarStyle -> toolbarStyle
    int topBottomBarArrowSize -> topBottomBarArrowSize
    int track -> track
    int voiceIcon -> voiceIcon
    int width -> width
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
com.cn7782.management.R$bool -> com.cn7782.management.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    int abc_action_bar_embed_tabs_pre_jb -> abc_action_bar_embed_tabs_pre_jb
    int abc_action_bar_expanded_action_views_exclusive -> abc_action_bar_expanded_action_views_exclusive
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_allowActionMenuItemTextWithIcon -> abc_config_allowActionMenuItemTextWithIcon
    int abc_config_closeDialogWhenTouchOutside -> abc_config_closeDialogWhenTouchOutside
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
com.cn7782.management.R$color -> com.cn7782.management.R$color:
    int abc_background_cache_hint_selector_material_dark -> abc_background_cache_hint_selector_material_dark
    int abc_background_cache_hint_selector_material_light -> abc_background_cache_hint_selector_material_light
    int abc_input_method_navigation_guard -> abc_input_method_navigation_guard
    int abc_primary_text_disable_only_material_dark -> abc_primary_text_disable_only_material_dark
    int abc_primary_text_disable_only_material_light -> abc_primary_text_disable_only_material_light
    int abc_primary_text_material_dark -> abc_primary_text_material_dark
    int abc_primary_text_material_light -> abc_primary_text_material_light
    int abc_search_url_text -> abc_search_url_text
    int abc_search_url_text_normal -> abc_search_url_text_normal
    int abc_search_url_text_pressed -> abc_search_url_text_pressed
    int abc_search_url_text_selected -> abc_search_url_text_selected
    int abc_secondary_text_material_dark -> abc_secondary_text_material_dark
    int abc_secondary_text_material_light -> abc_secondary_text_material_light
    int accent_material_dark -> accent_material_dark
    int accent_material_light -> accent_material_light
    int albumback -> albumback
    int ampm_text_color -> ampm_text_color
    int background -> background
    int background_floating_material_dark -> background_floating_material_dark
    int background_floating_material_light -> background_floating_material_light
    int background_material_dark -> background_material_dark
    int background_material_light -> background_material_light
    int balck -> balck
    int black -> black
    int black_deep -> black_deep
    int blue -> blue
    int bottom_bar_normal_bg -> bottom_bar_normal_bg
    int bottom_text_color_normal -> bottom_text_color_normal
    int brey_background -> brey_background
    int bright_foreground_disabled_material_dark -> bright_foreground_disabled_material_dark
    int bright_foreground_disabled_material_light -> bright_foreground_disabled_material_light
    int bright_foreground_inverse_material_dark -> bright_foreground_inverse_material_dark
    int bright_foreground_inverse_material_light -> bright_foreground_inverse_material_light
    int bright_foreground_material_dark -> bright_foreground_material_dark
    int bright_foreground_material_light -> bright_foreground_material_light
    int btn_answer_normal -> btn_answer_normal
    int btn_answer_pressed -> btn_answer_pressed
    int btn_blue_normal -> btn_blue_normal
    int btn_blue_pressed -> btn_blue_pressed
    int btn_gray_normal -> btn_gray_normal
    int btn_gray_pressed -> btn_gray_pressed
    int btn_gray_pressed_status -> btn_gray_pressed_status
    int btn_green_noraml -> btn_green_noraml
    int btn_green_pressed -> btn_green_pressed
    int btn_login_normal -> btn_login_normal
    int btn_login_pressed -> btn_login_pressed
    int btn_logout_normal -> btn_logout_normal
    int btn_logout_pressed -> btn_logout_pressed
    int btn_pressed_green_solid -> btn_pressed_green_solid
    int btn_register_normal -> btn_register_normal
    int btn_register_pressed -> btn_register_pressed
    int btn_white_normal -> btn_white_normal
    int btn_white_pressed -> btn_white_pressed
    int button_material_dark -> button_material_dark
    int button_material_light -> button_material_light
    int calendar_header -> calendar_header
    int calendar_selected_date_text -> calendar_selected_date_text
    int circle_background -> circle_background
    int color_half_alph_black -> color_half_alph_black
    int colorful_1 -> colorful_1
    int colorful_2 -> colorful_2
    int colorful_3 -> colorful_3
    int colorful_4 -> colorful_4
    int colorful_5 -> colorful_5
    int common_bg -> common_bg
    int common_bottom_bar_normal_bg -> common_bottom_bar_normal_bg
    int common_bottom_bar_selected_bg -> common_bottom_bar_selected_bg
    int common_botton_bar_blue -> common_botton_bar_blue
    int common_top_bar_blue -> common_top_bar_blue
    int content_text -> content_text
    int content_title -> content_title
    int darker_blue -> darker_blue
    int date_1 -> date_1
    int date_2 -> date_2
    int date_picker_selector -> date_picker_selector
    int date_picker_text_normal -> date_picker_text_normal
    int date_picker_view_animator -> date_picker_view_animator
    int date_picker_year_selector -> date_picker_year_selector
    int dim_foreground_disabled_material_dark -> dim_foreground_disabled_material_dark
    int dim_foreground_disabled_material_light -> dim_foreground_disabled_material_light
    int dim_foreground_material_dark -> dim_foreground_material_dark
    int dim_foreground_material_light -> dim_foreground_material_light
    int divider_list -> divider_list
    int done_text_color -> done_text_color
    int done_text_color_disabled -> done_text_color_disabled
    int done_text_color_normal -> done_text_color_normal
    int down_back -> down_back
    int error_item_color -> error_item_color
    int focus_circle_bg -> focus_circle_bg
    int fragment_more_bg -> fragment_more_bg
    int fresh_1 -> fresh_1
    int fresh_2 -> fresh_2
    int fresh_3 -> fresh_3
    int fresh_4 -> fresh_4
    int fresh_5 -> fresh_5
    int gray_normal -> gray_normal
    int gray_pressed -> gray_pressed
    int greens_1 -> greens_1
    int greens_2 -> greens_2
    int greens_3 -> greens_3
    int greens_4 -> greens_4
    int greens_5 -> greens_5
    int grid_state_focused -> grid_state_focused
    int grid_state_pressed -> grid_state_pressed
    int highlighted_text_material_dark -> highlighted_text_material_dark
    int highlighted_text_material_light -> highlighted_text_material_light
    int hint_foreground_material_dark -> hint_foreground_material_dark
    int hint_foreground_material_light -> hint_foreground_material_light
    int holo_blue_bright -> holo_blue_bright
    int holo_green_light -> holo_green_light
    int holo_orange_light -> holo_orange_light
    int holo_red_light -> holo_red_light
    int joyful_1 -> joyful_1
    int joyful_2 -> joyful_2
    int joyful_3 -> joyful_3
    int joyful_4 -> joyful_4
    int joyful_5 -> joyful_5
    int liberty_1 -> liberty_1
    int liberty_2 -> liberty_2
    int liberty_3 -> liberty_3
    int liberty_4 -> liberty_4
    int liberty_5 -> liberty_5
    int line_background -> line_background
    int line_color -> line_color
    int link_text_material_dark -> link_text_material_dark
    int link_text_material_light -> link_text_material_light
    int list_itease_primary_color -> list_itease_primary_color
    int list_itease_secondary_color -> list_itease_secondary_color
    int listview_color_down -> listview_color_down
    int listview_color_up -> listview_color_up
    int login_color -> login_color
    int mCirclePaint -> mCirclePaint
    int main_bg -> main_bg
    int main_blue -> main_blue
    int main_blue2 -> main_blue2
    int main_green -> main_green
    int main_item_down -> main_item_down
    int main_item_up -> main_item_up
    int main_orange -> main_orange
    int main_peah -> main_peah
    int main_purple -> main_purple
    int main_red -> main_red
    int main_yellow -> main_yellow
    int mark_text -> mark_text
    int material_blue_grey_800 -> material_blue_grey_800
    int material_blue_grey_900 -> material_blue_grey_900
    int material_blue_grey_950 -> material_blue_grey_950
    int material_deep_teal_200 -> material_deep_teal_200
    int material_deep_teal_500 -> material_deep_teal_500
    int mono_1 -> mono_1
    int mono_2 -> mono_2
    int mono_3 -> mono_3
    int mono_4 -> mono_4
    int mono_5 -> mono_5
    int msgback -> msgback
    int nCirclePaint -> nCirclePaint
    int numbers_text_color -> numbers_text_color
    int oCirclePaint -> oCirclePaint
    int orange -> orange
    int pastel_1 -> pastel_1
    int pastel_2 -> pastel_2
    int pastel_3 -> pastel_3
    int pastel_4 -> pastel_4
    int pastel_5 -> pastel_5
    int pressed_blue -> pressed_blue
    int pressed_blue2 -> pressed_blue2
    int pressed_green -> pressed_green
    int pressed_orange -> pressed_orange
    int pressed_peah -> pressed_peah
    int pressed_purple -> pressed_purple
    int pressed_red -> pressed_red
    int pressed_yellow -> pressed_yellow
    int primary_dark_material_dark -> primary_dark_material_dark
    int primary_dark_material_light -> primary_dark_material_light
    int primary_material_dark -> primary_material_dark
    int primary_material_light -> primary_material_light
    int primary_text_default_material_dark -> primary_text_default_material_dark
    int primary_text_default_material_light -> primary_text_default_material_light
    int primary_text_disabled_material_dark -> primary_text_disabled_material_dark
    int primary_text_disabled_material_light -> primary_text_disabled_material_light
    int red_text -> red_text
    int ripple_material_dark -> ripple_material_dark
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_dark -> secondary_text_default_material_dark
    int secondary_text_default_material_light -> secondary_text_default_material_light
    int secondary_text_disabled_material_dark -> secondary_text_disabled_material_dark
    int secondary_text_disabled_material_light -> secondary_text_disabled_material_light
    int switch_thumb_disabled_material_dark -> switch_thumb_disabled_material_dark
    int switch_thumb_disabled_material_light -> switch_thumb_disabled_material_light
    int switch_thumb_material_dark -> switch_thumb_material_dark
    int switch_thumb_material_light -> switch_thumb_material_light
    int switch_thumb_normal_material_dark -> switch_thumb_normal_material_dark
    int switch_thumb_normal_material_light -> switch_thumb_normal_material_light
    int text_orange -> text_orange
    int title_color -> title_color
    int top_bar_normal_bg -> top_bar_normal_bg
    int transparent -> transparent
    int transparent_black -> transparent_black
    int voip_interface_text_color -> voip_interface_text_color
    int vordiplom_1 -> vordiplom_1
    int vordiplom_2 -> vordiplom_2
    int vordiplom_3 -> vordiplom_3
    int vordiplom_4 -> vordiplom_4
    int vordiplom_5 -> vordiplom_5
    int vordiplom_6 -> vordiplom_6
    int white -> white
    int working -> working
com.cn7782.management.R$dimen -> com.cn7782.management.R$dimen:
    int abc_action_bar_content_inset_material -> abc_action_bar_content_inset_material
    int abc_action_bar_default_height_material -> abc_action_bar_default_height_material
    int abc_action_bar_default_padding_material -> abc_action_bar_default_padding_material
    int abc_action_bar_icon_vertical_padding_material -> abc_action_bar_icon_vertical_padding_material
    int abc_action_bar_navigation_padding_start_material -> abc_action_bar_navigation_padding_start_material
    int abc_action_bar_overflow_padding_end_material -> abc_action_bar_overflow_padding_end_material
    int abc_action_bar_overflow_padding_start_material -> abc_action_bar_overflow_padding_start_material
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin_material -> abc_action_bar_subtitle_bottom_margin_material
    int abc_action_bar_subtitle_top_margin_material -> abc_action_bar_subtitle_top_margin_material
    int abc_action_button_min_height_material -> abc_action_button_min_height_material
    int abc_action_button_min_width_material -> abc_action_button_min_width_material
    int abc_action_button_min_width_overflow_material -> abc_action_button_min_width_overflow_material
    int abc_alert_dialog_button_bar_height -> abc_alert_dialog_button_bar_height
    int abc_button_inset_horizontal_material -> abc_button_inset_horizontal_material
    int abc_button_inset_vertical_material -> abc_button_inset_vertical_material
    int abc_button_padding_horizontal_material -> abc_button_padding_horizontal_material
    int abc_button_padding_vertical_material -> abc_button_padding_vertical_material
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_control_corner_material -> abc_control_corner_material
    int abc_control_inset_material -> abc_control_inset_material
    int abc_control_padding_material -> abc_control_padding_material
    int abc_dialog_list_padding_vertical_material -> abc_dialog_list_padding_vertical_material
    int abc_dialog_min_width_major -> abc_dialog_min_width_major
    int abc_dialog_min_width_minor -> abc_dialog_min_width_minor
    int abc_dialog_padding_material -> abc_dialog_padding_material
    int abc_dialog_padding_top_material -> abc_dialog_padding_top_material
    int abc_disabled_alpha_material_dark -> abc_disabled_alpha_material_dark
    int abc_disabled_alpha_material_light -> abc_disabled_alpha_material_light
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_edit_text_inset_bottom_material -> abc_edit_text_inset_bottom_material
    int abc_edit_text_inset_horizontal_material -> abc_edit_text_inset_horizontal_material
    int abc_edit_text_inset_top_material -> abc_edit_text_inset_top_material
    int abc_floating_window_z -> abc_floating_window_z
    int abc_list_item_padding_horizontal_material -> abc_list_item_padding_horizontal_material
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_search_view_text_min_width -> abc_search_view_text_min_width
    int abc_switch_padding -> abc_switch_padding
    int abc_text_size_body_1_material -> abc_text_size_body_1_material
    int abc_text_size_body_2_material -> abc_text_size_body_2_material
    int abc_text_size_button_material -> abc_text_size_button_material
    int abc_text_size_caption_material -> abc_text_size_caption_material
    int abc_text_size_display_1_material -> abc_text_size_display_1_material
    int abc_text_size_display_2_material -> abc_text_size_display_2_material
    int abc_text_size_display_3_material -> abc_text_size_display_3_material
    int abc_text_size_display_4_material -> abc_text_size_display_4_material
    int abc_text_size_headline_material -> abc_text_size_headline_material
    int abc_text_size_large_material -> abc_text_size_large_material
    int abc_text_size_medium_material -> abc_text_size_medium_material
    int abc_text_size_menu_material -> abc_text_size_menu_material
    int abc_text_size_small_material -> abc_text_size_small_material
    int abc_text_size_subhead_material -> abc_text_size_subhead_material
    int abc_text_size_subtitle_material_toolbar -> abc_text_size_subtitle_material_toolbar
    int abc_text_size_title_material -> abc_text_size_title_material
    int abc_text_size_title_material_toolbar -> abc_text_size_title_material_toolbar
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int ampm_label_size -> ampm_label_size
    int ampm_left_padding -> ampm_left_padding
    int call_button_padding_left -> call_button_padding_left
    int call_button_padding_right -> call_button_padding_right
    int call_button_padding_vertical -> call_button_padding_vertical
    int charting_long -> charting_long
    int chat_nick_margin_left -> chat_nick_margin_left
    int chat_nick_text_size -> chat_nick_text_size
    int content_size -> content_size
    int count_num_size -> count_num_size
    int date_picker_component_width -> date_picker_component_width
    int date_picker_header_height -> date_picker_header_height
    int date_picker_header_text_size -> date_picker_header_text_size
    int date_picker_view_animator_height -> date_picker_view_animator_height
    int day_number_select_circle_radius -> day_number_select_circle_radius
    int day_number_size -> day_number_size
    int detail_left -> detail_left
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
    int disabled_alpha_material_dark -> disabled_alpha_material_dark
    int disabled_alpha_material_light -> disabled_alpha_material_light
    int done_button_height -> done_button_height
    int done_label_size -> done_label_size
    int eighteen_sp -> eighteen_sp
    int extra_time_label_margin -> extra_time_label_margin
    int field_margin_right -> field_margin_right
    int field_textsize -> field_textsize
    int fifteen_dip -> fifteen_dip
    int five_dip -> five_dip
    int footer_height -> footer_height
    int forty -> forty
    int handlerTextMax -> handlerTextMax
    int handlerTextMin -> handlerTextMin
    int header_height -> header_height
    int height_row_weixin -> height_row_weixin
    int height_top_bar -> height_top_bar
    int image_thumbnail_size -> image_thumbnail_size
    int image_thumbnail_spacing -> image_thumbnail_spacing
    int item_touch_helper_max_drag_scroll_per_frame -> item_touch_helper_max_drag_scroll_per_frame
    int kcool_slidingmenu_offset -> kcool_slidingmenu_offset
    int kcool_slidingmenu_shadowwidth -> kcool_slidingmenu_shadowwidth
    int login_button_size -> login_button_size
    int login_size -> login_size
    int margin_chat_activity -> margin_chat_activity
    int mark_size -> mark_size
    int minimum_margin_sides -> minimum_margin_sides
    int minimum_margin_top_bottom -> minimum_margin_top_bottom
    int month_day_label_text_size -> month_day_label_text_size
    int month_label_size -> month_label_size
    int month_list_item_header_height -> month_list_item_header_height
    int month_select_circle_radius -> month_select_circle_radius
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_subtext_size -> notification_subtext_size
    int padding_search_bar -> padding_search_bar
    int picker_dimen -> picker_dimen
    int selected_calendar_layout_height -> selected_calendar_layout_height
    int selected_date_day_size -> selected_date_day_size
    int selected_date_month_size -> selected_date_month_size
    int selected_date_year_size -> selected_date_year_size
    int separator_padding -> separator_padding
    int sidebar_text_size -> sidebar_text_size
    int size_avatar -> size_avatar
    int small_text_size -> small_text_size
    int ten_dip -> ten_dip
    int thirty_dip -> thirty_dip
    int thirty_dip_dip -> thirty_dip_dip
    int time_label_size -> time_label_size
    int title_size -> title_size
    int twenty_dip -> twenty_dip
    int twenty_five_dip -> twenty_five_dip
    int year_label_height -> year_label_height
    int year_label_text_size -> year_label_text_size
com.cn7782.management.R$drawable -> com.cn7782.management.R$drawable:
    int abc_ab_share_pack_mtrl_alpha -> abc_ab_share_pack_mtrl_alpha
    int abc_btn_borderless_material -> abc_btn_borderless_material
    int abc_btn_check_material -> abc_btn_check_material
    int abc_btn_check_to_on_mtrl_000 -> abc_btn_check_to_on_mtrl_000
    int abc_btn_check_to_on_mtrl_015 -> abc_btn_check_to_on_mtrl_015
    int abc_btn_default_mtrl_shape -> abc_btn_default_mtrl_shape
    int abc_btn_radio_material -> abc_btn_radio_material
    int abc_btn_radio_to_on_mtrl_000 -> abc_btn_radio_to_on_mtrl_000
    int abc_btn_radio_to_on_mtrl_015 -> abc_btn_radio_to_on_mtrl_015
    int abc_btn_rating_star_off_mtrl_alpha -> abc_btn_rating_star_off_mtrl_alpha
    int abc_btn_rating_star_on_mtrl_alpha -> abc_btn_rating_star_on_mtrl_alpha
    int abc_btn_switch_to_on_mtrl_00001 -> abc_btn_switch_to_on_mtrl_00001
    int abc_btn_switch_to_on_mtrl_00012 -> abc_btn_switch_to_on_mtrl_00012
    int abc_cab_background_internal_bg -> abc_cab_background_internal_bg
    int abc_cab_background_top_material -> abc_cab_background_top_material
    int abc_cab_background_top_mtrl_alpha -> abc_cab_background_top_mtrl_alpha
    int abc_dialog_material_background_dark -> abc_dialog_material_background_dark
    int abc_dialog_material_background_light -> abc_dialog_material_background_light
    int abc_edit_text_material -> abc_edit_text_material
    int abc_ic_ab_back_mtrl_am_alpha -> abc_ic_ab_back_mtrl_am_alpha
    int abc_ic_clear_mtrl_alpha -> abc_ic_clear_mtrl_alpha
    int abc_ic_commit_search_api_mtrl_alpha -> abc_ic_commit_search_api_mtrl_alpha
    int abc_ic_go_search_api_mtrl_alpha -> abc_ic_go_search_api_mtrl_alpha
    int abc_ic_menu_copy_mtrl_am_alpha -> abc_ic_menu_copy_mtrl_am_alpha
    int abc_ic_menu_cut_mtrl_alpha -> abc_ic_menu_cut_mtrl_alpha
    int abc_ic_menu_moreoverflow_mtrl_alpha -> abc_ic_menu_moreoverflow_mtrl_alpha
    int abc_ic_menu_paste_mtrl_am_alpha -> abc_ic_menu_paste_mtrl_am_alpha
    int abc_ic_menu_selectall_mtrl_alpha -> abc_ic_menu_selectall_mtrl_alpha
    int abc_ic_menu_share_mtrl_alpha -> abc_ic_menu_share_mtrl_alpha
    int abc_ic_search_api_mtrl_alpha -> abc_ic_search_api_mtrl_alpha
    int abc_ic_voice_search_api_mtrl_alpha -> abc_ic_voice_search_api_mtrl_alpha
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_mtrl_alpha -> abc_list_divider_mtrl_alpha
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_hardkey_panel_mtrl_mult -> abc_menu_hardkey_panel_mtrl_mult
    int abc_popup_background_mtrl_mult -> abc_popup_background_mtrl_mult
    int abc_ratingbar_full_material -> abc_ratingbar_full_material
    int abc_spinner_mtrl_am_alpha -> abc_spinner_mtrl_am_alpha
    int abc_spinner_textfield_background_material -> abc_spinner_textfield_background_material
    int abc_switch_thumb_material -> abc_switch_thumb_material
    int abc_switch_track_mtrl_alpha -> abc_switch_track_mtrl_alpha
    int abc_tab_indicator_material -> abc_tab_indicator_material
    int abc_tab_indicator_mtrl_alpha -> abc_tab_indicator_mtrl_alpha
    int abc_text_cursor_mtrl_alpha -> abc_text_cursor_mtrl_alpha
    int abc_textfield_activated_mtrl_alpha -> abc_textfield_activated_mtrl_alpha
    int abc_textfield_default_mtrl_alpha -> abc_textfield_default_mtrl_alpha
    int abc_textfield_search_activated_mtrl_alpha -> abc_textfield_search_activated_mtrl_alpha
    int abc_textfield_search_default_mtrl_alpha -> abc_textfield_search_default_mtrl_alpha
    int abc_textfield_search_material -> abc_textfield_search_material
    int action_bar_bg -> action_bar_bg
    int add -> add
    int add_1 -> add_1
    int add_dialog_et_bg -> add_dialog_et_bg
    int add_report -> add_report
    int amp1 -> amp1
    int amp10 -> amp10
    int amp2 -> amp2
    int amp3 -> amp3
    int amp4 -> amp4
    int amp5 -> amp5
    int amp6 -> amp6
    int amp7 -> amp7
    int amp8 -> amp8
    int amp9 -> amp9
    int amp_r_1 -> amp_r_1
    int amp_r_10 -> amp_r_10
    int amp_r_2 -> amp_r_2
    int amp_r_3 -> amp_r_3
    int amp_r_4 -> amp_r_4
    int amp_r_5 -> amp_r_5
    int amp_r_6 -> amp_r_6
    int amp_r_7 -> amp_r_7
    int amp_r_8 -> amp_r_8
    int amp_r_9 -> amp_r_9
    int arrow_down -> arrow_down
    int arrow_up -> arrow_up
    int back -> back
    int back_1 -> back_1
    int blue_frame -> blue_frame
    int bottom -> bottom
    int bottom_bar_bg -> bottom_bar_bg
    int broadcast -> broadcast
    int btn_add -> btn_add
    int btn_back -> btn_back
    int btn_choose -> btn_choose
    int btn_login -> btn_login
    int btn_meun -> btn_meun
    int btn_pressed -> btn_pressed
    int btn_submit -> btn_submit
    int btn_tick -> btn_tick
    int btn_unpressed -> btn_unpressed
    int cell_green_bg -> cell_green_bg
    int choose_date -> choose_date
    int choose_date_1 -> choose_date_1
    int ck_style -> ck_style
    int ck_style_false -> ck_style_false
    int ck_style_true -> ck_style_true
    int comment -> comment
    int common_btn -> common_btn
    int common_btn_normal -> common_btn_normal
    int common_btn_pressed -> common_btn_pressed
    int contact -> contact
    int corners_bg -> corners_bg
    int data -> data
    int default_header -> default_header
    int default_image -> default_image
    int delect_notice -> delect_notice
    int delete -> delete
    int delete_expression -> delete_expression
    int dialog_star_bg -> dialog_star_bg
    int dir_choose -> dir_choose
    int discuss_member -> discuss_member
    int distance -> distance
    int down_file -> down_file
    int driver_line -> driver_line
    int driver_walk_bg -> driver_walk_bg
    int ease_app_panel_video_icon -> ease_app_panel_video_icon
    int ease_appitem_del_btn_normal -> ease_appitem_del_btn_normal
    int ease_appitem_del_btn_pressed -> ease_appitem_del_btn_pressed
    int ease_back -> ease_back
    int ease_blue_add -> ease_blue_add
    int ease_btn_blue_normal_shape -> ease_btn_blue_normal_shape
    int ease_btn_blue_pressed_shape -> ease_btn_blue_pressed_shape
    int ease_btn_blue_selector -> ease_btn_blue_selector
    int ease_btn_cancel_bj -> ease_btn_cancel_bj
    int ease_btn_cancel_normal_shape -> ease_btn_cancel_normal_shape
    int ease_btn_cancel_pressed_shape -> ease_btn_cancel_pressed_shape
    int ease_chat_edit_normal -> ease_chat_edit_normal
    int ease_chat_face_normal -> ease_chat_face_normal
    int ease_chat_face_pressed -> ease_chat_face_pressed
    int ease_chat_image_normal -> ease_chat_image_normal
    int ease_chat_image_pressed -> ease_chat_image_pressed
    int ease_chat_image_selector -> ease_chat_image_selector
    int ease_chat_item_file -> ease_chat_item_file
    int ease_chat_location_normal -> ease_chat_location_normal
    int ease_chat_location_pressed -> ease_chat_location_pressed
    int ease_chat_location_selector -> ease_chat_location_selector
    int ease_chat_press_speak_btn -> ease_chat_press_speak_btn
    int ease_chat_press_speak_btn_normal -> ease_chat_press_speak_btn_normal
    int ease_chat_press_speak_btn_pressed -> ease_chat_press_speak_btn_pressed
    int ease_chat_send_btn_normal -> ease_chat_send_btn_normal
    int ease_chat_send_btn_pressed -> ease_chat_send_btn_pressed
    int ease_chat_send_btn_selector -> ease_chat_send_btn_selector
    int ease_chat_takepic_normal -> ease_chat_takepic_normal
    int ease_chat_takepic_pressed -> ease_chat_takepic_pressed
    int ease_chat_takepic_selector -> ease_chat_takepic_selector
    int ease_chat_video_call_receive -> ease_chat_video_call_receive
    int ease_chat_video_call_self -> ease_chat_video_call_self
    int ease_chat_video_mask_to -> ease_chat_video_mask_to
    int ease_chat_voice_call_receive -> ease_chat_voice_call_receive
    int ease_chat_voice_call_self -> ease_chat_voice_call_self
    int ease_chatfrom_bg -> ease_chatfrom_bg
    int ease_chatfrom_bg_focused -> ease_chatfrom_bg_focused
    int ease_chatfrom_bg_normal -> ease_chatfrom_bg_normal
    int ease_chatfrom_voice_playing -> ease_chatfrom_voice_playing
    int ease_chatfrom_voice_playing_f1 -> ease_chatfrom_voice_playing_f1
    int ease_chatfrom_voice_playing_f2 -> ease_chatfrom_voice_playing_f2
    int ease_chatfrom_voice_playing_f3 -> ease_chatfrom_voice_playing_f3
    int ease_chatting_biaoqing_btn_enable -> ease_chatting_biaoqing_btn_enable
    int ease_chatting_biaoqing_btn_normal -> ease_chatting_biaoqing_btn_normal
    int ease_chatting_setmode_keyboard_btn -> ease_chatting_setmode_keyboard_btn
    int ease_chatting_setmode_keyboard_btn_normal -> ease_chatting_setmode_keyboard_btn_normal
    int ease_chatting_setmode_keyboard_btn_pressed -> ease_chatting_setmode_keyboard_btn_pressed
    int ease_chatting_setmode_voice_btn -> ease_chatting_setmode_voice_btn
    int ease_chatting_setmode_voice_btn_normal -> ease_chatting_setmode_voice_btn_normal
    int ease_chatting_setmode_voice_btn_pressed -> ease_chatting_setmode_voice_btn_pressed
    int ease_chatto_bg -> ease_chatto_bg
    int ease_chatto_bg_focused -> ease_chatto_bg_focused
    int ease_chatto_bg_normal -> ease_chatto_bg_normal
    int ease_chatto_voice_playing -> ease_chatto_voice_playing
    int ease_chatto_voice_playing_f1 -> ease_chatto_voice_playing_f1
    int ease_chatto_voice_playing_f2 -> ease_chatto_voice_playing_f2
    int ease_chatto_voice_playing_f3 -> ease_chatto_voice_playing_f3
    int ease_close_icon -> ease_close_icon
    int ease_common_tab_bg -> ease_common_tab_bg
    int ease_contact_list_normal -> ease_contact_list_normal
    int ease_contact_list_selected -> ease_contact_list_selected
    int ease_conversation_normal -> ease_conversation_normal
    int ease_conversation_selected -> ease_conversation_selected
    int ease_default_avatar -> ease_default_avatar
    int ease_default_image -> ease_default_image
    int ease_delete_expression -> ease_delete_expression
    int ease_dx_checkbox_gray_on -> ease_dx_checkbox_gray_on
    int ease_dx_checkbox_off -> ease_dx_checkbox_off
    int ease_dx_checkbox_on -> ease_dx_checkbox_on
    int ease_edit_text_bg -> ease_edit_text_bg
    int ease_group_icon -> ease_group_icon
    int ease_groups_icon -> ease_groups_icon
    int ease_ic_launcher -> ease_ic_launcher
    int ease_icon_marka -> ease_icon_marka
    int ease_input_bar_bg_active -> ease_input_bar_bg_active
    int ease_input_bar_bg_normal -> ease_input_bar_bg_normal
    int ease_location_msg -> ease_location_msg
    int ease_login_error_icon -> ease_login_error_icon
    int ease_mm_listitem -> ease_mm_listitem
    int ease_mm_listitem_disable -> ease_mm_listitem_disable
    int ease_mm_listitem_grey -> ease_mm_listitem_grey
    int ease_mm_listitem_grey_normal -> ease_mm_listitem_grey_normal
    int ease_mm_listitem_pressed -> ease_mm_listitem_pressed
    int ease_mm_listitem_simple -> ease_mm_listitem_simple
    int ease_mm_title_back -> ease_mm_title_back
    int ease_mm_title_remove -> ease_mm_title_remove
    int ease_msg_state_fail_resend -> ease_msg_state_fail_resend
    int ease_msg_state_fail_resend_pressed -> ease_msg_state_fail_resend_pressed
    int ease_msg_state_failed_resend -> ease_msg_state_failed_resend
    int ease_new_friends_icon -> ease_new_friends_icon
    int ease_open_icon -> ease_open_icon
    int ease_record_animate_01 -> ease_record_animate_01
    int ease_record_animate_02 -> ease_record_animate_02
    int ease_record_animate_03 -> ease_record_animate_03
    int ease_record_animate_04 -> ease_record_animate_04
    int ease_record_animate_05 -> ease_record_animate_05
    int ease_record_animate_06 -> ease_record_animate_06
    int ease_record_animate_07 -> ease_record_animate_07
    int ease_record_animate_08 -> ease_record_animate_08
    int ease_record_animate_09 -> ease_record_animate_09
    int ease_record_animate_10 -> ease_record_animate_10
    int ease_record_animate_11 -> ease_record_animate_11
    int ease_record_animate_12 -> ease_record_animate_12
    int ease_record_animate_13 -> ease_record_animate_13
    int ease_record_animate_14 -> ease_record_animate_14
    int ease_recording_hint_bg -> ease_recording_hint_bg
    int ease_recording_text_hint_bg -> ease_recording_text_hint_bg
    int ease_seabar_input -> ease_seabar_input
    int ease_search_bar_icon_normal -> ease_search_bar_icon_normal
    int ease_search_clear -> ease_search_clear
    int ease_search_clear_normal -> ease_search_clear_normal
    int ease_search_clear_pressed -> ease_search_clear_pressed
    int ease_settings_normal -> ease_settings_normal
    int ease_settings_selected -> ease_settings_selected
    int ease_show_head_toast_bg -> ease_show_head_toast_bg
    int ease_sidebar_background_pressed -> ease_sidebar_background_pressed
    int ease_slidetab_bg_press -> ease_slidetab_bg_press
    int ease_timestampe_bg -> ease_timestampe_bg
    int ease_to_group_details_normal -> ease_to_group_details_normal
    int ease_type_select_btn -> ease_type_select_btn
    int ease_type_select_btn_nor -> ease_type_select_btn_nor
    int ease_type_select_btn_pressed -> ease_type_select_btn_pressed
    int ease_unread_count_bg -> ease_unread_count_bg
    int ease_unread_dot -> ease_unread_dot
    int ease_video_download_btn_nor -> ease_video_download_btn_nor
    int ease_video_play_btn_small_nor -> ease_video_play_btn_small_nor
    int ease_video_recorder_start_btn -> ease_video_recorder_start_btn
    int ease_video_recorder_stop_btn -> ease_video_recorder_stop_btn
    int ease_voice_unread -> ease_voice_unread
    int edit_text_bg -> edit_text_bg
    int ee_1 -> ee_1
    int ee_10 -> ee_10
    int ee_11 -> ee_11
    int ee_12 -> ee_12
    int ee_13 -> ee_13
    int ee_14 -> ee_14
    int ee_15 -> ee_15
    int ee_16 -> ee_16
    int ee_17 -> ee_17
    int ee_18 -> ee_18
    int ee_19 -> ee_19
    int ee_2 -> ee_2
    int ee_20 -> ee_20
    int ee_21 -> ee_21
    int ee_22 -> ee_22
    int ee_23 -> ee_23
    int ee_24 -> ee_24
    int ee_25 -> ee_25
    int ee_26 -> ee_26
    int ee_27 -> ee_27
    int ee_28 -> ee_28
    int ee_29 -> ee_29
    int ee_3 -> ee_3
    int ee_30 -> ee_30
    int ee_31 -> ee_31
    int ee_32 -> ee_32
    int ee_33 -> ee_33
    int ee_34 -> ee_34
    int ee_35 -> ee_35
    int ee_4 -> ee_4
    int ee_5 -> ee_5
    int ee_6 -> ee_6
    int ee_7 -> ee_7
    int ee_8 -> ee_8
    int ee_9 -> ee_9
    int em_actionbar_camera_icon -> em_actionbar_camera_icon
    int em_camera_switch_normal -> em_camera_switch_normal
    int em_camera_switch_pressed -> em_camera_switch_pressed
    int em_camera_switch_selector -> em_camera_switch_selector
    int em_chat_file_normal -> em_chat_file_normal
    int em_chat_file_pressed -> em_chat_file_pressed
    int em_chat_file_selector -> em_chat_file_selector
    int em_chat_video_call_normal -> em_chat_video_call_normal
    int em_chat_video_call_pressed -> em_chat_video_call_pressed
    int em_chat_video_call_selector -> em_chat_video_call_selector
    int em_chat_video_normal -> em_chat_video_normal
    int em_chat_video_pressed -> em_chat_video_pressed
    int em_chat_video_selector -> em_chat_video_selector
    int em_chat_voice_call_normal -> em_chat_voice_call_normal
    int em_chat_voice_call_pressed -> em_chat_voice_call_pressed
    int em_chat_voice_call_selector -> em_chat_voice_call_selector
    int em_context_menu_item_bg -> em_context_menu_item_bg
    int em_empty_photo -> em_empty_photo
    int em_photogrid_list_selector -> em_photogrid_list_selector
    int em_video_recorder_start_btn -> em_video_recorder_start_btn
    int em_video_recorder_stop_btn -> em_video_recorder_stop_btn
    int empty_photo -> empty_photo
    int enddate -> enddate
    int feed_image_shadow -> feed_image_shadow
    int five -> five
    int five_5 -> five_5
    int four -> four
    int four_4 -> four_4
    int frame -> frame
    int head_img_1 -> head_img_1
    int history -> history
    int history_point -> history_point
    int ic_camera -> ic_camera
    int ic_date -> ic_date
    int ic_launcher -> ic_launcher
    int icon_en -> icon_en
    int icon_geo -> icon_geo
    int icon_st -> icon_st
    int image_remover -> image_remover
    int img2 -> img2
    int info_layout -> info_layout
    int information_bg -> information_bg
    int kcool_slidingmenu_shadow -> kcool_slidingmenu_shadow
    int keep -> keep
    int lay_blue -> lay_blue
    int lay_blue2 -> lay_blue2
    int lay_green -> lay_green
    int lay_orange -> lay_orange
    int lay_peah -> lay_peah
    int lay_purple -> lay_purple
    int lay_red -> lay_red
    int lay_yellow -> lay_yellow
    int layout_button -> layout_button
    int left -> left
    int list_count -> list_count
    int list_read -> list_read
    int listview_state -> listview_state
    int loaddata -> loaddata
    int loadfaild -> loadfaild
    int loading_blue -> loading_blue
    int location -> location
    int loction -> loction
    int locus -> locus
    int login -> login
    int login_back -> login_back
    int login_bottom_layout -> login_bottom_layout
    int login_layout -> login_layout
    int login_line -> login_line
    int login_mobile -> login_mobile
    int login_name -> login_name
    int login_password -> login_password
    int login_submit_button -> login_submit_button
    int login_submit_button_1 -> login_submit_button_1
    int login_submit_layout -> login_submit_layout
    int logo -> logo
    int look -> look
    int look2 -> look2
    int main -> main
    int main1 -> main1
    int main_msg -> main_msg
    int mask -> mask
    int member -> member
    int meun -> meun
    int meun_1 -> meun_1
    int msg_close -> msg_close
    int my -> my
    int my1 -> my1
    int myjob -> myjob
    int notice -> notice
    int notification_template_icon_bg -> notification_template_icon_bg
    int notify -> notify
    int one -> one
    int one_1 -> one_1
    int onfail_image -> onfail_image
    int patrol_background -> patrol_background
    int patrol_content -> patrol_content
    int patrol_position -> patrol_position
    int patrol_time -> patrol_time
    int phone -> phone
    int photo -> photo
    int point -> point
    int point_layout -> point_layout
    int popupwindow -> popupwindow
    int position -> position
    int press_left_text_bg -> press_left_text_bg
    int press_right_text_bg -> press_right_text_bg
    int progressbar -> progressbar
    int pull_down -> pull_down
    int rb_blue_bg -> rb_blue_bg
    int record_clock -> record_clock
    int record_detail_no_gps -> record_detail_no_gps
    int record_detail_sumbit_btn -> record_detail_sumbit_btn
    int record_detail_sumbit_btn_2 -> record_detail_sumbit_btn_2
    int record_distance -> record_distance
    int recording -> recording
    int refresh -> refresh
    int report_five -> report_five
    int report_four -> report_four
    int report_grey_five -> report_grey_five
    int report_grey_four -> report_grey_four
    int report_grey_one -> report_grey_one
    int report_grey_six -> report_grey_six
    int report_grey_three -> report_grey_three
    int report_grey_two -> report_grey_two
    int report_one -> report_one
    int report_seven -> report_seven
    int report_six -> report_six
    int report_three -> report_three
    int report_two -> report_two
    int right -> right
    int schedule -> schedule
    int search -> search
    int search1 -> search1
    int search_puin -> search_puin
    int select_view_bg -> select_view_bg
    int selector_select_view_bg -> selector_select_view_bg
    int set -> set
    int set1 -> set1
    int shape_bottom_corner_no_top_line -> shape_bottom_corner_no_top_line
    int shape_no_corner_without_bottom -> shape_no_corner_without_bottom
    int shape_top_corner_no_bottom_line -> shape_top_corner_no_bottom_line
    int six -> six
    int sms -> sms
    int sos -> sos
    int starecamera -> starecamera
    int startdate -> startdate
    int state_general -> state_general
    int state_medium -> state_medium
    int state_safe -> state_safe
    int state_serious -> state_serious
    int stop -> stop
    int submit -> submit
    int submit_1 -> submit_1
    int three -> three
    int three_3 -> three_3
    int tick -> tick
    int tick_1 -> tick_1
    int time -> time
    int time2 -> time2
    int time_logo -> time_logo
    int timeconsuming -> timeconsuming
    int todo -> todo
    int top -> top
    int two -> two
    int two_2 -> two_2
    int updata_1 -> updata_1
    int upload -> upload
    int upload_exit -> upload_exit
    int videopic -> videopic
    int videoplay -> videoplay
    int voice_rcd_hint -> voice_rcd_hint
    int walk_line -> walk_line
    int welcome -> welcome
    int write -> write
    int yes -> yes
    int zoomin_disable -> zoomin_disable
com.cn7782.management.R$id -> com.cn7782.management.R$id:
    int Feedback_layout -> Feedback_layout
    int about_layout -> about_layout
    int action0 -> action0
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_root -> action_bar_root
    int action_bar_spinner -> action_bar_spinner
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_divider -> action_divider
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int action_settings -> action_settings
    int activity_chooser_view_content -> activity_chooser_view_content
    int add_circle_view -> add_circle_view
    int add_date -> add_date
    int add_history -> add_history
    int add_notice -> add_notice
    int add_patrol -> add_patrol
    int add_type -> add_type
    int address -> address
    int again_password -> again_password
    int alertTitle -> alertTitle
    int alert_message -> alert_message
    int alpha_view -> alpha_view
    int always -> always
    int ampm_hitspace -> ampm_hitspace
    int ampm_label -> ampm_label
    int animator -> animator
    int attachment_horizontalscroll -> attachment_horizontalscroll
    int attachment_list -> attachment_list
    int avatar -> avatar
    int avatar_container -> avatar_container
    int averageTime -> averageTime
    int back -> back
    int back_down -> back_down
    int baosong -> baosong
    int begTime -> begTime
    int beginning -> beginning
    int blank_string -> blank_string
    int bmapView -> bmapView
    int bottom_line -> bottom_line
    int btnCancel -> btnCancel
    int btnChangeDate -> btnChangeDate
    int btnOK -> btnOK
    int btn_cancel -> btn_cancel
    int btn_location_send -> btn_location_send
    int btn_more -> btn_more
    int btn_ok -> btn_ok
    int btn_press_to_speak -> btn_press_to_speak
    int btn_send -> btn_send
    int btn_set_mode_keyboard -> btn_set_mode_keyboard
    int btn_set_mode_voice -> btn_set_mode_voice
    int bubble -> bubble
    int business -> business
    int button -> button
    int buttonPanel -> buttonPanel
    int callANDsms -> callANDsms
    int call_phone -> call_phone
    int callimage -> callimage
    int callsms_cancel -> callsms_cancel
    int callsms_title -> callsms_title
    int camera_lin -> camera_lin
    int cancel -> cancel
    int cancel_action -> cancel_action
    int cancel_dialog_layout -> cancel_dialog_layout
    int cancel_tv -> cancel_tv
    int center_circle_view -> center_circle_view
    int center_view -> center_view
    int chart -> chart
    int chart_color -> chart_color
    int chart_count -> chart_count
    int chart_grid -> chart_grid
    int chart_layout1 -> chart_layout1
    int chart_title -> chart_title
    int charting_list -> charting_list
    int chat_menu_container -> chat_menu_container
    int chat_swipe_layout -> chat_swipe_layout
    int chatting_content_iv -> chatting_content_iv
    int chatting_length_iv -> chatting_length_iv
    int chatting_size_iv -> chatting_size_iv
    int chatting_status_btn -> chatting_status_btn
    int chatting_video_data_area -> chatting_video_data_area
    int checkbox -> checkbox
    int checkimages -> checkimages
    int checkmap_describe -> checkmap_describe
    int checkmap_distance -> checkmap_distance
    int checkmap_time -> checkmap_time
    int checkmap_timeconsuming -> checkmap_timeconsuming
    int choose_address -> choose_address
    int choose_begTime -> choose_begTime
    int choose_content -> choose_content
    int choose_endTime -> choose_endTime
    int choose_event_type -> choose_event_type
    int choose_jobType -> choose_jobType
    int choose_list -> choose_list
    int choose_status -> choose_status
    int choose_title -> choose_title
    int chronometer -> chronometer
    int chuzhi -> chuzhi
    int city -> city
    int close -> close
    int close_imageview -> close_imageview
    int collapseActionView -> collapseActionView
    int comment_content -> comment_content
    int comment_department -> comment_department
    int comment_image -> comment_image
    int comment_name -> comment_name
    int comment_time -> comment_time
    int conference -> conference
    int confirm_cancel -> confirm_cancel
    int confirm_delete -> confirm_delete
    int confirm_tv -> confirm_tv
    int contact_list -> contact_list
    int contact_name -> contact_name
    int contact_tel -> contact_tel
    int container -> container
    int content -> content
    int contentPager -> contentPager
    int contentPanel -> contentPanel
    int contentText -> contentText
    int content_container -> content_container
    int content_title -> content_title
    int contentlist -> contentlist
    int count -> count
    int countdownTv -> countdownTv
    int custom -> custom
    int customPanel -> customPanel
    int data_layout -> data_layout
    int date_head -> date_head
    int date_picker_day -> date_picker_day
    int date_picker_header -> date_picker_header
    int date_picker_month -> date_picker_month
    int date_picker_month_and_day -> date_picker_month_and_day
    int date_picker_year -> date_picker_year
    int date_tail -> date_tail
    int day_picker_selected_date_layout -> day_picker_selected_date_layout
    int decor_content_parent -> decor_content_parent
    int default_activity_button -> default_activity_button
    int delete_circle_view -> delete_circle_view
    int delete_conversation -> delete_conversation
    int delete_dialog_layout -> delete_dialog_layout
    int delete_show_layout -> delete_show_layout
    int department_name -> department_name
    int detail_content -> detail_content
    int detail_layout -> detail_layout
    int detail_title -> detail_title
    int dialog -> dialog
    int disableHome -> disableHome
    int distance_text -> distance_text
    int done -> done
    int done_button -> done_button
    int down -> down
    int downloading -> downloading
    int downloading_tip -> downloading_tip
    int drivingRoad -> drivingRoad
    int dropdown -> dropdown
    int duban -> duban
    int edit_circle_view -> edit_circle_view
    int edit_query -> edit_query
    int edit_submit -> edit_submit
    int edittext_layout -> edittext_layout
    int emojicon -> emojicon
    int emojicon_menu_container -> emojicon_menu_container
    int end -> end
    int endTime -> endTime
    int end_padder -> end_padder
    int end_time -> end_time
    int et_sendmessage -> et_sendmessage
    int event -> event
    int event_delete -> event_delete
    int event_play -> event_play
    int event_recording -> event_recording
    int event_type -> event_type
    int exit_login_layout -> exit_login_layout
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int extend_menu -> extend_menu
    int extend_menu_container -> extend_menu_container
    int falldownBtnsLy -> falldownBtnsLy
    int falldownCallBtn -> falldownCallBtn
    int falldownCancelBtn -> falldownCancelBtn
    int falldown_layout -> falldown_layout
    int falldown_toggle -> falldown_toggle
    int feedback_content -> feedback_content
    int file_size -> file_size
    int finish -> finish
    int first_gps_tip -> first_gps_tip
    int first_half_year -> first_half_year
    int fiveMinute -> fiveMinute
    int fl_error_item -> fl_error_item
    int floating_header -> floating_header
    int footer_infoText -> footer_infoText
    int footer_progressBar -> footer_progressBar
    int fragment_container -> fragment_container
    int gotott -> gotott
    int gridView -> gridView
    int gridview -> gridview
    int handlerText -> handlerText
    int handlerTitle -> handlerTitle
    int have_department -> have_department
    int have_head -> have_head
    int have_name -> have_name
    int have_read_list -> have_read_list
    int have_read_list2 -> have_read_list2
    int have_time -> have_time
    int head_arrowImageView -> head_arrowImageView
    int head_contentLayout -> head_contentLayout
    int head_iamge -> head_iamge
    int head_lastUpdatedTextView -> head_lastUpdatedTextView
    int head_progressBar -> head_progressBar
    int head_text -> head_text
    int head_tipsTextView -> head_tipsTextView
    int head_title -> head_title
    int head_title2 -> head_title2
    int header -> header
    int histort_point -> histort_point
    int history_distance -> history_distance
    int history_duration -> history_duration
    int history_list -> history_list
    int history_name -> history_name
    int history_remark -> history_remark
    int history_time -> history_time
    int home -> home
    int homeAsUp -> homeAsUp
    int hour_space -> hour_space
    int hours -> hours
    int icon -> icon
    int icon_camera -> icon_camera
    int id_dir_item_count -> id_dir_item_count
    int id_dir_item_image -> id_dir_item_image
    int id_dir_item_name -> id_dir_item_name
    int ifRoom -> ifRoom
    int image -> image
    int image1 -> image1
    int image2 -> image2
    int image3 -> image3
    int image4 -> image4
    int imageView -> imageView
    int imageView1 -> imageView1
    int image_layout -> image_layout
    int info -> info
    int info_head -> info_head
    int info_layout -> info_layout
    int input_menu -> input_menu
    int ip -> ip
    int isTop_iv -> isTop_iv
    int is_checked -> is_checked
    int item_grida_image -> item_grida_image
    int item_image2 -> item_image2
    int item_image3 -> item_image3
    int item_image4 -> item_image4
    int item_text -> item_text
    int item_text2 -> item_text2
    int item_text3 -> item_text3
    int item_text4 -> item_text4
    int item_touch_helper_previous_elevation -> item_touch_helper_previous_elevation
    int iv_call_icon -> iv_call_icon
    int iv_expression -> iv_expression
    int iv_face_checked -> iv_face_checked
    int iv_face_normal -> iv_face_normal
    int iv_image -> iv_image
    int iv_nav_indicator -> iv_nav_indicator
    int iv_nav_left -> iv_nav_left
    int iv_nav_right -> iv_nav_right
    int iv_switch_close -> iv_switch_close
    int iv_switch_open -> iv_switch_open
    int iv_unread_voice -> iv_unread_voice
    int iv_userhead -> iv_userhead
    int iv_voice -> iv_voice
    int job -> job
    int job_type -> job_type
    int jobtype_dialog_layout -> jobtype_dialog_layout
    int jobtype_value -> jobtype_value
    int kcool_addphoto_photo -> kcool_addphoto_photo
    int kcool_addphoto_remover -> kcool_addphoto_remover
    int kcool_title_back -> kcool_title_back
    int kcool_title_text -> kcool_title_text
    int kilometre -> kilometre
    int km1 -> km1
    int km2 -> km2
    int km3 -> km3
    int l_volume -> l_volume
    int last_month -> last_month
    int last_quarter -> last_quarter
    int last_time -> last_time
    int last_week -> last_week
    int lasttime_textview -> lasttime_textview
    int left_image -> left_image
    int left_layout -> left_layout
    int line -> line
    int line1 -> line1
    int line3 -> line3
    int list -> list
    int listMode -> listMode
    int list_itease_layout -> list_itease_layout
    int list_item -> list_item
    int ll_face_container -> ll_face_container
    int ll_loading -> ll_loading
    int loading -> loading
    int loading_layout -> loading_layout
    int loading_tip -> loading_tip
    int log_time -> log_time
    int login_button -> login_button
    int mHsv -> mHsv
    int mVideoView -> mVideoView
    int mViewPager -> mViewPager
    int main_contact -> main_contact
    int main_data -> main_data
    int main_history -> main_history
    int main_layout -> main_layout
    int main_ll -> main_ll
    int main_note -> main_note
    int main_operate -> main_operate
    int main_order -> main_order
    int main_schedule -> main_schedule
    int main_statistics -> main_statistics
    int main_updata -> main_updata
    int manger -> manger
    int maodun -> maodun
    int media_actions -> media_actions
    int menu_photo_count -> menu_photo_count
    int message -> message
    int message_center_layout -> message_center_layout
    int message_list -> message_list
    int mic_image -> mic_image
    int middle -> middle
    int min -> min
    int minutes -> minutes
    int minutes_space -> minutes_space
    int mobile_phone -> mobile_phone
    int modify_password_layout -> modify_password_layout
    int month_calendar_button -> month_calendar_button
    int month_text_view -> month_text_view
    int movieRecorderView -> movieRecorderView
    int msg_content -> msg_content
    int msg_look -> msg_look
    int msg_state -> msg_state
    int msg_status -> msg_status
    int msg_time -> msg_time
    int msg_title -> msg_title
    int msg_toggle_back -> msg_toggle_back
    int msg_toggle_sound -> msg_toggle_sound
    int msg_toggle_vibrator -> msg_toggle_vibrator
    int msgdetail_content -> msgdetail_content
    int multiply -> multiply
    int myDrivingRoad -> myDrivingRoad
    int myEventCount -> myEventCount
    int myRoad -> myRoad
    int myWalkingRoad -> myWalkingRoad
    int myWayAvgLong -> myWayAvgLong
    int myWayAvgTime -> myWayAvgTime
    int myWayCount -> myWayCount
    int my_layout -> my_layout
    int my_recycler_view -> my_recycler_view
    int my_report -> my_report
    int myprogress -> myprogress
    int myreport_list -> myreport_list
    int name -> name
    int nearly_march -> nearly_march
    int never -> never
    int new_password -> new_password
    int newmsg_textview -> newmsg_textview
    int noNotice -> noNotice
    int noRead_item_num -> noRead_item_num
    int no_cancel -> no_cancel
    int no_delete -> no_delete
    int nofinish_item_num -> nofinish_item_num
    int nolook_item_num -> nolook_item_num
    int none -> none
    int noread_textview -> noread_textview
    int normal -> normal
    int notice_button -> notice_button
    int notice_comment -> notice_comment
    int notice_content -> notice_content
    int notice_department -> notice_department
    int notice_edit_submit -> notice_edit_submit
    int notice_image -> notice_image
    int notice_image_layout -> notice_image_layout
    int notice_look -> notice_look
    int notice_submit -> notice_submit
    int notice_time -> notice_time
    int notice_title -> notice_title
    int noticedetail_content -> noticedetail_content
    int noticedetail_count -> noticedetail_count
    int noticedetail_delete -> noticedetail_delete
    int noticedetail_file -> noticedetail_file
    int noticedetail_list -> noticedetail_list
    int notify_img -> notify_img
    int now_circle_view -> now_circle_view
    int np_date -> np_date
    int np_hour -> np_hour
    int np_minute -> np_minute
    int number -> number
    int number2 -> number2
    int office_name -> office_name
    int old_password -> old_password
    int oneHour -> oneHour
    int one_month -> one_month
    int one_week -> one_week
    int one_year -> one_year
    int open -> open
    int open_gallery -> open_gallery
    int package_name -> package_name
    int pager -> pager
    int parentPanel -> parentPanel
    int parent_layout -> parent_layout
    int password -> password
    int patrol_address -> patrol_address
    int patrol_content -> patrol_content
    int patrol_describe -> patrol_describe
    int patrol_distance -> patrol_distance
    int patrol_list -> patrol_list
    int patrol_time -> patrol_time
    int patrol_timeconsuming -> patrol_timeconsuming
    int pb_load_local -> pb_load_local
    int percentage -> percentage
    int personal_data_layout -> personal_data_layout
    int personal_info_layout -> personal_info_layout
    int plan_beg_time -> plan_beg_time
    int plan_content -> plan_content
    int plan_end_time -> plan_end_time
    int point_address -> point_address
    int point_head -> point_head
    int point_name -> point_name
    int point_time -> point_time
    int popup_administrative -> popup_administrative
    int popup_notice -> popup_notice
    int port -> port
    int primary_menu -> primary_menu
    int primary_menu_container -> primary_menu_container
    int process -> process
    int progressBar -> progressBar
    int progress_bar -> progress_bar
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int pull_refresh_view -> pull_refresh_view
    int query -> query
    int r_volume -> r_volume
    int radio -> radio
    int recorder_start -> recorder_start
    int recorder_stop -> recorder_stop
    int recording_hint -> recording_hint
    int refreshContact -> refreshContact
    int remarks -> remarks
    int report_content -> report_content
    int report_department -> report_department
    int report_position -> report_position
    int report_scroll -> report_scroll
    int report_time -> report_time
    int report_title -> report_title
    int result_list -> result_list
    int rg_nav_content -> rg_nav_content
    int right_image -> right_image
    int right_layout -> right_layout
    int rl_bottom -> rl_bottom
    int rl_face -> rl_face
    int rl_nav -> rl_nav
    int rl_picture -> rl_picture
    int rl_tab -> rl_tab
    int roadLong -> roadLong
    int root -> root
    int root_roles -> root_roles
    int same_day -> same_day
    int schedule_content -> schedule_content
    int schedule_time -> schedule_time
    int schedule_title -> schedule_title
    int scheduletime -> scheduletime
    int screen -> screen
    int scrollView -> scrollView
    int scrollgridview -> scrollgridview
    int search_back -> search_back
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_bar_view -> search_bar_view
    int search_button -> search_button
    int search_clear -> search_clear
    int search_close_btn -> search_close_btn
    int search_date -> search_date
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_layout -> search_layout
    int search_list -> search_list
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_result -> search_result
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int searching -> searching
    int select_dialog_listview -> select_dialog_listview
    int select_type_list -> select_type_list
    int send_feedback -> send_feedback
    int send_sms -> send_sms
    int separator -> separator
    int set_layout -> set_layout
    int shake_layout -> shake_layout
    int shake_toggle -> shake_toggle
    int shijian -> shijian
    int shoot_button -> shoot_button
    int shortContent -> shortContent
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showDuration -> showDuration
    int showHome -> showHome
    int showTitle -> showTitle
    int show_month_view -> show_month_view
    int show_week_view -> show_week_view
    int show_year_view -> show_year_view
    int sidebar -> sidebar
    int signature -> signature
    int sildingDrawer -> sildingDrawer
    int smsiamge -> smsiamge
    int sos_iv -> sos_iv
    int spinner_layout -> spinner_layout
    int split_action_bar -> split_action_bar
    int src_atop -> src_atop
    int src_in -> src_in
    int src_over -> src_over
    int start_time -> start_time
    int statistics -> statistics
    int status -> status
    int status_bar_latest_event_content -> status_bar_latest_event_content
    int status_value -> status_value
    int submit_area -> submit_area
    int submit_btn -> submit_btn
    int submit_layout -> submit_layout
    int sumbit_btn -> sumbit_btn
    int sure -> sure
    int surfaceview -> surfaceview
    int sv -> sv
    int switch_btn -> switch_btn
    int tabMode -> tabMode
    int take_photo -> take_photo
    int take_video -> take_video
    int task -> task
    int telephone -> telephone
    int tenMinute -> tenMinute
    int text -> text
    int text1 -> text1
    int text2 -> text2
    int text3 -> text3
    int text4 -> text4
    int text5 -> text5
    int textSpacerNoButtons -> textSpacerNoButtons
    int textView -> textView
    int textview -> textview
    int thirtyMinute -> thirtyMinute
    int tile_back -> tile_back
    int time -> time
    int time_now -> time_now
    int time_picker -> time_picker
    int time_picker_dialog -> time_picker_dialog
    int timer_now -> timer_now
    int timer_text -> timer_text
    int timerr_now -> timerr_now
    int timestamp -> timestamp
    int title -> title
    int titleTv -> titleTv
    int title_back -> title_back
    int title_bar -> title_bar
    int title_image -> title_image
    int title_template -> title_template
    int title_text -> title_text
    int title_tick -> title_tick
    int topPanel -> topPanel
    int top_empty -> top_empty
    int top_layout -> top_layout
    int top_line -> top_line
    int trajectory_list -> trajectory_list
    int trajectory_spinner -> trajectory_spinner
    int tv_ack -> tv_ack
    int tv_chatcontent -> tv_chatcontent
    int tv_delivered -> tv_delivered
    int tv_file_name -> tv_file_name
    int tv_file_size -> tv_file_size
    int tv_file_state -> tv_file_state
    int tv_length -> tv_length
    int tv_location -> tv_location
    int tv_userid -> tv_userid
    int unfinish -> unfinish
    int unread_msg_number -> unread_msg_number
    int up -> up
    int upload_button -> upload_button
    int upload_list -> upload_list
    int upload_time -> upload_time
    int upload_title -> upload_title
    int useLogo -> useLogo
    int useTime -> useTime
    int user_name -> user_name
    int username -> username
    int vPager -> vPager
    int version_layout -> version_layout
    int video_data_area -> video_data_area
    int video_icon -> video_icon
    int view_count -> view_count
    int viewpager -> viewpager
    int voice_rcd_hint_rcding -> voice_rcd_hint_rcding
    int voice_recorder -> voice_recorder
    int walkingRoad -> walkingRoad
    int week_ago -> week_ago
    int week_calendar_button -> week_calendar_button
    int withText -> withText
    int work -> work
    int work_list -> work_list
    int work_state -> work_state
    int working_content -> working_content
    int working_position -> working_position
    int working_time -> working_time
    int working_title -> working_title
    int wrap_content -> wrap_content
    int xiaoan -> xiaoan
    int xiaoanlv -> xiaoanlv
    int zhian -> zhian
    int zongCount -> zongCount
com.cn7782.management.R$integer -> com.cn7782.management.R$integer:
    int abc_config_activityDefaultDur -> abc_config_activityDefaultDur
    int abc_config_activityShortDur -> abc_config_activityShortDur
    int abc_max_action_buttons -> abc_max_action_buttons
    int cancel_button_image_alpha -> cancel_button_image_alpha
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
com.cn7782.management.R$layout -> com.cn7782.management.R$layout:
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_up_container -> abc_action_bar_up_container
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item_material -> abc_action_mode_close_item_material
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_alert_dialog_material -> abc_alert_dialog_material
    int abc_dialog_title_material -> abc_dialog_title_material
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen_content_include -> abc_screen_content_include
    int abc_screen_simple -> abc_screen_simple
    int abc_screen_simple_overlay_action_mode -> abc_screen_simple_overlay_action_mode
    int abc_screen_toolbar -> abc_screen_toolbar
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_select_dialog_material -> abc_select_dialog_material
    int abc_simple_dropdown_hint -> abc_simple_dropdown_hint
    int activity_add_patrol -> activity_add_patrol
    int activity_add_schedule -> activity_add_schedule
    int activity_calendarmanager -> activity_calendarmanager
    int activity_change_information -> activity_change_information
    int activity_change_message -> activity_change_message
    int activity_charting -> activity_charting
    int activity_chat -> activity_chat
    int activity_checkmap -> activity_checkmap
    int activity_choose_address -> activity_choose_address
    int activity_choose_date -> activity_choose_date
    int activity_contactmanager -> activity_contactmanager
    int activity_conversation_list -> activity_conversation_list
    int activity_description -> activity_description
    int activity_dynamic -> activity_dynamic
    int activity_dynamicdetail -> activity_dynamicdetail
    int activity_event_report -> activity_event_report
    int activity_event_report2 -> activity_event_report2
    int activity_feedback -> activity_feedback
    int activity_have_read -> activity_have_read
    int activity_history_list -> activity_history_list
    int activity_information -> activity_information
    int activity_login -> activity_login
    int activity_loginsetting -> activity_loginsetting
    int activity_main -> activity_main
    int activity_main_tab -> activity_main_tab
    int activity_map -> activity_map
    int activity_media_chose -> activity_media_chose
    int activity_message -> activity_message
    int activity_msgdetail -> activity_msgdetail
    int activity_my_report -> activity_my_report
    int activity_myreport_detail -> activity_myreport_detail
    int activity_noticedetail -> activity_noticedetail
    int activity_patrol -> activity_patrol
    int activity_patroling2 -> activity_patroling2
    int activity_schedule_detail -> activity_schedule_detail
    int activity_select_type -> activity_select_type
    int activity_send_notice -> activity_send_notice
    int activity_statistics -> activity_statistics
    int activity_takevideo -> activity_takevideo
    int activity_trajectory -> activity_trajectory
    int activity_trajectory_list -> activity_trajectory_list
    int activity_update_schedule -> activity_update_schedule
    int activity_upload_offline -> activity_upload_offline
    int activity_welcome -> activity_welcome
    int addphoto_layout_view -> addphoto_layout_view
    int blank_adapter -> blank_adapter
    int blank_history_adapter -> blank_history_adapter
    int callsms_dialog_layout -> callsms_dialog_layout
    int charting_listview -> charting_listview
    int chartinglist_adapter -> chartinglist_adapter
    int choose_layout -> choose_layout
    int comment_listview -> comment_listview
    int comp_dialog_layout -> comp_dialog_layout
    int content_listview -> content_listview
    int customer_notitfication_layout -> customer_notitfication_layout
    int data_layout -> data_layout
    int date_picker_dialog -> date_picker_dialog
    int date_picker_done_button -> date_picker_done_button
    int date_picker_header_view -> date_picker_header_view
    int date_picker_selected_date -> date_picker_selected_date
    int date_picker_view_animator -> date_picker_view_animator
    int datedialog -> datedialog
    int delete_dialog_layout -> delete_dialog_layout
    int downloading -> downloading
    int ease_activity_baidumap -> ease_activity_baidumap
    int ease_activity_show_big_image -> ease_activity_show_big_image
    int ease_activity_show_file -> ease_activity_show_file
    int ease_alert_dialog -> ease_alert_dialog
    int ease_chat_menu_item -> ease_chat_menu_item
    int ease_chat_message_list -> ease_chat_message_list
    int ease_commom_back_btn -> ease_commom_back_btn
    int ease_conversation_item -> ease_conversation_item
    int ease_emojicon -> ease_emojicon
    int ease_expression_gridview -> ease_expression_gridview
    int ease_fragment_chat -> ease_fragment_chat
    int ease_fragment_contact_list -> ease_fragment_contact_list
    int ease_fragment_conversation_list -> ease_fragment_conversation_list
    int ease_layout_chat_primary_menu -> ease_layout_chat_primary_menu
    int ease_layout_emojicon_menu -> ease_layout_emojicon_menu
    int ease_row_chat_history -> ease_row_chat_history
    int ease_row_contact -> ease_row_contact
    int ease_row_expression -> ease_row_expression
    int ease_row_received_file -> ease_row_received_file
    int ease_row_received_location -> ease_row_received_location
    int ease_row_received_message -> ease_row_received_message
    int ease_row_received_picture -> ease_row_received_picture
    int ease_row_received_video -> ease_row_received_video
    int ease_row_received_video_call -> ease_row_received_video_call
    int ease_row_received_voice -> ease_row_received_voice
    int ease_row_received_voice_call -> ease_row_received_voice_call
    int ease_row_sent_file -> ease_row_sent_file
    int ease_row_sent_location -> ease_row_sent_location
    int ease_row_sent_message -> ease_row_sent_message
    int ease_row_sent_picture -> ease_row_sent_picture
    int ease_row_sent_video -> ease_row_sent_video
    int ease_row_sent_video_call -> ease_row_sent_video_call
    int ease_row_sent_voice -> ease_row_sent_voice
    int ease_row_sent_voice_call -> ease_row_sent_voice_call
    int ease_search_bar -> ease_search_bar
    int ease_search_bar_with_padding -> ease_search_bar_with_padding
    int ease_showvideo_activity -> ease_showvideo_activity
    int ease_widget_chat_input_menu -> ease_widget_chat_input_menu
    int ease_widget_chat_primary_menu -> ease_widget_chat_primary_menu
    int ease_widget_contact_list -> ease_widget_contact_list
    int ease_widget_emojicon -> ease_widget_emojicon
    int ease_widget_switch_button -> ease_widget_switch_button
    int ease_widget_title_bar -> ease_widget_title_bar
    int ease_widget_voice_recorder -> ease_widget_voice_recorder
    int em_choose_griditem -> em_choose_griditem
    int em_context_menu_for_image -> em_context_menu_for_image
    int em_context_menu_for_location -> em_context_menu_for_location
    int em_context_menu_for_text -> em_context_menu_for_text
    int em_context_menu_for_video -> em_context_menu_for_video
    int em_context_menu_for_voice -> em_context_menu_for_voice
    int em_image_grid_fragment -> em_image_grid_fragment
    int em_recorder_activity -> em_recorder_activity
    int falldown_act -> falldown_act
    int file_listview -> file_listview
    int fragment_image_preview_fragemnt -> fragment_image_preview_fragemnt
    int fragment_more -> fragment_more
    int fragment_photogallery_layout -> fragment_photogallery_layout
    int fragment_working -> fragment_working
    int have_read_layout -> have_read_layout
    int head_layout -> head_layout
    int item_photo_camera_layout -> item_photo_camera_layout
    int item_photo_image_layout -> item_photo_image_layout
    int item_published_grida -> item_published_grida
    int jobtype_dialog_layout -> jobtype_dialog_layout
    int layout_dialog_eventtype -> layout_dialog_eventtype
    int layout_dialog_operationselect -> layout_dialog_operationselect
    int list_dir_item -> list_dir_item
    int loading -> loading
    int mangement_layout_view_list_footer -> mangement_layout_view_list_footer
    int mangement_layout_view_list_header -> mangement_layout_view_list_header
    int mian_item -> mian_item
    int movie_recorder_view -> movie_recorder_view
    int msg_dialog_layout -> msg_dialog_layout
    int msg_listview -> msg_listview
    int mypatrol_layout -> mypatrol_layout
    int nav_radiogroup_item -> nav_radiogroup_item
    int notice_dialog_layout -> notice_dialog_layout
    int notification_media_action -> notification_media_action
    int notification_media_cancel_action -> notification_media_cancel_action
    int notification_template_big_media -> notification_template_big_media
    int notification_template_big_media_narrow -> notification_template_big_media_narrow
    int notification_template_lines -> notification_template_lines
    int notification_template_media -> notification_template_media
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    int pageitem_view -> pageitem_view
    int patrol_his_adapter -> patrol_his_adapter
    int point_layout -> point_layout
    int radiogroup_layout -> radiogroup_layout
    int record_voice_dialog_layout -> record_voice_dialog_layout
    int report_adapter -> report_adapter
    int return_view -> return_view
    int search_fragment -> search_fragment
    int search_listview -> search_listview
    int select_dialog_item_material -> select_dialog_item_material
    int select_dialog_multichoice_material -> select_dialog_multichoice_material
    int select_dialog_singlechoice_material -> select_dialog_singlechoice_material
    int shortcontact_listview -> shortcontact_listview
    int shortdepartment_listview -> shortdepartment_listview
    int spinner_layout -> spinner_layout
    int status_dialog_layout -> status_dialog_layout
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
    int time_header_label -> time_header_label
    int time_picker_dialog -> time_picker_dialog
    int title_view_layout -> title_view_layout
    int trajectory_history_list -> trajectory_history_list
    int upload_adapter -> upload_adapter
    int working_adapter -> working_adapter
    int year_label_text_view -> year_label_text_view
com.cn7782.management.R$menu -> com.cn7782.management.R$menu:
    int delete_message -> delete_message
    int login -> login
    int main -> main
    int photo_gallery_menu -> photo_gallery_menu
com.cn7782.management.R$raw -> com.cn7782.management.R$raw:
    int msg -> msg
    int ring -> ring
com.cn7782.management.R$string -> com.cn7782.management.R$string:
    int Add_a_button_was_clicked -> Add_a_button_was_clicked
    int Add_a_friend -> Add_a_friend
    int Add_group_members_fail -> Add_group_members_fail
    int Agree_with_failure -> Agree_with_failure
    int Agreed_to_your_group_chat_application -> Agreed_to_your_group_chat_application
    int Application_and_notify -> Application_and_notify
    int Apply_to_the_group_of -> Apply_to_the_group_of
    int Are_agree_with -> Are_agree_with
    int Are_connected_to_each_other -> Are_connected_to_each_other
    int Are_logged_out -> Are_logged_out
    int Are_moving_to_blacklist -> Are_moving_to_blacklist
    int Are_removed -> Are_removed
    int Cant_chat_with_yourself -> Cant_chat_with_yourself
    int Change_the_group_name -> Change_the_group_name
    int Confirm_password_cannot_be_empty -> Confirm_password_cannot_be_empty
    int Connection_failure -> Connection_failure
    int Current_version -> Current_version
    int Delete_failed -> Delete_failed
    int Delete_the_contact -> Delete_the_contact
    int Did_not_download -> Did_not_download
    int Dissolve_group_chat_tofail -> Dissolve_group_chat_tofail
    int Download_the_pictures -> Download_the_pictures
    int Download_the_pictures_new -> Download_the_pictures_new
    int Empty_the_chat_record -> Empty_the_chat_record
    int Exit_the_group_chat -> Exit_the_group_chat
    int Exit_the_group_chat_failure -> Exit_the_group_chat_failure
    int Failed_to_create_groups -> Failed_to_create_groups
    int Failed_to_download_file -> Failed_to_download_file
    int Failed_to_get_group_chat_information -> Failed_to_get_group_chat_information
    int Failed_to_join_the_group_chat -> Failed_to_join_the_group_chat
    int File_does_not_exist -> File_does_not_exist
    int Group_chat -> Group_chat
    int Group_chat_information -> Group_chat_information
    int Group_chat_profile -> Group_chat_profile
    int Group_name_cannot_be_empty -> Group_name_cannot_be_empty
    int Group_of_Lord -> Group_of_Lord
    int Hands_free -> Hands_free
    int Has_agreed_to -> Has_agreed_to
    int Has_agreed_to_your_friend_request -> Has_agreed_to_your_friend_request
    int Has_been_cancelled -> Has_been_cancelled
    int Has_refused_to -> Has_refused_to
    int Have_downloaded -> Have_downloaded
    int In_the_call -> In_the_call
    int Into_the_blacklist -> Into_the_blacklist
    int Introduction -> Introduction
    int Invite_you_to_join_a_group_chat -> Invite_you_to_join_a_group_chat
    int Is_download_voice_click_later -> Is_download_voice_click_later
    int Is_landing -> Is_landing
    int Is_moved_into_blacklist -> Is_moved_into_blacklist
    int Is_not_yet_connected_to_the_server -> Is_not_yet_connected_to_the_server
    int Is_sending_a_request -> Is_sending_a_request
    int Is_the_registered -> Is_the_registered
    int Is_to_create_a_group_chat -> Is_to_create_a_group_chat
    int Is_unblock -> Is_unblock
    int Join_the_group_chat -> Join_the_group_chat
    int Log_Upload_failed -> Log_Upload_failed
    int Log_uploaded_successfully -> Log_uploaded_successfully
    int Login_failed -> Login_failed
    int Logoff_notification -> Logoff_notification
    int Making_sure_your_location -> Making_sure_your_location
    int Modify_the_group_name_successful -> Modify_the_group_name_successful
    int Move_into_blacklist_failure -> Move_into_blacklist_failure
    int Move_into_blacklist_success -> Move_into_blacklist_success
    int Move_into_the_blacklist_new -> Move_into_the_blacklist_new
    int Network_error -> Network_error
    int Not_Set -> Not_Set
    int Open_group_chat -> Open_group_chat
    int Open_group_members_invited -> Open_group_members_invited
    int Open_the_equipment_failure -> Open_the_equipment_failure
    int Password_cannot_be_empty -> Password_cannot_be_empty
    int Please_enter_a_username -> Please_enter_a_username
    int Recording_without_permission -> Recording_without_permission
    int Refused -> Refused
    int Registered_successfully -> Registered_successfully
    int Registration_failed -> Registration_failed
    int Remove_the_notification -> Remove_the_notification
    int Removed_from_the_failure -> Removed_from_the_failure
    int Request_add_buddy_failure -> Request_add_buddy_failure
    int Request_to_add_you_as_a_friend -> Request_to_add_you_as_a_friend
    int Request_to_join -> Request_to_join
    int Select_the_contact -> Select_the_contact
    int Send_the_following_pictures -> Send_the_following_pictures
    int Send_voice_need_sdcard_support -> Send_voice_need_sdcard_support
    int Shielding_of_the_message -> Shielding_of_the_message
    int Sync_Groups_From_Server -> Sync_Groups_From_Server
    int The_delete_button_is_clicked -> The_delete_button_is_clicked
    int The_file_is_not_greater_than_10_m -> The_file_is_not_greater_than_10_m
    int The_new_group_chat -> The_new_group_chat
    int The_other_is_hang_up -> The_other_is_hang_up
    int The_other_is_not_online -> The_other_is_not_online
    int The_other_is_on_the_phone -> The_other_is_on_the_phone
    int The_other_is_on_the_phone_please -> The_other_is_on_the_phone_please
    int The_other_party_did_not_answer -> The_other_party_did_not_answer
    int The_other_party_did_not_answer_new -> The_other_party_did_not_answer_new
    int The_other_party_has_refused_to -> The_other_party_has_refused_to
    int The_other_party_is_not_online -> The_other_party_is_not_online
    int The_other_party_refused_to_accept -> The_other_party_refused_to_accept
    int The_recording_time_is_too_short -> The_recording_time_is_too_short
    int The_video_to_start -> The_video_to_start
    int This_user_is_already_your_friend -> This_user_is_already_your_friend
    int To_join_the_chat -> To_join_the_chat
    int Two_input_password -> Two_input_password
    int Upload_the_log -> Upload_the_log
    int User_already_exists -> User_already_exists
    int User_name_cannot_be_empty -> User_name_cannot_be_empty
    int Version_number_is_wrong -> Version_number_is_wrong
    int Video_footage -> Video_footage
    int Whether_the_public -> Whether_the_public
    int Whether_to_empty_all_chats -> Whether_to_empty_all_chats
    int Whether_to_send -> Whether_to_send
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_home_description_format -> abc_action_bar_home_description_format
    int abc_action_bar_home_subtitle_description_format -> abc_action_bar_home_subtitle_description_format
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_search_hint -> abc_search_hint
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int abc_toolbar_collapse_description -> abc_toolbar_collapse_description
    int action_settings -> action_settings
    int add_friend -> add_friend
    int add_public_chat_room -> add_public_chat_room
    int add_public_group_chat -> add_public_group_chat
    int address_book -> address_book
    int agree -> agree
    int ampm_circle_radius_multiplier -> ampm_circle_radius_multiplier
    int answer -> answer
    int app_name -> app_name
    int are_empty_group_of_news -> are_empty_group_of_news
    int attach_file -> attach_file
    int attach_location -> attach_location
    int attach_picture -> attach_picture
    int attach_smile -> attach_smile
    int attach_take_pic -> attach_take_pic
    int attach_video -> attach_video
    int attach_video_call -> attach_video_call
    int attach_voice_call -> attach_voice_call
    int back -> back
    int baiduKeyErr -> baiduKeyErr
    int be_removing -> be_removing
    int being_added -> being_added
    int black_item -> black_item
    int blacklist -> blacklist
    int book_black -> book_black
    int button_add -> button_add
    int button_cancel -> button_cancel
    int button_logout -> button_logout
    int button_pushtotalk -> button_pushtotalk
    int button_save -> button_save
    int button_search -> button_search
    int button_send -> button_send
    int button_uploadlog -> button_uploadlog
    int call_duration -> call_duration
    int can_not_connect_chat_server_connection -> can_not_connect_chat_server_connection
    int cancel -> cancel
    int cant_find_pictures -> cant_find_pictures
    int change_the_group_name_failed_please -> change_the_group_name_failed_please
    int chat_room -> chat_room
    int chatroom_allow_owner_leave -> chatroom_allow_owner_leave
    int chatset -> chatset
    int chatting_is_dissolution -> chatting_is_dissolution
    int circle_radius_multiplier -> circle_radius_multiplier
    int circle_radius_multiplier_24HourMode -> circle_radius_multiplier_24HourMode
    int clear_all_records -> clear_all_records
    int clear_records -> clear_records
    int confirm_forward_to -> confirm_forward_to
    int confirm_resend -> confirm_resend
    int confirm_the_members -> confirm_the_members
    int confirmpassword -> confirmpassword
    int connect_conflict -> connect_conflict
    int connect_failuer_toast -> connect_failuer_toast
    int contact -> contact
    int copy -> copy
    int copy_message -> copy_message
    int day_of_week_label_typeface -> day_of_week_label_typeface
    int day_picker_description -> day_picker_description
    int delete -> delete
    int delete_conversation -> delete_conversation
    int delete_conversation_messages -> delete_conversation_messages
    int delete_message -> delete_message
    int delete_video -> delete_video
    int delete_voice -> delete_voice
    int deleting -> deleting
    int diagnose -> diagnose
    int dialog_title -> dialog_title
    int did_not_answer -> did_not_answer
    int direct_call -> direct_call
    int dismiss_group -> dismiss_group
    int dissolution_group_hint -> dissolution_group_hint
    int dl_cancel -> dl_cancel
    int dl_msg_local_upload -> dl_msg_local_upload
    int dl_msg_take_photo -> dl_msg_take_photo
    int dl_ok -> dl_ok
    int dl_title_upload_photo -> dl_title_upload_photo
    int dl_update_nick -> dl_update_nick
    int dl_update_photo -> dl_update_photo
    int dl_waiting -> dl_waiting
    int done_label -> done_label
    int downwaiting -> downwaiting
    int dynamic -> dynamic
    int ease_user_remove -> ease_user_remove
    int error_send_invalid_content -> error_send_invalid_content
    int error_send_not_in_the_group -> error_send_not_in_the_group
    int event_detail -> event_detail
    int event_processing_details -> event_processing_details
    int event_type -> event_type
    int event_type2 -> event_type2
    int exitMsg -> exitMsg
    int exit_group -> exit_group
    int exit_group_hint -> exit_group_hint
    int explain -> explain
    int expression -> expression
    int failed_to_load_data -> failed_to_load_data
    int failed_to_move_into -> failed_to_move_into
    int feedback -> feedback
    int file -> file
    int finish -> finish
    int first_half_year -> first_half_year
    int forward -> forward
    int get_failed_please_check -> get_failed_please_check
    int gorup_not_found -> gorup_not_found
    int group_chat -> group_chat
    int group_id -> group_id
    int group_is_blocked -> group_is_blocked
    int group_name -> group_name
    int group_not_existed -> group_not_existed
    int group_of_shielding -> group_of_shielding
    int group_search_failed -> group_search_failed
    int hang_up -> hang_up
    int hanging_up -> hanging_up
    int have_connected_with -> have_connected_with
    int have_read -> have_read
    int have_you_removed -> have_you_removed
    int hello_world -> hello_world
    int hiswalktra -> hiswalktra
    int hour_picker_description -> hour_picker_description
    int idea -> idea
    int illegal_user_name -> illegal_user_name
    int input_new_nick_hint -> input_new_nick_hint
    int isCancelWalk -> isCancelWalk
    int is_down_please_wait -> is_down_please_wait
    int is_modify_the_group_name -> is_modify_the_group_name
    int is_quit_the_group_chat -> is_quit_the_group_chat
    int join_public_group -> join_public_group
    int keep_password -> keep_password
    int last_month -> last_month
    int last_quarter -> last_quarter
    int last_week -> last_week
    int list_is_for -> list_is_for
    int location -> location
    int location_message -> location_message
    int location_prefix -> location_prefix
    int location_recv -> location_recv
    int login -> login
    int login_failure_failed -> login_failure_failed
    int login_name_digits -> login_name_digits
    int login_pass -> login_pass
    int login_text -> login_text
    int login_user -> login_user
    int logout -> logout
    int logout_hint -> logout_hint
    int main -> main
    int message -> message
    int minute_picker_description -> minute_picker_description
    int more -> more
    int move_out_backlist -> move_out_backlist
    int move_up_to_cancel -> move_up_to_cancel
    int mute -> mute
    int my -> my
    int my_report -> my_report
    int mywalk -> mywalk
    int nav_desc -> nav_desc
    int nearly_march -> nearly_march
    int network_anomalies -> network_anomalies
    int network_isnot_available -> network_isnot_available
    int network_unavailable -> network_unavailable
    int newchat -> newchat
    int newnotify -> newnotify
    int nickname -> nickname
    int nickname_description -> nickname_description
    int no_more_messages -> no_more_messages
    int not_add_myself -> not_add_myself
    int not_connect_to_server -> not_connect_to_server
    int not_delete_myself -> not_delete_myself
    int not_download -> not_download
    int notify -> notify
    int now_refresh_list -> now_refresh_list
    int numbers_radius_multiplier_inner -> numbers_radius_multiplier_inner
    int numbers_radius_multiplier_normal -> numbers_radius_multiplier_normal
    int numbers_radius_multiplier_outer -> numbers_radius_multiplier_outer
    int ok -> ok
    int one_month -> one_month
    int one_week -> one_week
    int one_year -> one_year
    int out -> out
    int password -> password
    int patrolStat -> patrolStat
    int people -> people
    int people_count -> people_count
    int phone_number -> phone_number
    int picture -> picture
    int pleace -> pleace
    int please_check -> please_check
    int please_set_the_current -> please_set_the_current
    int prompt -> prompt
    int push_nick -> push_nick
    int radial_numbers_typeface -> radial_numbers_typeface
    int receive_the_passthrough -> receive_the_passthrough
    int recoding_fail -> recoding_fail
    int recording_video -> recording_video
    int refreshContact -> refreshContact
    int refreshing_group_list -> refreshing_group_list
    int register -> register
    int registration_failed_without_permission -> registration_failed_without_permission
    int relay_call -> relay_call
    int release_to_cancel -> release_to_cancel
    int remove_group_of -> remove_group_of
    int reportStat -> reportStat
    int resend -> resend
    int robot_chat -> robot_chat
    int same_day -> same_day
    int sans_serif -> sans_serif
    int save -> save
    int save_new_nickname -> save_new_nickname
    int sd_card_does_not_exist -> sd_card_does_not_exist
    int search -> search
    int search_header -> search_header
    int search_new -> search_new
    int search_pubic_group -> search_pubic_group
    int searching -> searching
    int select_contacts -> select_contacts
    int select_day -> select_day
    int select_hours -> select_hours
    int select_minutes -> select_minutes
    int select_pic -> select_pic
    int select_year -> select_year
    int selection_radius_multiplier -> selection_radius_multiplier
    int send_fail -> send_fail
    int send_failure_please -> send_failure_please
    int send_successful -> send_successful
    int send_the_request_is -> send_the_request_is
    int session -> session
    int set -> set
    int setting -> setting
    int setting_menu -> setting_menu
    int setting_nickname -> setting_nickname
    int shake -> shake
    int statistics -> statistics
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
    int sure_to_empty_this -> sure_to_empty_this
    int take_photo -> take_photo
    int take_picture -> take_picture
    int temporary_does_not -> temporary_does_not
    int text_ack_msg -> text_ack_msg
    int text_delivered_msg -> text_delivered_msg
    int text_size_multiplier_inner -> text_size_multiplier_inner
    int text_size_multiplier_normal -> text_size_multiplier_normal
    int text_size_multiplier_outer -> text_size_multiplier_outer
    int the_current_group -> the_current_group
    int the_current_network -> the_current_network
    int time_placeholder -> time_placeholder
    int time_separator -> time_separator
    int title1 -> title1
    int title2 -> title2
    int title3 -> title3
    int title4 -> title4
    int title5 -> title5
    int title6 -> title6
    int title_activity_main -> title_activity_main
    int title_user_profile -> title_user_profile
    int toast_nick_not_isnull -> toast_nick_not_isnull
    int toast_no_support -> toast_no_support
    int toast_updatenick_fail -> toast_updatenick_fail
    int toast_updatenick_success -> toast_updatenick_success
    int toast_updatephoto_fail -> toast_updatephoto_fail
    int toast_updatephoto_success -> toast_updatephoto_success
    int todaySchedule -> todaySchedule
    int unable_to_connect -> unable_to_connect
    int unable_to_get_loaction -> unable_to_get_loaction
    int update_black_list -> update_black_list
    int update_black_list_failed -> update_black_list_failed
    int update_contact_list -> update_contact_list
    int update_contact_list_failed -> update_contact_list_failed
    int update_groups -> update_groups
    int update_groups_failed -> update_groups_failed
    int upload -> upload
    int upload_offine -> upload_offine
    int user_card -> user_card
    int user_name -> user_name
    int video -> video
    int voice -> voice
    int voice_call -> voice_call
    int voice_prefix -> voice_prefix
    int walk -> walk
    int walking -> walking
    int walkjob -> walkjob
    int walktimes -> walktimes
    int walktra -> walktra
    int week_ago -> week_ago
    int who -> who
    int who2 -> who2
    int yangshengqi -> yangshengqi
    int year_picker_description -> year_picker_description
    int you_are_group -> you_are_group
com.cn7782.management.R$style -> com.cn7782.management.R$style:
    int AlertDialog_AppCompat -> AlertDialog_AppCompat
    int AlertDialog_AppCompat_Light -> AlertDialog_AppCompat_Light
    int AnimBottom -> AnimBottom
    int AnimCenter -> AnimCenter
    int AnimFade -> AnimFade
    int AnimFade2 -> AnimFade2
    int AnimHead -> AnimHead
    int AnimTop -> AnimTop
    int AnimTop2 -> AnimTop2
    int Anim_style -> Anim_style
    int Anim_style2 -> Anim_style2
    int Animation_AppCompat_Dialog -> Animation_AppCompat_Dialog
    int Animation_AppCompat_DropDownUp -> Animation_AppCompat_DropDownUp
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int Base_AlertDialog_AppCompat -> Base_AlertDialog_AppCompat
    int Base_AlertDialog_AppCompat_Light -> Base_AlertDialog_AppCompat_Light
    int Base_Animation_AppCompat_Dialog -> Base_Animation_AppCompat_Dialog
    int Base_Animation_AppCompat_DropDownUp -> Base_Animation_AppCompat_DropDownUp
    int Base_DialogWindowTitle_AppCompat -> Base_DialogWindowTitle_AppCompat
    int Base_DialogWindowTitleBackground_AppCompat -> Base_DialogWindowTitleBackground_AppCompat
    int Base_TextAppearance_AppCompat -> Base_TextAppearance_AppCompat
    int Base_TextAppearance_AppCompat_Body1 -> Base_TextAppearance_AppCompat_Body1
    int Base_TextAppearance_AppCompat_Body2 -> Base_TextAppearance_AppCompat_Body2
    int Base_TextAppearance_AppCompat_Button -> Base_TextAppearance_AppCompat_Button
    int Base_TextAppearance_AppCompat_Caption -> Base_TextAppearance_AppCompat_Caption
    int Base_TextAppearance_AppCompat_Display1 -> Base_TextAppearance_AppCompat_Display1
    int Base_TextAppearance_AppCompat_Display2 -> Base_TextAppearance_AppCompat_Display2
    int Base_TextAppearance_AppCompat_Display3 -> Base_TextAppearance_AppCompat_Display3
    int Base_TextAppearance_AppCompat_Display4 -> Base_TextAppearance_AppCompat_Display4
    int Base_TextAppearance_AppCompat_Headline -> Base_TextAppearance_AppCompat_Headline
    int Base_TextAppearance_AppCompat_Inverse -> Base_TextAppearance_AppCompat_Inverse
    int Base_TextAppearance_AppCompat_Large -> Base_TextAppearance_AppCompat_Large
    int Base_TextAppearance_AppCompat_Large_Inverse -> Base_TextAppearance_AppCompat_Large_Inverse
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Medium -> Base_TextAppearance_AppCompat_Medium
    int Base_TextAppearance_AppCompat_Medium_Inverse -> Base_TextAppearance_AppCompat_Medium_Inverse
    int Base_TextAppearance_AppCompat_Menu -> Base_TextAppearance_AppCompat_Menu
    int Base_TextAppearance_AppCompat_SearchResult -> Base_TextAppearance_AppCompat_SearchResult
    int Base_TextAppearance_AppCompat_SearchResult_Subtitle -> Base_TextAppearance_AppCompat_SearchResult_Subtitle
    int Base_TextAppearance_AppCompat_SearchResult_Title -> Base_TextAppearance_AppCompat_SearchResult_Title
    int Base_TextAppearance_AppCompat_Small -> Base_TextAppearance_AppCompat_Small
    int Base_TextAppearance_AppCompat_Small_Inverse -> Base_TextAppearance_AppCompat_Small_Inverse
    int Base_TextAppearance_AppCompat_Subhead -> Base_TextAppearance_AppCompat_Subhead
    int Base_TextAppearance_AppCompat_Subhead_Inverse -> Base_TextAppearance_AppCompat_Subhead_Inverse
    int Base_TextAppearance_AppCompat_Title -> Base_TextAppearance_AppCompat_Title
    int Base_TextAppearance_AppCompat_Title_Inverse -> Base_TextAppearance_AppCompat_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu -> Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Title -> Base_TextAppearance_AppCompat_Widget_ActionMode_Title
    int Base_TextAppearance_AppCompat_Widget_DropDownItem -> Base_TextAppearance_AppCompat_Widget_DropDownItem
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Widget_Switch -> Base_TextAppearance_AppCompat_Widget_Switch
    int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Title -> Base_TextAppearance_Widget_AppCompat_Toolbar_Title
    int Base_Theme_AppCompat -> Base_Theme_AppCompat
    int Base_Theme_AppCompat_CompactMenu -> Base_Theme_AppCompat_CompactMenu
    int Base_Theme_AppCompat_Dialog -> Base_Theme_AppCompat_Dialog
    int Base_Theme_AppCompat_Dialog_Alert -> Base_Theme_AppCompat_Dialog_Alert
    int Base_Theme_AppCompat_Dialog_FixedSize -> Base_Theme_AppCompat_Dialog_FixedSize
    int Base_Theme_AppCompat_Dialog_MinWidth -> Base_Theme_AppCompat_Dialog_MinWidth
    int Base_Theme_AppCompat_DialogWhenLarge -> Base_Theme_AppCompat_DialogWhenLarge
    int Base_Theme_AppCompat_Light -> Base_Theme_AppCompat_Light
    int Base_Theme_AppCompat_Light_DarkActionBar -> Base_Theme_AppCompat_Light_DarkActionBar
    int Base_Theme_AppCompat_Light_Dialog -> Base_Theme_AppCompat_Light_Dialog
    int Base_Theme_AppCompat_Light_Dialog_Alert -> Base_Theme_AppCompat_Light_Dialog_Alert
    int Base_Theme_AppCompat_Light_Dialog_FixedSize -> Base_Theme_AppCompat_Light_Dialog_FixedSize
    int Base_Theme_AppCompat_Light_Dialog_MinWidth -> Base_Theme_AppCompat_Light_Dialog_MinWidth
    int Base_Theme_AppCompat_Light_DialogWhenLarge -> Base_Theme_AppCompat_Light_DialogWhenLarge
    int Base_ThemeOverlay_AppCompat -> Base_ThemeOverlay_AppCompat
    int Base_ThemeOverlay_AppCompat_ActionBar -> Base_ThemeOverlay_AppCompat_ActionBar
    int Base_ThemeOverlay_AppCompat_Dark -> Base_ThemeOverlay_AppCompat_Dark
    int Base_ThemeOverlay_AppCompat_Dark_ActionBar -> Base_ThemeOverlay_AppCompat_Dark_ActionBar
    int Base_ThemeOverlay_AppCompat_Light -> Base_ThemeOverlay_AppCompat_Light
    int Base_V11_Theme_AppCompat_Dialog -> Base_V11_Theme_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Light_Dialog -> Base_V11_Theme_AppCompat_Light_Dialog
    int Base_V12_Widget_AppCompat_AutoCompleteTextView -> Base_V12_Widget_AppCompat_AutoCompleteTextView
    int Base_V12_Widget_AppCompat_EditText -> Base_V12_Widget_AppCompat_EditText
    int Base_V21_Theme_AppCompat -> Base_V21_Theme_AppCompat
    int Base_V21_Theme_AppCompat_Dialog -> Base_V21_Theme_AppCompat_Dialog
    int Base_V21_Theme_AppCompat_Light -> Base_V21_Theme_AppCompat_Light
    int Base_V21_Theme_AppCompat_Light_Dialog -> Base_V21_Theme_AppCompat_Light_Dialog
    int Base_V7_Theme_AppCompat -> Base_V7_Theme_AppCompat
    int Base_V7_Theme_AppCompat_Dialog -> Base_V7_Theme_AppCompat_Dialog
    int Base_V7_Theme_AppCompat_Light -> Base_V7_Theme_AppCompat_Light
    int Base_V7_Theme_AppCompat_Light_Dialog -> Base_V7_Theme_AppCompat_Light_Dialog
    int Base_V7_Widget_AppCompat_AutoCompleteTextView -> Base_V7_Widget_AppCompat_AutoCompleteTextView
    int Base_V7_Widget_AppCompat_EditText -> Base_V7_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_ActionBar -> Base_Widget_AppCompat_ActionBar
    int Base_Widget_AppCompat_ActionBar_Solid -> Base_Widget_AppCompat_ActionBar_Solid
    int Base_Widget_AppCompat_ActionBar_TabBar -> Base_Widget_AppCompat_ActionBar_TabBar
    int Base_Widget_AppCompat_ActionBar_TabText -> Base_Widget_AppCompat_ActionBar_TabText
    int Base_Widget_AppCompat_ActionBar_TabView -> Base_Widget_AppCompat_ActionBar_TabView
    int Base_Widget_AppCompat_ActionButton -> Base_Widget_AppCompat_ActionButton
    int Base_Widget_AppCompat_ActionButton_CloseMode -> Base_Widget_AppCompat_ActionButton_CloseMode
    int Base_Widget_AppCompat_ActionButton_Overflow -> Base_Widget_AppCompat_ActionButton_Overflow
    int Base_Widget_AppCompat_ActionMode -> Base_Widget_AppCompat_ActionMode
    int Base_Widget_AppCompat_ActivityChooserView -> Base_Widget_AppCompat_ActivityChooserView
    int Base_Widget_AppCompat_AutoCompleteTextView -> Base_Widget_AppCompat_AutoCompleteTextView
    int Base_Widget_AppCompat_Button -> Base_Widget_AppCompat_Button
    int Base_Widget_AppCompat_Button_Borderless -> Base_Widget_AppCompat_Button_Borderless
    int Base_Widget_AppCompat_Button_Borderless_Colored -> Base_Widget_AppCompat_Button_Borderless_Colored
    int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog -> Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Small -> Base_Widget_AppCompat_Button_Small
    int Base_Widget_AppCompat_ButtonBar -> Base_Widget_AppCompat_ButtonBar
    int Base_Widget_AppCompat_ButtonBar_AlertDialog -> Base_Widget_AppCompat_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_CompoundButton_CheckBox -> Base_Widget_AppCompat_CompoundButton_CheckBox
    int Base_Widget_AppCompat_CompoundButton_RadioButton -> Base_Widget_AppCompat_CompoundButton_RadioButton
    int Base_Widget_AppCompat_CompoundButton_Switch -> Base_Widget_AppCompat_CompoundButton_Switch
    int Base_Widget_AppCompat_DrawerArrowToggle -> Base_Widget_AppCompat_DrawerArrowToggle
    int Base_Widget_AppCompat_DrawerArrowToggle_Common -> Base_Widget_AppCompat_DrawerArrowToggle_Common
    int Base_Widget_AppCompat_DropDownItem_Spinner -> Base_Widget_AppCompat_DropDownItem_Spinner
    int Base_Widget_AppCompat_EditText -> Base_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_Light_ActionBar -> Base_Widget_AppCompat_Light_ActionBar
    int Base_Widget_AppCompat_Light_ActionBar_Solid -> Base_Widget_AppCompat_Light_ActionBar_Solid
    int Base_Widget_AppCompat_Light_ActionBar_TabBar -> Base_Widget_AppCompat_Light_ActionBar_TabBar
    int Base_Widget_AppCompat_Light_ActionBar_TabText -> Base_Widget_AppCompat_Light_ActionBar_TabText
    int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Base_Widget_AppCompat_Light_ActionBar_TabView -> Base_Widget_AppCompat_Light_ActionBar_TabView
    int Base_Widget_AppCompat_Light_PopupMenu -> Base_Widget_AppCompat_Light_PopupMenu
    int Base_Widget_AppCompat_Light_PopupMenu_Overflow -> Base_Widget_AppCompat_Light_PopupMenu_Overflow
    int Base_Widget_AppCompat_ListPopupWindow -> Base_Widget_AppCompat_ListPopupWindow
    int Base_Widget_AppCompat_ListView -> Base_Widget_AppCompat_ListView
    int Base_Widget_AppCompat_ListView_DropDown -> Base_Widget_AppCompat_ListView_DropDown
    int Base_Widget_AppCompat_ListView_Menu -> Base_Widget_AppCompat_ListView_Menu
    int Base_Widget_AppCompat_PopupMenu -> Base_Widget_AppCompat_PopupMenu
    int Base_Widget_AppCompat_PopupMenu_Overflow -> Base_Widget_AppCompat_PopupMenu_Overflow
    int Base_Widget_AppCompat_PopupWindow -> Base_Widget_AppCompat_PopupWindow
    int Base_Widget_AppCompat_ProgressBar -> Base_Widget_AppCompat_ProgressBar
    int Base_Widget_AppCompat_ProgressBar_Horizontal -> Base_Widget_AppCompat_ProgressBar_Horizontal
    int Base_Widget_AppCompat_RatingBar -> Base_Widget_AppCompat_RatingBar
    int Base_Widget_AppCompat_SearchView -> Base_Widget_AppCompat_SearchView
    int Base_Widget_AppCompat_SearchView_ActionBar -> Base_Widget_AppCompat_SearchView_ActionBar
    int Base_Widget_AppCompat_Spinner -> Base_Widget_AppCompat_Spinner
    int Base_Widget_AppCompat_Spinner_DropDown_ActionBar -> Base_Widget_AppCompat_Spinner_DropDown_ActionBar
    int Base_Widget_AppCompat_Spinner_Underlined -> Base_Widget_AppCompat_Spinner_Underlined
    int Base_Widget_AppCompat_TextView_SpinnerItem -> Base_Widget_AppCompat_TextView_SpinnerItem
    int Base_Widget_AppCompat_Toolbar -> Base_Widget_AppCompat_Toolbar
    int Base_Widget_AppCompat_Toolbar_Button_Navigation -> Base_Widget_AppCompat_Toolbar_Button_Navigation
    int HeadScale -> HeadScale
    int MenuDialogStyle -> MenuDialogStyle
    int MyAlertDialog -> MyAlertDialog
    int MyDialogStyle -> MyDialogStyle
    int MyDialogStyleBottom -> MyDialogStyleBottom
    int MyDialogStyleTop -> MyDialogStyleTop
    int Platform_AppCompat -> Platform_AppCompat
    int Platform_AppCompat_Light -> Platform_AppCompat_Light
    int Platform_ThemeOverlay_AppCompat_Dark -> Platform_ThemeOverlay_AppCompat_Dark
    int Platform_ThemeOverlay_AppCompat_Light -> Platform_ThemeOverlay_AppCompat_Light
    int Platform_V11_AppCompat -> Platform_V11_AppCompat
    int Platform_V11_AppCompat_Light -> Platform_V11_AppCompat_Light
    int Platform_V14_AppCompat -> Platform_V14_AppCompat
    int Platform_V14_AppCompat_Light -> Platform_V14_AppCompat_Light
    int RtlOverlay_DialogWindowTitle_AppCompat -> RtlOverlay_DialogWindowTitle_AppCompat
    int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem -> RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
    int RtlOverlay_Widget_AppCompat_ActionButton_Overflow -> RtlOverlay_Widget_AppCompat_ActionButton_Overflow
    int RtlOverlay_Widget_AppCompat_DialogTitle_Icon -> RtlOverlay_Widget_AppCompat_DialogTitle_Icon
    int RtlOverlay_Widget_AppCompat_PopupMenuItem -> RtlOverlay_Widget_AppCompat_PopupMenuItem
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup -> RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text -> RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
    int RtlOverlay_Widget_AppCompat_Search_DropDown -> RtlOverlay_Widget_AppCompat_Search_DropDown
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Query -> RtlOverlay_Widget_AppCompat_Search_DropDown_Query
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Text -> RtlOverlay_Widget_AppCompat_Search_DropDown_Text
    int RtlOverlay_Widget_AppCompat_SearchView_MagIcon -> RtlOverlay_Widget_AppCompat_SearchView_MagIcon
    int RtlOverlay_Widget_AppCompat_Toolbar_Button_Navigation -> RtlOverlay_Widget_AppCompat_Toolbar_Button_Navigation
    int TextAppearance_AppCompat -> TextAppearance_AppCompat
    int TextAppearance_AppCompat_Body1 -> TextAppearance_AppCompat_Body1
    int TextAppearance_AppCompat_Body2 -> TextAppearance_AppCompat_Body2
    int TextAppearance_AppCompat_Button -> TextAppearance_AppCompat_Button
    int TextAppearance_AppCompat_Caption -> TextAppearance_AppCompat_Caption
    int TextAppearance_AppCompat_Display1 -> TextAppearance_AppCompat_Display1
    int TextAppearance_AppCompat_Display2 -> TextAppearance_AppCompat_Display2
    int TextAppearance_AppCompat_Display3 -> TextAppearance_AppCompat_Display3
    int TextAppearance_AppCompat_Display4 -> TextAppearance_AppCompat_Display4
    int TextAppearance_AppCompat_Headline -> TextAppearance_AppCompat_Headline
    int TextAppearance_AppCompat_Inverse -> TextAppearance_AppCompat_Inverse
    int TextAppearance_AppCompat_Large -> TextAppearance_AppCompat_Large
    int TextAppearance_AppCompat_Large_Inverse -> TextAppearance_AppCompat_Large_Inverse
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Medium -> TextAppearance_AppCompat_Medium
    int TextAppearance_AppCompat_Medium_Inverse -> TextAppearance_AppCompat_Medium_Inverse
    int TextAppearance_AppCompat_Menu -> TextAppearance_AppCompat_Menu
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Small -> TextAppearance_AppCompat_Small
    int TextAppearance_AppCompat_Small_Inverse -> TextAppearance_AppCompat_Small_Inverse
    int TextAppearance_AppCompat_Subhead -> TextAppearance_AppCompat_Subhead
    int TextAppearance_AppCompat_Subhead_Inverse -> TextAppearance_AppCompat_Subhead_Inverse
    int TextAppearance_AppCompat_Title -> TextAppearance_AppCompat_Title
    int TextAppearance_AppCompat_Title_Inverse -> TextAppearance_AppCompat_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Widget_Switch -> TextAppearance_AppCompat_Widget_Switch
    int TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int TextAppearance_StatusBar_EventContent -> TextAppearance_StatusBar_EventContent
    int TextAppearance_StatusBar_EventContent_Info -> TextAppearance_StatusBar_EventContent_Info
    int TextAppearance_StatusBar_EventContent_Line2 -> TextAppearance_StatusBar_EventContent_Line2
    int TextAppearance_StatusBar_EventContent_Time -> TextAppearance_StatusBar_EventContent_Time
    int TextAppearance_StatusBar_EventContent_Title -> TextAppearance_StatusBar_EventContent_Title
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int TextAppearance_Widget_AppCompat_Toolbar_Title -> TextAppearance_Widget_AppCompat_Toolbar_Title
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_Dialog -> Theme_AppCompat_Dialog
    int Theme_AppCompat_Dialog_Alert -> Theme_AppCompat_Dialog_Alert
    int Theme_AppCompat_Dialog_MinWidth -> Theme_AppCompat_Dialog_MinWidth
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_Dialog -> Theme_AppCompat_Light_Dialog
    int Theme_AppCompat_Light_Dialog_Alert -> Theme_AppCompat_Light_Dialog_Alert
    int Theme_AppCompat_Light_Dialog_MinWidth -> Theme_AppCompat_Light_Dialog_MinWidth
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_AppCompat_Light_NoActionBar -> Theme_AppCompat_Light_NoActionBar
    int Theme_AppCompat_NoActionBar -> Theme_AppCompat_NoActionBar
    int ThemeOverlay_AppCompat -> ThemeOverlay_AppCompat
    int ThemeOverlay_AppCompat_ActionBar -> ThemeOverlay_AppCompat_ActionBar
    int ThemeOverlay_AppCompat_Dark -> ThemeOverlay_AppCompat_Dark
    int ThemeOverlay_AppCompat_Dark_ActionBar -> ThemeOverlay_AppCompat_Dark_ActionBar
    int ThemeOverlay_AppCompat_Light -> ThemeOverlay_AppCompat_Light
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Button -> Widget_AppCompat_Button
    int Widget_AppCompat_Button_Borderless -> Widget_AppCompat_Button_Borderless
    int Widget_AppCompat_Button_Borderless_Colored -> Widget_AppCompat_Button_Borderless_Colored
    int Widget_AppCompat_Button_ButtonBar_AlertDialog -> Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Small -> Widget_AppCompat_Button_Small
    int Widget_AppCompat_ButtonBar -> Widget_AppCompat_ButtonBar
    int Widget_AppCompat_ButtonBar_AlertDialog -> Widget_AppCompat_ButtonBar_AlertDialog
    int Widget_AppCompat_CompoundButton_CheckBox -> Widget_AppCompat_CompoundButton_CheckBox
    int Widget_AppCompat_CompoundButton_RadioButton -> Widget_AppCompat_CompoundButton_RadioButton
    int Widget_AppCompat_CompoundButton_Switch -> Widget_AppCompat_CompoundButton_Switch
    int Widget_AppCompat_DrawerArrowToggle -> Widget_AppCompat_DrawerArrowToggle
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_EditText -> Widget_AppCompat_EditText
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_PopupMenu_Overflow -> Widget_AppCompat_Light_PopupMenu_Overflow
    int Widget_AppCompat_Light_SearchView -> Widget_AppCompat_Light_SearchView
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView -> Widget_AppCompat_ListView
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_PopupMenu_Overflow -> Widget_AppCompat_PopupMenu_Overflow
    int Widget_AppCompat_PopupWindow -> Widget_AppCompat_PopupWindow
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_RatingBar -> Widget_AppCompat_RatingBar
    int Widget_AppCompat_SearchView -> Widget_AppCompat_SearchView
    int Widget_AppCompat_SearchView_ActionBar -> Widget_AppCompat_SearchView_ActionBar
    int Widget_AppCompat_Spinner -> Widget_AppCompat_Spinner
    int Widget_AppCompat_Spinner_DropDown -> Widget_AppCompat_Spinner_DropDown
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
    int Widget_AppCompat_Spinner_Underlined -> Widget_AppCompat_Spinner_Underlined
    int Widget_AppCompat_TextView_SpinnerItem -> Widget_AppCompat_TextView_SpinnerItem
    int Widget_AppCompat_Toolbar -> Widget_AppCompat_Toolbar
    int Widget_AppCompat_Toolbar_Button_Navigation -> Widget_AppCompat_Toolbar_Button_Navigation
    int bottom_line_edit_text_style -> bottom_line_edit_text_style
    int chat_content_date_style -> chat_content_date_style
    int chat_text_date_style -> chat_text_date_style
    int chat_text_name_style -> chat_text_name_style
    int dateStyle -> dateStyle
    int devide_line_eee -> devide_line_eee
    int homepage_text -> homepage_text
    int horizontal_slide -> horizontal_slide
    int more_left_image -> more_left_image
    int msgDialog -> msgDialog
    int myDialog -> myDialog
    int nornal_style -> nornal_style
    int selecttypestyle -> selecttypestyle
com.cn7782.management.R$styleable -> com.cn7782.management.R$styleable:
    int[] ActionBar -> ActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetLeft -> ActionBar_contentInsetLeft
    int ActionBar_contentInsetRight -> ActionBar_contentInsetRight
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_layout -> AlertDialog_android_layout
    int AlertDialog_buttonPanelSideLayout -> AlertDialog_buttonPanelSideLayout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int[] AppCompatTextView -> AppCompatTextView
    int AppCompatTextView_android_textAppearance -> AppCompatTextView_android_textAppearance
    int AppCompatTextView_textAllCaps -> AppCompatTextView_textAllCaps
    int[] CircleTextView -> CircleTextView
    int CircleTextView_text -> CircleTextView_text
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int DrawerArrowToggle_barSize -> DrawerArrowToggle_barSize
    int DrawerArrowToggle_color -> DrawerArrowToggle_color
    int DrawerArrowToggle_drawableSize -> DrawerArrowToggle_drawableSize
    int DrawerArrowToggle_gapBetweenBars -> DrawerArrowToggle_gapBetweenBars
    int DrawerArrowToggle_middleBarArrowSize -> DrawerArrowToggle_middleBarArrowSize
    int DrawerArrowToggle_spinBars -> DrawerArrowToggle_spinBars
    int DrawerArrowToggle_thickness -> DrawerArrowToggle_thickness
    int DrawerArrowToggle_topBottomBarArrowSize -> DrawerArrowToggle_topBottomBarArrowSize
    int[] EaseChatExtendMenu -> EaseChatExtendMenu
    int EaseChatExtendMenu_numColumns -> EaseChatExtendMenu_numColumns
    int[] EaseChatMessageList -> EaseChatMessageList
    int EaseChatMessageList_msgListMyBubbleBackground -> EaseChatMessageList_msgListMyBubbleBackground
    int EaseChatMessageList_msgListOtherBubbleBackground -> EaseChatMessageList_msgListOtherBubbleBackground
    int EaseChatMessageList_msgListShowUserAvatar -> EaseChatMessageList_msgListShowUserAvatar
    int EaseChatMessageList_msgListShowUserNick -> EaseChatMessageList_msgListShowUserNick
    int[] EaseContactList -> EaseContactList
    int EaseContactList_ctsListInitialLetterBg -> EaseContactList_ctsListInitialLetterBg
    int EaseContactList_ctsListInitialLetterColor -> EaseContactList_ctsListInitialLetterColor
    int EaseContactList_ctsListPrimaryTextColor -> EaseContactList_ctsListPrimaryTextColor
    int EaseContactList_ctsListPrimaryTextSize -> EaseContactList_ctsListPrimaryTextSize
    int EaseContactList_ctsListShowSiderBar -> EaseContactList_ctsListShowSiderBar
    int[] EaseConversationList -> EaseConversationList
    int EaseConversationList_cvsListPrimaryTextColor -> EaseConversationList_cvsListPrimaryTextColor
    int EaseConversationList_cvsListPrimaryTextSize -> EaseConversationList_cvsListPrimaryTextSize
    int EaseConversationList_cvsListSecondaryTextColor -> EaseConversationList_cvsListSecondaryTextColor
    int EaseConversationList_cvsListSecondaryTextSize -> EaseConversationList_cvsListSecondaryTextSize
    int EaseConversationList_cvsListTimeTextColor -> EaseConversationList_cvsListTimeTextColor
    int EaseConversationList_cvsListTimeTextSize -> EaseConversationList_cvsListTimeTextSize
    int[] EaseEmojiconMenu -> EaseEmojiconMenu
    int EaseEmojiconMenu_emojiconColumns -> EaseEmojiconMenu_emojiconColumns
    int EaseEmojiconMenu_emojiconRows -> EaseEmojiconMenu_emojiconRows
    int[] EaseSwitchButton -> EaseSwitchButton
    int EaseSwitchButton_switchCloseImage -> EaseSwitchButton_switchCloseImage
    int EaseSwitchButton_switchOpenImage -> EaseSwitchButton_switchOpenImage
    int EaseSwitchButton_switchStatus -> EaseSwitchButton_switchStatus
    int[] EaseTitleBar -> EaseTitleBar
    int EaseTitleBar_titleBarBackground -> EaseTitleBar_titleBarBackground
    int EaseTitleBar_titleBarLeftImage -> EaseTitleBar_titleBarLeftImage
    int EaseTitleBar_titleBarRightImage -> EaseTitleBar_titleBarRightImage
    int EaseTitleBar_titleBarTitle -> EaseTitleBar_titleBarTitle
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_height -> LinearLayoutCompat_Layout_android_layout_height
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int LinearLayoutCompat_Layout_android_layout_width -> LinearLayoutCompat_Layout_android_layout_width
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int[] MovieRecorderView -> MovieRecorderView
    int MovieRecorderView_height -> MovieRecorderView_height
    int MovieRecorderView_is_open_camera -> MovieRecorderView_is_open_camera
    int MovieRecorderView_record_max_time -> MovieRecorderView_record_max_time
    int MovieRecorderView_width -> MovieRecorderView_width
    int[] PopupWindow -> PopupWindow
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindowBackgroundState_state_above_anchor -> PopupWindowBackgroundState_state_above_anchor
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_orientation -> RecyclerView_android_orientation
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int RecyclerView_reverseLayout -> RecyclerView_reverseLayout
    int RecyclerView_spanCount -> RecyclerView_spanCount
    int RecyclerView_stackFromEnd -> RecyclerView_stackFromEnd
    int[] RippleView -> RippleView
    int RippleView_alphaFactor -> RippleView_alphaFactor
    int RippleView_hover -> RippleView_hover
    int RippleView_rippleColor -> RippleView_rippleColor
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_defaultQueryHint -> SearchView_defaultQueryHint
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchHintIcon -> SearchView_searchHintIcon
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] Spinner -> Spinner
    int Spinner_android_background -> Spinner_android_background
    int Spinner_android_dropDownHorizontalOffset -> Spinner_android_dropDownHorizontalOffset
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownVerticalOffset -> Spinner_android_dropDownVerticalOffset
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_prompt -> Spinner_prompt
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_track -> SwitchCompat_track
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int TextAppearance_textAllCaps -> TextAppearance_textAllCaps
    int[] Theme -> Theme
    int Theme_actionBarDivider -> Theme_actionBarDivider
    int Theme_actionBarItemBackground -> Theme_actionBarItemBackground
    int Theme_actionBarPopupTheme -> Theme_actionBarPopupTheme
    int Theme_actionBarSize -> Theme_actionBarSize
    int Theme_actionBarSplitStyle -> Theme_actionBarSplitStyle
    int Theme_actionBarStyle -> Theme_actionBarStyle
    int Theme_actionBarTabBarStyle -> Theme_actionBarTabBarStyle
    int Theme_actionBarTabStyle -> Theme_actionBarTabStyle
    int Theme_actionBarTabTextStyle -> Theme_actionBarTabTextStyle
    int Theme_actionBarTheme -> Theme_actionBarTheme
    int Theme_actionBarWidgetTheme -> Theme_actionBarWidgetTheme
    int Theme_actionButtonStyle -> Theme_actionButtonStyle
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_actionMenuTextAppearance -> Theme_actionMenuTextAppearance
    int Theme_actionMenuTextColor -> Theme_actionMenuTextColor
    int Theme_actionModeBackground -> Theme_actionModeBackground
    int Theme_actionModeCloseButtonStyle -> Theme_actionModeCloseButtonStyle
    int Theme_actionModeCloseDrawable -> Theme_actionModeCloseDrawable
    int Theme_actionModeCopyDrawable -> Theme_actionModeCopyDrawable
    int Theme_actionModeCutDrawable -> Theme_actionModeCutDrawable
    int Theme_actionModeFindDrawable -> Theme_actionModeFindDrawable
    int Theme_actionModePasteDrawable -> Theme_actionModePasteDrawable
    int Theme_actionModePopupWindowStyle -> Theme_actionModePopupWindowStyle
    int Theme_actionModeSelectAllDrawable -> Theme_actionModeSelectAllDrawable
    int Theme_actionModeShareDrawable -> Theme_actionModeShareDrawable
    int Theme_actionModeSplitBackground -> Theme_actionModeSplitBackground
    int Theme_actionModeStyle -> Theme_actionModeStyle
    int Theme_actionModeWebSearchDrawable -> Theme_actionModeWebSearchDrawable
    int Theme_actionOverflowButtonStyle -> Theme_actionOverflowButtonStyle
    int Theme_actionOverflowMenuStyle -> Theme_actionOverflowMenuStyle
    int Theme_activityChooserViewStyle -> Theme_activityChooserViewStyle
    int Theme_alertDialogButtonGroupStyle -> Theme_alertDialogButtonGroupStyle
    int Theme_alertDialogCenterButtons -> Theme_alertDialogCenterButtons
    int Theme_alertDialogStyle -> Theme_alertDialogStyle
    int Theme_alertDialogTheme -> Theme_alertDialogTheme
    int Theme_android_windowAnimationStyle -> Theme_android_windowAnimationStyle
    int Theme_android_windowIsFloating -> Theme_android_windowIsFloating
    int Theme_autoCompleteTextViewStyle -> Theme_autoCompleteTextViewStyle
    int Theme_borderlessButtonStyle -> Theme_borderlessButtonStyle
    int Theme_buttonBarButtonStyle -> Theme_buttonBarButtonStyle
    int Theme_buttonBarNegativeButtonStyle -> Theme_buttonBarNegativeButtonStyle
    int Theme_buttonBarNeutralButtonStyle -> Theme_buttonBarNeutralButtonStyle
    int Theme_buttonBarPositiveButtonStyle -> Theme_buttonBarPositiveButtonStyle
    int Theme_buttonBarStyle -> Theme_buttonBarStyle
    int Theme_buttonStyle -> Theme_buttonStyle
    int Theme_buttonStyleSmall -> Theme_buttonStyleSmall
    int Theme_checkboxStyle -> Theme_checkboxStyle
    int Theme_checkedTextViewStyle -> Theme_checkedTextViewStyle
    int Theme_colorAccent -> Theme_colorAccent
    int Theme_colorButtonNormal -> Theme_colorButtonNormal
    int Theme_colorControlActivated -> Theme_colorControlActivated
    int Theme_colorControlHighlight -> Theme_colorControlHighlight
    int Theme_colorControlNormal -> Theme_colorControlNormal
    int Theme_colorPrimary -> Theme_colorPrimary
    int Theme_colorPrimaryDark -> Theme_colorPrimaryDark
    int Theme_colorSwitchThumbNormal -> Theme_colorSwitchThumbNormal
    int Theme_dialogPreferredPadding -> Theme_dialogPreferredPadding
    int Theme_dialogTheme -> Theme_dialogTheme
    int Theme_dividerHorizontal -> Theme_dividerHorizontal
    int Theme_dividerVertical -> Theme_dividerVertical
    int Theme_dropDownListViewStyle -> Theme_dropDownListViewStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_editTextBackground -> Theme_editTextBackground
    int Theme_editTextColor -> Theme_editTextColor
    int Theme_editTextStyle -> Theme_editTextStyle
    int Theme_homeAsUpIndicator -> Theme_homeAsUpIndicator
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_listDividerAlertDialog -> Theme_listDividerAlertDialog
    int Theme_listPopupWindowStyle -> Theme_listPopupWindowStyle
    int Theme_listPreferredItemHeight -> Theme_listPreferredItemHeight
    int Theme_listPreferredItemHeightLarge -> Theme_listPreferredItemHeightLarge
    int Theme_listPreferredItemHeightSmall -> Theme_listPreferredItemHeightSmall
    int Theme_listPreferredItemPaddingLeft -> Theme_listPreferredItemPaddingLeft
    int Theme_listPreferredItemPaddingRight -> Theme_listPreferredItemPaddingRight
    int Theme_panelBackground -> Theme_panelBackground
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int Theme_popupWindowStyle -> Theme_popupWindowStyle
    int Theme_radioButtonStyle -> Theme_radioButtonStyle
    int Theme_ratingBarStyle -> Theme_ratingBarStyle
    int Theme_searchViewStyle -> Theme_searchViewStyle
    int Theme_selectableItemBackground -> Theme_selectableItemBackground
    int Theme_selectableItemBackgroundBorderless -> Theme_selectableItemBackgroundBorderless
    int Theme_spinnerDropDownItemStyle -> Theme_spinnerDropDownItemStyle
    int Theme_spinnerStyle -> Theme_spinnerStyle
    int Theme_switchStyle -> Theme_switchStyle
    int Theme_textAppearanceLargePopupMenu -> Theme_textAppearanceLargePopupMenu
    int Theme_textAppearanceListItem -> Theme_textAppearanceListItem
    int Theme_textAppearanceListItemSmall -> Theme_textAppearanceListItemSmall
    int Theme_textAppearanceSearchResultSubtitle -> Theme_textAppearanceSearchResultSubtitle
    int Theme_textAppearanceSearchResultTitle -> Theme_textAppearanceSearchResultTitle
    int Theme_textAppearanceSmallPopupMenu -> Theme_textAppearanceSmallPopupMenu
    int Theme_textColorAlertDialogListItem -> Theme_textColorAlertDialogListItem
    int Theme_textColorSearchUrl -> Theme_textColorSearchUrl
    int Theme_toolbarNavigationButtonStyle -> Theme_toolbarNavigationButtonStyle
    int Theme_toolbarStyle -> Theme_toolbarStyle
    int Theme_windowActionBar -> Theme_windowActionBar
    int Theme_windowActionBarOverlay -> Theme_windowActionBarOverlay
    int Theme_windowActionModeOverlay -> Theme_windowActionModeOverlay
    int Theme_windowFixedHeightMajor -> Theme_windowFixedHeightMajor
    int Theme_windowFixedHeightMinor -> Theme_windowFixedHeightMinor
    int Theme_windowFixedWidthMajor -> Theme_windowFixedWidthMajor
    int Theme_windowFixedWidthMinor -> Theme_windowFixedWidthMinor
    int Theme_windowMinWidthMajor -> Theme_windowMinWidthMajor
    int Theme_windowMinWidthMinor -> Theme_windowMinWidthMinor
    int Theme_windowNoTitle -> Theme_windowNoTitle
    int[] ToggleButton -> ToggleButton
    int ToggleButton_borderWidth -> ToggleButton_borderWidth
    int ToggleButton_offBorderColor -> ToggleButton_offBorderColor
    int ToggleButton_offColor -> ToggleButton_offColor
    int ToggleButton_onColor -> ToggleButton_onColor
    int ToggleButton_spotColor -> ToggleButton_spotColor
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_android_minHeight -> Toolbar_android_minHeight
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int[] View -> View
    int View_android_focusable -> View_android_focusable
    int View_android_theme -> View_android_theme
    int View_backgroundTint -> View_backgroundTint
    int View_backgroundTintMode -> View_backgroundTintMode
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int View_theme -> View_theme
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
com.cn7782.management.android.BaseActivity -> com.cn7782.management.android.BaseActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
com.cn7782.management.android.BaseApplication -> com.cn7782.management.android.BaseApplication:
    java.lang.String LOCATION_RECEIVER_ACTION -> LOCATION_RECEIVER_ACTION
    com.cn7782.management.android.BaseApplication application -> a
    android.content.Context mcontext -> b
    int falldownCount -> c
    boolean isForegroundCountDown -> d
    int isLocation -> e
    void onCreate() -> onCreate
    com.cn7782.management.android.BaseApplication getInstance() -> getInstance
    boolean isAppOnForeground(android.content.Context) -> isAppOnForeground
    void getContext(android.content.Context) -> getContext
    void setIsForegroundCountDown(boolean) -> setIsForegroundCountDown
    boolean getIsForegroundCountDownn() -> getIsForegroundCountDownn
    void setFallDownCount(int) -> setFallDownCount
    int getFallDownCount() -> getFallDownCount
    void setIsLocation(int) -> setIsLocation
    int getIsLocation() -> getIsLocation
com.cn7782.management.android.DemoHelper -> com.cn7782.management.android.a:
    com.easemob.easeui.controller.EaseUI easeUI -> b
    com.easemob.EMEventListener eventListener -> a
    com.cn7782.management.android.DemoHelper instance -> c
    boolean alreadyNotified -> d
    android.content.Context appContext -> e
    java.lang.String tokenId -> f
    com.cn7782.management.android.DemoHelper getInstance() -> a
    void init(android.content.Context) -> a
    void setEaseUIProviders() -> b
    com.easemob.easeui.domain.EaseUser getUserInfo(java.lang.String) -> a
    com.easemob.easeui.domain.EaseUser access$000(com.cn7782.management.android.DemoHelper,java.lang.String) -> a
com.cn7782.management.android.DemoHelper$1 -> com.cn7782.management.android.b:
    com.cn7782.management.android.DemoHelper this$0 -> a
    com.easemob.easeui.domain.EaseUser getUser(java.lang.String) -> getUser
com.cn7782.management.android.activity.AddPatrolActivity -> com.cn7782.management.android.activity.AddPatrolActivity:
    android.widget.TextView edittext -> b
    android.widget.TextView timer -> c
    android.widget.TextView address -> d
    com.baidu.mapapi.search.geocode.GeoCoder mSearch -> a
    android.database.Cursor cursor -> e
    com.cn7782.management.android.db.DBHelper dp -> f
    java.lang.String tablename -> g
    android.widget.Button submit -> h
    com.cn7782.management.android.BaseApplication base -> i
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void onResume() -> onResume
    void isContinuePatro() -> b
    void isRestorePatro() -> c
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onGetGeoCodeResult(com.baidu.mapapi.search.geocode.GeoCodeResult) -> onGetGeoCodeResult
    void onGetReverseGeoCodeResult(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult) -> onGetReverseGeoCodeResult
    void onDestroy() -> onDestroy
    void gotoIntent(java.lang.String) -> a
    java.lang.String access$000(com.cn7782.management.android.activity.AddPatrolActivity) -> a
    com.cn7782.management.android.db.DBHelper access$100(com.cn7782.management.android.activity.AddPatrolActivity) -> b
com.cn7782.management.android.activity.AddPatrolActivity$1 -> com.cn7782.management.android.activity.a:
    com.cn7782.management.android.activity.AddPatrolActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.AddPatrolActivity$2 -> com.cn7782.management.android.activity.b:
    java.lang.String val$time -> a
    java.lang.String val$address -> b
    java.lang.String val$event -> c
    com.cn7782.management.android.activity.AddPatrolActivity this$0 -> d
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.AddScheduleActivity -> com.cn7782.management.android.activity.AddScheduleActivity:
    android.widget.TextView mCancelTv -> a
    android.widget.TextView mConfirmTv -> b
    com.cn7782.management.android.activity.bean.CustomDate mCustomDate -> c
    android.widget.TextView title -> d
    android.widget.TextView content -> e
    android.widget.TextView jobType -> f
    android.widget.TextView begTime -> g
    android.widget.TextView endTime -> h
    void onCreate(android.os.Bundle) -> onCreate
    void findById() -> a
    void setTextData() -> b
    void setOnClickListener() -> c
    void getCustomDate() -> d
    void finish() -> finish
    void onClick(android.view.View) -> onClick
    void submit(com.cn7782.management.android.activity.bean.ScheduleBean) -> a
    void chooseTime(int) -> a
    java.lang.String getStringDate(java.lang.Long) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void showCancelDialogState(boolean) -> a
    void showJobTypeDialog(boolean) -> b
    void refreshActivity(java.lang.String) -> a
    android.widget.TextView access$000(com.cn7782.management.android.activity.AddScheduleActivity) -> a
    android.widget.TextView access$100(com.cn7782.management.android.activity.AddScheduleActivity) -> b
com.cn7782.management.android.activity.AddScheduleActivity$1 -> com.cn7782.management.android.activity.c:
    com.cn7782.management.android.activity.AddScheduleActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.AddScheduleActivity$2 -> com.cn7782.management.android.activity.d:
    com.cn7782.management.android.activity.AddScheduleActivity this$0 -> a
    void OnDateTimeSet(android.app.AlertDialog,long) -> a
com.cn7782.management.android.activity.AddScheduleActivity$3 -> com.cn7782.management.android.activity.e:
    com.cn7782.management.android.activity.AddScheduleActivity this$0 -> a
    void OnDateTimeSet(android.app.AlertDialog,long) -> a
com.cn7782.management.android.activity.ChangeInformationActivity -> com.cn7782.management.android.activity.ChangeInformationActivity:
    android.widget.EditText oldword -> a
    android.widget.EditText newword -> b
    android.widget.EditText againword -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initview() -> a
    void sumbit(java.lang.String,java.lang.String,java.lang.String) -> a
    android.widget.EditText access$000(com.cn7782.management.android.activity.ChangeInformationActivity) -> a
    android.widget.EditText access$100(com.cn7782.management.android.activity.ChangeInformationActivity) -> b
    android.widget.EditText access$200(com.cn7782.management.android.activity.ChangeInformationActivity) -> c
    void access$300(com.cn7782.management.android.activity.ChangeInformationActivity,java.lang.String,java.lang.String,java.lang.String) -> a
com.cn7782.management.android.activity.ChangeInformationActivity$1 -> com.cn7782.management.android.activity.f:
    com.cn7782.management.android.activity.ChangeInformationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.ChangeInformationActivity$2 -> com.cn7782.management.android.activity.g:
    com.cn7782.management.android.activity.ChangeInformationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.ChangeInformationActivity$3 -> com.cn7782.management.android.activity.h:
    com.cn7782.management.android.activity.ChangeInformationActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.ChangeMessageActivity -> com.cn7782.management.android.activity.ChangeMessageActivity:
    com.cn7782.management.view.ToggleButton msgToogleBack -> a
    com.cn7782.management.view.ToggleButton msgToogleSound -> b
    com.cn7782.management.view.ToggleButton msgToogleVibrator -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initToggleButton() -> a
com.cn7782.management.android.activity.ChangeMessageActivity$1 -> com.cn7782.management.android.activity.i:
    com.cn7782.management.android.activity.ChangeMessageActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.ChangeMessageActivity$2 -> com.cn7782.management.android.activity.j:
    com.cn7782.management.android.activity.ChangeMessageActivity this$0 -> a
    void onToggle(boolean) -> a
com.cn7782.management.android.activity.ChangeMessageActivity$3 -> com.cn7782.management.android.activity.k:
    com.cn7782.management.android.activity.ChangeMessageActivity this$0 -> a
    void onToggle(boolean) -> a
com.cn7782.management.android.activity.ChangeMessageActivity$4 -> com.cn7782.management.android.activity.l:
    com.cn7782.management.android.activity.ChangeMessageActivity this$0 -> a
    void onToggle(boolean) -> a
com.cn7782.management.android.activity.ChartingActivity -> com.cn7782.management.android.activity.ChartingActivity:
    android.widget.ListView listCharting -> b
    com.cn7782.management.android.activity.adapter.ChartingAdapter chartingAdapter -> c
    java.util.List list -> d
    android.view.View back -> a
    java.lang.String tokenId -> e
    java.lang.String type -> f
    java.lang.String end -> g
    java.lang.String sta -> h
    android.widget.TextView date_head -> i
    android.widget.TextView date_tail -> j
    android.widget.TextView title -> k
    void onCreate(android.os.Bundle) -> onCreate
    void initdata() -> a
    void getData() -> b
    void getdata() -> c
    void initview() -> d
    java.util.List access$000(com.cn7782.management.android.activity.ChartingActivity) -> a
    java.util.List access$002(com.cn7782.management.android.activity.ChartingActivity,java.util.List) -> a
    void access$100(com.cn7782.management.android.activity.ChartingActivity) -> b
com.cn7782.management.android.activity.ChartingActivity$1 -> com.cn7782.management.android.activity.m:
    com.cn7782.management.android.activity.ChartingActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.cn7782.management.android.activity.ChartingActivity$2 -> com.cn7782.management.android.activity.n:
    com.cn7782.management.android.activity.ChartingActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.cn7782.management.android.activity.ChartingActivity$3 -> com.cn7782.management.android.activity.o:
    com.cn7782.management.android.activity.ChartingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.ChatActivity -> com.cn7782.management.android.activity.ChatActivity:
    com.easemob.easeui.widget.EaseTitleBar titleBar -> a
    java.lang.String toChatUsername -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
com.cn7782.management.android.activity.CheckMapActivity -> com.cn7782.management.android.activity.CheckMapActivity:
    com.baidu.mapapi.map.MapView mMapView -> c
    com.baidu.mapapi.map.BaiduMap mBaiduMap -> d
    java.lang.String time -> e
    java.lang.String describe -> f
    int timeconsuming -> g
    int distance -> h
    java.util.List mlist -> i
    com.baidu.mapapi.map.BitmapDescriptor bdA -> a
    com.baidu.mapapi.map.BitmapDescriptor bdB -> b
    com.baidu.mapapi.utils.CoordinateConverter converter -> j
    int length -> k
    void onCreate(android.os.Bundle) -> onCreate
    void initOverlay(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.map.BitmapDescriptor) -> a
    void drawLine(com.baidu.mapapi.model.LatLng[],int) -> a
    void getdata(java.lang.String) -> a
    void initdata() -> a
    void onDestroy() -> onDestroy
    com.baidu.mapapi.model.LatLng[] setList(java.lang.String) -> b
    void showDistance(java.lang.String,int) -> a
    java.util.List access$000(com.cn7782.management.android.activity.CheckMapActivity) -> a
    java.util.List access$002(com.cn7782.management.android.activity.CheckMapActivity,java.util.List) -> a
    java.lang.String access$102(com.cn7782.management.android.activity.CheckMapActivity,java.lang.String) -> a
    int access$202(com.cn7782.management.android.activity.CheckMapActivity,int) -> a
    int access$302(com.cn7782.management.android.activity.CheckMapActivity,int) -> b
    java.lang.String access$402(com.cn7782.management.android.activity.CheckMapActivity,java.lang.String) -> b
    int access$502(com.cn7782.management.android.activity.CheckMapActivity,int) -> c
    int access$500(com.cn7782.management.android.activity.CheckMapActivity) -> b
    com.baidu.mapapi.model.LatLng[] access$600(com.cn7782.management.android.activity.CheckMapActivity,java.lang.String) -> c
    com.baidu.mapapi.map.BaiduMap access$700(com.cn7782.management.android.activity.CheckMapActivity) -> c
    void access$800(com.cn7782.management.android.activity.CheckMapActivity) -> d
com.cn7782.management.android.activity.CheckMapActivity$1 -> com.cn7782.management.android.activity.p:
    com.cn7782.management.android.activity.CheckMapActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.CheckMapActivity$2 -> com.cn7782.management.android.activity.q:
    com.cn7782.management.android.activity.CheckMapActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.cn7782.management.android.activity.ChooseAddressActivity -> com.cn7782.management.android.activity.ChooseAddressActivity:
    java.lang.String[] tabTitle -> tabTitle
    java.lang.String ARGUMENTS_NAME -> ARGUMENTS_NAME
    android.support.v4.view.ViewPager mViewPager -> d
    android.widget.HorizontalScrollView mHsv -> e
    int indicatorWidth -> f
    com.cn7782.management.android.activity.ChooseAddressActivity$TabFragmentPagerAdapter mAdapter -> a
    android.widget.RadioGroup rg_nav_content -> g
    int currentIndicatorLeft -> h
    android.widget.ImageView iv_nav_indicator -> i
    com.baidu.mapapi.search.geocode.GeoCoder mSearch -> j
    java.lang.String address -> k
    com.baidu.mapapi.search.poi.PoiSearch mPoiSearch -> l
    java.util.ArrayList mlist -> m
    int mcount -> n
    java.util.List framlist -> o
    com.baidu.mapapi.map.MapView mMapView -> p
    com.baidu.mapapi.map.BaiduMap mBaiduMap -> q
    com.baidu.mapapi.map.BitmapDescriptor bdA -> b
    com.baidu.mapapi.map.BitmapDescriptor bdB -> c
    com.baidu.mapapi.model.LatLng mpt -> r
    android.app.ProgressDialog progressDialog -> s
    int ADDRESS -> ADDRESS
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void initNavigationHSV() -> b
    void setListener() -> c
    void showMessage(com.baidu.mapapi.model.LatLng,java.lang.String) -> showMessage
    void onGetGeoCodeResult(com.baidu.mapapi.search.geocode.GeoCodeResult) -> onGetGeoCodeResult
    void onGetReverseGeoCodeResult(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult) -> onGetReverseGeoCodeResult
    void searchdata(java.lang.String,int) -> a
    void onGetSuggestionResult(com.baidu.mapapi.search.sug.SuggestionResult) -> onGetSuggestionResult
    void onGetPoiDetailResult(com.baidu.mapapi.search.poi.PoiDetailResult) -> onGetPoiDetailResult
    void onGetPoiResult(com.baidu.mapapi.search.poi.PoiResult) -> onGetPoiResult
    void initOverlay() -> d
    void onDestroy() -> onDestroy
    void showProgressDialog(java.lang.String) -> showProgressDialog
    void onClick(android.view.View) -> onClick
    java.lang.String access$000(com.cn7782.management.android.activity.ChooseAddressActivity) -> a
    java.util.List access$100(com.cn7782.management.android.activity.ChooseAddressActivity) -> b
    android.widget.RadioGroup access$200(com.cn7782.management.android.activity.ChooseAddressActivity) -> c
    int access$300(com.cn7782.management.android.activity.ChooseAddressActivity) -> d
    android.widget.ImageView access$400(com.cn7782.management.android.activity.ChooseAddressActivity) -> e
    android.support.v4.view.ViewPager access$500(com.cn7782.management.android.activity.ChooseAddressActivity) -> f
    int access$302(com.cn7782.management.android.activity.ChooseAddressActivity,int) -> a
    android.widget.HorizontalScrollView access$600(com.cn7782.management.android.activity.ChooseAddressActivity) -> g
com.cn7782.management.android.activity.ChooseAddressActivity$1 -> com.cn7782.management.android.activity.r:
    com.cn7782.management.android.activity.ChooseAddressActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.ChooseAddressActivity$2 -> com.cn7782.management.android.activity.s:
    com.cn7782.management.android.activity.ChooseAddressActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.cn7782.management.android.activity.ChooseAddressActivity$3 -> com.cn7782.management.android.activity.t:
    com.cn7782.management.android.activity.ChooseAddressActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.cn7782.management.android.activity.ChooseAddressActivity$TabFragmentPagerAdapter -> com.cn7782.management.android.activity.u:
    com.cn7782.management.android.activity.ChooseAddressActivity this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
com.cn7782.management.android.activity.ChooseDateActivity -> com.cn7782.management.android.activity.ChooseDateActivity:
    android.widget.TextView startime -> b
    android.widget.TextView endtime -> c
    int oneday -> d
    android.view.View back -> a
    java.util.Calendar mCalendar -> e
    int DATATIME -> DATATIME
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void onClick(android.view.View) -> onClick
    java.lang.String pad(int) -> a
    java.lang.String access$000(com.cn7782.management.android.activity.ChooseDateActivity,int) -> a
    android.widget.TextView access$100(com.cn7782.management.android.activity.ChooseDateActivity) -> a
    android.widget.TextView access$200(com.cn7782.management.android.activity.ChooseDateActivity) -> b
com.cn7782.management.android.activity.ChooseDateActivity$1 -> com.cn7782.management.android.activity.v:
    com.cn7782.management.android.activity.ChooseDateActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.ChooseDateActivity$2 -> com.cn7782.management.android.activity.w:
    com.cn7782.management.android.activity.ChooseDateActivity this$0 -> a
    void onDateSet(com.cn7782.management.android.activity.datetimepickers.DatePickerDialog,int,int,int) -> a
com.cn7782.management.android.activity.ChooseDateActivity$3 -> com.cn7782.management.android.activity.x:
    java.lang.String tag -> c
    com.cn7782.management.android.activity.datetimepickers.DatePickerDialog val$datePickerDialog -> a
    com.cn7782.management.android.activity.ChooseDateActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.ChooseDateActivity$4 -> com.cn7782.management.android.activity.y:
    com.cn7782.management.android.activity.ChooseDateActivity this$0 -> a
    void onDateSet(com.cn7782.management.android.activity.datetimepickers.DatePickerDialog,int,int,int) -> a
com.cn7782.management.android.activity.ChooseDateActivity$5 -> com.cn7782.management.android.activity.z:
    java.lang.String tag -> c
    com.cn7782.management.android.activity.datetimepickers.DatePickerDialog val$datePickerDialog1 -> a
    com.cn7782.management.android.activity.ChooseDateActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.ContactManagerActivity -> com.cn7782.management.android.activity.ContactManagerActivity:
    com.cn7782.management.android.db.DBHelper dp -> a
    android.database.Cursor cursor -> b
    java.lang.String sql -> c
    java.util.List deplist -> d
    java.util.List emplist -> e
    java.util.Map empAll -> f
    com.cn7782.management.android.activity.adapter.ExpandableListAdapter depAdapter -> g
    android.widget.ExpandableListView expandableListView -> h
    android.widget.SearchView sv -> i
    android.view.View searchResult -> j
    android.widget.ListView searchList -> k
    android.view.View callANDsms -> l
    android.widget.TextView callTitle -> m
    java.lang.String number -> n
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void queryDepartmentList() -> b
    void getDepartmentData() -> c
    void getEmployeeData() -> d
    void saveData2db() -> e
    void initListView() -> f
    void queryEmployeeListAll() -> g
    void onDestroy() -> onDestroy
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    java.util.List queryEmployees(java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void callBody(java.lang.String) -> b
    void sendSms(java.lang.String) -> c
    java.util.List access$000(com.cn7782.management.android.activity.ContactManagerActivity) -> a
    java.util.List access$002(com.cn7782.management.android.activity.ContactManagerActivity,java.util.List) -> a
    void access$100(com.cn7782.management.android.activity.ContactManagerActivity) -> b
    java.util.List access$200(com.cn7782.management.android.activity.ContactManagerActivity) -> c
    java.util.List access$202(com.cn7782.management.android.activity.ContactManagerActivity,java.util.List) -> b
    void access$300(com.cn7782.management.android.activity.ContactManagerActivity) -> d
    com.cn7782.management.android.activity.adapter.ExpandableListAdapter access$400(com.cn7782.management.android.activity.ContactManagerActivity) -> e
    android.view.View access$500(com.cn7782.management.android.activity.ContactManagerActivity) -> f
    android.widget.TextView access$600(com.cn7782.management.android.activity.ContactManagerActivity) -> g
    java.lang.String access$702(com.cn7782.management.android.activity.ContactManagerActivity,java.lang.String) -> a
com.cn7782.management.android.activity.ContactManagerActivity$1 -> com.cn7782.management.android.activity.aa:
    com.cn7782.management.android.activity.ContactManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.ContactManagerActivity$2 -> com.cn7782.management.android.activity.ab:
    com.cn7782.management.android.activity.ContactManagerActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.ContactManagerActivity$3 -> com.cn7782.management.android.activity.ac:
    com.cn7782.management.android.activity.ContactManagerActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.cn7782.management.android.activity.ContactManagerActivity$4 -> com.cn7782.management.android.activity.ad:
    com.cn7782.management.android.activity.ContactManagerActivity this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.cn7782.management.android.activity.ContactManagerActivity$SearchAdapter -> com.cn7782.management.android.activity.ae:
    android.content.Context mcontext -> b
    java.util.List emplist -> c
    com.cn7782.management.android.activity.ContactManagerActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.cn7782.management.android.activity.ContactManagerActivity$SearchOnClickListener -> com.cn7782.management.android.activity.af:
    com.cn7782.management.android.activity.ContactManagerActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.android.activity.ContextMenuActivity -> com.cn7782.management.android.activity.ContextMenuActivity:
    int RESULT_CODE_COPY -> RESULT_CODE_COPY
    int RESULT_CODE_DELETE -> RESULT_CODE_DELETE
    int RESULT_CODE_FORWARD -> RESULT_CODE_FORWARD
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void copy(android.view.View) -> copy
    void delete(android.view.View) -> delete
    void forward(android.view.View) -> forward
com.cn7782.management.android.activity.ConversationListActivity -> com.cn7782.management.android.activity.ConversationListActivity:
    com.cn7782.management.fragment.ConversationListFragment conversationListFragment -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onEvent(com.easemob.EMNotifierEvent) -> onEvent
    void refreshUIWithMessage() -> a
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    com.cn7782.management.fragment.ConversationListFragment access$000(com.cn7782.management.android.activity.ConversationListActivity) -> a
com.cn7782.management.android.activity.ConversationListActivity$1 -> com.cn7782.management.android.activity.ag:
    com.cn7782.management.android.activity.ConversationListActivity this$0 -> a
    void run() -> run
com.cn7782.management.android.activity.ConversationListActivity$2 -> com.cn7782.management.android.activity.ah:
    int[] $SwitchMap$com$easemob$EMNotifierEvent$Event -> a
com.cn7782.management.android.activity.DescriptionActivity -> com.cn7782.management.android.activity.DescriptionActivity:
    android.widget.EditText edittext -> a
    int DESCRIPTION_RETURNQ -> DESCRIPTION_RETURNQ
    void onCreate(android.os.Bundle) -> onCreate
    android.widget.EditText access$000(com.cn7782.management.android.activity.DescriptionActivity) -> a
com.cn7782.management.android.activity.DescriptionActivity$1 -> com.cn7782.management.android.activity.ai:
    com.cn7782.management.android.activity.DescriptionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.DynamicActivity -> com.cn7782.management.android.activity.DynamicActivity:
    com.cn7782.management.android.activity.adapter.SearchAdapter searchadapter -> a
    int pagecount -> b
    int total -> c
    android.widget.ListView listview -> d
    java.util.List list -> e
    com.cn7782.management.view.PullToRefreshView mPullToRefreshView -> f
    com.cn7782.management.view.PullToRefreshView$OnHeaderRefreshListener mOnHeaderRefreshListener -> g
    com.cn7782.management.view.PullToRefreshView$OnFooterRefreshListener mOnFooterRefreshListener -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void startRefresh() -> b
    void getMoreData() -> c
    void getdata() -> d
    void initListView() -> e
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$000(com.cn7782.management.android.activity.DynamicActivity) -> a
    void access$100(com.cn7782.management.android.activity.DynamicActivity) -> b
    java.util.List access$200(com.cn7782.management.android.activity.DynamicActivity) -> c
    java.util.List access$202(com.cn7782.management.android.activity.DynamicActivity,java.util.List) -> a
    int access$302(com.cn7782.management.android.activity.DynamicActivity,int) -> a
    com.cn7782.management.android.activity.adapter.SearchAdapter access$400(com.cn7782.management.android.activity.DynamicActivity) -> d
    com.cn7782.management.view.PullToRefreshView access$500(com.cn7782.management.android.activity.DynamicActivity) -> e
    void access$600(com.cn7782.management.android.activity.DynamicActivity) -> f
com.cn7782.management.android.activity.DynamicActivity$1 -> com.cn7782.management.android.activity.aj:
    com.cn7782.management.android.activity.DynamicActivity this$0 -> a
    void onHeaderRefresh(com.cn7782.management.view.PullToRefreshView) -> a
com.cn7782.management.android.activity.DynamicActivity$2 -> com.cn7782.management.android.activity.ak:
    com.cn7782.management.android.activity.DynamicActivity this$0 -> a
    void onFooterRefresh(com.cn7782.management.view.PullToRefreshView) -> a
com.cn7782.management.android.activity.DynamicActivity$3 -> com.cn7782.management.android.activity.al:
    com.cn7782.management.android.activity.DynamicActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.DynamicActivity$4 -> com.cn7782.management.android.activity.am:
    com.cn7782.management.android.activity.DynamicActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.DynamicActivity$5 -> com.cn7782.management.android.activity.an:
    com.cn7782.management.android.activity.DynamicActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.DynamicActivity$6 -> com.cn7782.management.android.activity.ao:
    com.cn7782.management.android.activity.DynamicActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.DynamicActivity$7 -> com.cn7782.management.android.activity.ap:
    com.cn7782.management.android.activity.DynamicActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.android.activity.DynamicDetailActivity -> com.cn7782.management.android.activity.DynamicDetailActivity:
    java.lang.String tokenId -> a
    java.lang.String id -> b
    void onCreate(android.os.Bundle) -> onCreate
    void getdata() -> a
com.cn7782.management.android.activity.DynamicDetailActivity$1 -> com.cn7782.management.android.activity.aq:
    com.cn7782.management.android.activity.DynamicDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.DynamicDetailActivity$2 -> com.cn7782.management.android.activity.ar:
    com.cn7782.management.android.activity.DynamicDetailActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.DynamicDetailActivity$2$1 -> com.cn7782.management.android.activity.as:
    java.lang.String val$objId -> a
    com.cn7782.management.android.activity.DynamicDetailActivity$2 this$1 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.EventReportActivity -> com.cn7782.management.android.activity.EventReportActivity:
    long startVoiceT -> e
    int secNum -> f
    java.lang.String voiceName -> g
    java.io.File recordFile -> h
    com.cn7782.management.util.SoundMeter mSensor -> i
    android.widget.ImageView r_volume -> a
    android.widget.ImageView l_volume -> b
    java.util.ArrayList photos -> j
    android.app.ProgressDialog progressDialog -> k
    int EVENT_TYPE_EVENT -> EVENT_TYPE_EVENT
    int EVENT_TYPE_DISPUTES -> EVENT_TYPE_DISPUTES
    int EVENT_TYPE_ROAD -> EVENT_TYPE_ROAD
    int title_type -> l
    android.widget.TextView title -> m
    android.widget.TextView eventTypetext -> n
    android.widget.TextView timeNow -> o
    android.widget.TextView address -> p
    android.widget.TextView process -> q
    int type -> r
    java.util.Timer timer -> s
    android.widget.TextView textTime -> t
    java.lang.String eventType -> u
    android.widget.TextView textTime2 -> v
    android.os.Handler mHandler -> c
    com.baidu.mapapi.search.geocode.GeoCoder mSearch -> d
    boolean ischoose -> w
    com.cn7782.management.util.MedieaPlayerUtil medieaPlayerUtil -> x
    android.widget.PopupWindow popup -> y
    android.widget.GridView noScrollgridview -> z
    com.cn7782.management.android.activity.EventReportActivity$GridAdapter adapter -> A
    android.view.View parentView -> B
    int REQUEST_IMAGE -> REQUEST_IMAGE
    java.util.ArrayList paths -> C
    java.lang.Runnable mPollTask -> D
    java.lang.Runnable mSleepTask -> E
    void onCreate(android.os.Bundle) -> onCreate
    void findId() -> a
    void initView() -> b
    void setOnClick() -> c
    void initPopView() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    java.util.Map changetomap() -> e
    void GetViewPhoto() -> GetViewPhoto
    void submit() -> f
    void showRecoredDialg() -> g
    void start(java.lang.String) -> a
    void stop() -> h
    void updateDisplay(double) -> a
    void showProgressDialog(java.lang.String) -> showProgressDialog
    int returnValue(java.lang.String) -> b
    void excuteTask() -> i
    void initTimer() -> j
    void onGetGeoCodeResult(com.baidu.mapapi.search.geocode.GeoCodeResult) -> onGetGeoCodeResult
    void onGetReverseGeoCodeResult(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult) -> onGetReverseGeoCodeResult
    void onResume() -> onResume
    void onRestart() -> onRestart
    void photo() -> photo
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    com.cn7782.management.android.activity.EventReportActivity$GridAdapter access$000(com.cn7782.management.android.activity.EventReportActivity) -> a
    android.widget.PopupWindow access$100(com.cn7782.management.android.activity.EventReportActivity) -> b
    int access$202(com.cn7782.management.android.activity.EventReportActivity,int) -> a
    android.widget.TextView access$300(com.cn7782.management.android.activity.EventReportActivity) -> c
    java.io.File access$400(com.cn7782.management.android.activity.EventReportActivity) -> d
    int access$502(com.cn7782.management.android.activity.EventReportActivity,int) -> b
    android.widget.TextView access$600(com.cn7782.management.android.activity.EventReportActivity) -> e
    android.widget.TextView access$700(com.cn7782.management.android.activity.EventReportActivity) -> f
    java.util.ArrayList access$800(com.cn7782.management.android.activity.EventReportActivity) -> g
    android.app.ProgressDialog access$900(com.cn7782.management.android.activity.EventReportActivity) -> h
    java.util.Timer access$1000(com.cn7782.management.android.activity.EventReportActivity) -> i
    void access$1100(com.cn7782.management.android.activity.EventReportActivity) -> j
    java.lang.String access$1202(com.cn7782.management.android.activity.EventReportActivity,java.lang.String) -> a
    com.cn7782.management.util.SoundMeter access$1300(com.cn7782.management.android.activity.EventReportActivity) -> k
    void access$1400(com.cn7782.management.android.activity.EventReportActivity,double) -> a
    java.lang.Runnable access$1500(com.cn7782.management.android.activity.EventReportActivity) -> l
    void access$1600(com.cn7782.management.android.activity.EventReportActivity) -> m
com.cn7782.management.android.activity.EventReportActivity$1 -> com.cn7782.management.android.activity.at:
    com.cn7782.management.android.activity.EventReportActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.cn7782.management.android.activity.EventReportActivity$10 -> com.cn7782.management.android.activity.au:
    com.cn7782.management.android.activity.EventReportActivity this$0 -> a
    void run() -> run
com.cn7782.management.android.activity.EventReportActivity$11 -> com.cn7782.management.android.activity.av:
    com.cn7782.management.android.activity.EventReportActivity this$0 -> a
    void run() -> run
com.cn7782.management.android.activity.EventReportActivity$12 -> com.cn7782.management.android.activity.aw:
    com.cn7782.management.android.activity.EventReportActivity this$0 -> a
    void run() -> run
com.cn7782.management.android.activity.EventReportActivity$12$1 -> com.cn7782.management.android.activity.ax:
    com.cn7782.management.android.activity.EventReportActivity$12 this$1 -> a
    void run() -> run
com.cn7782.management.android.activity.EventReportActivity$2 -> com.cn7782.management.android.activity.ay:
    int val$width -> a
    com.cn7782.management.android.activity.EventReportActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.EventReportActivity$3 -> com.cn7782.management.android.activity.az:
    com.cn7782.management.android.activity.EventReportActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.EventReportActivity$4 -> com.cn7782.management.android.activity.ba:
    com.cn7782.management.android.activity.EventReportActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.EventReportActivity$5 -> com.cn7782.management.android.activity.bb:
    com.cn7782.management.android.activity.EventReportActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.EventReportActivity$6 -> com.cn7782.management.android.activity.bc:
    com.cn7782.management.android.activity.EventReportActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.android.activity.EventReportActivity$7 -> com.cn7782.management.android.activity.bd:
    com.cn7782.management.android.activity.EventReportActivity this$0 -> a
    void onSuccess(int,org.json.JSONObject) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.EventReportActivity$8 -> com.cn7782.management.android.activity.be:
    android.app.Dialog val$dialog -> a
    com.cn7782.management.android.activity.EventReportActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.EventReportActivity$9 -> com.cn7782.management.android.activity.bf:
    android.app.Dialog val$dialog -> a
    com.cn7782.management.android.activity.EventReportActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.EventReportActivity$GridAdapter -> com.cn7782.management.android.activity.EventReportActivity$GridAdapter:
    android.view.LayoutInflater inflater -> b
    int selectedPosition -> c
    com.cn7782.management.android.activity.EventReportActivity this$0 -> a
    void update() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void loading() -> b
com.cn7782.management.android.activity.EventReportActivity$GridAdapter$ViewHolder -> com.cn7782.management.android.activity.EventReportActivity$GridAdapter$ViewHolder:
    android.widget.ImageView image -> image
    com.cn7782.management.android.activity.EventReportActivity$GridAdapter this$1 -> a
com.cn7782.management.android.activity.EventReportActivity2 -> com.cn7782.management.android.activity.EventReportActivity2:
    long startVoiceT -> e
    int secNum -> f
    java.lang.String voiceName -> g
    java.io.File recordFile -> h
    com.cn7782.management.util.SoundMeter mSensor -> i
    android.widget.ImageView r_volume -> a
    android.widget.ImageView l_volume -> b
    java.util.ArrayList photos -> j
    android.app.ProgressDialog progressDialog -> k
    int EVENT_TYPE_EVENT -> EVENT_TYPE_EVENT
    int EVENT_TYPE_DISPUTES -> EVENT_TYPE_DISPUTES
    int EVENT_TYPE_ROAD -> EVENT_TYPE_ROAD
    int title_type -> l
    android.widget.TextView title -> m
    android.widget.TextView eventTypetext -> n
    android.widget.TextView timeNow -> o
    android.widget.TextView address -> p
    android.widget.TextView process -> q
    int type -> r
    java.util.Timer timer -> s
    android.widget.TextView textTime -> t
    java.lang.String eventType -> u
    android.widget.TextView textTime2 -> v
    android.os.Handler mHandler -> c
    com.baidu.mapapi.search.geocode.GeoCoder mSearch -> d
    boolean ischoose -> w
    com.cn7782.management.util.MedieaPlayerUtil medieaPlayerUtil -> x
    android.widget.PopupWindow popup -> y
    android.widget.GridView noScrollgridview -> z
    com.cn7782.management.android.activity.EventReportActivity2$GridAdapter adapter -> A
    android.view.View parentView -> B
    int REQUEST_IMAGE -> REQUEST_IMAGE
    java.util.ArrayList paths -> C
    android.widget.ImageView videoContent -> D
    java.lang.String videoPath -> E
    java.lang.Runnable mPollTask -> F
    java.lang.Runnable mSleepTask -> G
    void onCreate(android.os.Bundle) -> onCreate
    void findId() -> a
    void initView() -> b
    void setOnClick() -> c
    void initPopView() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    java.util.Map changetomap() -> e
    void GetViewPhoto() -> GetViewPhoto
    void submit() -> f
    void showRecoredDialg() -> g
    void start(java.lang.String) -> a
    void stop() -> h
    void updateDisplay(double) -> a
    void showProgressDialog(java.lang.String) -> showProgressDialog
    int returnValue(java.lang.String) -> b
    void excuteTask() -> i
    void initTimer() -> j
    void onGetGeoCodeResult(com.baidu.mapapi.search.geocode.GeoCodeResult) -> onGetGeoCodeResult
    void onGetReverseGeoCodeResult(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult) -> onGetReverseGeoCodeResult
    void onResume() -> onResume
    void onRestart() -> onRestart
    void photo() -> photo
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    com.cn7782.management.android.activity.EventReportActivity2$GridAdapter access$000(com.cn7782.management.android.activity.EventReportActivity2) -> a
    android.widget.PopupWindow access$100(com.cn7782.management.android.activity.EventReportActivity2) -> b
    int access$202(com.cn7782.management.android.activity.EventReportActivity2,int) -> a
    android.widget.TextView access$300(com.cn7782.management.android.activity.EventReportActivity2) -> c
    java.io.File access$400(com.cn7782.management.android.activity.EventReportActivity2) -> d
    int access$502(com.cn7782.management.android.activity.EventReportActivity2,int) -> b
    android.widget.TextView access$600(com.cn7782.management.android.activity.EventReportActivity2) -> e
    android.widget.TextView access$700(com.cn7782.management.android.activity.EventReportActivity2) -> f
    java.util.ArrayList access$800(com.cn7782.management.android.activity.EventReportActivity2) -> g
    android.app.ProgressDialog access$900(com.cn7782.management.android.activity.EventReportActivity2) -> h
    java.util.Timer access$1000(com.cn7782.management.android.activity.EventReportActivity2) -> i
    void access$1100(com.cn7782.management.android.activity.EventReportActivity2) -> j
    java.lang.String access$1202(com.cn7782.management.android.activity.EventReportActivity2,java.lang.String) -> a
    com.cn7782.management.util.SoundMeter access$1300(com.cn7782.management.android.activity.EventReportActivity2) -> k
    void access$1400(com.cn7782.management.android.activity.EventReportActivity2,double) -> a
    java.lang.Runnable access$1500(com.cn7782.management.android.activity.EventReportActivity2) -> l
    void access$1600(com.cn7782.management.android.activity.EventReportActivity2) -> m
com.cn7782.management.android.activity.EventReportActivity2$1 -> com.cn7782.management.android.activity.bg:
    com.cn7782.management.android.activity.EventReportActivity2 this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.cn7782.management.android.activity.EventReportActivity2$10 -> com.cn7782.management.android.activity.bh:
    com.cn7782.management.android.activity.EventReportActivity2 this$0 -> a
    void run() -> run
com.cn7782.management.android.activity.EventReportActivity2$11 -> com.cn7782.management.android.activity.bi:
    com.cn7782.management.android.activity.EventReportActivity2 this$0 -> a
    void run() -> run
com.cn7782.management.android.activity.EventReportActivity2$12 -> com.cn7782.management.android.activity.bj:
    com.cn7782.management.android.activity.EventReportActivity2 this$0 -> a
    void run() -> run
com.cn7782.management.android.activity.EventReportActivity2$12$1 -> com.cn7782.management.android.activity.bk:
    com.cn7782.management.android.activity.EventReportActivity2$12 this$1 -> a
    void run() -> run
com.cn7782.management.android.activity.EventReportActivity2$2 -> com.cn7782.management.android.activity.bl:
    int val$width -> a
    com.cn7782.management.android.activity.EventReportActivity2 this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.EventReportActivity2$3 -> com.cn7782.management.android.activity.bm:
    com.cn7782.management.android.activity.EventReportActivity2 this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.EventReportActivity2$4 -> com.cn7782.management.android.activity.bn:
    com.cn7782.management.android.activity.EventReportActivity2 this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.EventReportActivity2$5 -> com.cn7782.management.android.activity.bo:
    com.cn7782.management.android.activity.EventReportActivity2 this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.EventReportActivity2$6 -> com.cn7782.management.android.activity.bp:
    com.cn7782.management.android.activity.EventReportActivity2 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.android.activity.EventReportActivity2$7 -> com.cn7782.management.android.activity.bq:
    com.cn7782.management.android.activity.EventReportActivity2 this$0 -> a
    void onSuccess(int,org.json.JSONObject) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.EventReportActivity2$8 -> com.cn7782.management.android.activity.br:
    android.app.Dialog val$dialog -> a
    com.cn7782.management.android.activity.EventReportActivity2 this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.EventReportActivity2$9 -> com.cn7782.management.android.activity.bs:
    android.app.Dialog val$dialog -> a
    com.cn7782.management.android.activity.EventReportActivity2 this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.EventReportActivity2$GridAdapter -> com.cn7782.management.android.activity.EventReportActivity2$GridAdapter:
    android.view.LayoutInflater inflater -> b
    int selectedPosition -> c
    com.cn7782.management.android.activity.EventReportActivity2 this$0 -> a
    void update() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void loading() -> b
com.cn7782.management.android.activity.EventReportActivity2$GridAdapter$ViewHolder -> com.cn7782.management.android.activity.EventReportActivity2$GridAdapter$ViewHolder:
    android.widget.ImageView image -> image
    com.cn7782.management.android.activity.EventReportActivity2$GridAdapter this$1 -> a
com.cn7782.management.android.activity.FallDownWarnActivity -> com.cn7782.management.android.activity.FallDownWarnActivity:
    android.widget.Button falldownCallBtn -> e
    android.widget.Button falldownCancelBtn -> f
    android.widget.TextView countdownTv -> g
    int currentCount -> h
    com.cn7782.management.android.activity.FallDownWarnActivity$TimeCount timeCount -> i
    com.cn7782.management.android.activity.FallDownWarnActivity$ReceiverMyLocation receiverMyLocation -> j
    double longitude -> k
    double latitude -> l
    com.cn7782.management.util.MedieaPlayerUtil medieaPlayerUtil -> a
    android.app.AlertDialog mAlertDialog -> b
    android.content.DialogInterface$OnClickListener fallDownDialogListener -> c
    android.os.Handler handler -> d
    void onCreate(android.os.Bundle) -> onCreate
    void initLogic() -> a
    void InitUI() -> b
    void regReceiver() -> c
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void sendHelpInfo() -> d
    void showFallDownCallSuccessDialog() -> e
    void falldownCallFailed(java.lang.String) -> a
    void createDialog(java.lang.String,java.lang.String) -> a
    void onDestroy() -> onDestroy
    void access$000(com.cn7782.management.android.activity.FallDownWarnActivity) -> a
    int access$102(com.cn7782.management.android.activity.FallDownWarnActivity,int) -> a
    int access$100(com.cn7782.management.android.activity.FallDownWarnActivity) -> b
    android.widget.TextView access$200(com.cn7782.management.android.activity.FallDownWarnActivity) -> c
    void access$300(com.cn7782.management.android.activity.FallDownWarnActivity) -> d
    void access$400(com.cn7782.management.android.activity.FallDownWarnActivity,java.lang.String) -> a
    double access$502(com.cn7782.management.android.activity.FallDownWarnActivity,double) -> a
    double access$602(com.cn7782.management.android.activity.FallDownWarnActivity,double) -> b
com.cn7782.management.android.activity.FallDownWarnActivity$1 -> com.cn7782.management.android.activity.bt:
    com.cn7782.management.android.activity.FallDownWarnActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.FallDownWarnActivity$2 -> com.cn7782.management.android.activity.bu:
    com.cn7782.management.android.activity.FallDownWarnActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.FallDownWarnActivity$3 -> com.cn7782.management.android.activity.bv:
    com.cn7782.management.android.activity.FallDownWarnActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.FallDownWarnActivity$4 -> com.cn7782.management.android.activity.bw:
    com.cn7782.management.android.activity.FallDownWarnActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.cn7782.management.android.activity.FallDownWarnActivity$ReceiverMyLocation -> com.cn7782.management.android.activity.bx:
    com.cn7782.management.android.activity.FallDownWarnActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cn7782.management.android.activity.FallDownWarnActivity$TimeCount -> com.cn7782.management.android.activity.by:
    com.cn7782.management.android.activity.FallDownWarnActivity this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.cn7782.management.android.activity.FeedbackActivity -> com.cn7782.management.android.activity.FeedbackActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void sendData(java.lang.String) -> a
    void access$000(com.cn7782.management.android.activity.FeedbackActivity,java.lang.String) -> a
com.cn7782.management.android.activity.FeedbackActivity$1 -> com.cn7782.management.android.activity.bz:
    com.cn7782.management.android.activity.FeedbackActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.FeedbackActivity$2 -> com.cn7782.management.android.activity.ca:
    android.widget.EditText val$editText -> a
    com.cn7782.management.android.activity.FeedbackActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.FeedbackActivity$3 -> com.cn7782.management.android.activity.cb:
    com.cn7782.management.android.activity.FeedbackActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.cn7782.management.android.activity.HaveReadActivity -> com.cn7782.management.android.activity.HaveReadActivity:
    com.cn7782.management.android.activity.adapter.HaveReadAdapter havereadadapter1 -> a
    com.cn7782.management.android.activity.adapter.HaveReadAdapter havereadadapter2 -> b
    android.widget.ListView weeklist -> c
    android.widget.ListView weekagolist -> d
    android.view.View weekAgo -> e
    android.view.View oneWeek -> f
    android.view.View back -> g
    java.lang.String NOTICEREAD -> NOTICEREAD
    java.lang.String DYNAMICREAD -> DYNAMICREAD
    void onCreate(android.os.Bundle) -> onCreate
    void getdata() -> a
    void getdata2() -> b
    void initListView(java.util.List,java.util.List) -> a
    void access$000(com.cn7782.management.android.activity.HaveReadActivity,java.util.List,java.util.List) -> a
com.cn7782.management.android.activity.HaveReadActivity$1 -> com.cn7782.management.android.activity.cc:
    com.cn7782.management.android.activity.HaveReadActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.HaveReadActivity$2 -> com.cn7782.management.android.activity.cd:
    com.cn7782.management.android.activity.HaveReadActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.HaveReadActivity$3 -> com.cn7782.management.android.activity.ce:
    com.cn7782.management.android.activity.HaveReadActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.HistoryListActivity -> com.cn7782.management.android.activity.HistoryListActivity:
    android.widget.ListView listview -> a
    com.cn7782.management.android.activity.HistoryListActivity$HistoryListdapter historydapter -> b
    java.util.List list -> c
    android.widget.EditText editText -> d
    int DESCRIPTION_RETURNQ -> DESCRIPTION_RETURNQ
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void getStringData() -> b
    void SaveData(java.lang.String) -> a
    boolean isExist(java.lang.String) -> b
    java.util.List access$000(com.cn7782.management.android.activity.HistoryListActivity) -> a
    void access$100(com.cn7782.management.android.activity.HistoryListActivity,java.lang.String) -> a
    android.widget.EditText access$200(com.cn7782.management.android.activity.HistoryListActivity) -> b
com.cn7782.management.android.activity.HistoryListActivity$1 -> com.cn7782.management.android.activity.cf:
    com.cn7782.management.android.activity.HistoryListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.android.activity.HistoryListActivity$2 -> com.cn7782.management.android.activity.cg:
    com.cn7782.management.android.activity.HistoryListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.HistoryListActivity$3 -> com.cn7782.management.android.activity.ch:
    com.cn7782.management.android.activity.HistoryListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.HistoryListActivity$HistoryListdapter -> com.cn7782.management.android.activity.ci:
    java.util.List mlist -> b
    android.content.Context mcontext -> c
    com.cn7782.management.android.activity.HistoryListActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.cn7782.management.android.activity.HistoryListActivity$HistoryListdapter$ViewHolder -> com.cn7782.management.android.activity.cj:
    android.widget.TextView head_title -> a
    com.cn7782.management.android.activity.HistoryListActivity$HistoryListdapter this$1 -> b
com.cn7782.management.android.activity.ImageGridActivity -> com.cn7782.management.android.activity.ImageGridActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.cn7782.management.android.activity.LoginActivity -> com.cn7782.management.android.activity.LoginActivity:
    android.view.View login_button -> a
    android.view.GestureDetector gestureDetector_ -> b
    android.widget.EditText username -> c
    android.widget.EditText password -> d
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.widget.EditText access$000(com.cn7782.management.android.activity.LoginActivity) -> a
    android.widget.EditText access$100(com.cn7782.management.android.activity.LoginActivity) -> b
com.cn7782.management.android.activity.LoginActivity$1 -> com.cn7782.management.android.activity.ck:
    com.cn7782.management.android.activity.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.LoginActivity$2 -> com.cn7782.management.android.activity.cl:
    com.cn7782.management.android.activity.LoginActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.LoginActivity$LoginGestureDetector -> com.cn7782.management.android.activity.cm:
    android.content.Context mContext -> b
    int mTapCount -> c
    com.cn7782.management.android.activity.LoginActivity this$0 -> a
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.cn7782.management.android.activity.LoginSettingActivity -> com.cn7782.management.android.activity.LoginSettingActivity:
    android.widget.EditText IP -> a
    android.widget.EditText PORT -> b
    android.widget.Button button -> c
    void onCreate(android.os.Bundle) -> onCreate
    android.widget.EditText access$000(com.cn7782.management.android.activity.LoginSettingActivity) -> a
    android.widget.EditText access$100(com.cn7782.management.android.activity.LoginSettingActivity) -> b
com.cn7782.management.android.activity.LoginSettingActivity$1 -> com.cn7782.management.android.activity.cn:
    com.cn7782.management.android.activity.LoginSettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.MainActivity -> com.cn7782.management.android.activity.MainActivity:
    android.view.View dataview -> a
    android.view.View statisticsview -> b
    android.view.View historyview -> c
    android.view.View orderview -> d
    android.view.View nateview -> e
    android.view.View uploadview -> f
    android.view.View scheduleview -> g
    android.view.View contactview -> h
    com.slidingmenu.lib.SlidingMenu mDisMenu -> i
    com.cn7782.management.view.SlidingListView slidinglistview -> j
    int SLIDING_MENU_RIGHT_MARGIN -> SLIDING_MENU_RIGHT_MARGIN
    float SLIDING_MENU_FADE_DEGREE -> SLIDING_MENU_FADE_DEGREE
    int screenWidth_ -> k
    int screenHeight_ -> l
    float screenDensity_ -> m
    boolean is -> is
    android.widget.ImageView point_head -> n
    com.cn7782.management.android.activity.MainActivity$SDKReceiver mReceiver -> o
    long exitTime -> p
    java.lang.String userName -> q
    java.lang.String userRole -> r
    java.lang.String userPhoto -> s
    java.lang.String urlimage -> t
    java.lang.String tokenId -> u
    java.lang.String roles -> v
    android.widget.TextView noReadItem -> w
    com.cn7782.management.android.BaseApplication base -> x
    com.cn7782.management.android.activity.tabview.MyProgressDialog myProgressDialog -> y
    int UPDATE_APK -> UPDATE_APK
    android.os.Handler handler -> z
    void onCreate(android.os.Bundle) -> onCreate
    int getScreenWidth_() -> getScreenWidth_
    void getDisplayInfo(android.content.Context) -> getDisplayInfo
    void initview() -> b
    void initbackview() -> c
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void exitApp() -> exitApp
    void startService() -> d
    void stopService() -> e
    void bindMsgService() -> f
    void stopMsgService() -> g
    void getData() -> h
    void getServerVerCode() -> i
    void updateVersion(java.lang.Long,java.lang.String,double,double) -> a
    void downFile(java.lang.String,java.lang.Long,java.lang.String) -> a
    void down(java.lang.String) -> a
    void update(java.lang.String) -> b
    void onResume() -> onResume
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void updateNoReadNum() -> a
    void isInstallApk(java.lang.String) -> c
    void onEvent(com.easemob.EMNotifierEvent) -> onEvent
    void access$000(com.cn7782.management.android.activity.MainActivity) -> a
    java.lang.String access$102(com.cn7782.management.android.activity.MainActivity,java.lang.String) -> a
    java.lang.String access$202(com.cn7782.management.android.activity.MainActivity,java.lang.String) -> b
    java.lang.String access$302(com.cn7782.management.android.activity.MainActivity,java.lang.String) -> c
    java.lang.String access$100(com.cn7782.management.android.activity.MainActivity) -> b
    java.lang.String access$400(com.cn7782.management.android.activity.MainActivity) -> c
    java.lang.String access$300(com.cn7782.management.android.activity.MainActivity) -> d
    java.lang.String access$502(com.cn7782.management.android.activity.MainActivity,java.lang.String) -> d
    java.lang.String access$500(com.cn7782.management.android.activity.MainActivity) -> e
    android.widget.ImageView access$602(com.cn7782.management.android.activity.MainActivity,android.widget.ImageView) -> a
    android.widget.ImageView access$600(com.cn7782.management.android.activity.MainActivity) -> f
    void access$700(com.cn7782.management.android.activity.MainActivity,java.lang.Long,java.lang.String,double,double) -> a
    void access$800(com.cn7782.management.android.activity.MainActivity,java.lang.String,java.lang.Long,java.lang.String) -> a
    android.os.Handler access$900(com.cn7782.management.android.activity.MainActivity) -> g
    void access$1000(com.cn7782.management.android.activity.MainActivity,java.lang.String) -> e
    void access$1100(com.cn7782.management.android.activity.MainActivity,java.lang.String) -> f
    void access$1200(com.cn7782.management.android.activity.MainActivity) -> h
    com.cn7782.management.android.activity.tabview.MyProgressDialog access$1300(com.cn7782.management.android.activity.MainActivity) -> i
    com.cn7782.management.android.activity.tabview.MyProgressDialog access$1302(com.cn7782.management.android.activity.MainActivity,com.cn7782.management.android.activity.tabview.MyProgressDialog) -> a
    void access$1400(com.cn7782.management.android.activity.MainActivity,java.lang.String) -> g
com.cn7782.management.android.activity.MainActivity$1 -> com.cn7782.management.android.activity.co:
    com.cn7782.management.android.activity.MainActivity this$0 -> a
    void onSuccess() -> onSuccess
    void onProgress(int,java.lang.String) -> onProgress
    void onError(int,java.lang.String) -> onError
com.cn7782.management.android.activity.MainActivity$1$1 -> com.cn7782.management.android.activity.cp:
    com.cn7782.management.android.activity.MainActivity$1 this$1 -> a
    void run() -> run
com.cn7782.management.android.activity.MainActivity$10 -> com.cn7782.management.android.activity.cq:
    com.cn7782.management.android.activity.MainActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.MainActivity$11 -> com.cn7782.management.android.activity.cr:
    com.cn7782.management.android.activity.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.MainActivity$12 -> com.cn7782.management.android.activity.cs:
    java.lang.String val$apkUrl -> a
    com.cn7782.management.android.activity.MainActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.MainActivity$13 -> com.cn7782.management.android.activity.ct:
    com.cn7782.management.android.activity.MainActivity this$0 -> a
    void run() -> run
com.cn7782.management.android.activity.MainActivity$14 -> com.cn7782.management.android.activity.cu:
    int[] $SwitchMap$com$easemob$EMNotifierEvent$Event -> a
com.cn7782.management.android.activity.MainActivity$2 -> com.cn7782.management.android.activity.cv:
    com.cn7782.management.android.activity.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.MainActivity$3 -> com.cn7782.management.android.activity.cw:
    com.cn7782.management.android.activity.MainActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.MainActivity$4 -> com.cn7782.management.android.activity.cx:
    com.cn7782.management.android.activity.MainActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.cn7782.management.android.activity.MainActivity$5 -> com.cn7782.management.android.activity.cy:
    com.cn7782.management.android.activity.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.MainActivity$6 -> com.cn7782.management.android.activity.cz:
    java.lang.String val$apkUrl -> a
    java.lang.Long val$fileSize -> b
    com.cn7782.management.android.activity.MainActivity this$0 -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.MainActivity$7 -> com.cn7782.management.android.activity.da:
    java.lang.String val$url -> a
    java.lang.String val$store_path_dir -> b
    java.lang.String val$apkName -> c
    java.lang.Long val$fileSize -> d
    java.lang.String val$apkUrl -> e
    com.cn7782.management.android.activity.MainActivity this$0 -> f
    void run() -> run
com.cn7782.management.android.activity.MainActivity$8 -> com.cn7782.management.android.activity.db:
    java.lang.String val$apkUrl -> a
    com.cn7782.management.android.activity.MainActivity this$0 -> b
    void run() -> run
com.cn7782.management.android.activity.MainActivity$9 -> com.cn7782.management.android.activity.dc:
    com.cn7782.management.android.activity.MainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.cn7782.management.android.activity.MainActivity$SDKReceiver -> com.cn7782.management.android.activity.MainActivity$SDKReceiver:
    com.cn7782.management.android.activity.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cn7782.management.android.activity.MapAcitivity -> com.cn7782.management.android.activity.MapAcitivity:
    com.baidu.mapapi.map.MapView mMapView -> c
    com.baidu.mapapi.map.BaiduMap mBaiduMap -> d
    java.lang.String id -> e
    com.baidu.mapapi.map.BitmapDescriptor bdA -> a
    com.baidu.mapapi.map.BitmapDescriptor bdB -> b
    java.util.List mlist -> f
    java.lang.String userName -> g
    java.lang.String historyTime -> h
    java.lang.String remark -> i
    int length -> j
    int timeconsuming -> k
    com.baidu.mapapi.utils.CoordinateConverter converter -> l
    void onCreate(android.os.Bundle) -> onCreate
    void getGrid() -> b
    void initView() -> c
    void initOverlay(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.map.BitmapDescriptor) -> a
    void drawLine(com.baidu.mapapi.model.LatLng[],int) -> a
    void initData() -> a
    com.baidu.mapapi.model.LatLng[] setList(java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    java.util.List access$000(com.cn7782.management.android.activity.MapAcitivity) -> a
    java.util.List access$002(com.cn7782.management.android.activity.MapAcitivity,java.util.List) -> a
    java.lang.String access$102(com.cn7782.management.android.activity.MapAcitivity,java.lang.String) -> a
    java.lang.String access$202(com.cn7782.management.android.activity.MapAcitivity,java.lang.String) -> b
    int access$302(com.cn7782.management.android.activity.MapAcitivity,int) -> a
    int access$402(com.cn7782.management.android.activity.MapAcitivity,int) -> b
    java.lang.String access$502(com.cn7782.management.android.activity.MapAcitivity,java.lang.String) -> c
    com.baidu.mapapi.model.LatLng[] access$600(com.cn7782.management.android.activity.MapAcitivity,java.lang.String) -> d
    com.baidu.mapapi.map.BaiduMap access$700(com.cn7782.management.android.activity.MapAcitivity) -> b
com.cn7782.management.android.activity.MapAcitivity$1 -> com.cn7782.management.android.activity.dd:
    com.cn7782.management.android.activity.MapAcitivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.cn7782.management.android.activity.MediaChoseActivity -> com.cn7782.management.android.activity.MediaChoseActivity:
    int CHOSE_MODE_MULTIPLE -> CHOSE_MODE_MULTIPLE
    int max_chose_count -> max_chose_count
    java.util.LinkedHashMap imasgemap -> imasgemap
    java.util.LinkedHashSet imagesChose -> imagesChose
    java.util.ArrayList paths -> e
    com.cn7782.management.fragment.PhotoGalleryFragment photoGalleryFragment -> a
    int chosemode -> b
    boolean isPriview -> c
    int REQUEST_CODE_CAMERA -> REQUEST_CODE_CAMERA
    int REQUEST_CODE_CROP -> REQUEST_CODE_CROP
    java.io.File currentfile -> d
    void onCreate(android.os.Bundle) -> onCreate
    void starPriview(java.util.LinkedHashMap,java.lang.String) -> starPriview
    android.support.v4.app.Fragment getCurrentFragment(java.lang.String) -> getCurrentFragment
    void onResume() -> onResume
    java.util.LinkedHashMap getImageChoseMap() -> getImageChoseMap
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void log(java.lang.String) -> log
    void popFragment() -> popFragment
    void sendImages() -> sendImages
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void insertImage(java.lang.String) -> insertImage
    void sendStarCamera() -> sendStarCamera
    java.io.File getTempFile() -> getTempFile
com.cn7782.management.android.activity.MediaChoseActivity$1 -> com.cn7782.management.android.activity.de:
    com.cn7782.management.android.activity.MediaChoseActivity this$0 -> a
    void onMediaScannerConnected() -> onMediaScannerConnected
    void onScanCompleted(java.lang.String,android.net.Uri) -> onScanCompleted
com.cn7782.management.android.activity.MessageDetailActivity -> com.cn7782.management.android.activity.MessageDetailActivity:
    java.lang.String tokenId -> a
    java.lang.String id -> b
    void onCreate(android.os.Bundle) -> onCreate
    void getdata() -> a
com.cn7782.management.android.activity.MessageDetailActivity$1 -> com.cn7782.management.android.activity.df:
    com.cn7782.management.android.activity.MessageDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.MessageDetailActivity$2 -> com.cn7782.management.android.activity.dg:
    com.cn7782.management.android.activity.MessageDetailActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.MsgNotificationActivity -> com.cn7782.management.android.activity.MsgNotificationActivity:
    android.os.PowerManager$WakeLock mWakelock -> a
    android.os.Bundle bundle -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.MsgNotificationActivity$MyCountDownTimer -> com.cn7782.management.android.activity.dh:
    com.cn7782.management.android.activity.MsgNotificationActivity this$0 -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.cn7782.management.android.activity.MyInformationActivity -> com.cn7782.management.android.activity.MyInformationActivity:
    android.widget.EditText address -> a
    android.widget.EditText telephone -> b
    android.widget.EditText mobile_phone -> c
    android.widget.EditText remarks -> d
    android.widget.ImageView infohead -> e
    android.app.ProgressDialog progressDialog -> f
    java.io.File recordFile -> g
    java.lang.String tokenId -> h
    android.widget.TextView tick -> i
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void getdata() -> b
    void onClick(android.view.View) -> onClick
    boolean checkInfo() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void Upheadphoto() -> d
    void showProgressDialog(java.lang.String) -> a
    void uploaddata() -> e
    boolean isMobileNO(java.lang.String) -> b
    boolean isEmail(java.lang.String) -> c
    android.widget.EditText access$000(com.cn7782.management.android.activity.MyInformationActivity) -> a
    android.widget.EditText access$100(com.cn7782.management.android.activity.MyInformationActivity) -> b
    android.widget.EditText access$200(com.cn7782.management.android.activity.MyInformationActivity) -> c
    android.widget.EditText access$300(com.cn7782.management.android.activity.MyInformationActivity) -> d
    android.widget.ImageView access$400(com.cn7782.management.android.activity.MyInformationActivity) -> e
    android.app.ProgressDialog access$500(com.cn7782.management.android.activity.MyInformationActivity) -> f
com.cn7782.management.android.activity.MyInformationActivity$1 -> com.cn7782.management.android.activity.di:
    com.cn7782.management.android.activity.MyInformationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.MyInformationActivity$2 -> com.cn7782.management.android.activity.dj:
    com.cn7782.management.android.activity.MyInformationActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.MyInformationActivity$3 -> com.cn7782.management.android.activity.dk:
    com.cn7782.management.android.activity.MyInformationActivity this$0 -> a
    void onSuccess(int,org.json.JSONObject) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.MyInformationActivity$4 -> com.cn7782.management.android.activity.dl:
    com.cn7782.management.android.activity.MyInformationActivity this$0 -> a
    void onSuccess(int,org.json.JSONObject) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.MyReportActivity -> com.cn7782.management.android.activity.MyReportActivity:
    android.support.v4.view.ViewPager mViewPager -> b
    java.lang.String ARGUMENTS_NAME -> ARGUMENTS_NAME
    com.cn7782.management.android.activity.tabview.SyncHorizontalScrollView mHsv -> c
    java.lang.String[] tabTitle -> tabTitle
    android.widget.RadioGroup rg_nav_content -> d
    android.widget.ImageView iv_nav_indicator -> e
    android.widget.ImageView iv_nav_left -> f
    android.widget.ImageView iv_nav_right -> g
    android.widget.RelativeLayout rl_nav -> h
    int indicatorWidth -> i
    int currentIndicatorLeft -> j
    com.cn7782.management.android.activity.MyReportActivity$TabFragmentPagerAdapter mAdapter -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void initNavigationHSV() -> b
    void setListener() -> c
    void onClick(android.view.View) -> onClick
    android.widget.RadioGroup access$000(com.cn7782.management.android.activity.MyReportActivity) -> a
    int access$100(com.cn7782.management.android.activity.MyReportActivity) -> b
    android.widget.ImageView access$200(com.cn7782.management.android.activity.MyReportActivity) -> c
    android.support.v4.view.ViewPager access$300(com.cn7782.management.android.activity.MyReportActivity) -> d
    int access$102(com.cn7782.management.android.activity.MyReportActivity,int) -> a
    com.cn7782.management.android.activity.tabview.SyncHorizontalScrollView access$400(com.cn7782.management.android.activity.MyReportActivity) -> e
com.cn7782.management.android.activity.MyReportActivity$1 -> com.cn7782.management.android.activity.dm:
    com.cn7782.management.android.activity.MyReportActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.cn7782.management.android.activity.MyReportActivity$2 -> com.cn7782.management.android.activity.dn:
    com.cn7782.management.android.activity.MyReportActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.cn7782.management.android.activity.MyReportActivity$TabFragmentPagerAdapter -> com.cn7782.management.android.activity.do:
    com.cn7782.management.android.activity.MyReportActivity this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
com.cn7782.management.android.activity.MyReportDetailActivity -> com.cn7782.management.android.activity.MyReportDetailActivity:
    com.cn7782.management.android.activity.tabview.ChangeListView listview -> c
    com.cn7782.management.android.activity.adapter.ReportAdapter reportAdapter -> d
    java.util.List list -> e
    java.util.List nlist -> f
    java.lang.String tokenId -> a
    java.lang.String title -> g
    java.lang.String content -> h
    java.lang.String time -> i
    java.lang.String address -> j
    android.widget.LinearLayout mAddPhotoLayout -> k
    com.nostra13.universalimageloader.core.DisplayImageOptions mOptions -> mOptions
    int indicatorWidth -> l
    android.graphics.Bitmap bb -> b
    com.cn7782.management.util.MedieaPlayerUtil medieaPlayerUtil -> m
    boolean isPlay -> n
    android.widget.ScrollView scrollView -> o
    android.widget.VideoView videoView -> p
    void onCreate(android.os.Bundle) -> onCreate
    void getdata() -> a
    void initView() -> b
    void initNavigationHSV() -> c
    java.lang.String getsuffix(java.lang.String) -> a
    void excutePlay(java.lang.String) -> b
    void excutePlayVideo(java.lang.String) -> c
    void onDestroy() -> onDestroy
    java.util.List access$000(com.cn7782.management.android.activity.MyReportDetailActivity) -> a
    java.util.List access$002(com.cn7782.management.android.activity.MyReportDetailActivity,java.util.List) -> a
    java.util.List access$100(com.cn7782.management.android.activity.MyReportDetailActivity) -> b
    java.util.List access$102(com.cn7782.management.android.activity.MyReportDetailActivity,java.util.List) -> b
    java.lang.String access$202(com.cn7782.management.android.activity.MyReportDetailActivity,java.lang.String) -> a
    java.lang.String access$302(com.cn7782.management.android.activity.MyReportDetailActivity,java.lang.String) -> b
    java.lang.String access$402(com.cn7782.management.android.activity.MyReportDetailActivity,java.lang.String) -> c
    java.lang.String access$502(com.cn7782.management.android.activity.MyReportDetailActivity,java.lang.String) -> d
    void access$600(com.cn7782.management.android.activity.MyReportDetailActivity) -> c
    void access$700(com.cn7782.management.android.activity.MyReportDetailActivity,java.lang.String) -> e
    void access$800(com.cn7782.management.android.activity.MyReportDetailActivity,java.lang.String) -> f
    android.widget.VideoView access$900(com.cn7782.management.android.activity.MyReportDetailActivity) -> d
    android.widget.ScrollView access$1000(com.cn7782.management.android.activity.MyReportDetailActivity) -> e
com.cn7782.management.android.activity.MyReportDetailActivity$1 -> com.cn7782.management.android.activity.dp:
    com.cn7782.management.android.activity.MyReportDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.MyReportDetailActivity$2 -> com.cn7782.management.android.activity.dq:
    com.cn7782.management.android.activity.MyReportDetailActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.cn7782.management.android.activity.MyReportDetailActivity$3 -> com.cn7782.management.android.activity.dr:
    java.lang.String val$a -> a
    com.cn7782.management.android.activity.MyReportDetailActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.MyReportDetailActivity$4 -> com.cn7782.management.android.activity.ds:
    java.lang.String val$a -> a
    com.cn7782.management.android.activity.MyReportDetailActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.MyReportDetailActivity$5 -> com.cn7782.management.android.activity.dt:
    android.widget.ImageView val$rbb -> a
    com.cn7782.management.android.activity.MyReportDetailActivity this$0 -> b
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
com.cn7782.management.android.activity.MyReportDetailActivity$6 -> com.cn7782.management.android.activity.du:
    com.cn7782.management.android.activity.MyReportDetailActivity this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.cn7782.management.android.activity.NoticeActivity -> com.cn7782.management.android.activity.NoticeActivity:
    com.cn7782.management.android.activity.adapter.SearchAdapter searchadapter -> c
    java.util.List list -> d
    android.widget.ListView listview -> e
    android.view.View back -> f
    java.lang.String tokenId -> a
    java.lang.String type -> b
    android.widget.PopupWindow popup -> g
    int pagecount -> h
    int count -> i
    com.cn7782.management.view.PullToRefreshView mPullToRefreshView -> j
    com.cn7782.management.view.PullToRefreshView$OnHeaderRefreshListener mOnHeaderRefreshListener -> k
    com.cn7782.management.view.PullToRefreshView$OnFooterRefreshListener mOnFooterRefreshListener -> l
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void initListView() -> b
    void startRefresh() -> c
    void getMoreData() -> d
    void getdata() -> e
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$000(com.cn7782.management.android.activity.NoticeActivity) -> a
    void access$100(com.cn7782.management.android.activity.NoticeActivity) -> b
    android.widget.PopupWindow access$200(com.cn7782.management.android.activity.NoticeActivity) -> c
    void access$300(com.cn7782.management.android.activity.NoticeActivity) -> d
    java.util.List access$400(com.cn7782.management.android.activity.NoticeActivity) -> e
    int access$502(com.cn7782.management.android.activity.NoticeActivity,int) -> a
    com.cn7782.management.view.PullToRefreshView access$600(com.cn7782.management.android.activity.NoticeActivity) -> f
    com.cn7782.management.android.activity.adapter.SearchAdapter access$700(com.cn7782.management.android.activity.NoticeActivity) -> g
    void access$800(com.cn7782.management.android.activity.NoticeActivity) -> h
com.cn7782.management.android.activity.NoticeActivity$1 -> com.cn7782.management.android.activity.dv:
    com.cn7782.management.android.activity.NoticeActivity this$0 -> a
    void onHeaderRefresh(com.cn7782.management.view.PullToRefreshView) -> a
com.cn7782.management.android.activity.NoticeActivity$10 -> com.cn7782.management.android.activity.dw:
    com.cn7782.management.android.activity.NoticeActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.NoticeActivity$11 -> com.cn7782.management.android.activity.dx:
    com.cn7782.management.android.activity.NoticeActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.NoticeActivity$2 -> com.cn7782.management.android.activity.dy:
    com.cn7782.management.android.activity.NoticeActivity this$0 -> a
    void onFooterRefresh(com.cn7782.management.view.PullToRefreshView) -> a
com.cn7782.management.android.activity.NoticeActivity$3 -> com.cn7782.management.android.activity.dz:
    int val$width -> a
    com.cn7782.management.android.activity.NoticeActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.NoticeActivity$4 -> com.cn7782.management.android.activity.ea:
    com.cn7782.management.android.activity.NoticeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.NoticeActivity$5 -> com.cn7782.management.android.activity.eb:
    com.cn7782.management.android.activity.NoticeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.NoticeActivity$6 -> com.cn7782.management.android.activity.ec:
    com.cn7782.management.android.activity.NoticeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.NoticeActivity$7 -> com.cn7782.management.android.activity.ed:
    com.cn7782.management.android.activity.NoticeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.NoticeActivity$8 -> com.cn7782.management.android.activity.ee:
    com.cn7782.management.android.activity.NoticeActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.android.activity.NoticeActivity$9 -> com.cn7782.management.android.activity.ef:
    com.cn7782.management.android.activity.NoticeActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.NoticeDetailActivity -> com.cn7782.management.android.activity.NoticeDetailActivity:
    com.cn7782.management.android.activity.bean.NoticeBean bean -> a
    java.util.List list -> b
    android.widget.TextView title -> c
    android.widget.TextView department -> d
    android.widget.TextView content -> e
    android.widget.TextView look -> f
    android.widget.TextView time -> g
    android.widget.ListView listfile -> h
    android.widget.ListView listcomment -> i
    com.cn7782.management.android.activity.adapter.CommentAdapter commentadapter -> j
    com.cn7782.management.android.activity.adapter.FileListAdapter filelistadapter -> k
    java.lang.String tokenId -> l
    android.view.View noticeSubmit -> m
    android.view.View viewCount -> n
    android.widget.EditText edittext -> o
    com.cn7782.management.android.activity.tabview.MyProgressDialog myProgressDialog -> p
    java.io.File file -> q
    android.view.View back -> r
    java.util.List imagelist -> s
    android.widget.LinearLayout mAddPhotoLayout -> t
    int indicatorWidth -> u
    com.nostra13.universalimageloader.core.DisplayImageOptions mOptions -> mOptions
    android.os.Handler updataHandler -> v
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void getcommentdata() -> b
    void getdata() -> c
    void initCommentList(java.util.List) -> a
    void submitComment() -> d
    void downLoadFile(java.lang.String,java.lang.String,java.lang.String,long) -> downLoadFile
    java.lang.String ToDBC(java.lang.String) -> ToDBC
    boolean Getsuffix(java.lang.String) -> a
    void initNavigationHSV() -> e
    com.cn7782.management.android.activity.bean.NoticeBean access$000(com.cn7782.management.android.activity.NoticeDetailActivity) -> a
    void access$100(com.cn7782.management.android.activity.NoticeDetailActivity) -> b
    java.lang.String access$200(com.cn7782.management.android.activity.NoticeDetailActivity) -> c
    java.util.List access$300(com.cn7782.management.android.activity.NoticeDetailActivity) -> d
    void access$400(com.cn7782.management.android.activity.NoticeDetailActivity,java.util.List) -> a
    java.util.List access$500(com.cn7782.management.android.activity.NoticeDetailActivity) -> e
    java.util.List access$502(com.cn7782.management.android.activity.NoticeDetailActivity,java.util.List) -> b
    boolean access$600(com.cn7782.management.android.activity.NoticeDetailActivity,java.lang.String) -> a
    void access$700(com.cn7782.management.android.activity.NoticeDetailActivity) -> f
    android.widget.EditText access$800(com.cn7782.management.android.activity.NoticeDetailActivity) -> g
    void access$900(com.cn7782.management.android.activity.NoticeDetailActivity) -> h
    com.cn7782.management.android.activity.tabview.MyProgressDialog access$1000(com.cn7782.management.android.activity.NoticeDetailActivity) -> i
    com.cn7782.management.android.activity.tabview.MyProgressDialog access$1002(com.cn7782.management.android.activity.NoticeDetailActivity,com.cn7782.management.android.activity.tabview.MyProgressDialog) -> a
    android.os.Handler access$1100(com.cn7782.management.android.activity.NoticeDetailActivity) -> j
com.cn7782.management.android.activity.NoticeDetailActivity$1 -> com.cn7782.management.android.activity.eg:
    com.cn7782.management.android.activity.NoticeDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.NoticeDetailActivity$10 -> com.cn7782.management.android.activity.eh:
    java.lang.String val$targetUrl -> a
    java.lang.String val$store_path_dir -> b
    java.lang.String val$fileName -> c
    long val$fileSize -> d
    com.cn7782.management.android.activity.NoticeDetailActivity this$0 -> e
    void run() -> run
com.cn7782.management.android.activity.NoticeDetailActivity$11 -> com.cn7782.management.android.activity.ei:
    android.widget.ImageView val$rbb -> a
    com.cn7782.management.android.activity.NoticeDetailActivity this$0 -> b
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
com.cn7782.management.android.activity.NoticeDetailActivity$2 -> com.cn7782.management.android.activity.ej:
    com.cn7782.management.android.activity.NoticeDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.NoticeDetailActivity$3 -> com.cn7782.management.android.activity.ek:
    com.cn7782.management.android.activity.NoticeDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.NoticeDetailActivity$4 -> com.cn7782.management.android.activity.el:
    com.cn7782.management.android.activity.NoticeDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.NoticeDetailActivity$5 -> com.cn7782.management.android.activity.em:
    com.cn7782.management.android.activity.NoticeDetailActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.android.activity.NoticeDetailActivity$6 -> com.cn7782.management.android.activity.en:
    com.cn7782.management.android.activity.NoticeDetailActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.NoticeDetailActivity$7 -> com.cn7782.management.android.activity.eo:
    com.cn7782.management.android.activity.NoticeDetailActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.NoticeDetailActivity$8 -> com.cn7782.management.android.activity.ep:
    com.cn7782.management.android.activity.NoticeDetailActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.NoticeDetailActivity$9 -> com.cn7782.management.android.activity.eq:
    com.cn7782.management.android.activity.NoticeDetailActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.cn7782.management.android.activity.PatrolActivity -> com.cn7782.management.android.activity.PatrolActivity:
    com.cn7782.management.android.activity.adapter.PatrolHisAdapter patrolhisadapter -> a
    java.util.List list -> b
    android.widget.ListView listview -> c
    java.lang.String myEventCount -> d
    java.lang.String myWayCount -> e
    int myWayAvgTime -> f
    double myRoad -> g
    double myWalkingRoad -> h
    double myWayAvgLong -> i
    double myDrivingRoad -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void getdata() -> a
    void initview() -> b
    void initdata() -> c
    double access$002(com.cn7782.management.android.activity.PatrolActivity,double) -> a
    double access$000(com.cn7782.management.android.activity.PatrolActivity) -> a
    int access$102(com.cn7782.management.android.activity.PatrolActivity,int) -> a
    int access$100(com.cn7782.management.android.activity.PatrolActivity) -> b
    double access$202(com.cn7782.management.android.activity.PatrolActivity,double) -> b
    double access$200(com.cn7782.management.android.activity.PatrolActivity) -> c
    double access$302(com.cn7782.management.android.activity.PatrolActivity,double) -> c
    double access$300(com.cn7782.management.android.activity.PatrolActivity) -> d
    java.lang.String access$402(com.cn7782.management.android.activity.PatrolActivity,java.lang.String) -> a
    java.lang.String access$502(com.cn7782.management.android.activity.PatrolActivity,java.lang.String) -> b
    double access$602(com.cn7782.management.android.activity.PatrolActivity,double) -> d
    double access$600(com.cn7782.management.android.activity.PatrolActivity) -> e
    java.util.List access$700(com.cn7782.management.android.activity.PatrolActivity) -> f
    java.util.List access$702(com.cn7782.management.android.activity.PatrolActivity,java.util.List) -> a
    void access$800(com.cn7782.management.android.activity.PatrolActivity) -> g
com.cn7782.management.android.activity.PatrolActivity$1 -> com.cn7782.management.android.activity.er:
    com.cn7782.management.android.activity.PatrolActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.PatrolActivity$2 -> com.cn7782.management.android.activity.es:
    com.cn7782.management.android.activity.PatrolActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.android.activity.PatrolingActivity -> com.cn7782.management.android.activity.PatrolingActivity:
    int secNum -> a
    com.cn7782.management.android.db.DBHelper dp -> b
    com.baidu.mapapi.map.MapView mMapView -> c
    com.baidu.mapapi.map.BaiduMap mBaiduMap -> d
    java.util.List pts -> e
    java.util.List mlist -> f
    android.widget.TextView textTime -> g
    android.widget.TextView textDistance -> h
    double distanceLong -> i
    java.lang.String SERVICEIND -> SERVICEIND
    int START -> START
    int STOP -> STOP
    int DESTROY -> DESTROY
    java.lang.String tablename -> j
    android.database.Cursor cursor -> cursor
    com.cn7782.management.android.BaseApplication base -> k
    java.lang.String time -> l
    java.lang.String content -> m
    android.widget.LinearLayout mAddPhotoLayout -> n
    java.util.List list -> o
    int indicatorWidth -> p
    com.baidu.mapapi.map.BitmapDescriptor bdA -> q
    int walking_road -> r
    int driving_road -> s
    int driving_dur -> t
    int walking_dur -> u
    java.lang.String start_point -> v
    java.lang.String end_point -> w
    int ISPATROLING -> ISPATROLING
    java.lang.String event_id -> x
    java.lang.String endtime -> y
    android.widget.LinearLayout first_tip -> z
    java.util.ArrayList locations -> A
    boolean locked -> B
    com.baidu.mapapi.utils.CoordinateConverter converter -> C
    android.os.Handler mHandler -> D
    com.cn7782.management.android.activity.service.PositioningService mService -> E
    android.content.ServiceConnection sc -> F
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void onClick(android.view.View) -> onClick
    void DrawAllOverlay() -> b
    void drawOverlay(java.util.List) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    java.lang.String list2Json(java.util.List) -> list2Json
    void updata() -> c
    void showCoder() -> d
    void showDialog() -> e
    void showAvailableDialog() -> f
    void getdata() -> g
    void initNavigationHSV() -> h
    void changeOverlay(com.baidu.mapapi.model.LatLng,com.cn7782.management.android.activity.bean.InfoBean) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    int access$002(com.cn7782.management.android.activity.PatrolingActivity,int) -> a
    double access$102(com.cn7782.management.android.activity.PatrolingActivity,double) -> a
    int access$000(com.cn7782.management.android.activity.PatrolingActivity) -> a
    android.widget.TextView access$200(com.cn7782.management.android.activity.PatrolingActivity) -> b
    android.widget.TextView access$300(com.cn7782.management.android.activity.PatrolingActivity) -> c
    com.cn7782.management.android.BaseApplication access$400(com.cn7782.management.android.activity.PatrolingActivity) -> d
    java.util.ArrayList access$502(com.cn7782.management.android.activity.PatrolingActivity,java.util.ArrayList) -> a
    java.util.ArrayList access$500(com.cn7782.management.android.activity.PatrolingActivity) -> e
    java.lang.String access$602(com.cn7782.management.android.activity.PatrolingActivity,java.lang.String) -> a
    void access$700(com.cn7782.management.android.activity.PatrolingActivity,java.util.List) -> a
    java.lang.String access$800(com.cn7782.management.android.activity.PatrolingActivity) -> f
    com.cn7782.management.android.db.DBHelper access$900(com.cn7782.management.android.activity.PatrolingActivity) -> g
    java.lang.String access$600(com.cn7782.management.android.activity.PatrolingActivity) -> h
    void access$1000(com.cn7782.management.android.activity.PatrolingActivity) -> i
    java.util.List access$1100(com.cn7782.management.android.activity.PatrolingActivity) -> j
    java.util.List access$1102(com.cn7782.management.android.activity.PatrolingActivity,java.util.List) -> b
    void access$1200(com.cn7782.management.android.activity.PatrolingActivity) -> k
    void access$1300(com.cn7782.management.android.activity.PatrolingActivity,com.baidu.mapapi.model.LatLng,com.cn7782.management.android.activity.bean.InfoBean) -> a
    com.cn7782.management.android.activity.service.PositioningService access$1402(com.cn7782.management.android.activity.PatrolingActivity,com.cn7782.management.android.activity.service.PositioningService) -> a
    android.os.Handler access$1500(com.cn7782.management.android.activity.PatrolingActivity) -> l
    com.cn7782.management.android.activity.service.PositioningService access$1400(com.cn7782.management.android.activity.PatrolingActivity) -> m
com.cn7782.management.android.activity.PatrolingActivity$1 -> com.cn7782.management.android.activity.et:
    com.cn7782.management.android.activity.PatrolingActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.cn7782.management.android.activity.PatrolingActivity$10 -> com.cn7782.management.android.activity.eu:
    com.cn7782.management.android.activity.PatrolingActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.cn7782.management.android.activity.PatrolingActivity$2 -> com.cn7782.management.android.activity.ev:
    com.cn7782.management.android.activity.PatrolingActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.PatrolingActivity$3 -> com.cn7782.management.android.activity.ew:
    com.cn7782.management.android.activity.PatrolingActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.PatrolingActivity$4 -> com.cn7782.management.android.activity.ex:
    com.cn7782.management.android.activity.PatrolingActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.PatrolingActivity$5 -> com.cn7782.management.android.activity.ey:
    com.cn7782.management.android.activity.PatrolingActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.PatrolingActivity$6 -> com.cn7782.management.android.activity.ez:
    com.cn7782.management.android.activity.PatrolingActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.PatrolingActivity$7 -> com.cn7782.management.android.activity.fa:
    com.cn7782.management.android.activity.PatrolingActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.cn7782.management.android.activity.PatrolingActivity$8 -> com.cn7782.management.android.activity.fb:
    android.view.View val$rb -> a
    com.cn7782.management.android.activity.bean.InfoBean val$id -> b
    com.cn7782.management.android.activity.PatrolingActivity this$0 -> c
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.PatrolingActivity$9 -> com.cn7782.management.android.activity.fc:
    com.cn7782.management.android.activity.PatrolingActivity this$0 -> a
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.cn7782.management.android.activity.RecorderVideoActivity -> com.cn7782.management.android.activity.RecorderVideoActivity:
    android.os.PowerManager$WakeLock mWakeLock -> f
    android.widget.ImageView btnStart -> g
    android.widget.ImageView btnStop -> h
    android.media.MediaRecorder mediaRecorder -> i
    android.widget.VideoView mVideoView -> j
    java.lang.String localPath -> a
    android.hardware.Camera mCamera -> k
    int previewWidth -> l
    int previewHeight -> m
    android.widget.Chronometer chronometer -> n
    int frontCamera -> o
    android.widget.Button btn_switch -> p
    android.hardware.Camera$Parameters cameraParameters -> b
    android.view.SurfaceHolder mSurfaceHolder -> q
    int defaultVideoFrameRate -> c
    android.media.MediaScannerConnection msc -> d
    android.app.ProgressDialog progressDialog -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> e
    void back(android.view.View) -> back
    void onResume() -> onResume
    boolean initCamera() -> f
    void handleSurfaceChanged() -> g
    void onPause() -> onPause
    void onClick(android.view.View) -> onClick
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    boolean startRecording() -> a
    boolean initRecorder() -> h
    void stopRecording() -> b
    void releaseRecorder() -> i
    void releaseCamera() -> c
    void switchCamera() -> d
    void sendVideo(android.view.View) -> sendVideo
    void onInfo(android.media.MediaRecorder,int,int) -> onInfo
    void onError(android.media.MediaRecorder,int,int) -> onError
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
    void showFailDialog() -> j
    void showNoSDCardDialog() -> k
com.cn7782.management.android.activity.RecorderVideoActivity$1 -> com.cn7782.management.android.activity.fd:
    com.cn7782.management.android.activity.RecorderVideoActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.RecorderVideoActivity$2 -> com.cn7782.management.android.activity.fe:
    com.cn7782.management.android.activity.RecorderVideoActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.RecorderVideoActivity$3 -> com.cn7782.management.android.activity.ff:
    com.cn7782.management.android.activity.RecorderVideoActivity this$0 -> a
    void onScanCompleted(java.lang.String,android.net.Uri) -> onScanCompleted
    void onMediaScannerConnected() -> onMediaScannerConnected
com.cn7782.management.android.activity.RecorderVideoActivity$4 -> com.cn7782.management.android.activity.fg:
    com.cn7782.management.android.activity.RecorderVideoActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.RecorderVideoActivity$5 -> com.cn7782.management.android.activity.fh:
    com.cn7782.management.android.activity.RecorderVideoActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.RecorderVideoActivity$6 -> com.cn7782.management.android.activity.fi:
    com.cn7782.management.android.activity.RecorderVideoActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cn7782.management.android.activity.ScheduleDetailActivity -> com.cn7782.management.android.activity.ScheduleDetailActivity:
    android.widget.TextView title -> a
    android.widget.TextView content -> b
    android.widget.TextView time -> c
    android.widget.TextView jobType -> d
    android.widget.TextView status -> e
    android.view.View deleteShowView -> f
    android.view.View deleteDialogView -> g
    com.cn7782.management.android.activity.bean.ScheduleBean schedule -> h
    java.lang.String scheduleId -> i
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> b
    void querySchedule() -> c
    void initSchedule() -> a
    void onClick(android.view.View) -> onClick
    void deleteSchedule(java.lang.String) -> a
    void showDeleteDialog(boolean) -> a
    com.cn7782.management.android.activity.bean.ScheduleBean access$000(com.cn7782.management.android.activity.ScheduleDetailActivity) -> a
    com.cn7782.management.android.activity.bean.ScheduleBean access$002(com.cn7782.management.android.activity.ScheduleDetailActivity,com.cn7782.management.android.activity.bean.ScheduleBean) -> a
    java.lang.String access$100(com.cn7782.management.android.activity.ScheduleDetailActivity) -> b
com.cn7782.management.android.activity.ScheduleDetailActivity$1 -> com.cn7782.management.android.activity.fj:
    com.cn7782.management.android.activity.ScheduleDetailActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.ScheduleDetailActivity$2 -> com.cn7782.management.android.activity.fk:
    com.cn7782.management.android.activity.ScheduleDetailActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.ScheduleManagerActivity -> com.cn7782.management.android.activity.ScheduleManagerActivity:
    android.support.v4.view.ViewPager viewPager -> a
    com.cn7782.management.android.activity.tabview.CalendarView[] views -> b
    android.widget.TextView showYearView -> c
    android.widget.TextView showMonthView -> d
    android.widget.TextView showWeekView -> e
    android.widget.TextView monthCalendarView -> f
    android.widget.TextView weekCalendarView -> g
    com.cn7782.management.android.activity.bean.CalendarViewBuilder builder -> h
    android.widget.SlidingDrawer mSlidingDrawer -> i
    android.view.View mContentPager -> j
    com.cn7782.management.android.activity.bean.CustomDate mClickDate -> k
    com.cn7782.management.android.activity.tabview.CircleTextView mNowCircleView -> l
    com.cn7782.management.android.activity.tabview.CircleTextView mAddCircleView -> m
    java.lang.String MAIN_ACTIVITY_CLICK_DATE -> MAIN_ACTIVITY_CLICK_DATE
    android.widget.ListView contentlist -> n
    android.widget.TextView handlerTitle -> o
    android.widget.LinearLayout handlerText -> p
    java.util.List list -> q
    java.util.List listL -> r
    java.util.Set dateList -> s
    com.cn7782.management.android.activity.adapter.ScheduleAdapter scheduleAdapter -> t
    void onCreate(android.os.Bundle) -> onCreate
    void getScheduleData(java.lang.String,java.lang.String) -> a
    void initCurrentDay() -> a
    void findViewbyId() -> b
    void setViewPager() -> c
    void setOnDrawListener() -> d
    void setShowDateViewText(int,int,int) -> setShowDateViewText
    void onClick(android.view.View) -> onClick
    void swtichBackgroundForButton(boolean) -> a
    void onMesureCellHeight(int) -> onMesureCellHeight
    void clickDate(com.cn7782.management.android.activity.bean.CustomDate) -> clickDate
    void changeDate(com.cn7782.management.android.activity.bean.CustomDate) -> changeDate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.List access$000(com.cn7782.management.android.activity.ScheduleManagerActivity) -> a
    java.util.List access$002(com.cn7782.management.android.activity.ScheduleManagerActivity,java.util.List) -> a
    void access$100(com.cn7782.management.android.activity.ScheduleManagerActivity) -> b
    com.cn7782.management.android.activity.bean.CalendarViewBuilder access$200(com.cn7782.management.android.activity.ScheduleManagerActivity) -> c
com.cn7782.management.android.activity.ScheduleManagerActivity$1 -> com.cn7782.management.android.activity.fl:
    com.cn7782.management.android.activity.ScheduleManagerActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.ScheduleManagerActivity$2 -> com.cn7782.management.android.activity.fm:
    com.cn7782.management.android.activity.ScheduleManagerActivity this$0 -> a
    void onDrawerOpened() -> onDrawerOpened
com.cn7782.management.android.activity.ScheduleManagerActivity$3 -> com.cn7782.management.android.activity.fn:
    com.cn7782.management.android.activity.ScheduleManagerActivity this$0 -> a
    void onScrollStarted() -> onScrollStarted
    void onScrollEnded() -> onScrollEnded
com.cn7782.management.android.activity.ScheduleManagerActivity$4 -> com.cn7782.management.android.activity.fo:
    com.cn7782.management.android.activity.ScheduleManagerActivity this$0 -> a
    void onDrawerClosed() -> onDrawerClosed
com.cn7782.management.android.activity.ScheduleManagerActivity$MyOnItemClickListener -> com.cn7782.management.android.activity.fp:
    java.util.List sb -> b
    com.cn7782.management.android.activity.ScheduleManagerActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.android.activity.SelectNoticeTypeActivity -> com.cn7782.management.android.activity.SelectNoticeTypeActivity:
    android.widget.ListView listview -> a
    java.util.List list -> b
    com.cn7782.management.android.activity.adapter.BlankAdapter blankadapter -> c
    int NOTICETYPE -> NOTICETYPE
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List access$000(com.cn7782.management.android.activity.SelectNoticeTypeActivity) -> a
com.cn7782.management.android.activity.SelectNoticeTypeActivity$1 -> com.cn7782.management.android.activity.fq:
    com.cn7782.management.android.activity.SelectNoticeTypeActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.android.activity.SelectNoticeTypeActivity$2 -> com.cn7782.management.android.activity.fr:
    com.cn7782.management.android.activity.SelectNoticeTypeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.SelectTypeActivity -> com.cn7782.management.android.activity.SelectTypeActivity:
    android.widget.ListView listview -> a
    java.util.List list -> b
    com.cn7782.management.android.activity.adapter.BlankAdapter blankadapter -> c
    int EVENT_TYPE_RETURNQ -> EVENT_TYPE_RETURNQ
    int EVENT_TYPE_RETURNA -> EVENT_TYPE_RETURNA
    int type -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    java.util.List initdata(int) -> a
    java.lang.String getType(java.lang.String) -> a
    java.util.List access$000(com.cn7782.management.android.activity.SelectTypeActivity) -> a
    java.lang.String access$100(com.cn7782.management.android.activity.SelectTypeActivity,java.lang.String) -> a
    int access$200(com.cn7782.management.android.activity.SelectTypeActivity) -> b
com.cn7782.management.android.activity.SelectTypeActivity$1 -> com.cn7782.management.android.activity.fs:
    com.cn7782.management.android.activity.SelectTypeActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.android.activity.SendNoticeActivity -> com.cn7782.management.android.activity.SendNoticeActivity:
    java.lang.String PhotoPath -> a
    android.widget.LinearLayout mAddPhotoLayout -> b
    java.util.List fileurl -> c
    android.widget.EditText edittitle -> d
    android.widget.EditText editcontent -> e
    android.app.ProgressDialog progressDialog -> f
    com.cn7782.management.view.ToggleButton button -> g
    java.lang.String type -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initview() -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void addPhoto(java.lang.String) -> b
    void submit() -> c
    void GetViewPhoto() -> a
    void showProgressDialog(java.lang.String) -> a
    void access$000(com.cn7782.management.android.activity.SendNoticeActivity) -> a
    android.widget.LinearLayout access$100(com.cn7782.management.android.activity.SendNoticeActivity) -> b
    android.app.ProgressDialog access$200(com.cn7782.management.android.activity.SendNoticeActivity) -> c
com.cn7782.management.android.activity.SendNoticeActivity$1 -> com.cn7782.management.android.activity.ft:
    com.cn7782.management.android.activity.SendNoticeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.SendNoticeActivity$2 -> com.cn7782.management.android.activity.fu:
    com.cn7782.management.android.activity.SendNoticeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.SendNoticeActivity$3 -> com.cn7782.management.android.activity.fv:
    com.cn7782.management.android.activity.SendNoticeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.SendNoticeActivity$4 -> com.cn7782.management.android.activity.fw:
    com.cn7782.management.android.activity.SendNoticeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.SendNoticeActivity$5 -> com.cn7782.management.android.activity.fx:
    android.view.View val$addPhoto -> a
    com.cn7782.management.android.activity.SendNoticeActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.SendNoticeActivity$6 -> com.cn7782.management.android.activity.fy:
    com.cn7782.management.android.activity.SendNoticeActivity this$0 -> a
    void onSuccess(int,org.json.JSONObject) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.StatisticsActivity -> com.cn7782.management.android.activity.StatisticsActivity:
    java.lang.String chuzhi -> a
    java.lang.String xiaoan -> b
    java.lang.String baosong -> c
    java.lang.String zongCount -> d
    java.lang.String duban -> e
    java.lang.String xiaoanlv -> f
    java.lang.String useTime -> g
    java.lang.String count -> h
    java.lang.String roadLong -> i
    java.lang.String averageTime -> j
    java.lang.String drivingRoad -> k
    java.lang.String walkingRoad -> l
    java.lang.String STATISTICS -> STATISTICS
    java.lang.String starttime -> m
    java.lang.String endtime -> n
    android.widget.TextView date_head -> o
    android.widget.TextView date_tail -> p
    void onCreate(android.os.Bundle) -> onCreate
    void initview() -> a
    void getdataI() -> b
    void getdata() -> c
    void initdata() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.lang.String access$000(com.cn7782.management.android.activity.StatisticsActivity) -> a
    java.lang.String access$100(com.cn7782.management.android.activity.StatisticsActivity) -> b
    java.lang.String access$202(com.cn7782.management.android.activity.StatisticsActivity,java.lang.String) -> a
    java.lang.String access$302(com.cn7782.management.android.activity.StatisticsActivity,java.lang.String) -> b
    java.lang.String access$402(com.cn7782.management.android.activity.StatisticsActivity,java.lang.String) -> c
    java.lang.String access$502(com.cn7782.management.android.activity.StatisticsActivity,java.lang.String) -> d
    java.lang.String access$602(com.cn7782.management.android.activity.StatisticsActivity,java.lang.String) -> e
    java.lang.String access$702(com.cn7782.management.android.activity.StatisticsActivity,java.lang.String) -> f
    void access$800(com.cn7782.management.android.activity.StatisticsActivity) -> c
    java.lang.String access$902(com.cn7782.management.android.activity.StatisticsActivity,java.lang.String) -> g
    java.lang.String access$1002(com.cn7782.management.android.activity.StatisticsActivity,java.lang.String) -> h
    java.lang.String access$1102(com.cn7782.management.android.activity.StatisticsActivity,java.lang.String) -> i
    java.lang.String access$1202(com.cn7782.management.android.activity.StatisticsActivity,java.lang.String) -> j
    java.lang.String access$1302(com.cn7782.management.android.activity.StatisticsActivity,java.lang.String) -> k
    java.lang.String access$1402(com.cn7782.management.android.activity.StatisticsActivity,java.lang.String) -> l
    void access$1500(com.cn7782.management.android.activity.StatisticsActivity) -> d
com.cn7782.management.android.activity.StatisticsActivity$1 -> com.cn7782.management.android.activity.fz:
    com.cn7782.management.android.activity.StatisticsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.StatisticsActivity$2 -> com.cn7782.management.android.activity.ga:
    com.cn7782.management.android.activity.StatisticsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.StatisticsActivity$3 -> com.cn7782.management.android.activity.gb:
    com.cn7782.management.android.activity.StatisticsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.StatisticsActivity$4 -> com.cn7782.management.android.activity.gc:
    com.cn7782.management.android.activity.StatisticsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.StatisticsActivity$5 -> com.cn7782.management.android.activity.gd:
    com.cn7782.management.android.activity.StatisticsActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.cn7782.management.android.activity.StatisticsActivity$6 -> com.cn7782.management.android.activity.ge:
    com.cn7782.management.android.activity.StatisticsActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.cn7782.management.android.activity.TakeVideoActivity -> com.cn7782.management.android.activity.TakeVideoActivity:
    com.cn7782.management.view.MovieRecorderView mRecorderView -> a
    android.widget.TextView mShootBtn -> b
    boolean isFinish -> c
    android.widget.ImageView mProgressBar -> d
    android.view.animation.Animation scaleAnimation -> e
    android.os.Handler handler -> f
    int VIDEOPATH -> VIDEOPATH
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void finishActivity() -> a
    void onClick(android.view.View) -> onClick
    android.view.animation.Animation access$000(com.cn7782.management.android.activity.TakeVideoActivity) -> a
    android.widget.ImageView access$100(com.cn7782.management.android.activity.TakeVideoActivity) -> b
    android.os.Handler access$200(com.cn7782.management.android.activity.TakeVideoActivity) -> c
    com.cn7782.management.view.MovieRecorderView access$300(com.cn7782.management.android.activity.TakeVideoActivity) -> d
    void access$400(com.cn7782.management.android.activity.TakeVideoActivity) -> e
com.cn7782.management.android.activity.TakeVideoActivity$1 -> com.cn7782.management.android.activity.gf:
    com.cn7782.management.android.activity.TakeVideoActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.cn7782.management.android.activity.TakeVideoActivity$1$1 -> com.cn7782.management.android.activity.gg:
    com.cn7782.management.android.activity.TakeVideoActivity$1 this$1 -> a
    void onRecordFinish() -> a
com.cn7782.management.android.activity.TakeVideoActivity$2 -> com.cn7782.management.android.activity.gh:
    com.cn7782.management.android.activity.TakeVideoActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.cn7782.management.android.activity.TrajectoryActivity -> com.cn7782.management.android.activity.TrajectoryActivity:
    android.widget.HorizontalScrollView mHsv -> b
    com.baidu.mapapi.map.MapView mMapView -> c
    com.baidu.mapapi.map.BaiduMap mBaiduMap -> d
    android.widget.LinearLayout mAddPhotoLayout -> e
    android.widget.RelativeLayout rl_nav -> f
    java.lang.String[] tabTitle -> tabTitle
    int indicatorWidth -> g
    com.baidu.mapapi.map.InfoWindow mInfoWindow -> h
    com.baidu.mapapi.map.BitmapDescriptor bdA -> a
    android.widget.ImageView headView -> headView
    java.util.List list -> i
    java.lang.String userId -> j
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void initNavigationHSV() -> b
    void getdata2() -> c
    void changeOverlay(com.baidu.mapapi.model.LatLng,com.cn7782.management.android.activity.bean.InfoBean) -> a
    void onDestroy() -> onDestroy
    java.lang.String access$000(com.cn7782.management.android.activity.TrajectoryActivity) -> a
    java.lang.String access$002(com.cn7782.management.android.activity.TrajectoryActivity,java.lang.String) -> a
    void access$100(com.cn7782.management.android.activity.TrajectoryActivity,com.baidu.mapapi.model.LatLng,com.cn7782.management.android.activity.bean.InfoBean) -> a
    java.util.List access$200(com.cn7782.management.android.activity.TrajectoryActivity) -> b
    java.util.List access$202(com.cn7782.management.android.activity.TrajectoryActivity,java.util.List) -> a
    void access$300(com.cn7782.management.android.activity.TrajectoryActivity) -> c
    void access$400(com.cn7782.management.android.activity.TrajectoryActivity) -> d
com.cn7782.management.android.activity.TrajectoryActivity$1 -> com.cn7782.management.android.activity.gi:
    com.cn7782.management.android.activity.TrajectoryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.TrajectoryActivity$2 -> com.cn7782.management.android.activity.gj:
    com.cn7782.management.android.activity.TrajectoryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.TrajectoryActivity$3 -> com.cn7782.management.android.activity.gk:
    com.cn7782.management.android.activity.bean.InfoBean val$id -> a
    android.view.View val$rb -> b
    com.cn7782.management.android.activity.TrajectoryActivity this$0 -> c
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.TrajectoryActivity$4 -> com.cn7782.management.android.activity.gl:
    com.cn7782.management.android.activity.TrajectoryActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.cn7782.management.android.activity.TrajectoryActivity$5 -> com.cn7782.management.android.activity.gm:
    com.cn7782.management.android.activity.TrajectoryActivity this$0 -> a
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.cn7782.management.android.activity.TrajectoryActivity$6 -> com.cn7782.management.android.activity.gn:
    com.cn7782.management.android.activity.bean.InfoBean val$bean -> a
    com.cn7782.management.android.activity.TrajectoryActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.TrajectoryListActivity -> com.cn7782.management.android.activity.TrajectoryListActivity:
    com.cn7782.management.android.activity.adapter.TrajectoryAdapter trajectoryAdapter -> a
    android.widget.ListView listview -> b
    java.util.List mlist -> c
    void onCreate(android.os.Bundle) -> onCreate
    void getdata() -> a
    void initView() -> b
    void onClick(android.view.View) -> onClick
    java.util.List access$000(com.cn7782.management.android.activity.TrajectoryListActivity) -> a
    java.util.List access$002(com.cn7782.management.android.activity.TrajectoryListActivity,java.util.List) -> a
    void access$100(com.cn7782.management.android.activity.TrajectoryListActivity) -> b
com.cn7782.management.android.activity.TrajectoryListActivity$1 -> com.cn7782.management.android.activity.go:
    com.cn7782.management.android.activity.TrajectoryListActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.cn7782.management.android.activity.TrajectoryListActivity$2 -> com.cn7782.management.android.activity.gp:
    com.cn7782.management.android.activity.TrajectoryListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.android.activity.UpdateScheduleActivity -> com.cn7782.management.android.activity.UpdateScheduleActivity:
    android.widget.TextView mCancelTv -> a
    android.widget.TextView mConfirmTv -> b
    android.widget.TextView title -> c
    android.widget.TextView content -> d
    android.widget.TextView jobType -> e
    android.widget.TextView begTime -> f
    android.widget.TextView endTime -> g
    android.widget.TextView status -> h
    com.cn7782.management.android.activity.bean.ScheduleBean schedule -> i
    void onCreate(android.os.Bundle) -> onCreate
    void findById() -> a
    void initView() -> b
    void setOnClickListener() -> c
    void finish() -> finish
    void onClick(android.view.View) -> onClick
    void update(com.cn7782.management.android.activity.bean.ScheduleBean) -> a
    void chooseTime(int) -> a
    java.lang.String getStringDate(java.lang.Long) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void showCancelDialogState(boolean) -> a
    void showJobTypeDialog(boolean) -> b
    void showStatusDialog(boolean) -> c
    void refreshActivity(java.lang.String) -> a
    void refreshStatus(java.lang.String) -> b
    android.widget.TextView access$000(com.cn7782.management.android.activity.UpdateScheduleActivity) -> a
    android.widget.TextView access$100(com.cn7782.management.android.activity.UpdateScheduleActivity) -> b
com.cn7782.management.android.activity.UpdateScheduleActivity$1 -> com.cn7782.management.android.activity.gq:
    com.cn7782.management.android.activity.UpdateScheduleActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.UpdateScheduleActivity$2 -> com.cn7782.management.android.activity.gr:
    com.cn7782.management.android.activity.UpdateScheduleActivity this$0 -> a
    void OnDateTimeSet(android.app.AlertDialog,long) -> a
com.cn7782.management.android.activity.UpdateScheduleActivity$3 -> com.cn7782.management.android.activity.gs:
    com.cn7782.management.android.activity.UpdateScheduleActivity this$0 -> a
    void OnDateTimeSet(android.app.AlertDialog,long) -> a
com.cn7782.management.android.activity.UploadedOfflineActivity -> com.cn7782.management.android.activity.UploadedOfflineActivity:
    com.cn7782.management.android.activity.UploadedOfflineActivity$UploadAdapter uploadAdapter -> a
    android.database.Cursor cursor -> b
    com.cn7782.management.android.db.DBHelper dp -> c
    java.util.List list -> d
    java.util.List datalist -> e
    java.lang.String tablename -> f
    java.lang.String eventcon -> g
    java.lang.String eventid -> h
    java.lang.String starttime -> i
    java.lang.String endtime -> j
    java.lang.String duration -> k
    java.lang.String start_point -> l
    java.lang.String end_point -> m
    double distanceLong -> n
    int walking_road -> o
    int driving_road -> p
    int driving_dur -> q
    int walking_dur -> r
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void refresh() -> b
    void getdate(java.lang.String) -> a
    void updata(java.lang.String) -> b
    void countDiatance(java.util.List,double[]) -> a
    java.lang.String toJson2(java.util.List) -> a
    com.cn7782.management.android.db.DBHelper access$000(com.cn7782.management.android.activity.UploadedOfflineActivity) -> a
    void access$100(com.cn7782.management.android.activity.UploadedOfflineActivity) -> b
    java.lang.String access$202(com.cn7782.management.android.activity.UploadedOfflineActivity,java.lang.String) -> a
    java.lang.String access$200(com.cn7782.management.android.activity.UploadedOfflineActivity) -> c
    void access$400(com.cn7782.management.android.activity.UploadedOfflineActivity,java.lang.String) -> b
com.cn7782.management.android.activity.UploadedOfflineActivity$1 -> com.cn7782.management.android.activity.gt:
    com.cn7782.management.android.activity.UploadedOfflineActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.UploadedOfflineActivity$2 -> com.cn7782.management.android.activity.gu:
    java.lang.String val$name -> a
    com.cn7782.management.android.activity.UploadedOfflineActivity this$0 -> b
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.UploadedOfflineActivity$UploadAdapter -> com.cn7782.management.android.activity.gv:
    android.content.Context mcontext -> b
    java.util.List mlist -> c
    com.cn7782.management.android.activity.UploadedOfflineActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void setdata(java.util.List) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.List access$300(com.cn7782.management.android.activity.UploadedOfflineActivity$UploadAdapter) -> a
com.cn7782.management.android.activity.UploadedOfflineActivity$UploadAdapter$1 -> com.cn7782.management.android.activity.gw:
    int val$position -> a
    com.cn7782.management.android.activity.UploadedOfflineActivity$UploadAdapter this$1 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.UploadedOfflineActivity$UploadAdapter$ViewHolder -> com.cn7782.management.android.activity.gx:
    android.widget.TextView upload_title -> a
    android.widget.TextView upload_time -> b
    android.widget.Button upload_button -> c
    com.cn7782.management.android.activity.UploadedOfflineActivity$UploadAdapter this$1 -> d
com.cn7782.management.android.activity.WelcomeActivity -> com.cn7782.management.android.activity.WelcomeActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.cn7782.management.android.activity.WelcomeActivity$1 -> com.cn7782.management.android.activity.gy:
    com.cn7782.management.android.activity.WelcomeActivity this$0 -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.cn7782.management.android.activity.adapter.BlankAdapter -> com.cn7782.management.android.activity.adapter.a:
    java.util.List mlist -> a
    android.content.Context mcontext -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.cn7782.management.android.activity.adapter.BlankAdapter$ViewHolder -> com.cn7782.management.android.activity.adapter.b:
    android.widget.TextView head_title -> a
    com.cn7782.management.android.activity.adapter.BlankAdapter this$0 -> b
com.cn7782.management.android.activity.adapter.ChartingAdapter -> com.cn7782.management.android.activity.adapter.ChartingAdapter:
    android.content.Context mcontext -> a
    java.util.List mlist -> b
    int zon -> c
    java.util.TreeMap mapParams -> d
    java.util.List Chartlist -> e
    java.util.List alist -> f
    int[] colors -> g
    java.util.List co -> h
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void initchar(com.cn7782.management.android.activity.charting.PieChart) -> a
    void getdataChart(com.cn7782.management.android.activity.charting.PieChart,java.util.ArrayList,java.lang.String) -> a
    java.util.ArrayList getintlist(com.cn7782.management.android.activity.bean.StatisticsBean,java.lang.String) -> a
    java.lang.String getpercentage(java.lang.String,java.lang.String) -> a
com.cn7782.management.android.activity.adapter.ChartingAdapter$Bean -> com.cn7782.management.android.activity.adapter.ChartingAdapter$Bean:
    java.lang.String name -> name
    java.lang.String count -> count
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getCount() -> getCount
    void setCount(java.lang.String) -> setCount
com.cn7782.management.android.activity.adapter.ChartingAdapter$ViewHolder -> com.cn7782.management.android.activity.adapter.c:
    com.cn7782.management.android.activity.charting.PieChart mchart -> a
    android.widget.LinearLayout listview -> b
    android.widget.TextView head_title -> c
    com.cn7782.management.android.activity.adapter.ChartingAdapter this$0 -> d
com.cn7782.management.android.activity.adapter.ChooseAdapter -> com.cn7782.management.android.activity.adapter.d:
    java.util.List mlist -> a
    android.content.Context mcontext -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    void setData(java.util.List) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.cn7782.management.android.activity.adapter.ChooseAdapter$ViewHolder -> com.cn7782.management.android.activity.adapter.e:
    android.widget.TextView head_title -> a
    android.widget.TextView head_content -> b
    com.cn7782.management.android.activity.adapter.ChooseAdapter this$0 -> c
com.cn7782.management.android.activity.adapter.CommentAdapter -> com.cn7782.management.android.activity.adapter.CommentAdapter:
    java.util.List mlist -> b
    android.content.Context mcontext -> c
    com.nostra13.universalimageloader.core.DisplayImageOptions mOptions -> mOptions
    java.lang.String tokenId -> d
    android.graphics.Bitmap c -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.cn7782.management.android.activity.adapter.CommentAdapter$ViewHolder -> com.cn7782.management.android.activity.adapter.f:
    android.widget.TextView title -> a
    android.widget.TextView department -> b
    android.widget.TextView contect -> c
    android.widget.TextView time -> d
    android.widget.ImageView message_image -> e
    com.cn7782.management.android.activity.adapter.CommentAdapter this$0 -> f
com.cn7782.management.android.activity.adapter.CustomViewPagerAdapter -> com.cn7782.management.android.activity.adapter.g:
    android.view.View[] views -> a
    void finishUpdate(android.view.View) -> finishUpdate
    void notifyDataSetChanged() -> notifyDataSetChanged
    int getCount() -> getCount
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void startUpdate(android.view.View) -> startUpdate
    android.view.View[] getAllItems() -> a
com.cn7782.management.android.activity.adapter.ExpandableListAdapter -> com.cn7782.management.android.activity.adapter.h:
    java.util.List deplist -> a
    android.content.Context mcontext -> b
    java.util.Map empAll -> c
    int getGroupCount() -> getGroupCount
    java.lang.Object getGroup(int) -> getGroup
    long getGroupId(int) -> getGroupId
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    boolean hasStableIds() -> hasStableIds
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    boolean isChildSelectable(int,int) -> isChildSelectable
com.cn7782.management.android.activity.adapter.FileListAdapter -> com.cn7782.management.android.activity.adapter.i:
    java.util.List mlist -> a
    android.content.Context mcontext -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.cn7782.management.android.activity.adapter.FileListAdapter$ViewHolder -> com.cn7782.management.android.activity.adapter.j:
    android.widget.TextView contect -> a
    android.widget.TextView pic -> b
    android.widget.ImageView down -> c
    android.view.View line -> d
    com.cn7782.management.android.activity.adapter.FileListAdapter this$0 -> e
com.cn7782.management.android.activity.adapter.FloderAdapter -> com.cn7782.management.android.activity.adapter.k:
    java.util.List floders -> a
    android.view.LayoutInflater inflater -> b
    android.content.Context context -> c
    int imgsize -> d
    int ckpos -> e
    void setCheck(int) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void displayImage(java.lang.String,android.widget.ImageView) -> a
    int dip2px(android.content.Context,float) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.cn7782.management.android.activity.adapter.FloderAdapter$ViewHolderFoler -> com.cn7782.management.android.activity.adapter.l:
    android.widget.ImageView iv_floderimage -> a
    android.widget.ImageView is_checked -> b
    android.widget.TextView tv_flodername -> c
    android.widget.TextView tv_flodercount -> d
com.cn7782.management.android.activity.adapter.HaveReadAdapter -> com.cn7782.management.android.activity.adapter.m:
    java.util.List mlist -> a
    android.content.Context mcontext -> b
    java.lang.String tokenId -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.cn7782.management.android.activity.adapter.HaveReadAdapter$ViewHolder -> com.cn7782.management.android.activity.adapter.n:
    android.widget.TextView department -> a
    android.widget.TextView name -> b
    android.widget.TextView time -> c
    android.widget.ImageView headview -> d
    com.cn7782.management.android.activity.adapter.HaveReadAdapter this$0 -> e
com.cn7782.management.android.activity.adapter.PatrolHisAdapter -> com.cn7782.management.android.activity.adapter.o:
    java.util.List mlist -> a
    android.content.Context mcontext -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.cn7782.management.android.activity.adapter.PatrolHisAdapter$ViewHolder -> com.cn7782.management.android.activity.adapter.p:
    android.widget.TextView time -> a
    android.widget.TextView distance -> b
    android.widget.TextView timeconsuming -> c
    android.widget.TextView describe -> d
    android.view.View topline -> e
    android.view.View bottomline -> f
    com.cn7782.management.android.activity.adapter.PatrolHisAdapter this$0 -> g
com.cn7782.management.android.activity.adapter.PhotoAdapter -> com.cn7782.management.android.activity.adapter.PhotoAdapter:
    int CHOSE_MODE_SINGLE -> CHOSE_MODE_SINGLE
    int CHOSE_MODE_MULTIPLE -> CHOSE_MODE_MULTIPLE
    int max_chose_count -> max_chose_count
    android.view.LayoutInflater inflater -> a
    java.util.List imageses -> b
    android.content.Context context -> c
    android.support.v7.widget.RecyclerView$LayoutParams params -> params
    java.util.LinkedHashMap hashmap -> d
    int currentChoseMode -> currentChoseMode
    int sWidthPix -> e
    java.lang.String imgdir -> f
    boolean isNeedCamera -> g
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_CAMERA -> TYPE_CAMERA
    java.util.LinkedHashMap getCHoseImages() -> getCHoseImages
    void setmax_chose_count(int) -> setmax_chose_count
    void setDir(java.lang.String) -> setDir
    java.lang.String getDir() -> getDir
    void setNeedCamera(boolean) -> setNeedCamera
    int dip2px(android.content.Context,float) -> dip2px
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    void displayImage(java.lang.String,android.widget.ImageView) -> displayImage
    int getItemViewType(int) -> getItemViewType
    int getItemCount() -> getItemCount
com.cn7782.management.android.activity.adapter.PhotoAdapter$1 -> com.cn7782.management.android.activity.adapter.q:
    java.lang.String val$images -> a
    com.cn7782.management.android.activity.adapter.PhotoAdapter$ImageViewHolder val$ivholder -> b
    com.cn7782.management.android.activity.adapter.PhotoAdapter this$0 -> c
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.adapter.PhotoAdapter$2 -> com.cn7782.management.android.activity.adapter.r:
    java.lang.String val$images -> a
    com.cn7782.management.android.activity.adapter.PhotoAdapter this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.adapter.PhotoAdapter$3 -> com.cn7782.management.android.activity.adapter.s:
    java.lang.String val$images -> a
    com.cn7782.management.android.activity.adapter.PhotoAdapter this$0 -> b
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.adapter.PhotoAdapter$4 -> com.cn7782.management.android.activity.adapter.t:
    com.cn7782.management.android.activity.adapter.PhotoAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.adapter.PhotoAdapter$CameraViewHolder -> com.cn7782.management.android.activity.adapter.PhotoAdapter$CameraViewHolder:
    android.widget.LinearLayout camera_lin -> camera_lin
com.cn7782.management.android.activity.adapter.PhotoAdapter$ImageViewHolder -> com.cn7782.management.android.activity.adapter.u:
    android.widget.ImageView iv_image -> a
    android.widget.ImageButton checkBox -> b
    android.view.View alpha_view -> c
com.cn7782.management.android.activity.adapter.ReportAdapter -> com.cn7782.management.android.activity.adapter.v:
    java.util.List mlist -> a
    android.content.Context mcontext -> b
    java.lang.String Repeat -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getimage(java.lang.String) -> a
    void getimage(java.lang.String,android.widget.ImageView,boolean) -> a
    java.lang.String getstr(java.lang.String) -> b
com.cn7782.management.android.activity.adapter.ReportAdapter$ViewHolder -> com.cn7782.management.android.activity.adapter.w:
    android.widget.ImageView image -> a
    android.widget.TextView head_title -> b
    android.widget.TextView department -> c
    android.widget.TextView time -> d
    android.widget.TextView content -> e
    android.widget.TextView top_line -> f
    android.widget.TextView bottom_line -> g
    com.cn7782.management.android.activity.adapter.ReportAdapter this$0 -> h
com.cn7782.management.android.activity.adapter.ScheduleAdapter -> com.cn7782.management.android.activity.adapter.x:
    android.content.Context mcontext -> a
    java.util.List mlist -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.cn7782.management.android.activity.adapter.ScheduleAdapter$ViewHolder -> com.cn7782.management.android.activity.adapter.y:
    android.widget.TextView shortContent -> a
    android.widget.TextView showDuration -> b
    com.cn7782.management.android.activity.adapter.ScheduleAdapter this$0 -> c
com.cn7782.management.android.activity.adapter.SearchAdapter -> com.cn7782.management.android.activity.adapter.SearchAdapter:
    java.util.List mlist -> a
    android.content.Context mcontext -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions mOptions -> mOptions
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener animateFirstListener -> c
    android.graphics.drawable.Drawable img_yes -> d
    android.graphics.drawable.Drawable img_no -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void setdata(java.util.List) -> setdata
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String ToDBC(java.lang.String) -> ToDBC
com.cn7782.management.android.activity.adapter.SearchAdapter$1 -> com.cn7782.management.android.activity.adapter.z:
com.cn7782.management.android.activity.adapter.SearchAdapter$AnimateFirstDisplayListener -> com.cn7782.management.android.activity.adapter.aa:
    java.util.List displayedImages -> a
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
com.cn7782.management.android.activity.adapter.SearchAdapter$ViewHolder -> com.cn7782.management.android.activity.adapter.ab:
    android.widget.TextView title -> a
    android.widget.TextView department -> b
    android.widget.TextView contect -> c
    android.widget.TextView time -> d
    android.widget.TextView look -> e
    android.widget.TextView comment -> f
    android.widget.ImageView message_image -> g
    android.widget.ImageView isTop_iv -> h
    android.widget.LinearLayout label_layout -> i
    com.cn7782.management.android.activity.adapter.SearchAdapter this$0 -> j
com.cn7782.management.android.activity.adapter.TrajectoryAdapter -> com.cn7782.management.android.activity.adapter.ac:
    android.content.Context mcontext -> a
    java.util.List mlist -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.cn7782.management.android.activity.adapter.TrajectoryAdapter$ViewHolder -> com.cn7782.management.android.activity.adapter.ad:
    android.widget.TextView name -> a
    android.widget.TextView time -> b
    android.widget.TextView duration -> c
    android.widget.TextView distance -> d
    android.widget.TextView remark -> e
    android.view.View topline -> f
    android.view.View bottomline -> g
    com.cn7782.management.android.activity.adapter.TrajectoryAdapter this$0 -> h
com.cn7782.management.android.activity.adapter.WorkingAdapter -> com.cn7782.management.android.activity.adapter.ae:
    java.util.List mlist -> a
    android.content.Context mcontext -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getimage(java.lang.String) -> a
com.cn7782.management.android.activity.adapter.WorkingAdapter$ViewHolder -> com.cn7782.management.android.activity.adapter.af:
    android.widget.TextView title -> a
    android.widget.TextView content -> b
    android.widget.TextView time -> c
    android.widget.TextView position -> d
    android.view.View image -> e
    android.widget.TextView text1 -> f
    android.widget.TextView text2 -> g
    android.widget.TextView text3 -> h
    android.widget.TextView text4 -> i
    android.widget.TextView text5 -> j
    com.cn7782.management.android.activity.adapter.WorkingAdapter this$0 -> k
com.cn7782.management.android.activity.bean.CalendarViewBuilder -> com.cn7782.management.android.activity.bean.a:
    com.cn7782.management.android.activity.tabview.CalendarView[] calendarViews -> a
    com.cn7782.management.android.activity.tabview.CalendarView[] createMassCalendarViews(android.content.Context,int,int,com.cn7782.management.android.activity.tabview.CalendarView$CallBack) -> a
    com.cn7782.management.android.activity.tabview.CalendarView[] createMassCalendarViews(android.content.Context,int,com.cn7782.management.android.activity.tabview.CalendarView$CallBack) -> a
    void swtichCalendarViewsStyle(int) -> a
    void backTodayCalendarViews() -> a
com.cn7782.management.android.activity.bean.ChartingBean -> com.cn7782.management.android.activity.bean.ChartingBean:
    java.lang.String name -> name
    java.lang.String count -> count
    java.lang.String percentage -> percentage
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getCount() -> getCount
    void setCount(java.lang.String) -> setCount
    java.lang.String getPercentage() -> getPercentage
    void setPercentage(java.lang.String) -> setPercentage
com.cn7782.management.android.activity.bean.CustomDate -> com.cn7782.management.android.activity.bean.CustomDate:
    int year -> year
    int month -> month
    int day -> day
    int week -> week
    com.cn7782.management.android.activity.bean.CustomDate modifiDayForObject(com.cn7782.management.android.activity.bean.CustomDate,int) -> modifiDayForObject
    java.lang.String toString() -> toString
    int getYear() -> getYear
    void setYear(int) -> setYear
    int getMonth() -> getMonth
    void setMonth(int) -> setMonth
    int getDay() -> getDay
    void setDay(int) -> setDay
    int getWeek() -> getWeek
    void setWeek(int) -> setWeek
com.cn7782.management.android.activity.bean.DepartmentBean -> com.cn7782.management.android.activity.bean.b:
    java.lang.Integer departmentId -> a
    java.lang.String depName -> b
    java.lang.Integer parentId -> c
    java.lang.Integer getDepartmentId() -> a
    void setDepartmentId(java.lang.Integer) -> a
    java.lang.String getDepName() -> b
    void setDepName(java.lang.String) -> a
com.cn7782.management.android.activity.bean.DrawLocation -> com.cn7782.management.android.activity.bean.DrawLocation:
    double Latitude -> Latitude
    double Longitude -> Longitude
    double speed -> speed
    java.lang.String time -> time
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int compareTo(com.cn7782.management.android.activity.bean.DrawLocation) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.cn7782.management.android.activity.bean.DrawLocation$1 -> com.cn7782.management.android.activity.bean.c:
    com.cn7782.management.android.activity.bean.DrawLocation createFromParcel(android.os.Parcel) -> a
    com.cn7782.management.android.activity.bean.DrawLocation[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.cn7782.management.android.activity.bean.EmployeeBean -> com.cn7782.management.android.activity.bean.d:
    java.lang.String contactId -> a
    java.lang.Integer officeId -> b
    java.lang.String officeName -> c
    java.lang.String empName -> d
    java.lang.String email -> e
    java.lang.String fax -> f
    java.lang.String homeAddr -> g
    java.lang.String mobile -> h
    java.lang.String mobile2 -> i
    java.lang.String officeAddr -> j
    java.lang.String remark -> k
    java.lang.String officeTel -> l
    java.lang.String getContactId() -> a
    void setContactId(java.lang.String) -> a
    long getOfficeId() -> b
    void setOfficeId(java.lang.Integer) -> a
    java.lang.String getEmpName() -> c
    void setEmpName(java.lang.String) -> b
    java.lang.String getOfficeName() -> d
    void setOfficeName(java.lang.String) -> c
    java.lang.String getEmail() -> e
    void setEmail(java.lang.String) -> d
    java.lang.String getFax() -> f
    void setFax(java.lang.String) -> e
    java.lang.String getHomeAddr() -> g
    void setHomeAddr(java.lang.String) -> f
    java.lang.String getMobile() -> h
    void setMobile(java.lang.String) -> g
    java.lang.String getMobile2() -> i
    void setMobile2(java.lang.String) -> h
    java.lang.String getOfficeAddr() -> j
    void setOfficeAddr(java.lang.String) -> i
    java.lang.String getRemark() -> k
    void setRemark(java.lang.String) -> j
    java.lang.String getOfficeTel() -> l
    void setOfficeTel(java.lang.String) -> k
com.cn7782.management.android.activity.bean.HistoryBean -> com.cn7782.management.android.activity.bean.e:
    java.lang.String id -> a
    java.lang.String name -> b
    int duration -> c
    int distance -> d
    java.lang.String time -> e
    java.lang.String remark -> f
    java.lang.String getId() -> a
    void setId(java.lang.String) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> b
    int getDuration() -> c
    void setDuration(int) -> a
    int getDistance() -> d
    void setDistance(int) -> b
    java.lang.String getTime() -> e
    void setTime(java.lang.String) -> c
    java.lang.String getRemark() -> f
    void setRemark(java.lang.String) -> d
com.cn7782.management.android.activity.bean.ImageFloder -> com.cn7782.management.android.activity.bean.f:
    java.lang.String dir -> a
    java.lang.String firstImagePath -> b
    java.lang.String name -> c
    int count -> d
    java.lang.String getDir() -> a
    void setDir(java.lang.String) -> a
    java.lang.String getFirstImagePath() -> b
    void setFirstImagePath(java.lang.String) -> b
    java.lang.String getName() -> c
    int getCount() -> d
    void setCount(int) -> a
com.cn7782.management.android.activity.bean.Images -> com.cn7782.management.android.activity.bean.Images:
    java.lang.String photopath -> photopath
    java.lang.String imageid -> imageid
    boolean ishaveorigin -> ishaveorigin
    java.lang.String photoThumbpath -> photoThumbpath
    boolean isChecked -> isChecked
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.cn7782.management.android.activity.bean.Images$1 -> com.cn7782.management.android.activity.bean.g:
    com.cn7782.management.android.activity.bean.Images createFromParcel(android.os.Parcel) -> a
    com.cn7782.management.android.activity.bean.Images[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.cn7782.management.android.activity.bean.InfoBean -> com.cn7782.management.android.activity.bean.h:
    java.lang.String userId -> a
    java.lang.String wayId -> b
    java.lang.String url -> c
    java.lang.String name -> d
    double Latitude -> e
    double Longitude -> f
    java.lang.String time -> g
    java.lang.String address -> h
    java.lang.String getUserId() -> a
    void setUserId(java.lang.String) -> a
    java.lang.String getWayId() -> b
    void setWayId(java.lang.String) -> b
    java.lang.String getUrl() -> c
    void setUrl(java.lang.String) -> c
    java.lang.String getName() -> d
    void setName(java.lang.String) -> d
    double getLatitude() -> e
    void setLatitude(double) -> a
    double getLongitude() -> f
    void setLongitude(double) -> b
    java.lang.String getTime() -> g
    void setTime(java.lang.String) -> e
    java.lang.String getAddress() -> h
    void setAddress(java.lang.String) -> f
com.cn7782.management.android.activity.bean.InviteMessage -> com.cn7782.management.android.activity.bean.InviteMessage:
com.cn7782.management.android.activity.bean.InviteMessage$InviteMesageStatus -> com.cn7782.management.android.activity.bean.InviteMessage$InviteMesageStatus:
    com.cn7782.management.android.activity.bean.InviteMessage$InviteMesageStatus BEINVITEED -> BEINVITEED
    com.cn7782.management.android.activity.bean.InviteMessage$InviteMesageStatus BEREFUSED -> BEREFUSED
    com.cn7782.management.android.activity.bean.InviteMessage$InviteMesageStatus BEAGREED -> BEAGREED
    com.cn7782.management.android.activity.bean.InviteMessage$InviteMesageStatus BEAPPLYED -> BEAPPLYED
    com.cn7782.management.android.activity.bean.InviteMessage$InviteMesageStatus AGREED -> AGREED
    com.cn7782.management.android.activity.bean.InviteMessage$InviteMesageStatus REFUSED -> REFUSED
    com.cn7782.management.android.activity.bean.InviteMessage$InviteMesageStatus[] $VALUES -> a
    com.cn7782.management.android.activity.bean.InviteMessage$InviteMesageStatus[] values() -> values
    com.cn7782.management.android.activity.bean.InviteMessage$InviteMesageStatus valueOf(java.lang.String) -> valueOf
com.cn7782.management.android.activity.bean.LocateRequest -> com.cn7782.management.android.activity.bean.LocateRequest:
    java.lang.String location -> location
    double longitude -> longitude
    double latitude -> latitude
    java.lang.String logTime -> logTime
    double speed -> speed
    java.lang.String getLocation() -> getLocation
    void setLocation(java.lang.String) -> setLocation
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    java.lang.String getLogTime() -> getLogTime
    void setLogTime(java.lang.String) -> setLogTime
    double getSpeed() -> getSpeed
    void setSpeed(double) -> setSpeed
com.cn7782.management.android.activity.bean.LocateRequestBean -> com.cn7782.management.android.activity.bean.LocateRequestBean:
    java.lang.String startStrTime -> startStrTime
    java.lang.String endStrTime -> endStrTime
    java.lang.String length -> length
    java.lang.String duration -> duration
    java.lang.String pathType -> pathType
    java.util.List locList -> locList
    java.lang.String getStartStrTime() -> getStartStrTime
    void setStartStrTime(java.lang.String) -> setStartStrTime
    java.lang.String getEndStrTime() -> getEndStrTime
    void setEndStrTime(java.lang.String) -> setEndStrTime
    java.lang.String getLength() -> getLength
    void setLength(java.lang.String) -> setLength
    java.lang.String getDuration() -> getDuration
    void setDuration(java.lang.String) -> setDuration
    java.lang.String getPathType() -> getPathType
    void setPathType(java.lang.String) -> setPathType
    java.util.List getLocList() -> getLocList
    void setLocList(java.util.List) -> setLocList
com.cn7782.management.android.activity.bean.LocationBean -> com.cn7782.management.android.activity.bean.LocationBean:
    java.lang.String describe -> a
    java.lang.String tableName -> b
    double Latitude -> c
    double Longitude -> d
    java.lang.String time -> e
    double speed -> f
    int pathType -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getDescribe() -> getDescribe
    void setDescribe(java.lang.String) -> setDescribe
    java.lang.String getTableName() -> getTableName
    void setTableName(java.lang.String) -> setTableName
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    double getSpeed() -> getSpeed
    void setSpeed(double) -> setSpeed
    int getPathType() -> getPathType
    void setPathType(int) -> setPathType
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.cn7782.management.android.activity.bean.LocationBean$1 -> com.cn7782.management.android.activity.bean.i:
    com.cn7782.management.android.activity.bean.LocationBean createFromParcel(android.os.Parcel) -> a
    com.cn7782.management.android.activity.bean.LocationBean[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.cn7782.management.android.activity.bean.MessageBean -> com.cn7782.management.android.activity.bean.MessageBean:
    java.lang.String id -> id
    java.lang.String content -> content
    java.lang.String logTime -> logTime
    java.lang.String sendName -> sendName
    int isRead -> isRead
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getLogTime() -> getLogTime
    void setLogTime(java.lang.String) -> setLogTime
    java.lang.String getSendName() -> getSendName
    void setSendName(java.lang.String) -> setSendName
    int getIsRead() -> getIsRead
    void setIsRead(int) -> setIsRead
com.cn7782.management.android.activity.bean.MyReportBean -> com.cn7782.management.android.activity.bean.j:
    java.lang.String title -> a
    java.lang.String time -> b
    java.lang.String content -> c
    java.lang.String state -> d
    java.lang.String address -> e
    java.lang.String id -> f
    java.lang.String user -> g
    java.lang.String getUser() -> a
    void setUser(java.lang.String) -> a
    java.lang.String getId() -> b
    void setId(java.lang.String) -> b
    java.lang.String getTitle() -> c
    void setTitle(java.lang.String) -> c
    java.lang.String getTime() -> d
    void setTime(java.lang.String) -> d
    java.lang.String getContent() -> e
    void setContent(java.lang.String) -> e
    java.lang.String getState() -> f
    void setState(java.lang.String) -> f
    java.lang.String getAddress() -> g
    void setAddress(java.lang.String) -> g
com.cn7782.management.android.activity.bean.NoticeBean -> com.cn7782.management.android.activity.bean.NoticeBean:
    java.lang.String title -> title
    java.lang.String time -> time
    java.lang.String look -> look
    java.lang.String comment -> comment
    java.lang.String content -> content
    java.lang.String department -> department
    java.lang.String imageurl -> imageurl
    java.lang.String id -> id
    java.lang.String filesize -> filesize
    java.lang.String name -> name
    java.lang.String url_id -> url_id
    java.lang.String isRead -> isRead
    java.lang.String isTop -> isTop
    java.lang.String getUrl_id() -> getUrl_id
    void setUrl_id(java.lang.String) -> setUrl_id
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getFilesize() -> getFilesize
    void setFilesize(java.lang.String) -> setFilesize
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    java.lang.String getLook() -> getLook
    void setLook(java.lang.String) -> setLook
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getDepartment() -> getDepartment
    void setDepartment(java.lang.String) -> setDepartment
    java.lang.String getImageurl() -> getImageurl
    void setImageurl(java.lang.String) -> setImageurl
    java.lang.String getIsRead() -> getIsRead
    void setIsRead(java.lang.String) -> setIsRead
    java.lang.String getIsTop() -> getIsTop
    void setIsTop(java.lang.String) -> setIsTop
com.cn7782.management.android.activity.bean.PatrolHisBean -> com.cn7782.management.android.activity.bean.PatrolHisBean:
    java.lang.String startPoint -> a
    java.lang.String endPoint -> b
    java.lang.String time -> c
    int distance -> d
    int timeconsuming -> e
    java.lang.String remark -> f
    java.lang.String id -> id
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getStartPoint() -> getStartPoint
    void setStartPoint(java.lang.String) -> setStartPoint
    java.lang.String getEndPoint() -> getEndPoint
    void setEndPoint(java.lang.String) -> setEndPoint
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getTimeconsuming() -> getTimeconsuming
    void setTimeconsuming(int) -> setTimeconsuming
    java.lang.String getRemark() -> getRemark
    void setRemark(java.lang.String) -> setRemark
com.cn7782.management.android.activity.bean.ScheduleBean -> com.cn7782.management.android.activity.bean.k:
    java.lang.String scheduleId -> a
    java.lang.String title -> b
    java.lang.String begtime -> c
    java.lang.String endtime -> d
    java.lang.String content -> e
    java.lang.String status -> f
    java.lang.String develop_user -> g
    java.lang.String develop_time -> h
    java.lang.String jobType -> i
    java.lang.String getScheduleId() -> a
    void setScheduleId(java.lang.String) -> a
    java.lang.String getTitle() -> b
    void setTitle(java.lang.String) -> b
    java.lang.String getBegtime() -> c
    void setBegtime(java.lang.String) -> c
    java.lang.String getEndtime() -> d
    void setEndtime(java.lang.String) -> d
    java.lang.String getContent() -> e
    void setContent(java.lang.String) -> e
    java.lang.String getStatus() -> f
    void setStatus(java.lang.String) -> f
    void setDevelop_user(java.lang.String) -> g
    void setDevelop_time(java.lang.String) -> h
    java.lang.String getJobType() -> g
    void setJobType(java.lang.String) -> i
com.cn7782.management.android.activity.bean.SearchBean -> com.cn7782.management.android.activity.bean.l:
    java.lang.String title -> a
    java.lang.String content -> b
    com.baidu.mapapi.model.LatLng lt -> c
    java.lang.String getTitle() -> a
    void setTitle(java.lang.String) -> a
    java.lang.String getContent() -> b
    void setContent(java.lang.String) -> b
    com.baidu.mapapi.model.LatLng getLt() -> c
    void setLt(com.baidu.mapapi.model.LatLng) -> a
com.cn7782.management.android.activity.bean.StatisticsBean -> com.cn7782.management.android.activity.bean.StatisticsBean:
    java.lang.String SocialSecurity -> SocialSecurity
    java.lang.String ContradictionEvent -> ContradictionEvent
    java.lang.String ProtectRoadLine -> ProtectRoadLine
    java.lang.String zongCount -> zongCount
    java.lang.String baosong -> baosong
    java.lang.String chuzhi -> chuzhi
    java.lang.String duban -> duban
    java.lang.String xiaoan -> xiaoan
    java.lang.String hecha -> hecha
    java.lang.String grid1 -> grid1
    java.lang.String grid2 -> grid2
    java.lang.String grid3 -> grid3
    java.lang.String grid4 -> grid4
    java.lang.String type -> type
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.String getSocialSecurity() -> getSocialSecurity
    void setSocialSecurity(java.lang.String) -> setSocialSecurity
    java.lang.String getContradictionEvent() -> getContradictionEvent
    void setContradictionEvent(java.lang.String) -> setContradictionEvent
    java.lang.String getProtectRoadLine() -> getProtectRoadLine
    void setProtectRoadLine(java.lang.String) -> setProtectRoadLine
    java.lang.String getZongCount() -> getZongCount
    void setZongCount(java.lang.String) -> setZongCount
    java.lang.String getBaosong() -> getBaosong
    void setBaosong(java.lang.String) -> setBaosong
    java.lang.String getChuzhi() -> getChuzhi
    void setChuzhi(java.lang.String) -> setChuzhi
    java.lang.String getDuban() -> getDuban
    void setDuban(java.lang.String) -> setDuban
    java.lang.String getXiaoan() -> getXiaoan
    void setXiaoan(java.lang.String) -> setXiaoan
    java.lang.String getHecha() -> getHecha
    void setHecha(java.lang.String) -> setHecha
    java.lang.String getGrid1() -> getGrid1
    void setGrid1(java.lang.String) -> setGrid1
    java.lang.String getGrid2() -> getGrid2
    void setGrid2(java.lang.String) -> setGrid2
    java.lang.String getGrid3() -> getGrid3
    void setGrid3(java.lang.String) -> setGrid3
    java.lang.String getGrid4() -> getGrid4
    void setGrid4(java.lang.String) -> setGrid4
com.cn7782.management.android.activity.bean.VideoEntity -> com.cn7782.management.android.activity.bean.VideoEntity:
    int ID -> ID
    java.lang.String title -> title
    java.lang.String filePath -> filePath
    int size -> size
    int duration -> duration
com.cn7782.management.android.activity.charting.Approximator -> com.cn7782.management.android.activity.charting.Approximator:
com.cn7782.management.android.activity.charting.Approximator$ApproximatorType -> com.cn7782.management.android.activity.charting.Approximator$ApproximatorType:
    com.cn7782.management.android.activity.charting.Approximator$ApproximatorType NONE -> NONE
    com.cn7782.management.android.activity.charting.Approximator$ApproximatorType DOUGLAS_PEUCKER -> DOUGLAS_PEUCKER
    com.cn7782.management.android.activity.charting.Approximator$ApproximatorType[] $VALUES -> a
    com.cn7782.management.android.activity.charting.Approximator$ApproximatorType[] values() -> values
    com.cn7782.management.android.activity.charting.Approximator$ApproximatorType valueOf(java.lang.String) -> valueOf
com.cn7782.management.android.activity.charting.BarChart -> com.cn7782.management.android.activity.charting.a:
    float mSkew -> ax
    float mDepth -> ay
    boolean m3DEnabled -> az
    boolean mDrawHighlightArrow -> aA
    boolean mDrawValueAboveBar -> aB
    boolean mDrawValuesForWholeStack -> aC
    boolean mDrawBarShadow -> aD
    android.graphics.RectF mBarShadow -> aE
    android.graphics.RectF mBarRect -> aF
    void init() -> a
    void calcMinMax(boolean) -> a
    void drawHighlights() -> b
    void drawData() -> c
    void prepareBar(float,float,float) -> a
    void drawXLabels(float) -> a
    void drawVerticalGrid() -> d
    void drawValues() -> e
    void drawValue(java.lang.String,float,float) -> a
    com.cn7782.management.android.activity.charting.Highlight getHighlightByTouchPoint(float,float) -> a
    void setSkew(float) -> setSkew
    float getSkew() -> getSkew
    void setDepth(float) -> setDepth
    float getDepth() -> getDepth
    void set3DEnabled(boolean) -> set3DEnabled
    void setDrawHighlightArrow(boolean) -> setDrawHighlightArrow
    void setDrawValueAboveBar(boolean) -> setDrawValueAboveBar
    void setDrawValuesForWholeStack(boolean) -> setDrawValuesForWholeStack
    void setDrawBarShadow(boolean) -> setDrawBarShadow
    void drawAdditional() -> f
com.cn7782.management.android.activity.charting.BarData -> com.cn7782.management.android.activity.charting.b:
    float mGroupSpace -> e
    float getGroupSpace() -> a
com.cn7782.management.android.activity.charting.BarDataSet -> com.cn7782.management.android.activity.charting.c:
    float mBarSpace -> f
    int mStackSize -> g
    int mBarShadowColor -> h
    int mHighLightAlpha -> i
    int mEntryCountStacks -> j
    java.lang.String[] mStackLabels -> k
    com.cn7782.management.android.activity.charting.DataSet copy() -> copy
    void calcEntryCountIncludingStacks(java.util.ArrayList) -> b
    void calcStackSize(java.util.ArrayList) -> c
    int getStackSize() -> a_
    float getBarSpace() -> b
    int getBarShadowColor() -> c
    int getHighLightAlpha() -> d
    java.lang.String[] getStackLabels() -> e
com.cn7782.management.android.activity.charting.BarEntry -> com.cn7782.management.android.activity.charting.d:
    float[] mVals -> a
    com.cn7782.management.android.activity.charting.BarEntry copy() -> copy
    float[] getVals() -> b_
    com.cn7782.management.android.activity.charting.Entry copy() -> copy
com.cn7782.management.android.activity.charting.BarLineChartBase -> com.cn7782.management.android.activity.charting.BarLineChartBase:
    boolean mInvertYAxis -> ax
    int mMaxVisibleCount -> a
    float mMinScaleY -> ay
    float mMinScaleX -> az
    float mScaleX -> b
    float mScaleY -> c
    float mMaxScaleY -> d
    float mGridWidth -> e
    float mTransOffsetX -> aA
    float mTransOffsetY -> aB
    boolean mPinchZoomEnabled -> f
    boolean mDoubleTapToZoomEnabled -> g
    boolean mDragScaleEnabled -> h
    boolean mFixedYValues -> i
    boolean mStartAtZero -> j
    boolean mFilterData -> k
    android.graphics.Paint mGridPaint -> l
    android.graphics.Paint mGridBackgroundPaint -> m
    android.graphics.Paint mBorderPaint -> n
    boolean mHighLightIndicatorEnabled -> o
    boolean mAutoFinishDrawing -> p
    boolean mDrawVerticalGrid -> q
    boolean mDrawHorizontalGrid -> r
    boolean mDrawYLabels -> s
    boolean mDrawXLabels -> t
    boolean mDrawBorder -> u
    boolean mDrawGridBackground -> v
    com.cn7782.management.android.activity.charting.OnDrawListener mDrawListener -> w
    com.cn7782.management.android.activity.charting.YLabels mYLabels -> x
    com.cn7782.management.android.activity.charting.XLabels mXLabels -> y
    com.cn7782.management.android.activity.charting.BarLineChartBase$BorderPosition[] mBorderPositions -> aC
    android.view.View$OnTouchListener mListener -> z
    void init() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void prepare() -> prepare
    void notifyDataSetChanged() -> notifyDataSetChanged
    void calculateOffsets() -> g
    void calcModulus() -> h
    void calcMinMax(boolean) -> a
    void prepareXLabels() -> i
    void prepareYLabels() -> D
    void drawXLabels() -> E
    void drawXLabels(float) -> a
    void drawYLabels() -> F
    void drawYLabels(float,float[],float) -> a
    void drawBorder() -> j
    void drawGridBackground() -> k
    void drawHorizontalGrid() -> l
    void drawVerticalGrid() -> d
    void drawLimitLines() -> G
    boolean isOffContentRight(float) -> b
    boolean isOffContentLeft(float) -> c
    boolean isOffContentTop(float) -> d
    boolean isOffContentBottom(float) -> e
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void disableScroll() -> m
    void enableScroll() -> n
    void zoomIn(float,float) -> b
    void fitScreen() -> o
    void setInvertYAxisEnabled(boolean) -> setInvertYAxisEnabled
    boolean isInvertYAxisEnabled() -> p
    android.graphics.Matrix refreshTouch(android.graphics.Matrix) -> a
    void limitTransAndScale(android.graphics.Matrix) -> b
    void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
    void setOnDrawListener(com.cn7782.management.android.activity.charting.OnDrawListener) -> setOnDrawListener
    void setDrawingEnabled(boolean) -> setDrawingEnabled
    void setAutoFinish(boolean) -> setAutoFinish
    boolean isAutoFinishEnabled() -> q
    com.cn7782.management.android.activity.charting.OnDrawListener getDrawListener() -> getDrawListener
    boolean hasFixedYValues() -> r
    void setGridColor(int) -> setGridColor
    void setMaxVisibleValueCount(int) -> setMaxVisibleValueCount
    void setHighlightIndicatorEnabled(boolean) -> setHighlightIndicatorEnabled
    void setStartAtZero(boolean) -> setStartAtZero
    void setGridWidth(float) -> setGridWidth
    void setDragScaleEnabled(boolean) -> setDragScaleEnabled
    boolean isDragScaleEnabled() -> s
    void setDoubleTapToZoomEnabled(boolean) -> setDoubleTapToZoomEnabled
    boolean isDoubleTapToZoomEnabled() -> t
    void setDrawVerticalGrid(boolean) -> setDrawVerticalGrid
    void setDrawHorizontalGrid(boolean) -> setDrawHorizontalGrid
    void setDrawBorder(boolean) -> setDrawBorder
    void setDrawGridBackground(boolean) -> setDrawGridBackground
    void setDrawXLabels(boolean) -> setDrawXLabels
    void setDrawYLabels(boolean) -> setDrawYLabels
    void setBorderPositions(com.cn7782.management.android.activity.charting.BarLineChartBase$BorderPosition[]) -> setBorderPositions
    com.cn7782.management.android.activity.charting.BarLineChartBase$BorderPosition[] getBorderPositions() -> getBorderPositions
    com.cn7782.management.android.activity.charting.Highlight getHighlightByTouchPoint(float,float) -> a
    com.cn7782.management.android.activity.charting.PointD getValuesByTouchPoint(float,float) -> c
    com.cn7782.management.android.activity.charting.Entry getEntryByTouchPoint(float,float) -> d
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    float getMaxScaleX() -> getMaxScaleX
    float getMaxScaleY() -> getMaxScaleY
    void setMaxScaleY(float) -> setMaxScaleY
    com.cn7782.management.android.activity.charting.YLabels getYLabels() -> getYLabels
    com.cn7782.management.android.activity.charting.XLabels getXLabels() -> getXLabels
    void setPinchZoom(boolean) -> setPinchZoom
    boolean isPinchZoomEnabled() -> u
    void setDragOffsetX(float) -> setDragOffsetX
    void setDragOffsetY(float) -> setDragOffsetY
    com.cn7782.management.android.activity.charting.BarLineScatterCandleData getFilteredData() -> getFilteredData
    void setPaint(android.graphics.Paint,int) -> setPaint
    android.graphics.Paint getPaint(int) -> getPaint
com.cn7782.management.android.activity.charting.BarLineChartBase$2 -> com.cn7782.management.android.activity.charting.e:
    int[] $SwitchMap$com$cn7782$management$android$activity$charting$BarLineChartBase$BorderPosition -> a
com.cn7782.management.android.activity.charting.BarLineChartBase$BorderPosition -> com.cn7782.management.android.activity.charting.BarLineChartBase$BorderPosition:
    com.cn7782.management.android.activity.charting.BarLineChartBase$BorderPosition LEFT -> LEFT
    com.cn7782.management.android.activity.charting.BarLineChartBase$BorderPosition RIGHT -> RIGHT
    com.cn7782.management.android.activity.charting.BarLineChartBase$BorderPosition TOP -> TOP
    com.cn7782.management.android.activity.charting.BarLineChartBase$BorderPosition BOTTOM -> BOTTOM
    com.cn7782.management.android.activity.charting.BarLineChartBase$BorderPosition[] $VALUES -> a
    com.cn7782.management.android.activity.charting.BarLineChartBase$BorderPosition[] values() -> values
    com.cn7782.management.android.activity.charting.BarLineChartBase$BorderPosition valueOf(java.lang.String) -> valueOf
com.cn7782.management.android.activity.charting.BarLineChartTouchListener -> com.cn7782.management.android.activity.charting.f:
    android.graphics.Matrix mMatrix -> a
    android.graphics.Matrix mSavedMatrix -> b
    android.graphics.PointF mTouchStartPoint -> c
    android.graphics.PointF mTouchPointCenter -> d
    boolean mDrawingEnabled -> e
    int mTouchMode -> f
    float mSavedXDist -> g
    float mSavedYDist -> h
    float mSavedDist -> i
    long mStartTimestamp -> j
    com.cn7782.management.android.activity.charting.Highlight mLastHighlighted -> k
    com.cn7782.management.android.activity.charting.BarLineChartBase mChart -> l
    com.cn7782.management.android.activity.charting.DrawingContext mDrawingContext -> m
    android.view.GestureDetector mGestureDetector -> n
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setDrawingEnabled(boolean) -> a
    float distance(float,float,float,float) -> a
    void midPoint(android.graphics.PointF,android.view.MotionEvent) -> a
    float spacing(android.view.MotionEvent) -> a
    float getXDist(android.view.MotionEvent) -> b
    float getYDist(android.view.MotionEvent) -> c
    android.graphics.PointF getTrans(float,float) -> a
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.cn7782.management.android.activity.charting.BarLineScatterCandleData -> com.cn7782.management.android.activity.charting.g:
com.cn7782.management.android.activity.charting.BarLineScatterCandleRadarData -> com.cn7782.management.android.activity.charting.h:
    java.util.ArrayList mLimitLines -> e
    java.util.ArrayList getLimitLines() -> b
com.cn7782.management.android.activity.charting.BarLineScatterCandleRadarDataSet -> com.cn7782.management.android.activity.charting.i:
    int mHighLightColor -> a
    int getHighLightColor() -> f
com.cn7782.management.android.activity.charting.CandleData -> com.cn7782.management.android.activity.charting.j:
com.cn7782.management.android.activity.charting.CandleDataSet -> com.cn7782.management.android.activity.charting.k:
    float mShadowWidth -> f
    float mBodySpace -> g
    com.cn7782.management.android.activity.charting.DataSet copy() -> copy
    void calcMinMax() -> a
    float getBodySpace() -> b
    float getShadowWidth() -> c
com.cn7782.management.android.activity.charting.CandleEntry -> com.cn7782.management.android.activity.charting.l:
    float mShadowHigh -> a
    float mShadowLow -> b
    float mClose -> c
    float mOpen -> d
    float getVal() -> a
    com.cn7782.management.android.activity.charting.CandleEntry copy() -> copy
    float getHigh() -> b
    float getLow() -> c
    float getClose() -> d
    float getOpen() -> e
    com.cn7782.management.android.activity.charting.Entry copy() -> copy
com.cn7782.management.android.activity.charting.CandleStickChart -> com.cn7782.management.android.activity.charting.m:
    void calcMinMax(boolean) -> a
    void drawData() -> c
    void transformBody(float[],com.cn7782.management.android.activity.charting.CandleEntry,float) -> a
    void transformShadow(float[],com.cn7782.management.android.activity.charting.CandleEntry) -> a
    void drawValues() -> e
    void drawAdditional() -> f
    void drawHighlights() -> b
com.cn7782.management.android.activity.charting.Chart -> com.cn7782.management.android.activity.charting.Chart:
    java.lang.String LOG_TAG -> LOG_TAG
    int mColorDarkBlue -> A
    int mColorDarkRed -> B
    java.lang.String mUnit -> C
    int mBackgroundColor -> a
    java.text.DecimalFormat mValueFormat -> D
    float mOffsetLeft -> E
    float mOffsetTop -> F
    float mOffsetRight -> G
    float mOffsetBottom -> H
    com.cn7782.management.android.activity.charting.ChartData mCurrentData -> I
    com.cn7782.management.android.activity.charting.ChartData mOriginalData -> J
    android.graphics.Bitmap mDrawBitmap -> K
    android.graphics.Canvas mDrawCanvas -> L
    float mYChartMin -> M
    float mYChartMax -> N
    android.graphics.Paint mXLabelPaint -> O
    android.graphics.Paint mYLabelPaint -> P
    android.graphics.Paint mDrawPaint -> Q
    android.graphics.Paint mHighlightPaint -> R
    android.graphics.Paint mDescPaint -> S
    android.graphics.Paint mInfoPaint -> T
    android.graphics.Paint mValuePaint -> U
    android.graphics.Paint mRenderPaint -> V
    android.graphics.Paint mLegendLabelPaint -> W
    android.graphics.Paint mLegendFormPaint -> aa
    android.graphics.Paint mLimitLinePaint -> ab
    java.lang.String mDescription -> ac
    boolean mDataNotSet -> ad
    boolean mDrawUnitInChart -> ae
    float mDeltaY -> af
    float mDeltaX -> ag
    android.graphics.Matrix mMatrixValueToPx -> ah
    android.graphics.Matrix mMatrixOffset -> ai
    android.graphics.Matrix mMatrixTouch -> aj
    boolean mTouchEnabled -> ak
    boolean mDrawYValues -> al
    boolean mHighlightEnabled -> am
    boolean mDrawLegend -> an
    android.graphics.RectF mContentRect -> ao
    com.cn7782.management.android.activity.charting.Legend mLegend -> ap
    com.cn7782.management.android.activity.charting.OnChartValueSelectedListener mSelectionListener -> aq
    java.lang.String mNoDataText -> b
    java.lang.String mNoDataTextDescription -> c
    boolean mOffsetsCalculated -> ar
    com.cn7782.management.android.activity.charting.Highlight[] mIndicesToHightlight -> as
    boolean mDrawMarkerViews -> at
    com.cn7782.management.android.activity.charting.MarkerView mMarkerView -> au
    float mPhaseY -> av
    float mPhaseX -> aw
    com.nineoldandroids.animation.ObjectAnimator mAnimatorY -> d
    com.nineoldandroids.animation.ObjectAnimator mAnimatorX -> e
    int PAINT_GRID -> PAINT_GRID
    int PAINT_GRID_BACKGROUND -> PAINT_GRID_BACKGROUND
    int PAINT_YLABEL -> PAINT_YLABEL
    int PAINT_XLABEL -> PAINT_XLABEL
    int PAINT_INFO -> PAINT_INFO
    int PAINT_VALUES -> PAINT_VALUES
    int PAINT_CIRCLES_INNER -> PAINT_CIRCLES_INNER
    int PAINT_DESCRIPTION -> PAINT_DESCRIPTION
    int PAINT_BORDER -> PAINT_BORDER
    int PAINT_HOLE -> PAINT_HOLE
    int PAINT_CENTER_TEXT -> PAINT_CENTER_TEXT
    int PAINT_HIGHLIGHT -> PAINT_HIGHLIGHT
    int PAINT_RADAR_WEB -> PAINT_RADAR_WEB
    int PAINT_RENDER -> PAINT_RENDER
    int PAINT_LEGEND_LABEL -> PAINT_LEGEND_LABEL
    int PAINT_LIMIT_LINE -> PAINT_LIMIT_LINE
    boolean mUseCustomFormatter -> f
    boolean mMatrixOnLayoutPrepared -> g
    void init() -> a
    void setData(com.cn7782.management.android.activity.charting.ChartData) -> setData
    void prepare() -> prepare
    void notifyDataSetChanged() -> notifyDataSetChanged
    void calculateOffsets() -> g
    void calcMinMax(boolean) -> a
    void calcFormats() -> v
    void onDraw(android.graphics.Canvas) -> onDraw
    void prepareMatrix() -> w
    void prepareMatrixValuePx() -> x
    void prepareMatrixOffset() -> y
    void prepareContentRect() -> z
    void prepareLegend() -> prepareLegend
    float[] generateTransformedValuesLineScatter(java.util.ArrayList) -> a
    float[] generateTransformedValuesBarChart(java.util.ArrayList,int) -> a
    void transformPath(android.graphics.Path) -> a
    void transformPointArray(float[]) -> a
    void transformRectWithPhase(android.graphics.RectF) -> a
    void drawLegend() -> A
    void drawDescription() -> B
    void drawValues() -> e
    void drawData() -> c
    void drawAdditional() -> f
    void drawHighlights() -> b
    boolean needsHighlight(int,int) -> needsHighlight
    boolean valuesToHighlight() -> valuesToHighlight
    void highlightValues(com.cn7782.management.android.activity.charting.Highlight[]) -> highlightValues
    void highlightTouch(com.cn7782.management.android.activity.charting.Highlight) -> highlightTouch
    void drawMarkers() -> C
    float[] getMarkerPosition(com.cn7782.management.android.activity.charting.Entry,int) -> a
    void animateXY(int,int) -> animateXY
    void animateX(int) -> animateX
    void animateY(int) -> animateY
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
    float getPhaseY() -> getPhaseY
    void setPhaseY(float) -> setPhaseY
    float getPhaseX() -> getPhaseX
    void setPhaseX(float) -> setPhaseX
    android.graphics.Canvas getCanvas() -> getCanvas
    void setOnChartValueSelectedListener(com.cn7782.management.android.activity.charting.OnChartValueSelectedListener) -> setOnChartValueSelectedListener
    void setHighlightEnabled(boolean) -> setHighlightEnabled
    boolean isHighlightEnabled() -> isHighlightEnabled
    float getYValueSum() -> getYValueSum
    float getYMax() -> getYMax
    float getYChartMin() -> getYChartMin
    float getYChartMax() -> getYChartMax
    float getYMin() -> getYMin
    float getDeltaX() -> getDeltaX
    float getAverage() -> getAverage
    float getAverage(java.lang.String) -> getAverage
    int getValueCount() -> getValueCount
    android.graphics.PointF getCenter() -> getCenter
    android.graphics.PointF getCenterOffsets() -> getCenterOffsets
    void setDescriptionTextSize(float) -> setDescriptionTextSize
    void setDescription(java.lang.String) -> setDescription
    void setNoDataText(java.lang.String) -> setNoDataText
    void setNoDataTextDescription(java.lang.String) -> setNoDataTextDescription
    void setOffsets(float,float,float,float) -> setOffsets
    float getOffsetLeft() -> getOffsetLeft
    float getOffsetBottom() -> getOffsetBottom
    float getOffsetRight() -> getOffsetRight
    float getOffsetTop() -> getOffsetTop
    void setTouchEnabled(boolean) -> setTouchEnabled
    void setDrawYValues(boolean) -> setDrawYValues
    void setMarkerView(com.cn7782.management.android.activity.charting.MarkerView) -> setMarkerView
    com.cn7782.management.android.activity.charting.MarkerView getMarkerView() -> getMarkerView
    void setDrawUnitsInChart(boolean) -> setDrawUnitsInChart
    void setUnit(java.lang.String) -> setUnit
    java.lang.String getUnit() -> getUnit
    void setDrawLegend(boolean) -> setDrawLegend
    boolean isDrawLegendEnabled() -> isDrawLegendEnabled
    com.cn7782.management.android.activity.charting.Legend getLegend() -> getLegend
    android.graphics.RectF getContentRect() -> getContentRect
    void setPaint(android.graphics.Paint,int) -> setPaint
    android.graphics.Paint getPaint(int) -> getPaint
    boolean isDrawMarkerViewEnabled() -> isDrawMarkerViewEnabled
    void setDrawMarkerViews(boolean) -> setDrawMarkerViews
    void setValueFormatter(java.text.DecimalFormat) -> setValueFormatter
    java.text.DecimalFormat getValueFormatter() -> getValueFormatter
    void setValueTextColor(int) -> setValueTextColor
    void setValueTextSize(float) -> setValueTextSize
    boolean isDrawYValuesEnabled() -> isDrawYValuesEnabled
    java.lang.String getXValue(int) -> getXValue
    float getYValue(int,java.lang.String) -> getYValue
    float getYValue(int,int) -> getYValue
    com.cn7782.management.android.activity.charting.DataSet getDataSetByIndex(int) -> getDataSetByIndex
    com.cn7782.management.android.activity.charting.DataSet getDataSetByLabel(java.lang.String) -> getDataSetByLabel
    com.cn7782.management.android.activity.charting.Entry getEntry(int) -> getEntry
    com.cn7782.management.android.activity.charting.Entry getEntry(int,java.lang.String) -> getEntry
    com.cn7782.management.android.activity.charting.Entry getEntryByDataSetIndex(int,int) -> getEntryByDataSetIndex
    java.util.ArrayList getYValsAtIndex(int) -> getYValsAtIndex
    java.util.ArrayList getEntriesAtIndex(int) -> getEntriesAtIndex
    com.cn7782.management.android.activity.charting.ChartData getDataCurrent() -> getDataCurrent
    com.cn7782.management.android.activity.charting.ChartData getDataOriginal() -> getDataOriginal
    float getPercentOfTotal(float) -> getPercentOfTotal
    void setValueTypeface(android.graphics.Typeface) -> setValueTypeface
    void setDescriptionTypeface(android.graphics.Typeface) -> setDescriptionTypeface
    void setBackgroundColor(int) -> setBackgroundColor
    boolean saveToPath(java.lang.String,java.lang.String) -> saveToPath
    boolean saveToGallery(java.lang.String,int) -> saveToGallery
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
com.cn7782.management.android.activity.charting.Chart$1 -> com.cn7782.management.android.activity.charting.n:
    int[] $SwitchMap$com$cn7782$management$android$activity$charting$Legend$LegendPosition -> a
com.cn7782.management.android.activity.charting.ChartData -> com.cn7782.management.android.activity.charting.o:
    float mYMax -> a
    float mYMin -> b
    float mYValueSum -> e
    int mYValCount -> f
    float mXValAverageLength -> g
    java.util.ArrayList mXVals -> c
    java.util.ArrayList mDataSets -> d
    void init() -> a
    void calcXValAverageLength() -> b
    void isLegal(java.util.ArrayList) -> d
    void calcMinMax(java.util.ArrayList) -> a
    void calcYValueSum(java.util.ArrayList) -> b
    void calcYValueCount(java.util.ArrayList) -> c
    void notifyDataForNewEntry(com.cn7782.management.android.activity.charting.Entry) -> a
    int getDataSetCount() -> c
    float getYMin() -> d
    float getYMax() -> e
    float getXValAverageLength() -> f
    float getYValueSum() -> g
    int getYValCount() -> h
    boolean isValid() -> i
    java.util.ArrayList getXVals() -> j
    java.util.ArrayList getDataSets() -> k
    int getDataSetIndexByLabel(java.util.ArrayList,java.lang.String,boolean) -> a
    int getXValCount() -> l
    com.cn7782.management.android.activity.charting.Entry getEntryForHighlight(com.cn7782.management.android.activity.charting.Highlight) -> a
    com.cn7782.management.android.activity.charting.DataSet getDataSetByLabel(java.lang.String,boolean) -> a
    com.cn7782.management.android.activity.charting.DataSet getDataSetByIndex(int) -> a
com.cn7782.management.android.activity.charting.ColorTemplate -> com.cn7782.management.android.activity.charting.ColorTemplate:
    int[] FRESH_COLORS -> FRESH_COLORS
    int[] MONO_COLORS -> MONO_COLORS
    int[] LIBERTY_COLORS -> LIBERTY_COLORS
    int[] COLORFUL_COLORS -> COLORFUL_COLORS
    int[] GREEN_COLORS -> GREEN_COLORS
    int[] JOYFUL_COLORS -> JOYFUL_COLORS
    int[] PASTEL_COLORS -> PASTEL_COLORS
    int[] VORDIPLOM_COLORS -> VORDIPLOM_COLORS
    java.util.ArrayList createColors(android.content.Context,int[]) -> createColors
    java.util.ArrayList createColors(int[]) -> createColors
com.cn7782.management.android.activity.charting.DataSet -> com.cn7782.management.android.activity.charting.p:
    java.util.ArrayList mColors -> b
    java.util.ArrayList mYVals -> c
    float mYMax -> d
    float mYMin -> e
    float mYValueSum -> a
    java.lang.String mLabel -> f
    void notifyDataSetChanged() -> g
    void calcMinMax() -> a
    void calcYValueSum() -> b
    int getEntryCount() -> h
    float getYValForXIndex(int) -> a
    com.cn7782.management.android.activity.charting.Entry getEntryForXIndex(int) -> b
    java.util.ArrayList getYVals() -> i
    float getYValueSum() -> j
    float getYMin() -> k
    float getYMax() -> l
    com.cn7782.management.android.activity.charting.DataSet copy() -> copy
    java.lang.String toString() -> toString
    java.lang.String toSimpleString() -> m
    java.lang.String getLabel() -> n
    void setColors(java.util.ArrayList) -> a
    java.util.ArrayList getColors() -> o
    int getColor(int) -> c
    int getEntryPosition(com.cn7782.management.android.activity.charting.Entry) -> a
com.cn7782.management.android.activity.charting.DemoBase -> com.cn7782.management.android.activity.charting.DemoBase:
    void onBackPressed() -> onBackPressed
com.cn7782.management.android.activity.charting.DrawingContext -> com.cn7782.management.android.activity.charting.q:
    com.cn7782.management.android.activity.charting.LineDataSet mCurrentDrawingDataSet -> a
    int mLastDrawnDataSetIndex -> b
    boolean mAutoFinishDrawing -> c
    java.util.ArrayList mCurrentDrawingEntries -> d
    com.cn7782.management.android.activity.charting.Entry mMovingEntry -> e
    com.cn7782.management.android.activity.charting.OnDrawListener mListener -> f
    void createNewDrawingDataSet(com.cn7782.management.android.activity.charting.ChartData) -> a
    boolean addNewDrawingEntry(com.cn7782.management.android.activity.charting.Entry,com.cn7782.management.android.activity.charting.ChartData) -> a
    void notifyEntryMoved(com.cn7782.management.android.activity.charting.ChartData) -> b
    void fillData(com.cn7782.management.android.activity.charting.Entry,com.cn7782.management.android.activity.charting.Entry) -> a
    void finishNewDrawingEntry(com.cn7782.management.android.activity.charting.ChartData) -> c
    void deleteLastDrawingEntry(com.cn7782.management.android.activity.charting.ChartData) -> d
    void init(com.cn7782.management.android.activity.charting.OnDrawListener,boolean) -> a
    void setMovingEntry(com.cn7782.management.android.activity.charting.Entry) -> a
    com.cn7782.management.android.activity.charting.Entry getMovingEntry() -> a
com.cn7782.management.android.activity.charting.DrawingDataSetNotCreatedException -> com.cn7782.management.android.activity.charting.r:
com.cn7782.management.android.activity.charting.Entry -> com.cn7782.management.android.activity.charting.s:
    float mVal -> a
    int mXIndex -> b
    java.lang.Object mData -> c
    int getXIndex() -> f
    float getVal() -> a
    void setVal(float) -> a
    java.lang.Object getData() -> g
    com.cn7782.management.android.activity.charting.Entry copy() -> copy
    boolean equalTo(com.cn7782.management.android.activity.charting.Entry) -> a
    java.lang.String toString() -> toString
com.cn7782.management.android.activity.charting.Highlight -> com.cn7782.management.android.activity.charting.t:
    int mXIndex -> a
    int mDataSetIndex -> b
    int getDataSetIndex() -> a
    int getXIndex() -> b
    boolean equalTo(com.cn7782.management.android.activity.charting.Highlight) -> a
com.cn7782.management.android.activity.charting.LabelBase -> com.cn7782.management.android.activity.charting.u:
    android.graphics.Typeface mTypeface -> a
    float mTextSize -> b
    int mTextColor -> c
    void setTextSize(float) -> setTextSize
    float getTextSize() -> getTextSize
    void setTypeface(android.graphics.Typeface) -> setTypeface
    android.graphics.Typeface getTypeface() -> getTypeface
    void setTextColor(int) -> setTextColor
    int getTextColor() -> getTextColor
com.cn7782.management.android.activity.charting.Legend -> com.cn7782.management.android.activity.charting.Legend:
    float mLegendOffsetBottom -> a
    float mLegendOffsetRight -> b
    float mLegendOffsetLeft -> c
    float mLegendOffsetTop -> d
    int[] mColors -> e
    java.lang.String[] mLegendLabels -> f
    com.cn7782.management.android.activity.charting.Legend$LegendPosition mPosition -> g
    com.cn7782.management.android.activity.charting.Legend$LegendForm mShape -> h
    android.graphics.Typeface mTypeface -> i
    float mTextSize -> j
    int mTextColor -> k
    float mFormSize -> l
    float mXEntrySpace -> m
    float mYEntrySpace -> n
    float mFormToTextSpace -> o
    float mStackSpace -> p
    int getMaximumEntryLength(android.graphics.Paint) -> a
    int[] getColors() -> a
    java.lang.String[] getLegendLabels() -> b
    com.cn7782.management.android.activity.charting.Legend$LegendPosition getPosition() -> c
    com.cn7782.management.android.activity.charting.Legend$LegendForm getForm() -> d
    android.graphics.Typeface getTypeface() -> e
    float getFormSize() -> f
    float getXEntrySpace() -> g
    float getYEntrySpace() -> h
    float getFormToTextSpace() -> i
    void drawForm(android.graphics.Canvas,float,float,android.graphics.Paint,int) -> a
    void drawLabel(android.graphics.Canvas,float,float,android.graphics.Paint,int) -> b
    void apply(com.cn7782.management.android.activity.charting.Legend) -> a
    float getOffsetBottom() -> j
    float getOffsetRight() -> k
    void setOffsetBottom(float) -> a
    void setOffsetRight(float) -> b
    float getOffsetTop() -> l
    float getOffsetLeft() -> m
    void setOffsetTop(float) -> c
    void setOffsetLeft(float) -> d
    float getTextSize() -> n
    float getStackSpace() -> o
    float getFullWidth(android.graphics.Paint) -> b
    int getTextColor() -> p
com.cn7782.management.android.activity.charting.Legend$1 -> com.cn7782.management.android.activity.charting.v:
    int[] $SwitchMap$com$cn7782$management$android$activity$charting$Legend$LegendForm -> a
com.cn7782.management.android.activity.charting.Legend$LegendForm -> com.cn7782.management.android.activity.charting.Legend$LegendForm:
    com.cn7782.management.android.activity.charting.Legend$LegendForm SQUARE -> SQUARE
    com.cn7782.management.android.activity.charting.Legend$LegendForm CIRCLE -> CIRCLE
    com.cn7782.management.android.activity.charting.Legend$LegendForm LINE -> LINE
    com.cn7782.management.android.activity.charting.Legend$LegendForm[] $VALUES -> a
    com.cn7782.management.android.activity.charting.Legend$LegendForm[] values() -> values
    com.cn7782.management.android.activity.charting.Legend$LegendForm valueOf(java.lang.String) -> valueOf
com.cn7782.management.android.activity.charting.Legend$LegendPosition -> com.cn7782.management.android.activity.charting.Legend$LegendPosition:
    com.cn7782.management.android.activity.charting.Legend$LegendPosition RIGHT_OF_CHART -> RIGHT_OF_CHART
    com.cn7782.management.android.activity.charting.Legend$LegendPosition BELOW_CHART_LEFT -> BELOW_CHART_LEFT
    com.cn7782.management.android.activity.charting.Legend$LegendPosition BELOW_CHART_RIGHT -> BELOW_CHART_RIGHT
    com.cn7782.management.android.activity.charting.Legend$LegendPosition BELOW_CHART_CENTER -> BELOW_CHART_CENTER
    com.cn7782.management.android.activity.charting.Legend$LegendPosition[] $VALUES -> a
    com.cn7782.management.android.activity.charting.Legend$LegendPosition[] values() -> values
    com.cn7782.management.android.activity.charting.Legend$LegendPosition valueOf(java.lang.String) -> valueOf
com.cn7782.management.android.activity.charting.LimitLine -> com.cn7782.management.android.activity.charting.w:
    float mLimit -> a
    float mLineWidth -> b
    int mLineColor -> c
    android.graphics.DashPathEffect mDashPathEffect -> d
    float getLimit() -> a
    float getLineWidth() -> b
    int getLineColor() -> c
    android.graphics.DashPathEffect getDashPathEffect() -> d
com.cn7782.management.android.activity.charting.LineChart -> com.cn7782.management.android.activity.charting.LineChart:
    float mHighlightWidth -> ax
    android.graphics.Paint mCirclePaintInner -> ay
    void init() -> a
    void calcMinMax(boolean) -> a
    void drawHighlights() -> b
    void drawData() -> c
    android.graphics.Path generateFilledPath(java.util.ArrayList,float) -> a
    void drawValues() -> e
    void drawAdditional() -> f
    void setHighlightLineWidth(float) -> setHighlightLineWidth
    float getHighlightLineWidth() -> getHighlightLineWidth
    void setPaint(android.graphics.Paint,int) -> setPaint
    android.graphics.Paint getPaint(int) -> getPaint
com.cn7782.management.android.activity.charting.LineChart$CPoint -> com.cn7782.management.android.activity.charting.LineChart$CPoint:
    float x -> x
    float y -> y
    float dx -> dx
    float dy -> dy
    com.cn7782.management.android.activity.charting.LineChart this$0 -> a
com.cn7782.management.android.activity.charting.LineData -> com.cn7782.management.android.activity.charting.x:
com.cn7782.management.android.activity.charting.LineDataSet -> com.cn7782.management.android.activity.charting.y:
    java.util.ArrayList mCircleColors -> f
    float mCircleSize -> g
    float mCubicIntensity -> h
    android.graphics.DashPathEffect mDashPathEffect -> i
    boolean mDrawCircles -> j
    boolean mDrawCubic -> k
    com.cn7782.management.android.activity.charting.DataSet copy() -> copy
    float getCubicIntensity() -> b
    void setCircleSize(float) -> a
    float getCircleSize() -> c
    android.graphics.DashPathEffect getDashPathEffect() -> d
    boolean isDrawCirclesEnabled() -> e
    boolean isDrawCubicEnabled() -> p
    int getCircleColor(int) -> d
com.cn7782.management.android.activity.charting.LineRadarDataSet -> com.cn7782.management.android.activity.charting.z:
    int mFillColor -> f
    int mFillAlpha -> g
    float mLineWidth -> h
    boolean mDrawFilled -> i
    int getFillColor() -> q
    int getFillAlpha() -> r
    void setLineWidth(float) -> b
    float getLineWidth() -> s
    boolean isDrawFilledEnabled() -> t
com.cn7782.management.android.activity.charting.MarkerView -> com.cn7782.management.android.activity.charting.aa:
    float mXOffset -> a
    float mYOffset -> b
    void setupLayoutResource(int) -> setupLayoutResource
    void draw(android.graphics.Canvas,float,float) -> a
    void refreshContent(com.cn7782.management.android.activity.charting.Entry,int) -> a
    float getXOffset() -> getXOffset
    float getYOffset() -> getYOffset
com.cn7782.management.android.activity.charting.OnChartValueSelectedListener -> com.cn7782.management.android.activity.charting.ab:
    void onValueSelected(com.cn7782.management.android.activity.charting.Entry,int) -> a
    void onNothingSelected() -> a
com.cn7782.management.android.activity.charting.OnDrawListener -> com.cn7782.management.android.activity.charting.ac:
    void onEntryAdded(com.cn7782.management.android.activity.charting.Entry) -> a
    void onEntryMoved(com.cn7782.management.android.activity.charting.Entry) -> b
    void onDrawFinished(com.cn7782.management.android.activity.charting.DataSet) -> a
com.cn7782.management.android.activity.charting.PieChart -> com.cn7782.management.android.activity.charting.PieChart:
    android.graphics.RectF mCircleBox -> b
    float[] mDrawAngles -> c
    float[] mAbsoluteAngles -> d
    boolean mDrawHole -> e
    java.lang.String mCenterText -> f
    float mHoleRadiusPercent -> g
    float mTransparentCircleRadius -> h
    boolean mDrawCenterText -> i
    boolean mDrawXVals -> j
    boolean mUsePercentValues -> k
    android.graphics.Paint mHolePaint -> l
    android.graphics.Paint mCenterTextPaint -> m
    void init() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void prepare() -> prepare
    void prepareContentRect() -> z
    void calcMinMax(boolean) -> a
    void calculateOffsets() -> g
    void calcAngles() -> i
    void drawHighlights() -> b
    void drawData() -> c
    void drawHole() -> j
    void drawCenterText() -> k
    void drawValues() -> e
    void drawAdditional() -> f
    float calcAngle(float) -> b
    int getIndexForAngle(float) -> a
    float[] getDrawAngles() -> getDrawAngles
    float[] getAbsoluteAngles() -> getAbsoluteAngles
    void setDrawHoleEnabled(boolean) -> setDrawHoleEnabled
    void setCenterText(java.lang.String) -> setCenterText
    java.lang.String getCenterText() -> getCenterText
    void setDrawCenterText(boolean) -> setDrawCenterText
    void setUsePercentValues(boolean) -> setUsePercentValues
    void setDrawXValues(boolean) -> setDrawXValues
    float getRadius() -> getRadius
    android.graphics.RectF getCircleBox() -> getCircleBox
    android.graphics.PointF getCenterCircleBox() -> getCenterCircleBox
    void setCenterTextTypeface(android.graphics.Typeface) -> setCenterTextTypeface
    void setCenterTextSize(float) -> setCenterTextSize
    void setHoleRadius(float) -> setHoleRadius
    void setTransparentCircleRadius(float) -> setTransparentCircleRadius
    void setPaint(android.graphics.Paint,int) -> setPaint
    android.graphics.Paint getPaint(int) -> getPaint
com.cn7782.management.android.activity.charting.PieData -> com.cn7782.management.android.activity.charting.ad:
    java.util.ArrayList toArrayList(com.cn7782.management.android.activity.charting.PieDataSet) -> a
com.cn7782.management.android.activity.charting.PieDataSet -> com.cn7782.management.android.activity.charting.ae:
    float mSliceSpace -> a
    float mShift -> f
    com.cn7782.management.android.activity.charting.DataSet copy() -> copy
    void setSliceSpace(float) -> a
    float getSliceSpace() -> b
    float getSelectionShift() -> c
com.cn7782.management.android.activity.charting.PieRadarChartBase -> com.cn7782.management.android.activity.charting.af:
    float mRotationAngle -> a
    boolean mRotateEnabled -> b
    android.view.View$OnTouchListener mListener -> c
    float mStartAngle -> d
    void init() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void prepare() -> prepare
    void notifyDataSetChanged() -> notifyDataSetChanged
    void drawAdditional() -> f
    void applyCalculatedOffsets() -> d
    void setStartAngle(float,float) -> a
    void updateRotation(float,float) -> b
    float getAngleForPoint(float,float) -> c
    float distanceToCenter(float,float) -> d
    int getIndexForAngle(float) -> a
    void setRotationAngle(float) -> setRotationAngle
    float getRotationAngle() -> getRotationAngle
    void setRotationEnabled(boolean) -> setRotationEnabled
    boolean isRotationEnabled() -> h
    float getDiameter() -> getDiameter
    float getRadius() -> getRadius
    void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
com.cn7782.management.android.activity.charting.PieRadarChartTouchListener -> com.cn7782.management.android.activity.charting.ag:
    com.cn7782.management.android.activity.charting.PieRadarChartBase mChart -> a
    android.view.GestureDetector mGestureDetector -> b
    com.cn7782.management.android.activity.charting.Highlight mLastHighlight -> c
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.cn7782.management.android.activity.charting.PointD -> com.cn7782.management.android.activity.charting.PointD:
    double x -> x
    double y -> y
    java.lang.String toString() -> toString
com.cn7782.management.android.activity.charting.RadarChart -> com.cn7782.management.android.activity.charting.ah:
    android.graphics.Paint mWebPaint -> d
    float mWebLineWidth -> e
    float mInnerWebLineWidth -> f
    int mWebColor -> g
    int mWebColorInner -> h
    int mWebAlpha -> i
    boolean mDrawYLabels -> b
    boolean mDrawXLabels -> c
    com.cn7782.management.android.activity.charting.YLabels mYLabels -> j
    com.cn7782.management.android.activity.charting.XLabels mXLabels -> k
    void init() -> a
    void calcMinMax(boolean) -> a
    void prepare() -> prepare
    void calculateOffsets() -> g
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawWeb() -> i
    void drawData() -> c
    void drawLimitLines() -> j
    void prepareYLabels() -> k
    void drawYLabels() -> l
    void prepareXLabels() -> m
    void drawXLabels() -> n
    void drawValues() -> e
    void drawHighlights() -> b
    android.graphics.PointF getPosition(android.graphics.PointF,float,float) -> a
    float getFactor() -> getFactor
    float getSliceAngle() -> getSliceAngle
    int getIndexForAngle(float) -> a
    com.cn7782.management.android.activity.charting.YLabels getYLabels() -> getYLabels
    com.cn7782.management.android.activity.charting.XLabels getXLabels() -> getXLabels
    void setWebLineWidth(float) -> setWebLineWidth
    void setWebLineWidthInner(float) -> setWebLineWidthInner
    void setWebAlpha(int) -> setWebAlpha
    void setWebColor(int) -> setWebColor
    void setWebColorInner(int) -> setWebColorInner
    void setDrawYLabels(boolean) -> setDrawYLabels
    void setDrawXLabels(boolean) -> setDrawXLabels
    float getRadius() -> getRadius
    void setPaint(android.graphics.Paint,int) -> setPaint
    android.graphics.Paint getPaint(int) -> getPaint
com.cn7782.management.android.activity.charting.RadarData -> com.cn7782.management.android.activity.charting.ai:
com.cn7782.management.android.activity.charting.RadarDataSet -> com.cn7782.management.android.activity.charting.aj:
    com.cn7782.management.android.activity.charting.DataSet copy() -> copy
com.cn7782.management.android.activity.charting.ScatterChart -> com.cn7782.management.android.activity.charting.ScatterChart:
    void drawData() -> c
    void drawValues() -> e
    void drawHighlights() -> b
    void drawAdditional() -> f
    com.cn7782.management.android.activity.charting.ScatterChart$ScatterShape[] getAllPossibleShapes() -> getAllPossibleShapes
com.cn7782.management.android.activity.charting.ScatterChart$ScatterShape -> com.cn7782.management.android.activity.charting.ScatterChart$ScatterShape:
    com.cn7782.management.android.activity.charting.ScatterChart$ScatterShape CROSS -> CROSS
    com.cn7782.management.android.activity.charting.ScatterChart$ScatterShape TRIANGLE -> TRIANGLE
    com.cn7782.management.android.activity.charting.ScatterChart$ScatterShape CIRCLE -> CIRCLE
    com.cn7782.management.android.activity.charting.ScatterChart$ScatterShape SQUARE -> SQUARE
    com.cn7782.management.android.activity.charting.ScatterChart$ScatterShape CUSTOM -> CUSTOM
    com.cn7782.management.android.activity.charting.ScatterChart$ScatterShape[] $VALUES -> a
    com.cn7782.management.android.activity.charting.ScatterChart$ScatterShape[] values() -> values
    com.cn7782.management.android.activity.charting.ScatterChart$ScatterShape valueOf(java.lang.String) -> valueOf
com.cn7782.management.android.activity.charting.ScatterData -> com.cn7782.management.android.activity.charting.ak:
com.cn7782.management.android.activity.charting.ScatterDataSet -> com.cn7782.management.android.activity.charting.al:
    float mShapeSize -> f
    com.cn7782.management.android.activity.charting.ScatterChart$ScatterShape mScatterShape -> g
    android.graphics.Path mCustomScatterPath -> h
    com.cn7782.management.android.activity.charting.DataSet copy() -> copy
    float getScatterShapeSize() -> b
    com.cn7782.management.android.activity.charting.ScatterChart$ScatterShape getScatterShape() -> c
    android.graphics.Path getCustomScatterShape() -> d
com.cn7782.management.android.activity.charting.SelInfo -> com.cn7782.management.android.activity.charting.SelInfo:
    float val -> val
    int dataSetIndex -> dataSetIndex
com.cn7782.management.android.activity.charting.Utils -> com.cn7782.management.android.activity.charting.am:
    android.content.res.Resources mRes -> a
    int[] POW_10 -> b
    void init(android.content.res.Resources) -> a
    float convertDpToPixel(float) -> a
    int calcTextWidth(android.graphics.Paint,java.lang.String) -> a
    int calcTextHeight(android.graphics.Paint,java.lang.String) -> b
    int getFormatDigits(float) -> b
    java.lang.String formatNumber(float,int,boolean) -> a
    float roundToNextSignificant(double) -> a
    int[] convertIntegers(java.util.ArrayList) -> a
    java.lang.String[] convertStrings(java.util.ArrayList) -> b
    double nextUp(double) -> b
    int getClosestDataSetIndex(java.util.ArrayList,float) -> a
com.cn7782.management.android.activity.charting.Vector3 -> com.cn7782.management.android.activity.charting.Vector3:
    float x -> x
    float y -> y
    float z -> z
    com.cn7782.management.android.activity.charting.Vector3 ZERO -> ZERO
    com.cn7782.management.android.activity.charting.Vector3 UNIT_X -> UNIT_X
    com.cn7782.management.android.activity.charting.Vector3 UNIT_Y -> UNIT_Y
    com.cn7782.management.android.activity.charting.Vector3 UNIT_Z -> UNIT_Z
    void add(com.cn7782.management.android.activity.charting.Vector3) -> add
    void add(float,float,float) -> add
    void subtract(com.cn7782.management.android.activity.charting.Vector3) -> subtract
    void subtractMultiple(com.cn7782.management.android.activity.charting.Vector3,float) -> subtractMultiple
    void multiply(float) -> multiply
    void multiply(com.cn7782.management.android.activity.charting.Vector3) -> multiply
    void divide(float) -> divide
    void set(com.cn7782.management.android.activity.charting.Vector3) -> set
    void set(float,float,float) -> set
    float dot(com.cn7782.management.android.activity.charting.Vector3) -> dot
    com.cn7782.management.android.activity.charting.Vector3 cross(com.cn7782.management.android.activity.charting.Vector3) -> cross
    float length() -> length
    float length2() -> length2
    float distance2(com.cn7782.management.android.activity.charting.Vector3) -> distance2
    float normalize() -> normalize
    void zero() -> zero
    boolean pointsInSameDirection(com.cn7782.management.android.activity.charting.Vector3) -> pointsInSameDirection
com.cn7782.management.android.activity.charting.XLabels -> com.cn7782.management.android.activity.charting.XLabels:
    int mLabelWidth -> mLabelWidth
    int mLabelHeight -> mLabelHeight
    int mSpaceBetweenLabels -> b
    int mXAxisLabelModulus -> mXAxisLabelModulus
    boolean mCenterXAxisLabels -> c
    boolean mAvoidFirstLastClipping -> d
    boolean mAdjustXAxisLabels -> a
    com.cn7782.management.android.activity.charting.XLabels$XLabelPosition mPosition -> e
    boolean isCenterXLabelsEnabled() -> isCenterXLabelsEnabled
    void setCenterXLabelText(boolean) -> setCenterXLabelText
    void setAdjustXLabels(boolean) -> setAdjustXLabels
    boolean isAdjustXLabelsEnabled() -> isAdjustXLabelsEnabled
    com.cn7782.management.android.activity.charting.XLabels$XLabelPosition getPosition() -> getPosition
    void setPosition(com.cn7782.management.android.activity.charting.XLabels$XLabelPosition) -> setPosition
    void setSpaceBetweenLabels(int) -> setSpaceBetweenLabels
    int getSpaceBetweenLabels() -> getSpaceBetweenLabels
    void setAvoidFirstLastClipping(boolean) -> setAvoidFirstLastClipping
    boolean isAvoidFirstLastClippingEnabled() -> isAvoidFirstLastClippingEnabled
com.cn7782.management.android.activity.charting.XLabels$XLabelPosition -> com.cn7782.management.android.activity.charting.XLabels$XLabelPosition:
    com.cn7782.management.android.activity.charting.XLabels$XLabelPosition TOP -> TOP
    com.cn7782.management.android.activity.charting.XLabels$XLabelPosition BOTTOM -> BOTTOM
    com.cn7782.management.android.activity.charting.XLabels$XLabelPosition BOTH_SIDED -> BOTH_SIDED
    com.cn7782.management.android.activity.charting.XLabels$XLabelPosition TOP_INSIDE -> TOP_INSIDE
    com.cn7782.management.android.activity.charting.XLabels$XLabelPosition BOTTOM_INSIDE -> BOTTOM_INSIDE
    com.cn7782.management.android.activity.charting.XLabels$XLabelPosition[] $VALUES -> a
    com.cn7782.management.android.activity.charting.XLabels$XLabelPosition[] values() -> values
    com.cn7782.management.android.activity.charting.XLabels$XLabelPosition valueOf(java.lang.String) -> valueOf
com.cn7782.management.android.activity.charting.YLabelFormatter -> com.cn7782.management.android.activity.charting.an:
    java.lang.String getFormattedLabel(float) -> a
com.cn7782.management.android.activity.charting.YLabels -> com.cn7782.management.android.activity.charting.YLabels:
    float[] mEntries -> mEntries
    int mEntryCount -> mEntryCount
    int mDecimals -> mDecimals
    int mLabelCount -> c
    boolean mDrawUnitsInLabels -> d
    boolean mDrawTopYLabelEntry -> e
    boolean mSeparateTousands -> a
    boolean mShowOnlyMinMax -> b
    com.cn7782.management.android.activity.charting.YLabelFormatter mFormatter -> f
    com.cn7782.management.android.activity.charting.YLabels$YLabelPosition mPosition -> g
    com.cn7782.management.android.activity.charting.YLabels$YLabelPosition getPosition() -> getPosition
    void setPosition(com.cn7782.management.android.activity.charting.YLabels$YLabelPosition) -> setPosition
    boolean isDrawUnitsInYLabelEnabled() -> isDrawUnitsInYLabelEnabled
    void setDrawUnitsInYLabel(boolean) -> setDrawUnitsInYLabel
    boolean isDrawTopYLabelEntryEnabled() -> isDrawTopYLabelEntryEnabled
    void setDrawTopYLabelEntry(boolean) -> setDrawTopYLabelEntry
    void setLabelCount(int) -> setLabelCount
    int getLabelCount() -> getLabelCount
    void setSeparateThousands(boolean) -> setSeparateThousands
    boolean isSeparateThousandsEnabled() -> isSeparateThousandsEnabled
    com.cn7782.management.android.activity.charting.YLabelFormatter getFormatter() -> getFormatter
    void setFormatter(com.cn7782.management.android.activity.charting.YLabelFormatter) -> setFormatter
    void setShowOnlyMinMax(boolean) -> setShowOnlyMinMax
    boolean isShowOnlyMinMaxEnabled() -> isShowOnlyMinMaxEnabled
com.cn7782.management.android.activity.charting.YLabels$YLabelPosition -> com.cn7782.management.android.activity.charting.YLabels$YLabelPosition:
    com.cn7782.management.android.activity.charting.YLabels$YLabelPosition LEFT -> LEFT
    com.cn7782.management.android.activity.charting.YLabels$YLabelPosition RIGHT -> RIGHT
    com.cn7782.management.android.activity.charting.YLabels$YLabelPosition BOTH_SIDED -> BOTH_SIDED
    com.cn7782.management.android.activity.charting.YLabels$YLabelPosition LEFT_INSIDE -> LEFT_INSIDE
    com.cn7782.management.android.activity.charting.YLabels$YLabelPosition RIGHT_INSIDE -> RIGHT_INSIDE
    com.cn7782.management.android.activity.charting.YLabels$YLabelPosition[] $VALUES -> a
    com.cn7782.management.android.activity.charting.YLabels$YLabelPosition[] values() -> values
    com.cn7782.management.android.activity.charting.YLabels$YLabelPosition valueOf(java.lang.String) -> valueOf
com.cn7782.management.android.activity.controller.AppManager -> com.cn7782.management.android.activity.controller.a:
    java.util.Stack activityStack -> a
    com.cn7782.management.android.activity.controller.AppManager appManager -> b
    com.cn7782.management.android.activity.controller.AppManager getAppManager() -> a
    void addActivity(android.app.Activity) -> a
    void finishActivity(android.app.Activity) -> b
    void finishAllActivity() -> b
com.cn7782.management.android.activity.controller.BitmapWorkerTask -> com.cn7782.management.android.activity.controller.b:
    java.lang.ref.WeakReference imageViewReference -> a
    java.lang.String path -> b
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cn7782.management.android.activity.controller.CalendarViewPagerLisenter -> com.cn7782.management.android.activity.controller.CalendarViewPagerLisenter:
    com.cn7782.management.android.activity.controller.CalendarViewPagerLisenter$SildeDirection mDirection -> b
    int mCurrIndex -> a
    com.cn7782.management.android.activity.tabview.CalendarView[] mShowViews -> c
    void onPageSelected(int) -> onPageSelected
    void updateCalendarView(int) -> a
    void measureDirection(int) -> b
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.cn7782.management.android.activity.controller.CalendarViewPagerLisenter$SildeDirection -> com.cn7782.management.android.activity.controller.CalendarViewPagerLisenter$SildeDirection:
    com.cn7782.management.android.activity.controller.CalendarViewPagerLisenter$SildeDirection RIGHT -> RIGHT
    com.cn7782.management.android.activity.controller.CalendarViewPagerLisenter$SildeDirection LEFT -> LEFT
    com.cn7782.management.android.activity.controller.CalendarViewPagerLisenter$SildeDirection NO_SILDE -> NO_SILDE
    com.cn7782.management.android.activity.controller.CalendarViewPagerLisenter$SildeDirection[] $VALUES -> a
    com.cn7782.management.android.activity.controller.CalendarViewPagerLisenter$SildeDirection[] values() -> values
    com.cn7782.management.android.activity.controller.CalendarViewPagerLisenter$SildeDirection valueOf(java.lang.String) -> valueOf
com.cn7782.management.android.activity.controller.CrashHandler -> com.cn7782.management.android.activity.controller.CrashHandler:
    java.lang.String TAG -> TAG
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> a
    com.cn7782.management.android.activity.controller.CrashHandler INSTANCE -> b
    android.content.Context mContext -> c
    java.util.Map infos -> d
    java.text.DateFormat formatter -> e
    com.cn7782.management.android.activity.controller.CrashHandler getInstance() -> getInstance
    void init(android.content.Context) -> init
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean handleException(java.lang.Throwable) -> a
    void collectDeviceInfo(android.content.Context) -> collectDeviceInfo
    java.lang.String saveCrashInfo2File(java.lang.Throwable) -> b
    android.content.Context access$000(com.cn7782.management.android.activity.controller.CrashHandler) -> a
com.cn7782.management.android.activity.controller.CrashHandler$1 -> com.cn7782.management.android.activity.controller.c:
    com.cn7782.management.android.activity.controller.CrashHandler this$0 -> a
    void run() -> run
com.cn7782.management.android.activity.controller.FallDownController -> com.cn7782.management.android.activity.controller.d:
    android.content.Context mContext -> a
    android.os.Handler mHandler -> b
    com.cn7782.management.android.activity.controller.FallDownController fallDownCtl -> c
    android.os.Vibrator vib -> d
    java.lang.String msgContent -> e
    void setContext(android.content.Context) -> a
    void setHandler(android.os.Handler) -> a
    com.cn7782.management.android.activity.controller.FallDownController getInstance() -> a
    void Vibrate(long[],boolean) -> a
    void callFallDownWarn(boolean) -> a
    boolean sendMsgInBg(java.lang.String) -> a
com.cn7782.management.android.activity.controller.FrameAnimationController -> com.cn7782.management.android.activity.controller.FrameAnimationController:
    int ANIMATION_FRAME_DURATION -> ANIMATION_FRAME_DURATION
    android.os.Handler mHandler -> a
    void requestAnimationFrame(java.lang.Runnable) -> requestAnimationFrame
    void requestFrameDelay(java.lang.Runnable,long) -> requestFrameDelay
com.cn7782.management.android.activity.controller.FrameAnimationController$1 -> com.cn7782.management.android.activity.controller.e:
com.cn7782.management.android.activity.controller.FrameAnimationController$AnimationHandler -> com.cn7782.management.android.activity.controller.f:
    void handleMessage(android.os.Message) -> handleMessage
com.cn7782.management.android.activity.controller.SensorController -> com.cn7782.management.android.activity.controller.SensorController:
    android.content.Context mContext -> a
    com.cn7782.management.android.activity.controller.SensorController sensorCtl -> b
    float localGValue -> c
    java.util.List sensors -> d
    android.hardware.Sensor sensor -> e
    android.hardware.SensorManager sensorManager -> f
    float acceleration -> g
    java.util.LinkedList gqueue -> h
    boolean control -> control
    android.os.CountDownTimer countTimer -> i
    boolean isBgCounting -> j
    boolean isLocalGValueGot -> k
    java.util.LinkedList gvalueList -> l
    long lastEventTime -> m
    float g -> n
    boolean isInCheck -> o
    android.os.Handler mHandler -> p
    android.hardware.SensorEventListener sensorListener -> q
    boolean checkValue(android.hardware.SensorEvent) -> a
    void sendMsgToNotificationCenter() -> a
    com.cn7782.management.android.activity.controller.SensorController getInstance() -> getInstance
    void setContext(android.content.Context) -> setContext
    void openSensorListiner() -> openSensorListiner
    void closeSensor() -> closeSensor
    long access$002(com.cn7782.management.android.activity.controller.SensorController,long) -> a
    boolean access$100(com.cn7782.management.android.activity.controller.SensorController,android.hardware.SensorEvent) -> a
    boolean access$200(com.cn7782.management.android.activity.controller.SensorController) -> a
    float access$302(com.cn7782.management.android.activity.controller.SensorController,float) -> a
    float access$402(com.cn7782.management.android.activity.controller.SensorController,float) -> b
    float access$300(com.cn7782.management.android.activity.controller.SensorController) -> b
    boolean access$500(com.cn7782.management.android.activity.controller.SensorController) -> c
    float access$400(com.cn7782.management.android.activity.controller.SensorController) -> d
    java.util.LinkedList access$600(com.cn7782.management.android.activity.controller.SensorController) -> e
    boolean access$700(com.cn7782.management.android.activity.controller.SensorController) -> f
    android.content.Context access$800(com.cn7782.management.android.activity.controller.SensorController) -> g
    void access$900(com.cn7782.management.android.activity.controller.SensorController) -> h
    java.util.LinkedList access$1000(com.cn7782.management.android.activity.controller.SensorController) -> i
    float access$1102(com.cn7782.management.android.activity.controller.SensorController,float) -> c
    boolean access$502(com.cn7782.management.android.activity.controller.SensorController,boolean) -> a
    float access$1100(com.cn7782.management.android.activity.controller.SensorController) -> j
    boolean access$702(com.cn7782.management.android.activity.controller.SensorController,boolean) -> b
    android.os.CountDownTimer access$1200(com.cn7782.management.android.activity.controller.SensorController) -> k
    boolean access$202(com.cn7782.management.android.activity.controller.SensorController,boolean) -> c
    android.os.Handler access$1300(com.cn7782.management.android.activity.controller.SensorController) -> l
com.cn7782.management.android.activity.controller.SensorController$1 -> com.cn7782.management.android.activity.controller.g:
    com.cn7782.management.android.activity.controller.SensorController this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.cn7782.management.android.activity.controller.SensorController$2 -> com.cn7782.management.android.activity.controller.h:
    com.cn7782.management.android.activity.controller.SensorController this$0 -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void getLocalGValue(float) -> a
    boolean newFalldownCheck() -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.cn7782.management.android.activity.controller.SensorController$3 -> com.cn7782.management.android.activity.controller.i:
    com.cn7782.management.android.activity.controller.SensorController this$0 -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.cn7782.management.android.activity.controller.ShakeListener -> com.cn7782.management.android.activity.controller.j:
    android.hardware.SensorManager sensorManager -> a
    android.hardware.Sensor sensor -> b
    android.os.Vibrator vibrator -> c
    com.cn7782.management.android.activity.controller.ShakeListener$OnShakeListener onShakeListener -> d
    android.content.Context mContext -> e
    float lastX -> f
    float lastY -> g
    float lastZ -> h
    long lastUpdateTime -> i
    com.cn7782.management.android.activity.controller.ShakeListener mShakeListener -> j
    com.cn7782.management.android.activity.controller.ShakeListener getInstance(android.content.Context) -> a
    void start() -> a
    void stop() -> b
    void setOnShakeListener(com.cn7782.management.android.activity.controller.ShakeListener$OnShakeListener) -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.cn7782.management.android.activity.controller.ShakeListener$OnShakeListener -> com.cn7782.management.android.activity.controller.k:
    void onShake() -> a
com.cn7782.management.android.activity.controller.SoundManager -> com.cn7782.management.android.activity.controller.l:
    android.media.SoundPool mSoundPool -> a
    java.util.HashMap mSoundPoolMap -> b
    android.media.AudioManager mAudioManager -> c
    android.content.Context mContext -> d
    void initSounds(android.content.Context) -> a
    void addSound(int,int) -> a
    void playSound(int) -> a
com.cn7782.management.android.activity.datetimepickers.AccessibleDateAnimator -> com.cn7782.management.android.activity.datetimepickers.AccessibleDateAnimator:
    long mDateMillis -> a
    void setDateMillis(long) -> setDateMillis
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
com.cn7782.management.android.activity.datetimepickers.AccessibleLinearLayout -> com.cn7782.management.android.activity.datetimepickers.AccessibleLinearLayout:
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
com.cn7782.management.android.activity.datetimepickers.AccessibleTextView -> com.cn7782.management.android.activity.datetimepickers.AccessibleTextView:
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
com.cn7782.management.android.activity.datetimepickers.AmPmCirclesView -> com.cn7782.management.android.activity.datetimepickers.a:
    android.graphics.Paint mPaint -> a
    int mWhite -> b
    int mAmPmTextColor -> c
    int mBlue -> d
    float mCircleRadiusMultiplier -> e
    float mAmPmCircleRadiusMultiplier -> f
    java.lang.String mAmText -> g
    java.lang.String mPmText -> h
    boolean mIsInitialized -> i
    boolean mDrawValuesReady -> j
    int mAmPmCircleRadius -> k
    int mAmXCenter -> l
    int mPmXCenter -> m
    int mAmPmYCenter -> n
    int mAmOrPm -> o
    int mAmOrPmPressed -> p
    void initialize(android.content.Context,int) -> a
    void setAmOrPm(int) -> setAmOrPm
    void setAmOrPmPressed(int) -> setAmOrPmPressed
    int getIsTouchingAmOrPm(float,float) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.cn7782.management.android.activity.datetimepickers.CircleView -> com.cn7782.management.android.activity.datetimepickers.b:
    android.graphics.Paint mPaint -> a
    boolean mIs24HourMode -> b
    int mWhite -> c
    int mBlack -> d
    float mCircleRadiusMultiplier -> e
    float mAmPmCircleRadiusMultiplier -> f
    boolean mIsInitialized -> g
    boolean mDrawValuesReady -> h
    int mXCenter -> i
    int mYCenter -> j
    int mCircleRadius -> k
    void initialize(android.content.Context,boolean) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.cn7782.management.android.activity.datetimepickers.DatePickerController -> com.cn7782.management.android.activity.datetimepickers.c:
    void onYearSelected(int) -> a
    void onDayOfMonthSelected(int,int,int) -> a
    void registerOnDateChangedListener(com.cn7782.management.android.activity.datetimepickers.DatePickerDialog$OnDateChangedListener) -> a
    com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay getSelectedDay() -> a
    int getFirstDayOfWeek() -> b
    int getMinYear() -> c
    int getMaxYear() -> d
    void tryVibrate() -> e
com.cn7782.management.android.activity.datetimepickers.DatePickerDialog -> com.cn7782.management.android.activity.datetimepickers.d:
    java.text.SimpleDateFormat YEAR_FORMAT -> a
    java.text.SimpleDateFormat DAY_FORMAT -> b
    java.util.Calendar mCalendar -> c
    com.cn7782.management.android.activity.datetimepickers.DatePickerDialog$OnDateSetListener mCallBack -> d
    java.util.HashSet mListeners -> e
    com.cn7782.management.android.activity.datetimepickers.AccessibleDateAnimator mAnimator -> f
    android.widget.TextView mDayOfWeekView -> g
    android.widget.LinearLayout mMonthAndDayView -> h
    android.widget.TextView mSelectedMonthTextView -> i
    android.widget.TextView mSelectedDayTextView -> j
    android.widget.TextView mYearView -> k
    com.cn7782.management.android.activity.datetimepickers.DayPickerView mDayPickerView -> l
    com.cn7782.management.android.activity.datetimepickers.YearPickerView mYearPickerView -> m
    android.widget.Button mDoneButton -> n
    int mCurrentView -> o
    int mWeekStart -> p
    int mMinYear -> q
    int mMaxYear -> r
    android.os.Vibrator mVibrator -> s
    long mLastVibrate -> t
    boolean mDelayAnimation -> u
    java.lang.String mDayPickerDescription -> v
    java.lang.String mSelectDay -> w
    java.lang.String mYearPickerDescription -> x
    java.lang.String mSelectYear -> y
    com.cn7782.management.android.activity.datetimepickers.DatePickerDialog newInstance(com.cn7782.management.android.activity.datetimepickers.DatePickerDialog$OnDateSetListener,int,int,int) -> a
    void initialize(com.cn7782.management.android.activity.datetimepickers.DatePickerDialog$OnDateSetListener,int,int,int) -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setCurrentView(int) -> b
    void updateDisplay(boolean) -> a
    void adjustDayInMonthIfNeeded(int,int) -> a
    void onClick(android.view.View) -> onClick
    void onYearSelected(int) -> a
    void onDayOfMonthSelected(int,int,int) -> a
    void updatePickers() -> f
    com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay getSelectedDay() -> a
    int getMinYear() -> c
    int getMaxYear() -> d
    int getFirstDayOfWeek() -> b
    void registerOnDateChangedListener(com.cn7782.management.android.activity.datetimepickers.DatePickerDialog$OnDateChangedListener) -> a
    void tryVibrate() -> e
    com.cn7782.management.android.activity.datetimepickers.DatePickerDialog$OnDateSetListener access$000(com.cn7782.management.android.activity.datetimepickers.DatePickerDialog) -> a
    java.util.Calendar access$100(com.cn7782.management.android.activity.datetimepickers.DatePickerDialog) -> b
com.cn7782.management.android.activity.datetimepickers.DatePickerDialog$1 -> com.cn7782.management.android.activity.datetimepickers.e:
    com.cn7782.management.android.activity.datetimepickers.DatePickerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.datetimepickers.DatePickerDialog$OnDateChangedListener -> com.cn7782.management.android.activity.datetimepickers.f:
    void onDateChanged() -> onDateChanged
com.cn7782.management.android.activity.datetimepickers.DatePickerDialog$OnDateSetListener -> com.cn7782.management.android.activity.datetimepickers.g:
    void onDateSet(com.cn7782.management.android.activity.datetimepickers.DatePickerDialog,int,int,int) -> a
com.cn7782.management.android.activity.datetimepickers.DateTimePicker -> com.cn7782.management.android.activity.datetimepickers.h:
    android.widget.NumberPicker mDateSpinner -> a
    android.widget.NumberPicker mHourSpinner -> b
    android.widget.NumberPicker mMinuteSpinner -> c
    java.util.Calendar mDate -> d
    int mHour -> e
    int mMinute -> f
    java.lang.String[] mDateDisplayValues -> g
    com.cn7782.management.android.activity.datetimepickers.DateTimePicker$OnDateTimeChangedListener mOnDateTimeChangedListener -> h
    android.widget.NumberPicker$OnValueChangeListener mOnDateChangedListener -> i
    android.widget.NumberPicker$OnValueChangeListener mOnHourChangedListener -> j
    android.widget.NumberPicker$OnValueChangeListener mOnMinuteChangedListener -> k
    void updateDateControl() -> a
    void setOnDateTimeChangedListener(com.cn7782.management.android.activity.datetimepickers.DateTimePicker$OnDateTimeChangedListener) -> setOnDateTimeChangedListener
    void onDateTimeChanged() -> b
    java.util.Calendar access$000(com.cn7782.management.android.activity.datetimepickers.DateTimePicker) -> a
    void access$100(com.cn7782.management.android.activity.datetimepickers.DateTimePicker) -> b
    void access$200(com.cn7782.management.android.activity.datetimepickers.DateTimePicker) -> c
    int access$302(com.cn7782.management.android.activity.datetimepickers.DateTimePicker,int) -> a
    android.widget.NumberPicker access$400(com.cn7782.management.android.activity.datetimepickers.DateTimePicker) -> d
    int access$502(com.cn7782.management.android.activity.datetimepickers.DateTimePicker,int) -> b
    android.widget.NumberPicker access$600(com.cn7782.management.android.activity.datetimepickers.DateTimePicker) -> e
com.cn7782.management.android.activity.datetimepickers.DateTimePicker$1 -> com.cn7782.management.android.activity.datetimepickers.i:
    com.cn7782.management.android.activity.datetimepickers.DateTimePicker this$0 -> a
    void onValueChange(android.widget.NumberPicker,int,int) -> onValueChange
com.cn7782.management.android.activity.datetimepickers.DateTimePicker$2 -> com.cn7782.management.android.activity.datetimepickers.j:
    com.cn7782.management.android.activity.datetimepickers.DateTimePicker this$0 -> a
    void onValueChange(android.widget.NumberPicker,int,int) -> onValueChange
com.cn7782.management.android.activity.datetimepickers.DateTimePicker$3 -> com.cn7782.management.android.activity.datetimepickers.k:
    com.cn7782.management.android.activity.datetimepickers.DateTimePicker this$0 -> a
    void onValueChange(android.widget.NumberPicker,int,int) -> onValueChange
com.cn7782.management.android.activity.datetimepickers.DateTimePicker$OnDateTimeChangedListener -> com.cn7782.management.android.activity.datetimepickers.l:
    void onDateTimeChanged(com.cn7782.management.android.activity.datetimepickers.DateTimePicker,int,int,int,int,int) -> a
com.cn7782.management.android.activity.datetimepickers.DateTimePickerDialog -> com.cn7782.management.android.activity.datetimepickers.m:
    com.cn7782.management.android.activity.datetimepickers.DateTimePicker mDateTimePicker -> a
    java.util.Calendar mDate -> b
    com.cn7782.management.android.activity.datetimepickers.DateTimePickerDialog$OnDateTimeSetListener mOnDateTimeSetListener -> c
    java.lang.String title -> d
    void updateTitle(long) -> a
    void setOnDateTimeSetListener(com.cn7782.management.android.activity.datetimepickers.DateTimePickerDialog$OnDateTimeSetListener) -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    java.util.Calendar access$000(com.cn7782.management.android.activity.datetimepickers.DateTimePickerDialog) -> a
    void access$100(com.cn7782.management.android.activity.datetimepickers.DateTimePickerDialog,long) -> a
com.cn7782.management.android.activity.datetimepickers.DateTimePickerDialog$1 -> com.cn7782.management.android.activity.datetimepickers.n:
    com.cn7782.management.android.activity.datetimepickers.DateTimePickerDialog this$0 -> a
    void onDateTimeChanged(com.cn7782.management.android.activity.datetimepickers.DateTimePicker,int,int,int,int,int) -> a
com.cn7782.management.android.activity.datetimepickers.DateTimePickerDialog$OnDateTimeSetListener -> com.cn7782.management.android.activity.datetimepickers.o:
    void OnDateTimeSet(android.app.AlertDialog,long) -> a
com.cn7782.management.android.activity.datetimepickers.DayPickerView -> com.cn7782.management.android.activity.datetimepickers.DayPickerView:
    int DAYS_PER_WEEK -> DAYS_PER_WEEK
    int LIST_TOP_OFFSET -> LIST_TOP_OFFSET
    int mNumWeeks -> a
    boolean mShowWeekNumber -> b
    int mDaysPerWeek -> c
    java.text.SimpleDateFormat YEAR_FORMAT -> o
    float mFriction -> d
    android.content.Context mContext -> e
    android.os.Handler mHandler -> f
    com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay mSelectedDay -> g
    com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter mAdapter -> h
    com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay mTempDay -> i
    float mScale -> p
    int mCurrentMonthDisplayed -> j
    long mPreviousScrollPosition -> k
    int mPreviousScrollState -> l
    int mCurrentScrollState -> m
    com.cn7782.management.android.activity.datetimepickers.DatePickerController mController -> q
    boolean mPerformingScroll -> r
    com.cn7782.management.android.activity.datetimepickers.DayPickerView$ScrollStateRunnable mScrollStateChangedRunnable -> n
    void init(android.content.Context) -> init
    void onChange() -> onChange
    void setUpAdapter() -> a
    void setUpListView() -> b
    boolean goTo(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay,boolean,boolean,boolean) -> goTo
    void postSetSelection(int) -> postSetSelection
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void setMonthDisplayed(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay) -> setMonthDisplayed
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    int getMostVisiblePosition() -> getMostVisiblePosition
    void onDateChanged() -> onDateChanged
    com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay findAccessibilityFocus() -> c
    boolean restoreAccessibilityFocus(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay) -> a
    void layoutChildren() -> layoutChildren
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    java.lang.String getMonthAndYearString(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay) -> b
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
com.cn7782.management.android.activity.datetimepickers.DayPickerView$1 -> com.cn7782.management.android.activity.datetimepickers.p:
    int val$position -> a
    com.cn7782.management.android.activity.datetimepickers.DayPickerView this$0 -> b
    void run() -> run
com.cn7782.management.android.activity.datetimepickers.DayPickerView$ScrollStateRunnable -> com.cn7782.management.android.activity.datetimepickers.q:
    int mNewState -> b
    com.cn7782.management.android.activity.datetimepickers.DayPickerView this$0 -> a
    void doScrollStateChange(android.widget.AbsListView,int) -> a
    void run() -> run
com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout -> com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout:
    int TOUCH_SLOP -> a
    int TAP_TIMEOUT -> b
    android.os.Vibrator mVibrator -> c
    long mLastVibrate -> d
    int mLastValueSelected -> e
    com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout$OnValueSelectedListener mListener -> f
    boolean mTimeInitialized -> g
    int mCurrentHoursOfDay -> h
    int mCurrentMinutes -> i
    boolean mIs24HourMode -> j
    boolean mHideAmPm -> k
    int mCurrentItemShowing -> l
    com.cn7782.management.android.activity.datetimepickers.CircleView mCircleView -> m
    com.cn7782.management.android.activity.datetimepickers.AmPmCirclesView mAmPmCirclesView -> n
    com.cn7782.management.android.activity.datetimepickers.RadialTextsView mHourRadialTextsView -> o
    com.cn7782.management.android.activity.datetimepickers.RadialTextsView mMinuteRadialTextsView -> p
    com.cn7782.management.android.activity.datetimepickers.RadialSelectorView mHourRadialSelectorView -> q
    com.cn7782.management.android.activity.datetimepickers.RadialSelectorView mMinuteRadialSelectorView -> r
    android.view.View mGrayBox -> s
    int[] mSnapPrefer30sMap -> t
    boolean mInputEnabled -> u
    int mIsTouchingAmOrPm -> v
    boolean mDoingMove -> w
    boolean mDoingTouch -> x
    int mDownDegrees -> y
    float mDownX -> z
    float mDownY -> A
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> B
    android.animation.AnimatorSet mTransition -> C
    android.os.Handler mHandler -> D
    void onMeasure(int,int) -> onMeasure
    void setOnValueSelectedListener(com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout$OnValueSelectedListener) -> setOnValueSelectedListener
    void initialize(android.content.Context,int,int,boolean) -> a
    void setTime(int,int) -> a
    void setItem(int,int) -> b
    boolean isHourInnerCircle(int) -> a
    int getHours() -> getHours
    int getMinutes() -> getMinutes
    int getCurrentlyShowingValue() -> getCurrentlyShowingValue
    int getIsCurrentlyAmOrPm() -> getIsCurrentlyAmOrPm
    void setValueForItem(int,int) -> c
    void setAmOrPm(int) -> setAmOrPm
    void preparePrefer30sMap() -> b
    int snapPrefer30s(int) -> b
    int snapOnly30s(int,int) -> d
    int reselectSelector(int,boolean,boolean,boolean) -> a
    int getDegreesFromCoords(float,float,boolean,java.lang.Boolean[]) -> a
    int getCurrentItemShowing() -> getCurrentItemShowing
    void setCurrentItemShowing(int,boolean) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void tryVibrate() -> a
    boolean trySettingInputEnabled(boolean) -> a
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    int access$000(com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout) -> a
    com.cn7782.management.android.activity.datetimepickers.AmPmCirclesView access$100(com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout) -> b
    boolean access$202(com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout,boolean) -> a
    int access$300(com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout) -> c
    int access$400(com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout,int,boolean,boolean,boolean) -> a
    int access$502(com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout,int) -> a
    com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout$OnValueSelectedListener access$600(com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout) -> d
com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout$1 -> com.cn7782.management.android.activity.datetimepickers.r:
    com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout this$0 -> a
    void run() -> run
com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout$2 -> com.cn7782.management.android.activity.datetimepickers.s:
    java.lang.Boolean[] val$isInnerCircle -> a
    com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout this$0 -> b
    void run() -> run
com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout$OnValueSelectedListener -> com.cn7782.management.android.activity.datetimepickers.t:
    void onValueSelected(int,int,boolean) -> onValueSelected
com.cn7782.management.android.activity.datetimepickers.RadialSelectorView -> com.cn7782.management.android.activity.datetimepickers.u:
    android.graphics.Paint mPaint -> a
    boolean mIsInitialized -> b
    boolean mDrawValuesReady -> c
    float mCircleRadiusMultiplier -> d
    float mAmPmCircleRadiusMultiplier -> e
    float mInnerNumbersRadiusMultiplier -> f
    float mOuterNumbersRadiusMultiplier -> g
    float mNumbersRadiusMultiplier -> h
    float mSelectionRadiusMultiplier -> i
    float mAnimationRadiusMultiplier -> j
    boolean mIs24HourMode -> k
    boolean mHasInnerCircle -> l
    int mXCenter -> m
    int mYCenter -> n
    int mCircleRadius -> o
    float mTransitionMidRadiusMultiplier -> p
    float mTransitionEndRadiusMultiplier -> q
    int mLineLength -> r
    int mSelectionRadius -> s
    com.cn7782.management.android.activity.datetimepickers.RadialSelectorView$InvalidateUpdateListener mInvalidateUpdateListener -> t
    int mSelectionDegrees -> u
    double mSelectionRadians -> v
    boolean mForceDrawDot -> w
    void initialize(android.content.Context,boolean,boolean,boolean,int,boolean) -> a
    void setSelection(int,boolean,boolean) -> a
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void setAnimationRadiusMultiplier(float) -> setAnimationRadiusMultiplier
    int getDegreesFromCoords(float,float,boolean,java.lang.Boolean[]) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    android.animation.ObjectAnimator getDisappearAnimator() -> getDisappearAnimator
    android.animation.ObjectAnimator getReappearAnimator() -> getReappearAnimator
com.cn7782.management.android.activity.datetimepickers.RadialSelectorView$1 -> com.cn7782.management.android.activity.datetimepickers.v:
com.cn7782.management.android.activity.datetimepickers.RadialSelectorView$InvalidateUpdateListener -> com.cn7782.management.android.activity.datetimepickers.w:
    com.cn7782.management.android.activity.datetimepickers.RadialSelectorView this$0 -> a
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.cn7782.management.android.activity.datetimepickers.RadialTextsView -> com.cn7782.management.android.activity.datetimepickers.x:
    android.graphics.Paint mPaint -> c
    boolean mDrawValuesReady -> d
    boolean mIsInitialized -> e
    android.graphics.Typeface mTypefaceLight -> f
    android.graphics.Typeface mTypefaceRegular -> g
    java.lang.String[] mTexts -> h
    java.lang.String[] mInnerTexts -> i
    boolean mIs24HourMode -> j
    boolean mHasInnerCircle -> k
    float mCircleRadiusMultiplier -> l
    float mAmPmCircleRadiusMultiplier -> m
    float mNumbersRadiusMultiplier -> n
    float mInnerNumbersRadiusMultiplier -> o
    float mTextSizeMultiplier -> p
    float mInnerTextSizeMultiplier -> q
    int mXCenter -> r
    int mYCenter -> s
    float mCircleRadius -> t
    boolean mTextGridValuesDirty -> u
    float mTextSize -> v
    float mInnerTextSize -> w
    float[] mTextGridHeights -> x
    float[] mTextGridWidths -> y
    float[] mInnerTextGridHeights -> z
    float[] mInnerTextGridWidths -> A
    float mAnimationRadiusMultiplier -> B
    float mTransitionMidRadiusMultiplier -> C
    float mTransitionEndRadiusMultiplier -> D
    android.animation.ObjectAnimator mDisappearAnimator -> a
    android.animation.ObjectAnimator mReappearAnimator -> b
    com.cn7782.management.android.activity.datetimepickers.RadialTextsView$InvalidateUpdateListener mInvalidateUpdateListener -> E
    void initialize(android.content.res.Resources,java.lang.String[],java.lang.String[],boolean,boolean) -> a
    boolean hasOverlappingRendering() -> hasOverlappingRendering
    void setAnimationRadiusMultiplier(float) -> setAnimationRadiusMultiplier
    void onDraw(android.graphics.Canvas) -> onDraw
    void calculateGridSizes(float,float,float,float,float[],float[]) -> a
    void drawTexts(android.graphics.Canvas,float,android.graphics.Typeface,java.lang.String[],float[],float[]) -> a
    void renderAnimations() -> a
    android.animation.ObjectAnimator getDisappearAnimator() -> getDisappearAnimator
    android.animation.ObjectAnimator getReappearAnimator() -> getReappearAnimator
com.cn7782.management.android.activity.datetimepickers.RadialTextsView$1 -> com.cn7782.management.android.activity.datetimepickers.y:
com.cn7782.management.android.activity.datetimepickers.RadialTextsView$InvalidateUpdateListener -> com.cn7782.management.android.activity.datetimepickers.z:
    com.cn7782.management.android.activity.datetimepickers.RadialTextsView this$0 -> a
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter -> com.cn7782.management.android.activity.datetimepickers.aa:
    android.content.Context mContext -> b
    com.cn7782.management.android.activity.datetimepickers.DatePickerController mController -> c
    com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay mSelectedDay -> d
    int WEEK_7_OVERHANG_HEIGHT -> a
    void setSelectedDay(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay) -> a
    void init() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean isSelectedDayInMonth(int,int) -> a
    void onDayClick(com.cn7782.management.android.activity.datetimepickers.SimpleMonthView,com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay) -> a
    void onDayTapped(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay) -> b
com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay -> com.cn7782.management.android.activity.datetimepickers.ab:
    java.util.Calendar calendar -> d
    int year -> a
    int month -> b
    int day -> c
    void set(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay) -> a
    void setDay(int,int,int) -> a
    void setTime(long) -> a
com.cn7782.management.android.activity.datetimepickers.SimpleMonthView -> com.cn7782.management.android.activity.datetimepickers.SimpleMonthView:
    java.lang.String VIEW_PARAMS_HEIGHT -> VIEW_PARAMS_HEIGHT
    java.lang.String VIEW_PARAMS_MONTH -> VIEW_PARAMS_MONTH
    java.lang.String VIEW_PARAMS_YEAR -> VIEW_PARAMS_YEAR
    java.lang.String VIEW_PARAMS_SELECTED_DAY -> VIEW_PARAMS_SELECTED_DAY
    java.lang.String VIEW_PARAMS_WEEK_START -> VIEW_PARAMS_WEEK_START
    java.lang.String VIEW_PARAMS_NUM_DAYS -> VIEW_PARAMS_NUM_DAYS
    java.lang.String VIEW_PARAMS_FOCUS_MONTH -> VIEW_PARAMS_FOCUS_MONTH
    java.lang.String VIEW_PARAMS_SHOW_WK_NUM -> VIEW_PARAMS_SHOW_WK_NUM
    int DEFAULT_HEIGHT -> a
    int MIN_HEIGHT -> b
    int DAY_SEPARATOR_WIDTH -> c
    int MINI_DAY_NUMBER_TEXT_SIZE -> d
    int MONTH_LABEL_TEXT_SIZE -> e
    int MONTH_DAY_LABEL_TEXT_SIZE -> f
    int MONTH_HEADER_SIZE -> g
    int DAY_SELECTED_CIRCLE_SIZE -> h
    float mScale -> i
    int mPadding -> j
    java.lang.String mDayOfWeekTypeface -> I
    java.lang.String mMonthTitleTypeface -> J
    android.graphics.Paint mMonthNumPaint -> k
    android.graphics.Paint mMonthTitlePaint -> l
    android.graphics.Paint mMonthTitleBGPaint -> m
    android.graphics.Paint mSelectedCirclePaint -> n
    android.graphics.Paint mMonthDayLabelPaint -> o
    java.util.Formatter mFormatter -> K
    java.lang.StringBuilder mStringBuilder -> L
    int mFirstJulianDay -> p
    int mFirstMonth -> q
    int mLastMonth -> r
    int mMonth -> s
    int mYear -> t
    int mWidth -> u
    int mRowHeight -> v
    boolean mHasToday -> w
    int mSelectedDay -> x
    int mToday -> y
    int mWeekStart -> z
    int mNumDays -> A
    int mNumCells -> B
    int mSelectedLeft -> C
    int mSelectedRight -> D
    java.util.Calendar mCalendar -> M
    java.util.Calendar mDayLabelCalendar -> N
    com.cn7782.management.android.activity.datetimepickers.SimpleMonthView$MonthViewNodeProvider mNodeProvider -> O
    int mNumRows -> P
    com.cn7782.management.android.activity.datetimepickers.SimpleMonthView$OnDayClickListener mOnDayClickListener -> Q
    boolean mLockAccessibilityDelegate -> R
    int mDayTextColor -> E
    int mTodayNumberColor -> F
    int mMonthTitleColor -> G
    int mMonthTitleBGColor -> H
    int mDayOfWeekStart -> S
    void setAccessibilityDelegate(android.view.View$AccessibilityDelegate) -> setAccessibilityDelegate
    void setOnDayClickListener(com.cn7782.management.android.activity.datetimepickers.SimpleMonthView$OnDayClickListener) -> setOnDayClickListener
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void initView() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void setMonthParams(java.util.HashMap) -> setMonthParams
    void reuse() -> reuse
    int calculateNumRows() -> b
    boolean sameDay(int,android.text.format.Time) -> a
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    java.lang.String getMonthAndYearString() -> getMonthAndYearString
    void drawMonthTitle(android.graphics.Canvas) -> b
    void drawMonthDayLabels(android.graphics.Canvas) -> c
    void drawMonthNums(android.graphics.Canvas) -> a
    int findDayOffset() -> c
    com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay getDayFromLocation(float,float) -> getDayFromLocation
    void onDayClick(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay) -> a
    com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay getAccessibilityFocus() -> getAccessibilityFocus
    void clearAccessibilityFocus() -> clearAccessibilityFocus
    boolean restoreAccessibilityFocus(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay) -> restoreAccessibilityFocus
    void access$000(com.cn7782.management.android.activity.datetimepickers.SimpleMonthView,com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay) -> a
    int access$100(com.cn7782.management.android.activity.datetimepickers.SimpleMonthView) -> a
com.cn7782.management.android.activity.datetimepickers.SimpleMonthView$MonthViewNodeProvider -> com.cn7782.management.android.activity.datetimepickers.ac:
    android.util.SparseArray mCachedItems -> c
    android.graphics.Rect mTempRect -> d
    java.util.Calendar recycle -> a
    com.cn7782.management.android.activity.datetimepickers.SimpleMonthView this$0 -> b
    void invalidateItem(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay) -> a
    void invalidateParent() -> invalidateParent
    boolean performActionForItem(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay,int,android.os.Bundle) -> a
    void populateEventForItem(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay,android.view.accessibility.AccessibilityEvent) -> a
    void populateNodeForItem(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void getVisibleItems(java.util.List) -> a
    com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay getItemAt(float,float) -> a
    int getIdForItem(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay) -> b
    com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay getItemForId(int) -> a
    void getItemBounds(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay,android.graphics.Rect) -> a
    java.lang.CharSequence getItemDescription(com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay) -> c
    java.lang.Object getItemForId(int) -> b
    int getIdForItem(java.lang.Object) -> a
    java.lang.Object getItemAt(float,float) -> b
    void populateNodeForItem(java.lang.Object,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void populateEventForItem(java.lang.Object,android.view.accessibility.AccessibilityEvent) -> a
    boolean performActionForItem(java.lang.Object,int,android.os.Bundle) -> a
    void invalidateItem(java.lang.Object) -> invalidateItem
com.cn7782.management.android.activity.datetimepickers.SimpleMonthView$OnDayClickListener -> com.cn7782.management.android.activity.datetimepickers.ad:
    void onDayClick(com.cn7782.management.android.activity.datetimepickers.SimpleMonthView,com.cn7782.management.android.activity.datetimepickers.SimpleMonthAdapter$CalendarDay) -> a
com.cn7782.management.android.activity.datetimepickers.TextViewWithCircularIndicator -> com.cn7782.management.android.activity.datetimepickers.TextViewWithCircularIndicator:
    android.graphics.Paint mCirclePaint -> a
    int mRadius -> b
    int mCircleColor -> c
    java.lang.String mItemIsSelectedText -> d
    boolean mDrawCircle -> e
    void init() -> a
    void drawIndicator(boolean) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    java.lang.CharSequence getContentDescription() -> getContentDescription
com.cn7782.management.android.activity.datetimepickers.TimePickerDialog -> com.cn7782.management.android.activity.datetimepickers.TimePickerDialog:
    int HOUR_INDEX -> HOUR_INDEX
    int MINUTE_INDEX -> MINUTE_INDEX
    int AMPM_INDEX -> AMPM_INDEX
    int ENABLE_PICKER_INDEX -> ENABLE_PICKER_INDEX
    int AM -> AM
    int PM -> PM
    com.cn7782.management.android.activity.datetimepickers.TimePickerDialog$OnTimeSetListener mCallback -> a
    android.widget.TextView mDoneButton -> b
    android.widget.TextView mHourView -> c
    android.widget.TextView mHourSpaceView -> d
    android.widget.TextView mMinuteView -> e
    android.widget.TextView mMinuteSpaceView -> f
    android.widget.TextView mAmPmTextView -> g
    android.view.View mAmPmHitspace -> h
    com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout mTimePicker -> i
    int mBlue -> j
    int mBlack -> k
    java.lang.String mAmText -> l
    java.lang.String mPmText -> m
    boolean mAllowAutoAdvance -> n
    int mInitialHourOfDay -> o
    int mInitialMinute -> p
    boolean mIs24HourMode -> q
    char mPlaceholderText -> r
    java.lang.String mDoublePlaceholderText -> s
    java.lang.String mDeletedKeyFormat -> t
    boolean mInKbMode -> u
    java.util.ArrayList mTypedTimes -> v
    com.cn7782.management.android.activity.datetimepickers.TimePickerDialog$Node mLegalTimesTree -> w
    int mAmKeyCode -> x
    int mPmKeyCode -> y
    java.lang.String mHourPickerDescription -> z
    java.lang.String mSelectHours -> A
    java.lang.String mMinutePickerDescription -> B
    java.lang.String mSelectMinutes -> C
    com.cn7782.management.android.activity.datetimepickers.TimePickerDialog newInstance(com.cn7782.management.android.activity.datetimepickers.TimePickerDialog$OnTimeSetListener,int,int,boolean) -> newInstance
    void initialize(com.cn7782.management.android.activity.datetimepickers.TimePickerDialog$OnTimeSetListener,int,int,boolean) -> initialize
    void setOnTimeSetListener(com.cn7782.management.android.activity.datetimepickers.TimePickerDialog$OnTimeSetListener) -> setOnTimeSetListener
    void setStartTime(int,int) -> setStartTime
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void updateAmPmDisplay(int) -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onValueSelected(int,int,boolean) -> onValueSelected
    void setHour(int,boolean) -> a
    void setMinute(int) -> b
    void setCurrentItemShowing(int,boolean,boolean,boolean) -> a
    boolean processKeyUp(int) -> c
    void tryStartingKbMode(int) -> d
    boolean addKeyIfLegal(int) -> e
    boolean isTypedTimeLegalSoFar() -> a
    boolean isTypedTimeFullyLegal() -> b
    int deleteLastTypedKey() -> c
    void finishKbMode(boolean) -> a
    void updateDisplay(boolean) -> b
    int getValFromKeyCode(int) -> f
    int[] getEnteredTime(java.lang.Boolean[]) -> a
    int getAmOrPmKeyCode(int) -> g
    void generateLegalTimesTree() -> d
    void access$100(com.cn7782.management.android.activity.datetimepickers.TimePickerDialog,int,boolean,boolean,boolean) -> a
    com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout access$200(com.cn7782.management.android.activity.datetimepickers.TimePickerDialog) -> a
    boolean access$300(com.cn7782.management.android.activity.datetimepickers.TimePickerDialog) -> b
    boolean access$400(com.cn7782.management.android.activity.datetimepickers.TimePickerDialog) -> c
    void access$500(com.cn7782.management.android.activity.datetimepickers.TimePickerDialog,boolean) -> a
    com.cn7782.management.android.activity.datetimepickers.TimePickerDialog$OnTimeSetListener access$600(com.cn7782.management.android.activity.datetimepickers.TimePickerDialog) -> d
    void access$700(com.cn7782.management.android.activity.datetimepickers.TimePickerDialog,int) -> a
    boolean access$800(com.cn7782.management.android.activity.datetimepickers.TimePickerDialog,int) -> b
com.cn7782.management.android.activity.datetimepickers.TimePickerDialog$1 -> com.cn7782.management.android.activity.datetimepickers.ae:
    com.cn7782.management.android.activity.datetimepickers.TimePickerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.datetimepickers.TimePickerDialog$2 -> com.cn7782.management.android.activity.datetimepickers.af:
    com.cn7782.management.android.activity.datetimepickers.TimePickerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.datetimepickers.TimePickerDialog$3 -> com.cn7782.management.android.activity.datetimepickers.ag:
    com.cn7782.management.android.activity.datetimepickers.TimePickerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.datetimepickers.TimePickerDialog$4 -> com.cn7782.management.android.activity.datetimepickers.ah:
    com.cn7782.management.android.activity.datetimepickers.TimePickerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.datetimepickers.TimePickerDialog$KeyboardListener -> com.cn7782.management.android.activity.datetimepickers.ai:
    com.cn7782.management.android.activity.datetimepickers.TimePickerDialog this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.cn7782.management.android.activity.datetimepickers.TimePickerDialog$Node -> com.cn7782.management.android.activity.datetimepickers.aj:
    int[] mLegalKeys -> b
    java.util.ArrayList mChildren -> c
    com.cn7782.management.android.activity.datetimepickers.TimePickerDialog this$0 -> a
    void addChild(com.cn7782.management.android.activity.datetimepickers.TimePickerDialog$Node) -> a
    boolean containsKey(int) -> a
    com.cn7782.management.android.activity.datetimepickers.TimePickerDialog$Node canReach(int) -> b
com.cn7782.management.android.activity.datetimepickers.TimePickerDialog$OnTimeSetListener -> com.cn7782.management.android.activity.datetimepickers.ak:
    void onTimeSet(com.cn7782.management.android.activity.datetimepickers.RadialPickerLayout,int,int) -> a
com.cn7782.management.android.activity.datetimepickers.TouchExplorationHelper -> com.cn7782.management.android.activity.datetimepickers.TouchExplorationHelper:
    int INVALID_ID -> INVALID_ID
    android.graphics.Rect mTempScreenRect -> a
    android.graphics.Rect mTempParentRect -> b
    android.graphics.Rect mTempVisibleRect -> c
    int[] mTempGlobalRect -> d
    android.view.accessibility.AccessibilityManager mManager -> e
    android.view.View mParentView -> f
    int mFocusedItemId -> g
    java.lang.Object mCurrentItem -> h
    android.support.v4.view.AccessibilityDelegateCompat mDelegate -> i
    java.lang.Object getFocusedItem() -> getFocusedItem
    void clearFocusedItem() -> clearFocusedItem
    void setFocusedItem(java.lang.Object) -> setFocusedItem
    void invalidateParent() -> invalidateParent
    void invalidateItem(java.lang.Object) -> invalidateItem
    boolean sendEventForItem(java.lang.Object,int) -> sendEventForItem
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    void setCurrentItem(java.lang.Object) -> b
    android.view.accessibility.AccessibilityEvent getEventForItem(java.lang.Object,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getNodeForParent() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat populateNodeForItemInternal(java.lang.Object,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> b
    boolean intersectVisibleToUser(android.graphics.Rect) -> a
    android.support.v4.view.AccessibilityDelegateCompat getAccessibilityDelegate() -> getAccessibilityDelegate
    boolean performActionForItem(java.lang.Object,int,android.os.Bundle) -> a
    void populateEventForItem(java.lang.Object,android.view.accessibility.AccessibilityEvent) -> a
    void populateNodeForItem(java.lang.Object,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void getVisibleItems(java.util.List) -> a
    java.lang.Object getItemAt(float,float) -> b
    int getIdForItem(java.lang.Object) -> a
    java.lang.Object getItemForId(int) -> b
com.cn7782.management.android.activity.datetimepickers.TouchExplorationHelper$1 -> com.cn7782.management.android.activity.datetimepickers.al:
    com.cn7782.management.android.activity.datetimepickers.TouchExplorationHelper this$0 -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
com.cn7782.management.android.activity.datetimepickers.Utils -> com.cn7782.management.android.activity.datetimepickers.Utils:
    int MONDAY_BEFORE_JULIAN_EPOCH -> MONDAY_BEFORE_JULIAN_EPOCH
    int PULSE_ANIMATOR_DURATION -> PULSE_ANIMATOR_DURATION
    boolean isJellybeanOrLater() -> isJellybeanOrLater
    void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence) -> tryAccessibilityAnnounce
    int getDaysInMonth(int,int) -> getDaysInMonth
    int getJulianMondayFromWeeksSinceEpoch(int) -> getJulianMondayFromWeeksSinceEpoch
    int getWeeksSinceEpochFromJulianDay(int,int) -> getWeeksSinceEpochFromJulianDay
    android.animation.ObjectAnimator getPulseAnimator(android.view.View,float,float) -> getPulseAnimator
com.cn7782.management.android.activity.datetimepickers.YearPickerView -> com.cn7782.management.android.activity.datetimepickers.am:
    com.cn7782.management.android.activity.datetimepickers.DatePickerController mController -> a
    com.cn7782.management.android.activity.datetimepickers.YearPickerView$YearAdapter mAdapter -> b
    int mViewSize -> c
    int mChildSize -> d
    com.cn7782.management.android.activity.datetimepickers.TextViewWithCircularIndicator mSelectedView -> e
    void init(android.content.Context) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int getYearFromTextView(android.widget.TextView) -> a
    void postSetSelectionCentered(int) -> a
    void postSetSelectionFromTop(int,int) -> a
    int getFirstPositionOffset() -> getFirstPositionOffset
    void onDateChanged() -> onDateChanged
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    int access$000(com.cn7782.management.android.activity.datetimepickers.YearPickerView,android.widget.TextView) -> a
    com.cn7782.management.android.activity.datetimepickers.DatePickerController access$100(com.cn7782.management.android.activity.datetimepickers.YearPickerView) -> a
    com.cn7782.management.android.activity.datetimepickers.TextViewWithCircularIndicator access$202(com.cn7782.management.android.activity.datetimepickers.YearPickerView,com.cn7782.management.android.activity.datetimepickers.TextViewWithCircularIndicator) -> a
com.cn7782.management.android.activity.datetimepickers.YearPickerView$1 -> com.cn7782.management.android.activity.datetimepickers.an:
    int val$position -> a
    int val$offset -> b
    com.cn7782.management.android.activity.datetimepickers.YearPickerView this$0 -> c
    void run() -> run
com.cn7782.management.android.activity.datetimepickers.YearPickerView$YearAdapter -> com.cn7782.management.android.activity.datetimepickers.ao:
    com.cn7782.management.android.activity.datetimepickers.YearPickerView this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.cn7782.management.android.activity.dialog.CancelDialog -> com.cn7782.management.android.activity.a.a:
    android.content.Context context -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.dialog.JobTypeDialog -> com.cn7782.management.android.activity.a.b:
    android.content.Context context -> a
    com.cn7782.management.android.activity.dialog.JobTypeDialog$MyJobtype myJobtype -> b
    void initMyJobtype(com.cn7782.management.android.activity.dialog.JobTypeDialog$MyJobtype) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.dialog.JobTypeDialog$MyJobtype -> com.cn7782.management.android.activity.a.c:
    void refreshActivity(java.lang.String) -> a
com.cn7782.management.android.activity.dialog.MsgDialog -> com.cn7782.management.android.activity.a.d:
    android.content.Context context -> a
    android.os.Bundle bundle -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.dialog.MsgDialog$MyCountDownTimer -> com.cn7782.management.android.activity.a.e:
    com.cn7782.management.android.activity.dialog.MsgDialog this$0 -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.cn7782.management.android.activity.dialog.StatusDialog -> com.cn7782.management.android.activity.a.f:
    android.content.Context context -> a
    com.cn7782.management.android.activity.dialog.StatusDialog$MyStatus myStatus -> b
    void initMyStatus(com.cn7782.management.android.activity.dialog.StatusDialog$MyStatus) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.dialog.StatusDialog$MyStatus -> com.cn7782.management.android.activity.a.g:
    void refreshStatus(java.lang.String) -> b
com.cn7782.management.android.activity.receiver.AudioReceiver -> com.cn7782.management.android.activity.receiver.AudioReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cn7782.management.android.activity.receiver.JPushReceiver -> com.cn7782.management.android.activity.receiver.JPushReceiver:
    int NOTICE_ID -> a
    android.app.NotificationManager nm -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void processCustomMessage(android.content.Context,android.os.Bundle) -> a
    void receivingNotification(android.content.Context,android.os.Bundle) -> b
    void openNotification(android.content.Context,android.os.Bundle) -> c
com.cn7782.management.android.activity.receiver.MsgReceiver -> com.cn7782.management.android.activity.receiver.MsgReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cn7782.management.android.activity.service.CoreService -> com.cn7782.management.android.activity.service.CoreService:
    void onStart(android.content.Intent,int) -> onStart
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
com.cn7782.management.android.activity.service.MessengerService -> com.cn7782.management.android.activity.service.MessengerService:
    android.app.NotificationManager nm -> b
    com.cn7782.management.android.activity.controller.SoundManager mSoundManager -> c
    android.os.Vibrator vibrator -> d
    long[] pattern -> e
    boolean mBound -> mBound
    android.app.KeyguardManager mKeyguardManager -> a
    android.os.PowerManager pm -> f
    android.content.Context context -> g
    com.cn7782.management.android.activity.service.MessengerService$MsgBind mBind -> h
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onEvent(com.easemob.EMNotifierEvent) -> onEvent
    void showMsgDialog(android.os.Bundle) -> a
    void showMsgWakeLock(android.os.Bundle) -> b
    void onDestroy() -> onDestroy
    int getUnreadMsgCountTotal() -> getUnreadMsgCountTotal
com.cn7782.management.android.activity.service.MessengerService$1 -> com.cn7782.management.android.activity.service.a:
    android.os.Bundle val$bundle -> a
    com.cn7782.management.android.activity.service.MessengerService this$0 -> b
    void run() -> run
com.cn7782.management.android.activity.service.MessengerService$2 -> com.cn7782.management.android.activity.service.b:
    int[] $SwitchMap$com$easemob$EMNotifierEvent$Event -> a
com.cn7782.management.android.activity.service.MessengerService$MsgBind -> com.cn7782.management.android.activity.service.c:
    com.cn7782.management.android.activity.service.MessengerService this$0 -> a
com.cn7782.management.android.activity.service.PositioningService -> com.cn7782.management.android.activity.service.PositioningService:
    android.content.Context context -> c
    android.os.Handler mHandler -> d
    android.location.LocationManager locationManager -> e
    boolean isStartTrack -> f
    boolean isOpenTrack -> isOpenTrack
    int count -> a
    int criticalWalkValue -> b
    java.lang.String tablename -> g
    com.cn7782.management.android.db.DBHelper dp -> h
    android.database.Cursor cursor -> cursor
    java.util.List pts -> i
    com.baidu.mapapi.utils.CoordinateConverter converter -> j
    int walking_road -> k
    int driving_road -> l
    int driving_dur -> m
    int walking_dur -> n
    double distanceLong -> o
    int secNum -> p
    java.util.Timer timer -> q
    java.util.TimerTask task -> r
    java.util.Timer timer2 -> s
    java.util.TimerTask task2 -> t
    java.util.ArrayList locations -> u
    boolean mBound -> mBound
    java.math.BigDecimal lastLatitude -> v
    java.math.BigDecimal lastLongitude -> w
    com.cn7782.management.android.activity.service.PositioningService$MsgBind mBind -> x
    int ratio -> y
    android.location.LocationListener locationListener -> z
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void initService(android.content.Context,com.cn7782.management.android.db.DBHelper,java.lang.String) -> initService
    void initHandler(android.os.Handler) -> initHandler
    void tracklocations() -> tracklocations
    void initTimer() -> initTimer
    boolean filter(android.location.Location) -> a
    int[] getArrayResult(int[]) -> a
    com.cn7782.management.android.activity.bean.LocationBean initLocate(double,double,double,java.lang.String) -> a
    boolean getCriticalPostion(double) -> getCriticalPostion
    void artificial(java.lang.String,com.cn7782.management.android.activity.bean.LocationBean) -> artificial
    void countDiatance(java.util.List,double) -> a
    void onDestroy() -> onDestroy
    android.location.LocationManager access$000(com.cn7782.management.android.activity.service.PositioningService) -> a
    android.content.Context access$100(com.cn7782.management.android.activity.service.PositioningService) -> b
    boolean access$202(com.cn7782.management.android.activity.service.PositioningService,boolean) -> a
    android.location.LocationListener access$300(com.cn7782.management.android.activity.service.PositioningService) -> c
    int access$408(com.cn7782.management.android.activity.service.PositioningService) -> d
    android.os.Handler access$500(com.cn7782.management.android.activity.service.PositioningService) -> e
    int access$400(com.cn7782.management.android.activity.service.PositioningService) -> f
    double access$600(com.cn7782.management.android.activity.service.PositioningService) -> g
    boolean access$700(com.cn7782.management.android.activity.service.PositioningService,android.location.Location) -> a
    com.cn7782.management.android.activity.bean.LocationBean access$800(com.cn7782.management.android.activity.service.PositioningService,double,double,double,java.lang.String) -> a
    java.util.ArrayList access$900(com.cn7782.management.android.activity.service.PositioningService) -> h
    int[] access$1000(com.cn7782.management.android.activity.service.PositioningService,int[]) -> a
    int access$1100(com.cn7782.management.android.activity.service.PositioningService) -> i
    java.lang.String access$1200(com.cn7782.management.android.activity.service.PositioningService) -> j
    void access$1300(com.cn7782.management.android.activity.service.PositioningService,java.util.List,double) -> a
com.cn7782.management.android.activity.service.PositioningService$1 -> com.cn7782.management.android.activity.service.d:
    com.cn7782.management.android.activity.service.PositioningService this$0 -> a
    void run() -> run
com.cn7782.management.android.activity.service.PositioningService$2 -> com.cn7782.management.android.activity.service.e:
    com.cn7782.management.android.activity.service.PositioningService this$0 -> a
    void run() -> run
com.cn7782.management.android.activity.service.PositioningService$3 -> com.cn7782.management.android.activity.service.f:
    com.cn7782.management.android.activity.service.PositioningService this$0 -> a
    void run() -> run
com.cn7782.management.android.activity.service.PositioningService$4 -> com.cn7782.management.android.activity.service.g:
    com.cn7782.management.android.activity.service.PositioningService this$0 -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
com.cn7782.management.android.activity.service.PositioningService$MsgBind -> com.cn7782.management.android.activity.service.h:
    com.cn7782.management.android.activity.service.PositioningService this$0 -> a
    com.cn7782.management.android.activity.service.PositioningService getService() -> a
com.cn7782.management.android.activity.service.TimingService -> com.cn7782.management.android.activity.service.TimingService:
    java.util.Timer timer -> timer
    int timing -> b
    com.baidu.location.LocationClient mLocClient -> a
    com.cn7782.management.android.activity.service.TimingService$MyLocationListenner myListener -> myListener
    java.lang.String Latitude -> Latitude
    java.lang.String Longitude -> Longitude
    java.lang.String speed -> speed
    double nLatitude -> nLatitude
    double nLongitude -> nLongitude
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void sendData() -> a
    void access$000(com.cn7782.management.android.activity.service.TimingService) -> a
com.cn7782.management.android.activity.service.TimingService$1 -> com.cn7782.management.android.activity.service.i:
    com.cn7782.management.android.activity.service.TimingService this$0 -> a
    void run() -> run
com.cn7782.management.android.activity.service.TimingService$2 -> com.cn7782.management.android.activity.service.j:
    com.cn7782.management.android.activity.service.TimingService this$0 -> a
    void onSuccess(int,org.json.JSONObject) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.cn7782.management.android.activity.service.TimingService$MyLocationListenner -> com.cn7782.management.android.activity.service.k:
    com.cn7782.management.android.activity.service.TimingService this$0 -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.cn7782.management.android.activity.tabview.CalendarView -> com.cn7782.management.android.activity.tabview.CalendarView:
    int MONTH_STYLE -> MONTH_STYLE
    int WEEK_STYLE -> WEEK_STYLE
    android.graphics.Paint mCirclePaint -> a
    android.graphics.Paint oCirclePaint -> b
    android.graphics.Paint nCirclePaint -> c
    android.graphics.Paint mTextPaint -> d
    android.graphics.Paint mTextOPaint -> e
    int mViewWidth -> f
    int mViewHight -> g
    int mCellSpace -> h
    com.cn7782.management.android.activity.tabview.CalendarView$Row[] rows -> i
    com.cn7782.management.android.activity.bean.CustomDate mShowDate -> j
    int style -> style
    com.cn7782.management.android.activity.tabview.CalendarView$CallBack mCallBack -> k
    int touchSlop -> l
    boolean callBackCellSpace -> m
    com.cn7782.management.android.activity.tabview.CalendarView$Cell mClickCell -> n
    float mDownX -> o
    float mDownY -> p
    void onDraw(android.graphics.Canvas) -> onDraw
    void init(android.content.Context) -> a
    void initDate() -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void measureClickCell(int,int) -> a
    void fillDate() -> b
    void fillWeekDate() -> c
    void fillMonthDate() -> d
    void update() -> update
    void backToday() -> backToday
    void switchStyle(int) -> switchStyle
    void rightSilde() -> rightSilde
    void leftSilde() -> leftSilde
    android.graphics.Paint access$000(com.cn7782.management.android.activity.tabview.CalendarView) -> a
    android.graphics.Paint access$100(com.cn7782.management.android.activity.tabview.CalendarView) -> b
    int access$200(com.cn7782.management.android.activity.tabview.CalendarView) -> c
    android.graphics.Paint access$300(com.cn7782.management.android.activity.tabview.CalendarView) -> d
    android.graphics.Paint access$400(com.cn7782.management.android.activity.tabview.CalendarView) -> e
    android.graphics.Paint access$500(com.cn7782.management.android.activity.tabview.CalendarView) -> f
com.cn7782.management.android.activity.tabview.CalendarView$1 -> com.cn7782.management.android.activity.tabview.a:
    int[] $SwitchMap$com$cn7782$management$android$activity$tabview$CalendarView$State -> a
com.cn7782.management.android.activity.tabview.CalendarView$CallBack -> com.cn7782.management.android.activity.tabview.b:
    void clickDate(com.cn7782.management.android.activity.bean.CustomDate) -> clickDate
    void onMesureCellHeight(int) -> onMesureCellHeight
    void changeDate(com.cn7782.management.android.activity.bean.CustomDate) -> changeDate
com.cn7782.management.android.activity.tabview.CalendarView$Cell -> com.cn7782.management.android.activity.tabview.CalendarView$Cell:
    com.cn7782.management.android.activity.bean.CustomDate date -> date
    com.cn7782.management.android.activity.tabview.CalendarView$State state -> state
    int i -> i
    int j -> j
    com.cn7782.management.android.activity.tabview.CalendarView this$0 -> a
    void drawSelf(android.graphics.Canvas) -> drawSelf
com.cn7782.management.android.activity.tabview.CalendarView$Row -> com.cn7782.management.android.activity.tabview.CalendarView$Row:
    int j -> j
    com.cn7782.management.android.activity.tabview.CalendarView$Cell[] cells -> cells
    com.cn7782.management.android.activity.tabview.CalendarView this$0 -> a
    void drawCells(android.graphics.Canvas) -> drawCells
com.cn7782.management.android.activity.tabview.CalendarView$State -> com.cn7782.management.android.activity.tabview.CalendarView$State:
    com.cn7782.management.android.activity.tabview.CalendarView$State CURRENT_MONTH_DAY -> CURRENT_MONTH_DAY
    com.cn7782.management.android.activity.tabview.CalendarView$State PAST_MONTH_DAY -> PAST_MONTH_DAY
    com.cn7782.management.android.activity.tabview.CalendarView$State NEXT_MONTH_DAY -> NEXT_MONTH_DAY
    com.cn7782.management.android.activity.tabview.CalendarView$State SAMEDAY -> SAMEDAY
    com.cn7782.management.android.activity.tabview.CalendarView$State TODAY -> TODAY
    com.cn7782.management.android.activity.tabview.CalendarView$State NORMAL -> NORMAL
    com.cn7782.management.android.activity.tabview.CalendarView$State CLICK_DAY -> CLICK_DAY
    com.cn7782.management.android.activity.tabview.CalendarView$State SCHEDULE_DAY -> SCHEDULE_DAY
    com.cn7782.management.android.activity.tabview.CalendarView$State[] $VALUES -> a
    com.cn7782.management.android.activity.tabview.CalendarView$State[] values() -> values
    com.cn7782.management.android.activity.tabview.CalendarView$State valueOf(java.lang.String) -> valueOf
com.cn7782.management.android.activity.tabview.ChangeListView -> com.cn7782.management.android.activity.tabview.ChangeListView:
    void onMeasure(int,int) -> onMeasure
com.cn7782.management.android.activity.tabview.CircleTextView -> com.cn7782.management.android.activity.tabview.CircleTextView:
    java.lang.String mText -> a
    android.graphics.Paint mCirclePaint -> b
    android.graphics.Paint mTextPaint -> c
    int mViewWidth -> d
    int mViewHight -> e
    android.view.View$OnClickListener onClickListener -> f
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setmText(java.lang.String) -> setmText
    void onDraw(android.graphics.Canvas) -> onDraw
    void init() -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void initPaint(boolean) -> a
com.cn7782.management.android.activity.tabview.MyProgressDialog -> com.cn7782.management.android.activity.tabview.c:
    android.content.Context mContext -> a
    java.lang.String mTipInfo -> b
    android.app.AlertDialog progress -> c
    android.widget.TextView tipInfoTV -> d
    void show() -> a
    void setMessage(java.lang.String) -> a
    void dismiss() -> b
com.cn7782.management.android.activity.tabview.MyProgressDialog$1 -> com.cn7782.management.android.activity.tabview.d:
    com.cn7782.management.android.activity.tabview.MyProgressDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.android.activity.tabview.SyncHorizontalScrollView -> com.cn7782.management.android.activity.tabview.SyncHorizontalScrollView:
    android.view.View view -> a
    android.widget.ImageView leftImage -> b
    android.widget.ImageView rightImage -> c
    int windowWitdh -> d
    android.app.Activity mContext -> e
    void setSomeParam(android.view.View,android.widget.ImageView,android.widget.ImageView,android.app.Activity) -> a
    void onScrollChanged(int,int,int,int) -> onScrollChanged
com.cn7782.management.android.constants.Constant -> com.cn7782.management.android.constants.Constant:
    java.lang.String NEW_FRIENDS_USERNAME -> NEW_FRIENDS_USERNAME
    java.lang.String GROUP_USERNAME -> GROUP_USERNAME
    java.lang.String CHAT_ROOM -> CHAT_ROOM
    java.lang.String ACCOUNT_REMOVED -> ACCOUNT_REMOVED
    java.lang.String ACCOUNT_CONFLICT -> ACCOUNT_CONFLICT
    java.lang.String CHAT_ROBOT -> CHAT_ROBOT
    java.lang.String MESSAGE_ATTR_ROBOT_MSGTYPE -> MESSAGE_ATTR_ROBOT_MSGTYPE
    java.lang.String ACTION_GROUP_CHANAGED -> ACTION_GROUP_CHANAGED
    java.lang.String ACTION_CONTACT_CHANAGED -> ACTION_CONTACT_CHANAGED
com.cn7782.management.android.constants.GlobalConstant -> com.cn7782.management.android.constants.GlobalConstant:
    float G_VALUE -> G_VALUE
    int FALLDOWN_COUNT -> FALLDOWN_COUNT
    int FALL_DOWN_NOTIFICATION_ID -> FALL_DOWN_NOTIFICATION_ID
    int MSG_ID -> MSG_ID
    int ADD_VIEW -> ADD_VIEW
    int MY_VIEW -> MY_VIEW
    int QUERY_VIEW -> QUERY_VIEW
    float DRIVESPEED -> DRIVESPEED
    java.lang.String APPLSTATE -> APPLSTATE
    int PIC_MAX -> PIC_MAX
    java.util.Map getTypeStringMap() -> getTypeStringMap
    java.util.Map getJobTypeMap() -> getJobTypeMap
    java.util.Map getJobStrMap() -> getJobStrMap
    java.util.Map getTypeStringAndIntMap() -> getTypeStringAndIntMap
    java.util.Map getWorkTypeAndString() -> getWorkTypeAndString
    java.util.Map getCableWorkTypeAndString() -> getCableWorkTypeAndString
com.cn7782.management.android.constants.PreferenceConstant -> com.cn7782.management.android.constants.PreferenceConstant:
    java.lang.String USER_ID -> USER_ID
    java.lang.String MARK_ID -> MARK_ID
    java.lang.String TIME -> TIME
    java.lang.String CONTENT -> CONTENT
    java.lang.String MARK_ID_TABLE -> MARK_ID_TABLE
    java.lang.String GRID_ID -> GRID_ID
    java.lang.String PASSWORD -> PASSWORD
    java.lang.String ACCOUNT -> ACCOUNT
    java.lang.String USER_PHOTO -> USER_PHOTO
    java.lang.String EVENTREPORT -> EVENTREPORT
    java.lang.String HISTORYLIST -> HISTORYLIST
    java.lang.String ROLES -> ROLES
    java.lang.String SHAKE -> SHAKE
    java.lang.String HELP -> HELP
    java.lang.String EXIT -> EXIT
    java.lang.String NOTICE -> NOTICE
    java.lang.String Voice -> Voice
    java.lang.String VIBRATION -> VIBRATION
    java.lang.String PRIVATE -> PRIVATE
    java.lang.String COLOR_STATUS_KEY -> COLOR_STATUS_KEY
    java.lang.String IS_MSG_NOTIFY -> IS_MSG_NOTIFY
    java.lang.String IS_MSG_SOUND -> IS_MSG_SOUND
    java.lang.String IS_MSG_VIBRATOR -> IS_MSG_VIBRATOR
    java.lang.String IS_MSG_BACK -> IS_MSG_BACK
    java.lang.String NOT_READ -> NOT_READ
    java.lang.String IP -> IP
    java.lang.String PORT -> PORT
com.cn7782.management.android.db.DBHelper -> com.cn7782.management.android.db.DBHelper:
    java.lang.String sqlite -> sqlite
    int factory -> factory
    java.lang.String tablename -> tablename
    android.content.Context mcontext -> a
    java.lang.String TABLENAME -> TABLENAME
    java.lang.String DEPARTMENTTABLE -> DEPARTMENTTABLE
    java.lang.String EMPLOYEETABLE -> EMPLOYEETABLE
    void settablename(java.lang.String) -> settablename
    java.lang.String gettablename() -> gettablename
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void dropTable(java.lang.String) -> dropTable
    void deleteTable(java.lang.String) -> deleteTable
    void deleteTable(int) -> deleteTable
    void insert(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> insert
    void insertTalbe(java.lang.String,java.lang.String,double,double,double,int,java.lang.String) -> insertTalbe
    void updateTable() -> updateTable
    void updateTable(int,java.lang.String) -> updateTable
    void updataEventId(java.lang.String,java.lang.String) -> updataEventId
    void updateEndTime(java.lang.String,java.lang.String) -> updateEndTime
    android.database.Cursor query(java.lang.String,java.lang.String[]) -> query
    void creatNewTable(java.lang.String) -> creatNewTable
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void updataDuration(java.lang.String,int) -> updataDuration
    void creatDepartmentTable() -> creatDepartmentTable
    void bulkInsert(java.lang.String,java.util.ArrayList) -> bulkInsert
    void deleteTable() -> deleteTable
    void creatEmployeeTable() -> creatEmployeeTable
    boolean isTableExists(java.lang.String) -> isTableExists
    boolean isRecordExists(java.lang.String) -> isRecordExists
com.cn7782.management.android.offlinemaps.GpsLocation -> com.cn7782.management.android.offlinemaps.GpsLocation:
    com.cn7782.management.android.offlinemaps.GpsLocation LASTESTLOCATION -> LASTESTLOCATION
    double longitude -> a
    double latitude -> b
    java.lang.String address -> c
    double getLongitude() -> getLongitude
    double getLatitude() -> getLatitude
    java.lang.String getAddress() -> getAddress
com.cn7782.management.android.offlinemaps.GpsLocationClient -> com.cn7782.management.android.offlinemaps.a:
com.cn7782.management.android.offlinemaps.GpsLocationClientFactory -> com.cn7782.management.android.offlinemaps.GpsLocationClientFactory:
    int CLIENTTYPE_MOBILE_GPS -> CLIENTTYPE_MOBILE_GPS
    int CLIENTTYPE_BAIDU -> CLIENTTYPE_BAIDU
    com.cn7782.management.android.offlinemaps.GpsLocationClient getGpsLocationClient(int,android.content.Context) -> getGpsLocationClient
com.cn7782.management.android.offlinemaps.MobileGpsLocationClient -> com.cn7782.management.android.offlinemaps.b:
    java.lang.String TAG -> b
    android.location.LocationManager locationManager -> c
    android.content.Context context -> d
    android.location.Location location -> e
    android.location.GpsStatus$Listener listener -> a
    android.location.LocationListener locationListener -> f
    void init() -> b
    void updateLocation(android.location.Location) -> a
    java.lang.String access$000() -> a
    android.location.LocationManager access$100(com.cn7782.management.android.offlinemaps.MobileGpsLocationClient) -> a
    void access$200(com.cn7782.management.android.offlinemaps.MobileGpsLocationClient,android.location.Location) -> a
com.cn7782.management.android.offlinemaps.MobileGpsLocationClient$1 -> com.cn7782.management.android.offlinemaps.c:
    com.cn7782.management.android.offlinemaps.MobileGpsLocationClient this$0 -> a
    void onGpsStatusChanged(int) -> onGpsStatusChanged
com.cn7782.management.android.offlinemaps.MobileGpsLocationClient$2 -> com.cn7782.management.android.offlinemaps.d:
    com.cn7782.management.android.offlinemaps.MobileGpsLocationClient this$0 -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
com.cn7782.management.config.ActionUrl -> com.cn7782.management.config.ActionUrl:
    java.lang.String IP -> IP
    java.lang.String PORT -> PORT
    java.lang.String URL -> URL
    java.lang.String LOGIN_URL -> LOGIN_URL
    java.lang.String NUMBER -> NUMBER
    java.lang.String MSG_NUMBER -> MSG_NUMBER
    java.lang.String PUPLIC_SECURITY -> PUPLIC_SECURITY
    java.lang.String DISPUTE -> DISPUTE
    java.lang.String PROTECT -> PROTECT
    java.lang.String NOTICE -> NOTICE
    java.lang.String NOTICE_DETAIL -> NOTICE_DETAIL
    java.lang.String SUBMIT_COMMENT -> SUBMIT_COMMENT
    java.lang.String NOTICE_COMMENT_LIST -> NOTICE_COMMENT_LIST
    java.lang.String HAVE_READ -> HAVE_READ
    java.lang.String DYNAMIC_LIST -> DYNAMIC_LIST
    java.lang.String MESSAGE_LIST -> MESSAGE_LIST
    java.lang.String DYNAMIC_DETAIL -> DYNAMIC_DETAIL
    java.lang.String MESSAGE_DETAIL -> MESSAGE_DETAIL
    java.lang.String DYNAMIC_READ -> DYNAMIC_READ
    java.lang.String TRAFECTORY -> TRAFECTORY
    java.lang.String STATISTICAL -> STATISTICAL
    java.lang.String MYREPORT -> MYREPORT
    java.lang.String MYREPORT_DETAIL -> MYREPORT_DETAIL
    java.lang.String CHANGE_PASSWORD -> CHANGE_PASSWORD
    java.lang.String ZONGEVENT_REPORY -> ZONGEVENT_REPORY
    java.lang.String ZONGWAY -> ZONGWAY
    java.lang.String EVENTREPORT -> EVENTREPORT
    java.lang.String WAYREPORT -> WAYREPORT
    java.lang.String PRIVATE -> PRIVATE
    java.lang.String UPLOAD -> UPLOAD
    java.lang.String MYPATROL -> MYPATROL
    java.lang.String PATROLDETAIL -> PATROLDETAIL
    java.lang.String SENDNOTICE -> SENDNOTICE
    java.lang.String HITTORY -> HITTORY
    java.lang.String TRAJECTORY_HITTORY -> TRAJECTORY_HITTORY
    java.lang.String HITTORY_DETAIL -> HITTORY_DETAIL
    java.lang.String INFO -> INFO
    java.lang.String GRID -> GRID
    java.lang.String UPDATEPHOTO -> UPDATEPHOTO
    java.lang.String CHANGEINFO -> CHANGEINFO
    java.lang.String FEEDBACK -> FEEDBACK
    java.lang.String SOS -> SOS
    java.lang.String DEPARTMENT -> DEPARTMENT
    java.lang.String EMPLOYEE -> EMPLOYEE
    java.lang.String SCHEDULE -> SCHEDULE
    java.lang.String SCHEDULEDETAIL -> SCHEDULEDETAIL
    java.lang.String SCHEDULEUPDATE -> SCHEDULEUPDATE
    java.lang.String SCHEDULEDELETE -> SCHEDULEDELETE
    java.lang.String UPDATE_SERVER -> UPDATE_SERVER
    java.lang.String UPDATE_SERVER2 -> UPDATE_SERVER2
    void changeIP(android.content.Context) -> changeIP
    void change() -> change
com.cn7782.management.config.ConfigUtil -> com.cn7782.management.config.a:
    java.lang.String getVerName(android.content.Context) -> a
com.cn7782.management.config.PhotoConfig -> com.cn7782.management.config.PhotoConfig:
    java.lang.String HEAD_CACHE_FILE_DIR -> HEAD_CACHE_FILE_DIR
    java.io.File PHOTO_DIR -> PHOTO_DIR
    java.lang.String PHOTO_UPLOAD_TEMP_DIR -> PHOTO_UPLOAD_TEMP_DIR
    java.io.File getUploadFile(java.lang.String) -> getUploadFile
com.cn7782.management.fragment.ChatFragment -> com.cn7782.management.fragment.a:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setUpView() -> setUpView
    void registerExtendMenuItem() -> registerExtendMenuItem
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onSetMessageAttributes(com.easemob.chat.EMMessage) -> onSetMessageAttributes
    com.easemob.easeui.widget.chatrow.EaseCustomChatRowProvider onSetCustomChatRowProvider() -> onSetCustomChatRowProvider
    void onEnterToChatDetails() -> onEnterToChatDetails
    void onAvatarClick(java.lang.String) -> onAvatarClick
    boolean onMessageBubbleClick(com.easemob.chat.EMMessage) -> onMessageBubbleClick
    void onMessageBubbleLongClick(com.easemob.chat.EMMessage) -> onMessageBubbleLongClick
    boolean onExtendMenuItemClick(int,android.view.View) -> onExtendMenuItemClick
    void selectFileFromLocal() -> a
com.cn7782.management.fragment.ChooseAddress -> com.cn7782.management.fragment.b:
    com.cn7782.management.fragment.ChooseAddress$MyListener myListener -> a
    java.util.List mlist -> b
    android.widget.ListView listview -> c
    com.baidu.mapapi.search.poi.PoiSearch mPoiSearch -> d
    java.lang.String address -> e
    com.cn7782.management.android.activity.adapter.ChooseAdapter adapter -> f
    boolean isfirst -> g
    boolean havestr -> h
    android.widget.TextView text -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onAttach(android.app.Activity) -> onAttach
    void getData(java.util.List) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    java.util.List access$000(com.cn7782.management.fragment.ChooseAddress) -> a
    com.cn7782.management.fragment.ChooseAddress$MyListener access$100(com.cn7782.management.fragment.ChooseAddress) -> b
com.cn7782.management.fragment.ChooseAddress$1 -> com.cn7782.management.fragment.c:
    com.cn7782.management.fragment.ChooseAddress this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.fragment.ChooseAddress$MyListener -> com.cn7782.management.fragment.d:
    void showMessage(com.baidu.mapapi.model.LatLng,java.lang.String) -> showMessage
com.cn7782.management.fragment.ConversationListFragment -> com.cn7782.management.fragment.e:
    void initView() -> initView
    void setUpView() -> setUpView
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    com.easemob.easeui.widget.EaseConversationList access$000(com.cn7782.management.fragment.ConversationListFragment) -> a
com.cn7782.management.fragment.ConversationListFragment$1 -> com.cn7782.management.fragment.f:
    com.cn7782.management.fragment.ConversationListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.fragment.ImageGridFragment -> com.cn7782.management.fragment.g:
    int mImageThumbSize -> b
    int mImageThumbSpacing -> c
    com.cn7782.management.fragment.ImageGridFragment$ImageAdapter mAdapter -> d
    com.cn7782.management.video.util.util.ImageResizer mImageResizer -> e
    java.util.List mList -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void getVideoFile() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    com.cn7782.management.video.util.util.ImageResizer access$000(com.cn7782.management.fragment.ImageGridFragment) -> a
    int access$100(com.cn7782.management.fragment.ImageGridFragment) -> b
    int access$200(com.cn7782.management.fragment.ImageGridFragment) -> c
    com.cn7782.management.fragment.ImageGridFragment$ImageAdapter access$300(com.cn7782.management.fragment.ImageGridFragment) -> d
com.cn7782.management.fragment.ImageGridFragment$1 -> com.cn7782.management.fragment.h:
    com.cn7782.management.fragment.ImageGridFragment this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.cn7782.management.fragment.ImageGridFragment$2 -> com.cn7782.management.fragment.i:
    android.widget.GridView val$mGridView -> a
    com.cn7782.management.fragment.ImageGridFragment this$0 -> b
    void onGlobalLayout() -> onGlobalLayout
com.cn7782.management.fragment.ImageGridFragment$ImageAdapter -> com.cn7782.management.fragment.j:
    android.content.Context mContext -> b
    int mItemHeight -> c
    android.widget.RelativeLayout$LayoutParams mImageViewLayoutParams -> d
    com.cn7782.management.fragment.ImageGridFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setItemHeight(int) -> a
com.cn7782.management.fragment.ImageGridFragment$ImageAdapter$ViewHolder -> com.cn7782.management.fragment.k:
    com.cn7782.management.view.RecyclingImageView imageView -> a
    android.widget.ImageView icon -> b
    android.widget.TextView tvDur -> c
    android.widget.TextView tvSize -> d
    com.cn7782.management.fragment.ImageGridFragment$ImageAdapter this$1 -> e
com.cn7782.management.fragment.ImagePreviewFragemnt -> com.cn7782.management.fragment.l:
    java.util.ArrayList images -> e
    int pos -> f
    java.util.List views -> a
    android.support.v4.view.ViewPager pager -> b
    com.cn7782.management.fragment.ImagePreviewFragemnt$MypageAdapter adapter -> c
    android.view.LayoutInflater inflater -> d
    com.cn7782.management.fragment.ImagePreviewFragemnt newInstance(java.util.ArrayList,int) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void displayImage(java.lang.String,android.widget.ImageView) -> a
    java.lang.String delete() -> delete
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initpage(java.util.List) -> a
com.cn7782.management.fragment.ImagePreviewFragemnt$MypageAdapter -> com.cn7782.management.fragment.m:
    java.util.List views -> a
    int mChildCount -> c
    com.cn7782.management.fragment.ImagePreviewFragemnt this$0 -> b
    int getCount() -> getCount
    void notifyDataSetChanged() -> notifyDataSetChanged
    int getItemPosition(java.lang.Object) -> getItemPosition
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
com.cn7782.management.fragment.PhotoGalleryFragment -> com.cn7782.management.fragment.PhotoGalleryFragment:
    int CHOSE_MODE_SINGLE -> CHOSE_MODE_SINGLE
    int CHOSE_MODE_MULTIPLE -> CHOSE_MODE_MULTIPLE
    int max_chose_count -> max_chose_count
    android.view.View rootview -> a
    android.support.v7.widget.RecyclerView my_recycler_view -> b
    android.widget.TextView open_gallery -> c
    com.cn7782.management.android.activity.adapter.PhotoAdapter adapter -> d
    java.util.ArrayList imageses -> e
    java.util.List currentimageses -> f
    android.os.Handler handler -> g
    java.util.HashSet mDirPaths -> l
    int totalCount -> h
    java.util.List mImageFloders -> m
    android.widget.ListPopupWindow popupWindow -> i
    com.cn7782.management.android.activity.adapter.FloderAdapter floderAdapter -> j
    int chose_mode -> k
    boolean handleMessage(android.os.Message) -> handleMessage
    void initFloderPop() -> a
    com.cn7782.management.fragment.PhotoGalleryFragment newInstance(int,int) -> newInstance
    void addCaptureFile(java.lang.String) -> addCaptureFile
    void onCreate(android.os.Bundle) -> onCreate
    void time(java.lang.String) -> time
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void log(java.lang.String) -> log
    void notifyDataSetChanged() -> notifyDataSetChanged
    void loadAllImages() -> loadAllImages
    void getImages() -> b
    void access$000(com.cn7782.management.fragment.PhotoGalleryFragment) -> a
    java.util.HashSet access$100(com.cn7782.management.fragment.PhotoGalleryFragment) -> b
    java.util.List access$200(com.cn7782.management.fragment.PhotoGalleryFragment) -> c
    java.util.HashSet access$102(com.cn7782.management.fragment.PhotoGalleryFragment,java.util.HashSet) -> a
com.cn7782.management.fragment.PhotoGalleryFragment$1 -> com.cn7782.management.fragment.n:
    com.cn7782.management.fragment.PhotoGalleryFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.fragment.PhotoGalleryFragment$1$1 -> com.cn7782.management.fragment.o:
    com.cn7782.management.fragment.PhotoGalleryFragment$1 this$1 -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.cn7782.management.fragment.PhotoGalleryFragment$2 -> com.cn7782.management.fragment.p:
    java.lang.String val$path -> a
    com.cn7782.management.fragment.PhotoGalleryFragment this$0 -> b
    void run() -> run
com.cn7782.management.fragment.PhotoGalleryFragment$3 -> com.cn7782.management.fragment.q:
    com.cn7782.management.fragment.PhotoGalleryFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.fragment.PhotoGalleryFragment$4 -> com.cn7782.management.fragment.r:
    com.cn7782.management.fragment.PhotoGalleryFragment this$0 -> a
    void run() -> run
com.cn7782.management.fragment.PhotoGalleryFragment$5 -> com.cn7782.management.fragment.s:
    com.cn7782.management.fragment.PhotoGalleryFragment this$0 -> a
    void run() -> run
com.cn7782.management.fragment.PhotoGalleryFragment$5$1 -> com.cn7782.management.fragment.t:
    com.cn7782.management.fragment.PhotoGalleryFragment$5 this$1 -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.cn7782.management.fragment.WorkIng -> com.cn7782.management.fragment.u:
    com.cn7782.management.android.activity.adapter.WorkingAdapter workingadapter -> b
    java.util.List list -> c
    android.widget.ListView listview -> d
    java.lang.String tokenId -> a
    java.lang.String state -> e
    boolean isfirst -> f
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView() -> a
    void getdata() -> b
    void getdata2() -> c
    java.util.List access$000(com.cn7782.management.fragment.WorkIng) -> a
    java.util.List access$002(com.cn7782.management.fragment.WorkIng,java.util.List) -> a
    boolean access$102(com.cn7782.management.fragment.WorkIng,boolean) -> a
    void access$200(com.cn7782.management.fragment.WorkIng) -> b
com.cn7782.management.fragment.WorkIng$1 -> com.cn7782.management.fragment.v:
    com.cn7782.management.fragment.WorkIng this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cn7782.management.fragment.WorkIng$2 -> com.cn7782.management.fragment.w:
    com.cn7782.management.fragment.WorkIng this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.cn7782.management.fragment.WorkIng$3 -> com.cn7782.management.fragment.x:
    com.cn7782.management.fragment.WorkIng this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.cn7782.management.http.HttpClient -> com.cn7782.management.http.HttpClient:
    com.loopj.android.http.AsyncHttpClient client -> a
    com.loopj.android.http.AsyncHttpClient httpClient -> httpClient
    void post(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> post
    com.loopj.android.http.AsyncHttpClient getInstance() -> getInstance
com.cn7782.management.http.HttpDownloader -> com.cn7782.management.http.HttpDownloader:
    java.net.URL url -> b
    int MSG_DOWNING -> MSG_DOWNING
    int MSG_FINISH -> MSG_FINISH
    int MSG_FAILURE -> MSG_FAILURE
    int SDCARD_NO_SPACE -> SDCARD_NO_SPACE
    int FILE_EXISTER -> FILE_EXISTER
    com.cn7782.management.util.FileUtil fileUtils -> a
    boolean downLoadFile(java.lang.String,java.lang.String,java.lang.String,android.os.Handler,long) -> downLoadFile
    int downfile(java.lang.String,java.lang.String,java.lang.String) -> downfile
    java.io.InputStream getInputStream(java.lang.String) -> getInputStream
com.cn7782.management.http.MyAsyncHttpResponseHandler -> com.cn7782.management.http.a:
    android.content.Context mContext -> c
    java.lang.String mTipInfo -> d
    android.app.AlertDialog progress -> e
    void onStart() -> onStart
    void onSuccess(java.lang.String) -> onSuccess
    void onTokenTimeOut(java.lang.String) -> a
    void openLoading() -> b
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
    void loadingLayout() -> a
    void closeLoading() -> c
com.cn7782.management.http.MyAsyncHttpResponseHandler$1 -> com.cn7782.management.http.b:
    com.cn7782.management.http.MyAsyncHttpResponseHandler this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.cn7782.management.util.ActivityUtil -> com.cn7782.management.util.ActivityUtil:
    java.io.File mPhotoFile -> mPhotoFile
    java.lang.String mfolder -> mfolder
    int PICK_PHOTO_FROM_SYSTEM -> PICK_PHOTO_FROM_SYSTEM
    int TAKE_PHOTO_USING_CAMERA -> TAKE_PHOTO_USING_CAMERA
    int CROP_PHOTO_BY_SYSTEM -> CROP_PHOTO_BY_SYSTEM
    java.lang.String mSdRootPath -> a
    java.lang.String mDataRootPath -> b
    java.lang.String getStorageDirectory() -> getStorageDirectory
    void savaBitmap(java.lang.String,android.graphics.Bitmap) -> savaBitmap
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    void startCamera(android.app.Activity) -> startCamera
    void creatfile() -> creatfile
    java.lang.String getPhotoFileName() -> getPhotoFileName
    java.lang.String setFolderName(java.lang.String) -> setFolderName
    android.content.Intent getCropImageIntent(android.net.Uri,int,int) -> getCropImageIntent
    void selectPhoto(android.app.Activity,int,int) -> selectPhoto
    boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
    java.lang.String getTimeNow() -> getTimeNow
    android.graphics.Bitmap toRoundBitmap(android.graphics.Bitmap) -> toRoundBitmap
    java.lang.Long getAvaliableSpaceAboutSdcard() -> getAvaliableSpaceAboutSdcard
    boolean isSdcardExist() -> isSdcardExist
com.cn7782.management.util.DateUtil -> com.cn7782.management.util.DateUtil:
    java.lang.String[] weekName -> weekName
    int getMonthDays(int,int) -> getMonthDays
    int getYear() -> getYear
    int getMonth() -> getMonth
    int getCurrentMonthDay() -> getCurrentMonthDay
    int getWeekDay() -> getWeekDay
    int getHour() -> getHour
    int getMinute() -> getMinute
    com.cn7782.management.android.activity.bean.CustomDate getNextSunday() -> getNextSunday
    int[] getWeekSunday(int,int,int,int) -> getWeekSunday
    int getWeekFromDate(int,int,int) -> getWeekFromDate
    int getWeekDayFromDate(int,int) -> getWeekDayFromDate
    java.util.Date getDateFromString(int,int) -> getDateFromString
    java.util.Date getDateFromString2(int,int,int) -> getDateFromString2
    boolean isToday(com.cn7782.management.android.activity.bean.CustomDate) -> isToday
    boolean isCurrentMonth(com.cn7782.management.android.activity.bean.CustomDate) -> isCurrentMonth
    int getCurrentSameDay(int,int,int) -> getCurrentSameDay
    java.lang.String[] getFirstLastdayMonth(java.util.Date) -> getFirstLastdayMonth
com.cn7782.management.util.DateUtils -> com.cn7782.management.util.a:
    java.text.SimpleDateFormat dateFormat -> a
    java.lang.String getFormatDate_yyyy_MM_dd(java.util.Date) -> a
com.cn7782.management.util.FileUtil -> com.cn7782.management.util.b:
    java.lang.String SDPATH -> a
    java.io.File creatSDFile(java.lang.String) -> a
    java.io.File creatSDDir(java.lang.String) -> b
    boolean isFileExist(java.lang.String) -> c
    java.io.File write2SDFromInput(java.lang.String,java.lang.String,java.io.InputStream) -> a
com.cn7782.management.util.LogUtil -> com.cn7782.management.util.LogUtil:
    boolean logoff -> logoff
    int level -> level
    void trace(int,java.lang.String,java.lang.String) -> trace
    void v(java.lang.String,java.lang.String) -> v
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void e(java.lang.String,java.lang.String) -> e
    void d(java.lang.String,java.lang.String) -> d
com.cn7782.management.util.Lunar -> com.cn7782.management.util.Lunar:
    int[] lunarInfo -> a
    int[] solarTermInfo -> b
    java.lang.String[] Tianan -> Tianan
    java.lang.String[] Deqi -> Deqi
    java.lang.String[] Animals -> Animals
    java.lang.String[] solarTerm -> solarTerm
    java.lang.String[] lunarString1 -> lunarString1
    java.lang.String[] lunarString2 -> lunarString2
    java.lang.String[] sFtv -> c
    java.lang.String[] lFtv -> d
    java.lang.String[] wFtv -> e
    java.util.regex.Pattern sFreg -> f
    java.util.regex.Pattern wFreg -> g
    boolean isFinded -> h
    boolean isSFestival -> i
    boolean isLFestival -> j
    java.lang.String sFestivalName -> k
    java.lang.String lFestivalName -> l
    java.lang.String description -> m
    boolean isHoliday -> n
    java.util.GregorianCalendar utcCal -> o
    java.util.Calendar solar -> p
    int lunarYear -> q
    int lunarMonth -> r
    int lunarDay -> s
    boolean isLeap -> t
    boolean isLeapYear -> u
    int solarYear -> v
    int solarMonth -> w
    int solarDay -> x
    int cyclicalYear -> y
    int cyclicalMonth -> z
    int cyclicalDay -> A
    int maxDayInMonth -> B
    void main(java.lang.String[]) -> main
    int toInt(java.lang.String) -> a
    void findFestival() -> a
    int getLunarLeapMonth(int) -> a
    int getLunarLeapDays(int) -> b
    int getLunarYearDays(int) -> c
    int getLunarMonthDays(int,int) -> a
    int getUTCDay(java.util.Date) -> getUTCDay
    void makeUTCCalendar() -> b
    long UTC(int,int,int,int,int,int) -> UTC
    int getSolarTermDay(int,int) -> b
    void init(long) -> a
    void getCyclicalData() -> c
    java.lang.String getAnimalString() -> getAnimalString
    java.lang.String getTermString() -> getTermString
    java.lang.String getCyclicalDateString() -> getCyclicalDateString
    int getTiananY() -> getTiananY
    int getTiananM() -> getTiananM
    int getTiananD() -> getTiananD
    int getDeqiY() -> getDeqiY
    int getDeqiM() -> getDeqiM
    int getDeqiD() -> getDeqiD
    java.lang.String getCyclicaYear() -> getCyclicaYear
    java.lang.String getCyclicaMonth() -> getCyclicaMonth
    java.lang.String getCyclicaDay() -> getCyclicaDay
    java.lang.String getLunarDayString() -> getLunarDayString
    java.lang.String getLunarMonthString() -> getLunarMonthString
    java.lang.String getLunarYearString() -> getLunarYearString
    java.lang.String getLunarDateString() -> getLunarDateString
    boolean isLeap() -> isLeap
    boolean isLeapYear() -> isLeapYear
    boolean isBigMonth() -> isBigMonth
    int getMaxDayInMonth() -> getMaxDayInMonth
    int getLunarDay() -> getLunarDay
    int getLunarMonth() -> getLunarMonth
    int getLunarYear() -> getLunarYear
    int getSolarDay() -> getSolarDay
    int getSolarMonth() -> getSolarMonth
    int getSolarYear() -> getSolarYear
    int getDayOfWeek() -> getDayOfWeek
    boolean isBlackFriday() -> isBlackFriday
    boolean isToday() -> isToday
    java.lang.String getSFestivalName() -> getSFestivalName
    java.lang.String getLFestivalName() -> getLFestivalName
    boolean isLFestival() -> isLFestival
    boolean isSFestival() -> isSFestival
    boolean isFestival() -> isFestival
    boolean isHoliday() -> isHoliday
    java.lang.String getDescription() -> getDescription
    java.lang.String getCyclicalString(int) -> d
    int getDeqi(int) -> e
    int getTianan(int) -> f
    java.lang.String getLunarYearString(int) -> g
    java.lang.String getLunarMonthString(int) -> h
    java.lang.String getLunarDayString(int) -> i
com.cn7782.management.util.MedieaPlayerUtil -> com.cn7782.management.util.c:
    android.content.Context context -> a
    android.media.MediaPlayer mMediaPlayer -> b
    android.media.MediaPlayer getmMediaPlayer() -> a
    void playAlarmRing() -> b
    void stopPlay() -> c
    void playURL(java.lang.String) -> a
    void playFilepath(java.lang.String) -> b
    void showVideoThumbView(java.lang.String,android.widget.ImageView) -> a
com.cn7782.management.util.MedieaPlayerUtil$1 -> com.cn7782.management.util.d:
    java.lang.String val$localThumb -> a
    android.widget.ImageView val$iv -> b
    android.graphics.Bitmap doInBackground(java.lang.Void[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cn7782.management.util.PictureUtil -> com.cn7782.management.util.e:
    java.lang.String mSdRootPath -> a
    java.lang.String mDataRootPath -> b
    java.lang.String getStorageDirectory() -> a
    void creatfile() -> b
    void saveMyBitmap(java.lang.String,android.graphics.Bitmap) -> a
    void ShowPicture(android.widget.ImageView,android.content.Context,java.lang.String) -> a
    android.graphics.Bitmap getBitmap(java.lang.String) -> a
    android.graphics.Bitmap getSmallBitmap(java.lang.String) -> b
    int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> a
com.cn7782.management.util.PictureUtil$1 -> com.cn7782.management.util.f:
    java.lang.String val$headurl -> a
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
com.cn7782.management.util.SharedPreferenceUtil -> com.cn7782.management.util.g:
    android.content.SharedPreferences preferences -> a
    void modify(java.lang.String,java.lang.String,java.lang.String,android.content.Context) -> a
    java.lang.String getValue(java.lang.String,java.lang.String,android.content.Context) -> a
    void saveBooleanDataToSharePreference(android.content.Context,java.lang.String,boolean) -> a
    android.content.SharedPreferences getInstance(android.content.Context) -> a
    boolean getBooleanDataByKey(android.content.Context,java.lang.String,boolean) -> b
com.cn7782.management.util.SoundMeter -> com.cn7782.management.util.h:
    android.media.MediaRecorder mRecorder -> a
    double mEMA -> b
    void start(java.lang.String) -> a
    void stop() -> a
    double getAmplitude() -> b
com.cn7782.management.util.TimeUtil -> com.cn7782.management.util.i:
    java.lang.String formatTimeTextDisplay(int) -> a
    java.lang.String getDateTime(long) -> a
com.cn7782.management.util.ToastUtil -> com.cn7782.management.util.j:
    android.widget.Toast mToast -> a
    void showMessage(android.content.Context,java.lang.String) -> a
com.cn7782.management.util.TrackSumbitUtil -> com.cn7782.management.util.k:
    java.util.List getGeoPointList(java.util.List) -> a
    java.lang.String[] getParamStr(java.util.List) -> b
    java.lang.String counTime(java.lang.String,java.lang.String) -> a
    java.util.List paraseLocateRequest(java.lang.String) -> a
com.cn7782.management.util.TrackSumbitUtil$1 -> com.cn7782.management.util.l:
com.cn7782.management.video.util.util.ImageCache -> com.cn7782.management.video.util.util.ImageCache:
    android.support.v4.util.LruCache mMemoryCache -> a
    com.cn7782.management.video.util.util.ImageCache$ImageCacheParams mCacheParams -> b
    java.util.Set mReusableBitmaps -> c
    com.cn7782.management.video.util.util.ImageCache getInstance(android.support.v4.app.FragmentManager,com.cn7782.management.video.util.util.ImageCache$ImageCacheParams) -> a
    void init(com.cn7782.management.video.util.util.ImageCache$ImageCacheParams) -> a
    void addBitmapToCache(java.lang.String,android.graphics.drawable.BitmapDrawable) -> a
    android.graphics.drawable.BitmapDrawable getBitmapFromMemCache(java.lang.String) -> a
    void clearCache() -> a
    int getBitmapSize(android.graphics.drawable.BitmapDrawable) -> a
    com.cn7782.management.video.util.util.ImageCache$RetainFragment findOrCreateRetainFragment(android.support.v4.app.FragmentManager) -> a
    java.util.Set access$000(com.cn7782.management.video.util.util.ImageCache) -> a
com.cn7782.management.video.util.util.ImageCache$1 -> com.cn7782.management.video.util.util.a:
    com.cn7782.management.video.util.util.ImageCache this$0 -> a
    void entryRemoved(boolean,java.lang.String,android.graphics.drawable.BitmapDrawable,android.graphics.drawable.BitmapDrawable) -> a
    int sizeOf(java.lang.String,android.graphics.drawable.BitmapDrawable) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
com.cn7782.management.video.util.util.ImageCache$ImageCacheParams -> com.cn7782.management.video.util.util.ImageCache$ImageCacheParams:
    int memCacheSize -> memCacheSize
    int compressQuality -> compressQuality
    boolean memoryCacheEnabled -> memoryCacheEnabled
    boolean initDiskCacheOnCreate -> initDiskCacheOnCreate
    void setMemCacheSizePercent(float) -> setMemCacheSizePercent
com.cn7782.management.video.util.util.ImageCache$RetainFragment -> com.cn7782.management.video.util.util.b:
    java.lang.Object mObject -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setObject(java.lang.Object) -> a
    java.lang.Object getObject() -> a
com.cn7782.management.video.util.util.ImageResizer -> com.cn7782.management.video.util.util.c:
    int mImageWidth -> a
    int mImageHeight -> b
    void setImageSize(int,int) -> a
    void setImageSize(int) -> a
    android.graphics.Bitmap processBitmap(java.lang.Object) -> a
com.cn7782.management.video.util.util.ImageWorker -> com.cn7782.management.video.util.util.ImageWorker:
    com.cn7782.management.video.util.util.ImageCache mImageCache -> a
    com.cn7782.management.video.util.util.ImageCache$ImageCacheParams mImageCacheParams -> b
    android.graphics.Bitmap mLoadingBitmap -> e
    boolean mFadeInBitmap -> f
    boolean mExitTasksEarly -> g
    boolean mPauseWork -> c
    java.lang.Object mPauseWorkLock -> h
    android.content.res.Resources mResources -> d
    java.util.concurrent.Executor DUAL_THREAD_EXECUTOR -> DUAL_THREAD_EXECUTOR
    void loadImage(java.lang.Object,android.widget.ImageView) -> loadImage
    void setLoadingImage(android.graphics.Bitmap) -> setLoadingImage
    void setLoadingImage(int) -> setLoadingImage
    void addImageCache(android.support.v4.app.FragmentManager,com.cn7782.management.video.util.util.ImageCache$ImageCacheParams) -> addImageCache
    void setImageFadeIn(boolean) -> setImageFadeIn
    void setExitTasksEarly(boolean) -> setExitTasksEarly
    android.graphics.Bitmap processBitmap(java.lang.Object) -> a
    void cancelWork(android.widget.ImageView) -> cancelWork
    boolean cancelPotentialWork(java.lang.Object,android.widget.ImageView) -> cancelPotentialWork
    com.cn7782.management.video.util.util.ImageWorker$BitmapWorkerTask getBitmapWorkerTask(android.widget.ImageView) -> b
    void setImageDrawable(android.widget.ImageView,android.graphics.drawable.Drawable) -> a
    void setPauseWork(boolean) -> setPauseWork
    void clearCacheInternal() -> a
    void clearCache() -> clearCache
    void flushCache() -> flushCache
    void closeCache() -> closeCache
    java.lang.Object access$100(com.cn7782.management.video.util.util.ImageWorker) -> a
    boolean access$200(com.cn7782.management.video.util.util.ImageWorker) -> b
    com.cn7782.management.video.util.util.ImageCache access$300(com.cn7782.management.video.util.util.ImageWorker) -> c
    void access$400(com.cn7782.management.video.util.util.ImageWorker,android.widget.ImageView,android.graphics.drawable.Drawable) -> a
    com.cn7782.management.video.util.util.ImageWorker$BitmapWorkerTask access$500(android.widget.ImageView) -> a
com.cn7782.management.video.util.util.ImageWorker$AsyncDrawable -> com.cn7782.management.video.util.util.d:
    java.lang.ref.WeakReference bitmapWorkerTaskReference -> a
    com.cn7782.management.video.util.util.ImageWorker$BitmapWorkerTask getBitmapWorkerTask() -> a
com.cn7782.management.video.util.util.ImageWorker$BitmapWorkerTask -> com.cn7782.management.video.util.util.e:
    java.lang.Object mData -> b
    java.lang.ref.WeakReference imageViewReference -> c
    com.cn7782.management.video.util.util.ImageWorker this$0 -> a
    android.graphics.drawable.BitmapDrawable doInBackground(java.lang.Void[]) -> a
    void onPostExecute(android.graphics.drawable.BitmapDrawable) -> a
    void onCancelled(android.graphics.drawable.BitmapDrawable) -> b
    android.widget.ImageView getAttachedImageView() -> a
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.Object access$000(com.cn7782.management.video.util.util.ImageWorker$BitmapWorkerTask) -> a
com.cn7782.management.video.util.util.ImageWorker$CacheAsyncTask -> com.cn7782.management.video.util.util.f:
    com.cn7782.management.video.util.util.ImageWorker this$0 -> a
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cn7782.management.video.util.util.RecyclingBitmapDrawable -> com.cn7782.management.video.util.util.g:
    int mCacheRefCount -> a
    int mDisplayRefCount -> b
    boolean mHasBeenDisplayed -> c
    void setIsDisplayed(boolean) -> a
    void setIsCached(boolean) -> b
    void checkState() -> a
    boolean hasValidBitmap() -> b
com.cn7782.management.video.util.util.Utils -> com.cn7782.management.video.util.util.h:
    boolean hasHoneycomb() -> a
    boolean hasHoneycombMR1() -> b
    boolean hasJellyBean() -> c
    java.util.List getResolutionList(android.hardware.Camera) -> a
com.cn7782.management.video.util.util.Utils$ResolutionComparator -> com.cn7782.management.video.util.util.i:
    int compare(android.hardware.Camera$Size,android.hardware.Camera$Size) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.cn7782.management.view.DragView -> com.cn7782.management.view.DragView:
    android.support.v4.widget.ViewDragHelper viewDrag -> a
    android.view.View sosView -> b
    android.support.v4.widget.ViewDragHelper$Callback callback -> c
    void onFinishInflate() -> onFinishInflate
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
com.cn7782.management.view.DragView$1 -> com.cn7782.management.view.a:
    com.cn7782.management.view.DragView this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
com.cn7782.management.view.MovieRecorderView -> com.cn7782.management.view.MovieRecorderView:
    android.view.SurfaceView mSurfaceView -> a
    android.view.SurfaceHolder mSurfaceHolder -> b
    android.media.MediaRecorder mMediaRecorder -> c
    android.hardware.Camera mCamera -> d
    java.util.Timer mTimer -> e
    com.cn7782.management.view.MovieRecorderView$OnRecordFinishListener mOnRecordFinishListener -> f
    int mWidth -> g
    int mHeight -> h
    boolean isOpenCamera -> i
    int mRecordMaxTime -> j
    int mTimeCount -> k
    java.io.File mVecordFile -> l
    void initCamera() -> c
    void setCameraParams() -> d
    void freeCameraResource() -> e
    void createRecordDir() -> f
    void initRecord() -> g
    void record(com.cn7782.management.view.MovieRecorderView$OnRecordFinishListener) -> a
    void stop() -> a
    void stopRecord() -> b
    void releaseRecord() -> h
    int getTimeCount() -> getTimeCount
    java.io.File getmVecordFile() -> getmVecordFile
    void onError(android.media.MediaRecorder,int,int) -> onError
    boolean access$100(com.cn7782.management.view.MovieRecorderView) -> a
    void access$200(com.cn7782.management.view.MovieRecorderView) -> b
    void access$300(com.cn7782.management.view.MovieRecorderView) -> c
    int access$408(com.cn7782.management.view.MovieRecorderView) -> d
    int access$400(com.cn7782.management.view.MovieRecorderView) -> e
    int access$500(com.cn7782.management.view.MovieRecorderView) -> f
    com.cn7782.management.view.MovieRecorderView$OnRecordFinishListener access$600(com.cn7782.management.view.MovieRecorderView) -> g
com.cn7782.management.view.MovieRecorderView$1 -> com.cn7782.management.view.b:
    com.cn7782.management.view.MovieRecorderView this$0 -> a
    void run() -> run
com.cn7782.management.view.MovieRecorderView$CustomCallBack -> com.cn7782.management.view.c:
    com.cn7782.management.view.MovieRecorderView this$0 -> a
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
com.cn7782.management.view.MovieRecorderView$OnRecordFinishListener -> com.cn7782.management.view.d:
    void onRecordFinish() -> a
com.cn7782.management.view.PullToRefreshView -> com.cn7782.management.view.PullToRefreshView:
    int mLastMotionY -> a
    boolean mLock -> b
    android.view.View mHeaderView -> c
    android.view.View mFooterView -> d
    android.widget.AdapterView mAdapterView -> e
    android.widget.ScrollView mScrollView -> f
    int mHeaderViewHeight -> g
    int mFooterViewHeight -> h
    android.widget.ImageView mHeaderImageView -> i
    android.widget.TextView mHeaderTextView -> j
    android.widget.TextView mFooterTextView -> k
    android.widget.TextView mHeaderUpdateTextView -> l
    android.widget.ProgressBar mHeaderProgressBar -> m
    android.widget.ProgressBar mFooterProgressBar -> n
    android.view.LayoutInflater mInflater -> o
    int mHeaderState -> p
    int mFooterState -> q
    int mPullState -> r
    android.view.animation.RotateAnimation mFlipAnimation -> s
    android.view.animation.RotateAnimation mReverseFlipAnimation -> t
    com.cn7782.management.view.PullToRefreshView$OnFooterRefreshListener mOnFooterRefreshListener -> u
    com.cn7782.management.view.PullToRefreshView$OnHeaderRefreshListener mOnHeaderRefreshListener -> v
    boolean footview -> w
    void init() -> f
    void addHeaderView() -> g
    void addFooterView() -> h
    void onFinishInflate() -> onFinishInflate
    void initContentAdapterView() -> i
    void measureView(android.view.View) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void StopFootView() -> a
    void StartFootView() -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isRefreshViewScroll(int) -> a
    void headerPrepareToRefresh(int) -> b
    void footerPrepareToRefresh(int) -> c
    int changingHeaderViewTopMargin(int) -> d
    void headerRefreshing() -> c
    void footerRefreshing() -> j
    void setHeaderTopMargin(int) -> setHeaderTopMargin
    void onHeaderRefreshComplete() -> d
    void onFooterRefreshComplete() -> e
    void setLastUpdated(java.lang.CharSequence) -> setLastUpdated
    int getHeaderTopMargin() -> getHeaderTopMargin
    void setOnHeaderRefreshListener(com.cn7782.management.view.PullToRefreshView$OnHeaderRefreshListener) -> setOnHeaderRefreshListener
    void setOnFooterRefreshListener(com.cn7782.management.view.PullToRefreshView$OnFooterRefreshListener) -> setOnFooterRefreshListener
com.cn7782.management.view.PullToRefreshView$OnFooterRefreshListener -> com.cn7782.management.view.e:
    void onFooterRefresh(com.cn7782.management.view.PullToRefreshView) -> a
com.cn7782.management.view.PullToRefreshView$OnHeaderRefreshListener -> com.cn7782.management.view.f:
    void onHeaderRefresh(com.cn7782.management.view.PullToRefreshView) -> a
com.cn7782.management.view.RecyclingImageView -> com.cn7782.management.view.RecyclingImageView:
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void notifyDrawable(android.graphics.drawable.Drawable,boolean) -> a
com.cn7782.management.view.SlidingListView -> com.cn7782.management.view.g:
    android.view.View slidinglistview -> a
    android.content.Context mContext -> b
    com.slidingmenu.lib.SlidingMenu mOwner -> c
    java.lang.String name -> d
    java.lang.String address -> e
    com.cn7782.management.android.activity.controller.SoundManager mSoundManager -> f
    android.os.Handler handler -> g
    void setdata(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getname() -> getname
    java.lang.String getaddress() -> getaddress
    void initViews(android.view.View) -> a
    void setOwner(com.slidingmenu.lib.SlidingMenu) -> setOwner
    android.view.View getView() -> getView
    void onClick(android.view.View) -> onClick
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    android.content.Context access$000(com.cn7782.management.view.SlidingListView) -> a
    com.cn7782.management.android.activity.controller.SoundManager access$100(com.cn7782.management.view.SlidingListView) -> b
com.cn7782.management.view.SlidingListView$1 -> com.cn7782.management.view.h:
    com.cn7782.management.view.SlidingListView this$0 -> a
    void onToggle(boolean) -> a
com.cn7782.management.view.SlidingListView$2 -> com.cn7782.management.view.i:
    com.cn7782.management.view.SlidingListView this$0 -> a
    void onToggle(boolean) -> a
com.cn7782.management.view.SlidingListView$Shake -> com.cn7782.management.view.j:
    com.cn7782.management.view.SlidingListView this$0 -> a
    void onShake() -> a
com.cn7782.management.view.ToggleButton -> com.cn7782.management.view.ToggleButton:
    com.facebook.rebound.SpringSystem springSystem -> b
    com.facebook.rebound.Spring spring -> c
    float radius -> d
    int onColor -> e
    int offBorderColor -> f
    int offColor -> g
    int spotColor -> h
    int borderColor -> i
    android.graphics.Paint paint -> j
    boolean toggleOn -> k
    int borderWidth -> l
    float centerY -> m
    float startX -> n
    float endX -> o
    float spotMinX -> p
    float spotMaxX -> q
    int spotSize -> r
    float spotX -> s
    float offLineWidth -> t
    android.graphics.RectF rect -> u
    com.cn7782.management.view.ToggleButton$OnToggleChanged listener -> v
    com.facebook.rebound.SimpleSpringListener springListener -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void setup(android.util.AttributeSet) -> setup
    void toggle() -> a
    void setToggleOn() -> b
    void setToggleOff() -> c
    boolean getCheck() -> getCheck
    void onLayout(boolean,int,int,int,int) -> onLayout
    int clamp(int,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void setOnToggleChanged(com.cn7782.management.view.ToggleButton$OnToggleChanged) -> setOnToggleChanged
    float access$000(com.cn7782.management.view.ToggleButton) -> a
    float access$100(com.cn7782.management.view.ToggleButton) -> b
    float access$202(com.cn7782.management.view.ToggleButton,float) -> a
    int access$300(com.cn7782.management.view.ToggleButton) -> c
    float access$402(com.cn7782.management.view.ToggleButton,float) -> b
    int access$500(com.cn7782.management.view.ToggleButton) -> d
    int access$600(com.cn7782.management.view.ToggleButton) -> e
    int access$700(com.cn7782.management.view.ToggleButton,int,int,int) -> a
    int access$802(com.cn7782.management.view.ToggleButton,int) -> a
com.cn7782.management.view.ToggleButton$1 -> com.cn7782.management.view.k:
    com.cn7782.management.view.ToggleButton this$0 -> a
    void onClick(android.view.View) -> onClick
com.cn7782.management.view.ToggleButton$2 -> com.cn7782.management.view.l:
    com.cn7782.management.view.ToggleButton this$0 -> a
    void onSpringUpdate(com.facebook.rebound.Spring) -> onSpringUpdate
com.cn7782.management.view.ToggleButton$OnToggleChanged -> com.cn7782.management.view.m:
    void onToggle(boolean) -> a
com.easemob.EMCallBack -> com.easemob.EMCallBack:
    int ERROR_EXCEPTION -> ERROR_EXCEPTION
    int ERROR_SEND -> ERROR_SEND
    int ERROR_FILE_NOT_FOUND -> ERROR_FILE_NOT_FOUND
    int ERROR_EXCEPTION_NO_ERROR -> ERROR_EXCEPTION_NO_ERROR
    int ERROR_EXCEPTION_UNKNOWN_SERVER_ERROR -> ERROR_EXCEPTION_UNKNOWN_SERVER_ERROR
    int ERROR_EXCEPTION_NONETWORK_ERROR -> ERROR_EXCEPTION_NONETWORK_ERROR
    int ERROR_EXCEPTION_DNS_ERROR -> ERROR_EXCEPTION_DNS_ERROR
    int ERROR_EXCEPTION_UNABLE_CONNECT_TO_SERVER -> ERROR_EXCEPTION_UNABLE_CONNECT_TO_SERVER
    int ERROR_EXCEPTION_CONNECT_TIMER_OUT -> ERROR_EXCEPTION_CONNECT_TIMER_OUT
    int ERROR_EXCEPTION_INVALID_PASSWORD_USERNAME -> ERROR_EXCEPTION_INVALID_PASSWORD_USERNAME
    int ERROR_EXCEPTION_INVALID_KEYSTORE -> ERROR_EXCEPTION_INVALID_KEYSTORE
    int ERROR_EXCEPTION_IO_EXCEPTION -> ERROR_EXCEPTION_IO_EXCEPTION
    int ERROR_EXCEPTION_INVALID_CERTIFICATE -> ERROR_EXCEPTION_INVALID_CERTIFICATE
    int ERROR_EXCEPTION_ENCRYPTION_ERROR -> ERROR_EXCEPTION_ENCRYPTION_ERROR
    int ERROR_EXCEPTION_LOGOFFINPROGRESS_ERROR -> ERROR_EXCEPTION_LOGOFFINPROGRESS_ERROR
    int ERROR_EXCEPTION_INVALID_FILE -> ERROR_EXCEPTION_INVALID_FILE
    int ERROR_EXCEPTION_FILE_NOT_FOUND -> ERROR_EXCEPTION_FILE_NOT_FOUND
    java.lang.Object data -> data
    void onSuccess() -> onSuccess
    void onError(int,java.lang.String) -> onError
    void onProgress(int,java.lang.String) -> onProgress
com.easemob.EMChangeEventData -> com.easemob.EMChangeEventData:
    java.lang.Object oldValue -> oldValue
    java.lang.Object newValue -> newValue
    void setOldValue(java.lang.Object) -> setOldValue
    void setNewValue(java.lang.Object) -> setNewValue
    java.lang.Object getOldValue() -> getOldValue
    java.lang.Object getNewValue() -> getNewValue
com.easemob.EMChatRoomChangeListener -> com.easemob.EMChatRoomChangeListener:
    void onChatRoomDestroyed(java.lang.String,java.lang.String) -> onChatRoomDestroyed
    void onMemberJoined(java.lang.String,java.lang.String) -> onMemberJoined
    void onMemberExited(java.lang.String,java.lang.String,java.lang.String) -> onMemberExited
    void onMemberKicked(java.lang.String,java.lang.String,java.lang.String) -> onMemberKicked
com.easemob.EMConnectionListener -> com.easemob.EMConnectionListener:
    void onConnected() -> onConnected
    void onDisconnected(int) -> onDisconnected
com.easemob.EMError -> com.easemob.EMError:
    int NO_ERROR -> NO_ERROR
    int ERROR_EXCEPTION -> ERROR_EXCEPTION
    int ERROR_SEND -> ERROR_SEND
    int ERROR_FILE_NOT_FOUND -> ERROR_FILE_NOT_FOUND
    int GENERAL_ERROR -> GENERAL_ERROR
    int UNKNOW_ERROR -> UNKNOW_ERROR
    int UNKNOWN_SERVER_ERROR -> UNKNOWN_SERVER_ERROR
    int NONETWORK_ERROR -> NONETWORK_ERROR
    int DNS_ERROR -> DNS_ERROR
    int UNABLE_CONNECT_TO_SERVER -> UNABLE_CONNECT_TO_SERVER
    int CONNECT_TIMER_OUT -> CONNECT_TIMER_OUT
    int INVALID_PASSWORD_USERNAME -> INVALID_PASSWORD_USERNAME
    int INVALID_KEYSTORE -> INVALID_KEYSTORE
    int IO_EXCEPTION -> IO_EXCEPTION
    int INVALID_CERTIFICATE -> INVALID_CERTIFICATE
    int ENCRYPTION_ERROR -> ENCRYPTION_ERROR
    int LOGOFFINPROGRESS_ERROR -> LOGOFFINPROGRESS_ERROR
    int INVALID_FILE -> INVALID_FILE
    int FILE_NOT_FOUND -> FILE_NOT_FOUND
    int CONNECTION_CLOSED -> CONNECTION_CLOSED
    int CONNECTION_CONFLICT -> CONNECTION_CONFLICT
    int USER_ALREADY_EXISTS -> USER_ALREADY_EXISTS
    int GROUP_NOT_EXIST_LOCAL -> GROUP_NOT_EXIST_LOCAL
    int GROUP_NOT_EXIST -> GROUP_NOT_EXIST
    int GROUP_MEMBERS_FULL -> GROUP_MEMBERS_FULL
    int GROUP_ADD_MEMBERS_TOO_MUCH -> GROUP_ADD_MEMBERS_TOO_MUCH
    int GROUP_NO_PERMISSIONS -> GROUP_NO_PERMISSIONS
    int UNAUTHORIZED -> UNAUTHORIZED
    int CONNECTION_INIT_FAILED -> CONNECTION_INIT_FAILED
    int USER_REMOVED -> USER_REMOVED
    int ALREADY_LOGEDIN -> ALREADY_LOGEDIN
    int ILLEGAL_USER_NAME -> ILLEGAL_USER_NAME
    int MESSAGE_SEND_NOT_IN_THE_GROUP -> MESSAGE_SEND_NOT_IN_THE_GROUP
    int MESSAGE_SEND_INVALID_CONTENT -> MESSAGE_SEND_INVALID_CONTENT
    int ERROR_UNBIND_DEVICETOKEN -> ERROR_UNBIND_DEVICETOKEN
com.easemob.EMEventListener -> com.easemob.EMEventListener:
    void onEvent(com.easemob.EMNotifierEvent) -> onEvent
com.easemob.EMGroupChangeListener -> com.easemob.EMGroupChangeListener:
com.easemob.EMMessageChangeEventData -> com.easemob.EMMessageChangeEventData:
    com.easemob.EMMessageChangeEventData$EMChangeSource source -> source
    com.easemob.chat.EMMessage changedMsg -> changedMsg
com.easemob.EMMessageChangeEventData$EMChangeSource -> com.easemob.EMMessageChangeEventData$EMChangeSource:
    com.easemob.EMMessageChangeEventData$EMChangeSource MessageState -> MessageState
    com.easemob.EMMessageChangeEventData$EMChangeSource MessageId -> MessageId
    com.easemob.EMMessageChangeEventData$EMChangeSource[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.EMMessageChangeEventData$EMChangeSource[] values() -> values
    com.easemob.EMMessageChangeEventData$EMChangeSource valueOf(java.lang.String) -> valueOf
com.easemob.EMNotifierEvent -> com.easemob.EMNotifierEvent:
    java.lang.Object eventData -> eventData
    com.easemob.EMNotifierEvent$Event event -> event
    void setEvent(com.easemob.EMNotifierEvent$Event) -> setEvent
    com.easemob.EMNotifierEvent$Event getEvent() -> getEvent
    void setEventData(java.lang.Object) -> setEventData
    java.lang.Object getData() -> getData
com.easemob.EMNotifierEvent$Event -> com.easemob.EMNotifierEvent$Event:
    com.easemob.EMNotifierEvent$Event EventNewMessage -> EventNewMessage
    com.easemob.EMNotifierEvent$Event EventNewCMDMessage -> EventNewCMDMessage
    com.easemob.EMNotifierEvent$Event EventReadAck -> EventReadAck
    com.easemob.EMNotifierEvent$Event EventDeliveryAck -> EventDeliveryAck
    com.easemob.EMNotifierEvent$Event EventOfflineMessage -> EventOfflineMessage
    com.easemob.EMNotifierEvent$Event EventConversationListChanged -> EventConversationListChanged
    com.easemob.EMNotifierEvent$Event EventMessageChanged -> EventMessageChanged
    com.easemob.EMNotifierEvent$Event EventLogout -> EventLogout
    com.easemob.EMNotifierEvent$Event[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.EMNotifierEvent$Event[] values() -> values
    com.easemob.EMNotifierEvent$Event valueOf(java.lang.String) -> valueOf
com.easemob.EMValueCallBack -> com.easemob.EMValueCallBack:
    void onSuccess(java.lang.Object) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.easemob.a.a -> com.easemob.a.a:
    int a -> a
    int b -> b
    int c -> c
    javax.microedition.khronos.egl.EGLContext d -> d
    javax.microedition.khronos.egl.EGLSurface e -> e
    javax.microedition.khronos.egl.EGLDisplay f -> f
    javax.microedition.khronos.egl.EGLConfig g -> g
    int h -> h
    android.view.SurfaceView i -> i
    com.easemob.media.AVNative j -> j
    com.easemob.a.a k -> k
    com.easemob.a.a a() -> a
    void a(android.view.SurfaceView) -> a
    void a(int,int,byte[]) -> a
    void a(int,int,int) -> a
    void b() -> b
    int a(int) -> a
    boolean a(int,int) -> a
    void c() -> c
    void a(java.lang.String) -> a
    boolean c(int,int) -> c
    boolean p() -> p
    boolean q() -> q
    void r() -> r
    void d() -> d
    android.view.SurfaceView e() -> e
    void b(android.view.SurfaceView) -> b
    void b(int,int) -> b
    int f() -> f
    int g() -> g
    int h() -> h
    int b(java.lang.String) -> b
    int i() -> i
    int j() -> j
    int k() -> k
    int l() -> l
    int m() -> m
    int n() -> n
    int o() -> o
com.easemob.analytics.EMActiveCollector -> com.easemob.analytics.EMActiveCollector:
    java.lang.String perf_actived -> perf_actived
    java.lang.String collectActiveInfo(android.content.Context) -> collectActiveInfo
    void sendActivePacket(android.content.Context) -> sendActivePacket
    void sendUninstallPacket() -> sendUninstallPacket
com.easemob.analytics.EMActiveCollector$1 -> com.easemob.analytics.EMActiveCollector$1:
    android.content.Context val$context -> val$context
    void run() -> run
com.easemob.analytics.EMCollector -> com.easemob.analytics.EMCollector:
    boolean collectorEnabled -> collectorEnabled
    java.util.concurrent.ExecutorService threadPool -> threadPool
    void enableCollector(boolean) -> enableCollector
    java.lang.String timeToString(long) -> timeToString
    java.lang.String getTagPrefix(java.lang.String) -> getTagPrefix
com.easemob.analytics.EMCollectorUtils -> com.easemob.analytics.EMCollectorUtils:
    java.lang.String timeToString(long) -> timeToString
com.easemob.analytics.EMLoginCollector -> com.easemob.analytics.EMLoginCollector:
    java.lang.String TAG -> TAG
    java.lang.String CHAT_LOGIN_TIME -> CHAT_LOGIN_TIME
    java.lang.String IM_LOGIN_TIME -> IM_LOGIN_TIME
    java.lang.String RETRIEVE_TOKEN_TIME -> RETRIEVE_TOKEN_TIME
    java.lang.String CONNECTION_ERROR_COLLECTION -> CONNECTION_ERROR_COLLECTION
    void collectLoginTime(long) -> collectLoginTime
    void collectIMLoginTime(long) -> collectIMLoginTime
    void collectRetrieveTokenTime(long) -> collectRetrieveTokenTime
    void collectConnectionError(java.lang.String) -> collectConnectionError
com.easemob.analytics.EMMessageCollector -> com.easemob.analytics.EMMessageCollector:
    java.lang.String TAG -> TAG
    java.lang.String SENT_MESSAGE -> SENT_MESSAGE
    void collectSendMsgTime(long,com.easemob.chat.EMMessage) -> collectSendMsgTime
com.easemob.analytics.EMPerformanceCollector -> com.easemob.analytics.EMPerformanceCollector:
    java.lang.String TAG -> TAG
    java.lang.String RETRIEVE_GROUPS -> RETRIEVE_GROUPS
    java.lang.String LOADING_ALL_CONVERSATIONS -> LOADING_ALL_CONVERSATIONS
    java.lang.String LOAD_ALL_LOCAL_GROUPS -> LOAD_ALL_LOCAL_GROUPS
    java.lang.String LOAD_ALL_LOCAL_CHAT_ROOMS -> LOAD_ALL_LOCAL_CHAT_ROOMS
    java.lang.String RETRIEVE_ROSTER -> RETRIEVE_ROSTER
    java.lang.String DOWNLOAD_FILE -> DOWNLOAD_FILE
    java.lang.String UPLOAD_FILE -> UPLOAD_FILE
    java.lang.String SYNC_GROUPS -> SYNC_GROUPS
    java.lang.String RETRIEVE_GROUP -> RETRIEVE_GROUP
    void collectRetrieveGroupsFromServerTime(int,long) -> collectRetrieveGroupsFromServerTime
    void collectLoadingAllConversations(int,int,long) -> collectLoadingAllConversations
    void collectLoadAllLocalGroups(int,long) -> collectLoadAllLocalGroups
    void collectLoadAllLocalChatRooms(int,long) -> collectLoadAllLocalChatRooms
    void collectRetrieveRoster(int,long) -> collectRetrieveRoster
    void collectDownloadFileTime(com.easemob.analytics.EMTimeTag,long,java.lang.String) -> collectDownloadFileTime
    void collectUploadFileTime(com.easemob.analytics.EMTimeTag,long,java.lang.String) -> collectUploadFileTime
    void collectSyncWithServerGroups(int,long) -> collectSyncWithServerGroups
    void collectRetrieveGroupFromServer(com.easemob.chat.EMGroup,long) -> collectRetrieveGroupFromServer
com.easemob.analytics.EMTimeTag -> com.easemob.analytics.EMTimeTag:
    long oldTime -> oldTime
    long timeSpent -> timeSpent
    void start() -> start
    long stop() -> stop
    java.lang.String timeStr() -> timeStr
    long timeSpent() -> timeSpent
com.easemob.b.a -> com.easemob.b.a:
    java.lang.String a -> a
    com.easemob.b.a b -> b
    long c -> c
    long d -> d
    long e -> e
    long f -> f
    long g -> g
    long h -> h
    long i -> i
    long j -> j
    long k -> k
    long l -> l
    long m -> m
    long n -> n
    long o -> o
    long p -> p
    long q -> q
    long r -> r
    int s -> s
    long t -> t
    long u -> u
    boolean v -> v
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
com.easemob.chat.CmdMessageBody -> com.easemob.chat.CmdMessageBody:
    java.lang.String action -> action
    java.util.HashMap params -> params
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.easemob.chat.CmdMessageBody$1 -> com.easemob.chat.CmdMessageBody$1:
    com.easemob.chat.CmdMessageBody createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.CmdMessageBody[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.easemob.chat.CmdMsgProcessor -> com.easemob.chat.CmdMsgProcessor:
    java.lang.String getAction() -> getAction
    boolean processCmd(com.easemob.chat.EMMessage) -> processCmd
com.easemob.chat.ConnectionListener -> com.easemob.chat.ConnectionListener:
    void onConnected() -> onConnected
    void onDisConnected(java.lang.String) -> onDisConnected
    void onReConnected() -> onReConnected
    void onReConnecting() -> onReConnecting
    void onConnecting(java.lang.String) -> onConnecting
com.easemob.chat.EMCallDirection -> com.easemob.chat.EMCallDirection:
    com.easemob.chat.EMCallDirection OUTGOING -> OUTGOING
    com.easemob.chat.EMCallDirection INCOMING -> INCOMING
    com.easemob.chat.EMCallDirection NONE -> NONE
    java.lang.String direction -> direction
    com.easemob.chat.EMCallDirection[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String toString() -> toString
    com.easemob.chat.EMCallDirection[] values() -> values
    com.easemob.chat.EMCallDirection valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMCallStateChangeListener -> com.easemob.chat.EMCallStateChangeListener:
    void onCallStateChanged(com.easemob.chat.EMCallStateChangeListener$CallState,com.easemob.chat.EMCallStateChangeListener$CallError) -> onCallStateChanged
com.easemob.chat.EMCallStateChangeListener$CallError -> com.easemob.chat.EMCallStateChangeListener$CallError:
    com.easemob.chat.EMCallStateChangeListener$CallError ERROR_NONE -> ERROR_NONE
    com.easemob.chat.EMCallStateChangeListener$CallError ERROR_TRANSPORT -> ERROR_TRANSPORT
    com.easemob.chat.EMCallStateChangeListener$CallError ERROR_INAVAILABLE -> ERROR_INAVAILABLE
    com.easemob.chat.EMCallStateChangeListener$CallError REJECTED -> REJECTED
    com.easemob.chat.EMCallStateChangeListener$CallError ERROR_NORESPONSE -> ERROR_NORESPONSE
    com.easemob.chat.EMCallStateChangeListener$CallError ERROR_BUSY -> ERROR_BUSY
    java.lang.String error -> error
    com.easemob.chat.EMCallStateChangeListener$CallError[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String toString() -> toString
    com.easemob.chat.EMCallStateChangeListener$CallError[] values() -> values
    com.easemob.chat.EMCallStateChangeListener$CallError valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMCallStateChangeListener$CallState -> com.easemob.chat.EMCallStateChangeListener$CallState:
    com.easemob.chat.EMCallStateChangeListener$CallState IDLE -> IDLE
    com.easemob.chat.EMCallStateChangeListener$CallState RINGING -> RINGING
    com.easemob.chat.EMCallStateChangeListener$CallState ANSWERING -> ANSWERING
    com.easemob.chat.EMCallStateChangeListener$CallState PAUSING -> PAUSING
    com.easemob.chat.EMCallStateChangeListener$CallState CONNECTING -> CONNECTING
    com.easemob.chat.EMCallStateChangeListener$CallState CONNECTED -> CONNECTED
    com.easemob.chat.EMCallStateChangeListener$CallState ACCEPTED -> ACCEPTED
    com.easemob.chat.EMCallStateChangeListener$CallState DISCONNNECTED -> DISCONNNECTED
    java.lang.String state -> state
    com.easemob.chat.EMCallStateChangeListener$CallState[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String toString() -> toString
    com.easemob.chat.EMCallStateChangeListener$CallState[] values() -> values
    com.easemob.chat.EMCallStateChangeListener$CallState valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMCallerJingleSession -> com.easemob.chat.EMCallerJingleSession:
    java.lang.String TAG -> TAG
    boolean callAccepted -> callAccepted
    com.easemob.media.EIce caller -> caller
    com.easemob.chat.EMCallerJingleSession buildPeer(java.lang.String) -> buildPeer
    void makeCall() -> makeCall
    void closeSession(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason) -> closeSession
    void handleSessionInitiate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionInitiate
    void handleSessionAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionAccept
    void freeIce() -> freeIce
    void handleSessionTerminate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionTerminate
    void handleCallAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleCallAccept
    void onConnectionConnected() -> onConnectionConnected
com.easemob.chat.EMChat -> com.easemob.chat.EMChat:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMChat instance -> instance
    boolean appInited -> appInited
    boolean autoLogin -> autoLogin
    boolean initSingleProcess -> initSingleProcess
    boolean sdkInited -> sdkInited
    android.content.Context appContext -> appContext
    java.lang.String userName -> userName
    java.lang.String password -> password
    java.lang.String PID_FILE -> PID_FILE
    com.easemob.chat.EMChat getInstance() -> getInstance
    void setDebugMode(boolean) -> setDebugMode
    void setLogMode(com.easemob.util.EMLog$ELogMode) -> setLogMode
    void setAutoLogin(boolean) -> setAutoLogin
    void setAppInited() -> setAppInited
    void setInitSingleProcess(boolean) -> setInitSingleProcess
    void uploadLog(com.easemob.EMCallBack) -> uploadLog
    void setUserName(java.lang.String) -> setUserName
    void setPassword(java.lang.String) -> setPassword
    void init(android.content.Context) -> init
    java.lang.String getVersion() -> getVersion
    android.content.Context getAppContext() -> getAppContext
    void setEnv(com.easemob.chat.EMChatConfig$EMEnvMode) -> setEnv
    void setSDKMode(com.easemob.chat.EMChatConfig$EMSDKMode) -> setSDKMode
    void setAppkey(java.lang.String) -> setAppkey
    java.lang.String getAppkey() -> getAppkey
    void enalbeDNSConfig(boolean) -> enalbeDNSConfig
    boolean isLoggedIn() -> isLoggedIn
    void setServerAddress(java.lang.String[],java.lang.String[]) -> setServerAddress
    boolean isSDKInited() -> isSDKInited
    void clear() -> clear
    boolean checkSDKInited(android.content.Context) -> checkSDKInited
com.easemob.chat.EMChatConfig -> com.easemob.chat.EMChatConfig:
    java.lang.String TAG -> TAG
    java.lang.String CONFIG_EASEMOB_APPKEY -> CONFIG_EASEMOB_APPKEY
    java.lang.String CONFIG_EASEMOB_CHAT_ADDRESS -> CONFIG_EASEMOB_CHAT_ADDRESS
    java.lang.String CONFIG_EASEMOB_CHAT_DOMAIN -> CONFIG_EASEMOB_CHAT_DOMAIN
    java.lang.String CONFIG_EASEMOB_GROUP_DOMAIN -> CONFIG_EASEMOB_GROUP_DOMAIN
    java.lang.String CONFIG_EASEMOB_API_URL -> CONFIG_EASEMOB_API_URL
    java.lang.String DOMAIN -> DOMAIN
    java.lang.String DOMAIN_SUFFIX -> DOMAIN_SUFFIX
    java.lang.String MUC_DOMAIN -> MUC_DOMAIN
    java.lang.String MUC_DOMAIN_SUFFIX -> MUC_DOMAIN_SUFFIX
    java.lang.String UUID -> UUID
    java.lang.String SHARE_SERCRET -> SHARE_SERCRET
    java.lang.String TOKEN_ENTITY -> TOKEN_ENTITY
    java.lang.String APPKEY -> APPKEY
    boolean debugTrafficMode -> debugTrafficMode
    com.easemob.chat.EMChatConfig instance -> instance
    java.lang.String chatServer -> chatServer
    java.lang.String restServer -> restServer
    com.easemob.chat.EMChatConfig getInstance() -> getInstance
    boolean isDebugTrafficMode() -> isDebugTrafficMode
    boolean loadConfig(android.content.Context) -> loadConfig
    void setAdvanceDebugConfig() -> setAdvanceDebugConfig
    void printConfig() -> printConfig
    java.lang.String getDomain() -> getDomain
    java.lang.String getStorageUrl() -> getStorageUrl
    void setEnv(com.easemob.chat.EMChatConfig$EMEnvMode) -> setEnv
    void setSDKMode(com.easemob.chat.EMChatConfig$EMSDKMode) -> setSDKMode
    com.easemob.chat.EMChatConfig$EMSDKMode getSDKMode() -> getSDKMode
    com.easemob.chat.EMChatConfig$EMEnvMode getEnvMode() -> getEnvMode
com.easemob.chat.EMChatConfig$EMEnvMode -> com.easemob.chat.EMChatConfig$EMEnvMode:
    com.easemob.chat.EMChatConfig$EMEnvMode EMSandboxMode -> EMSandboxMode
    com.easemob.chat.EMChatConfig$EMEnvMode EMProductMode -> EMProductMode
    com.easemob.chat.EMChatConfig$EMEnvMode EMDevMode -> EMDevMode
    com.easemob.chat.EMChatConfig$EMEnvMode[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMChatConfig$EMEnvMode[] values() -> values
    com.easemob.chat.EMChatConfig$EMEnvMode valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMChatConfig$EMSDKMode -> com.easemob.chat.EMChatConfig$EMSDKMode:
    com.easemob.chat.EMChatConfig$EMSDKMode EMChatMode -> EMChatMode
    com.easemob.chat.EMChatConfig$EMSDKMode EMHelpDeskMode -> EMHelpDeskMode
    com.easemob.chat.EMChatConfig$EMSDKMode[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMChatConfig$EMSDKMode[] values() -> values
    com.easemob.chat.EMChatConfig$EMSDKMode valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMChatDB -> com.easemob.chat.EMChatDB:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMChatDB instance -> instance
    void initDB(java.lang.String) -> initDB
    com.easemob.chat.EMChatDB getInstance() -> getInstance
    void closeDatabase() -> closeDatabase
    boolean saveMessage(com.easemob.chat.EMMessage) -> saveMessage
    void deleteMessage(java.lang.String) -> deleteMessage
    java.util.List findAllParticipantsWithMsg() -> findAllParticipantsWithMsg
    java.util.List findAllGroupsWithMsg() -> findAllGroupsWithMsg
    java.util.List findGroupMessages(java.lang.String) -> findGroupMessages
    java.util.List findGroupMessages(java.lang.String,java.lang.String,int) -> findGroupMessages
    java.util.List findMessages(java.lang.String) -> findMessages
    java.util.List findMessages(java.lang.String,java.lang.String,int) -> findMessages
    void deleteConversions(java.lang.String) -> deleteConversions
    void updateMessageAck(java.lang.String,boolean) -> updateMessageAck
    void updateMessageDelivered(java.lang.String,boolean) -> updateMessageDelivered
    void updateMessage(java.lang.String,android.content.ContentValues) -> updateMessage
    java.util.Map loadAllGroups() -> loadAllGroups
    com.easemob.chat.EMGroup loadGroup(java.lang.String) -> loadGroup
    void updateGroup(com.easemob.chat.EMGroup) -> updateGroup
    void deleteGroup(java.lang.String) -> deleteGroup
    void deleteGroupConversions(java.lang.String) -> deleteGroupConversions
    boolean importMessage(com.easemob.chat.EMMessage) -> importMessage
    java.util.List getConversationsUnread() -> getConversationsUnread
    void saveToken(java.lang.String,com.easemob.chat.core.EMInternalConfigManager$a) -> saveToken
    com.easemob.chat.core.EMInternalConfigManager$a getToken(java.lang.String) -> getToken
com.easemob.chat.EMChatManager -> com.easemob.chat.EMChatManager:
    java.lang.String TAG -> TAG
    java.lang.String NEW_MSG_BROADCAST -> NEW_MSG_BROADCAST
    java.lang.String READ_ACK_MSG_BROADCAST -> READ_ACK_MSG_BROADCAST
    java.lang.String DELIVERY_ACK_MSG_BROADCAST -> DELIVERY_ACK_MSG_BROADCAST
    java.lang.String CONTACT_INVITE_EVENT_BROADCAST -> CONTACT_INVITE_EVENT_BROADCAST
    java.lang.String OFFLINE_MSG_BROADCAST -> OFFLINE_MSG_BROADCAST
    java.lang.String INCOMING_VOICE_CALL_BROADCAST -> INCOMING_VOICE_CALL_BROADCAST
    java.lang.String INCOMING_CALL_BROADCAST -> INCOMING_CALL_BROADCAST
    java.lang.String CMD_MSG_BROADCAST -> CMD_MSG_BROADCAST
    com.easemob.chat.EMChatManager instance -> instance
    org.jivesoftware.smack.ChatManager xmppChatManager -> xmppChatManager
    com.easemob.chat.core.EMConnectionManager xmppConnectionManager -> xmppConnectionManager
    com.easemob.chat.EMChatManager$EMChatManagerListener chatManagerListener -> chatManagerListener
    com.easemob.chat.EMMessageListener chatListener -> chatListener
    com.easemob.chat.EMGroupMessageListener groupChatListener -> groupChatListener
    com.easemob.chat.EMRecvAckListener recvAckListener -> recvAckListener
    java.util.Map chats -> chats
    java.util.List connectionListeners -> connectionListeners
    java.util.List newConnectionListeners -> newConnectionListeners
    android.os.Handler handler -> handler
    com.easemob.chat.EMChatManager$XmppConnectionListener xmppConnectionListener -> xmppConnectionListener
    android.content.Context applicationContext -> applicationContext
    com.easemob.chat.EMNotifier notifier -> notifier
    com.easemob.util.CryptoUtils cryptoUtils -> cryptoUtils
    com.easemob.chat.EncryptProvider encryptProvider -> encryptProvider
    java.util.concurrent.ExecutorService threadPool -> threadPool
    com.easemob.chat.EMChatOptions chatOptions -> chatOptions
    java.util.ArrayList offlineRosterPresenceList -> offlineRosterPresenceList
    java.util.concurrent.ExecutorService msgCountThreadPool -> msgCountThreadPool
    com.easemob.chat.EMOfflineMessageHandler offlineHandler -> offlineHandler
    com.easemob.chat.EMOfflineMessageHandler chatroomOfflineHandler -> chatroomOfflineHandler
    boolean stopService -> stopService
    void login(java.lang.String,java.lang.String,com.easemob.EMCallBack) -> login
    void logout() -> logout
    void logout(com.easemob.EMCallBack) -> logout
    void logout(boolean,com.easemob.EMCallBack) -> logout
    int logout(boolean) -> logout
    void changePasswordOnServer(java.lang.String) -> changePasswordOnServer
    void createAccountOnServer(java.lang.String,java.lang.String) -> createAccountOnServer
    boolean isConnected() -> isConnected
    void registerEventListener(com.easemob.EMEventListener) -> registerEventListener
    void registerEventListener(com.easemob.EMEventListener,com.easemob.EMNotifierEvent$Event[]) -> registerEventListener
    void unregisterEventListener(com.easemob.EMEventListener) -> unregisterEventListener
    com.easemob.chat.EMChatManager getInstance() -> getInstance
    com.easemob.chat.EMChatManager onInit() -> onInit
    void onNewConnectionCreated(com.easemob.chat.core.EMConnectionManager) -> onNewConnectionCreated
    void onAppInited() -> onAppInited
    void addPacketListeners(org.jivesoftware.smack.XMPPConnection) -> addPacketListeners
    void init(com.easemob.chat.core.EMConnectionManager) -> init
    void processOfflinePresenceMessages() -> processOfflinePresenceMessages
    void processOfflineCmdMessages() -> processOfflineCmdMessages
    void processOfflineMessages() -> processOfflineMessages
    void notifyCmdMsg(com.easemob.chat.EMMessage) -> notifyCmdMsg
    void onNewOfflineCmdMessage(com.easemob.chat.EMMessage) -> onNewOfflineCmdMessage
    void onNewOfflineMessage(com.easemob.chat.EMMessage) -> onNewOfflineMessage
    void processRosterPresence(org.jivesoftware.smack.packet.Presence) -> processRosterPresence
    void acceptInvitation(java.lang.String,boolean) -> acceptInvitation
    void acceptInvitation(java.lang.String) -> acceptInvitation
    void refuseInvitation(java.lang.String) -> refuseInvitation
    void sendMessage(com.easemob.chat.EMMessage) -> sendMessage
    void sendMessage(com.easemob.chat.EMMessage,com.easemob.EMCallBack) -> sendMessage
    com.easemob.EMCallBack getInnerCallBack(com.easemob.EMCallBack,com.easemob.chat.EMMessage) -> getInnerCallBack
    void sendGroupMessage(com.easemob.chat.EMMessage,com.easemob.EMCallBack) -> sendGroupMessage
    void notifyMessage(com.easemob.chat.EMMessage) -> notifyMessage
    void broadcastMessage(com.easemob.chat.EMMessage) -> broadcastMessage
    void notifiyReadAckMessage(java.lang.String,java.lang.String) -> notifiyReadAckMessage
    void notifyDeliveryAckMessage(java.lang.String,java.lang.String) -> notifyDeliveryAckMessage
    void notifyMessageChanged(com.easemob.EMMessageChangeEventData) -> notifyMessageChanged
    void notifyIncomingCall(java.lang.String,com.easemob.chat.EMVoiceCallManager$CallType) -> notifyIncomingCall
    java.lang.String getNewMessageBroadcastAction() -> getNewMessageBroadcastAction
    java.lang.String getCmdMessageBroadcastAction() -> getCmdMessageBroadcastAction
    java.lang.String getAckMessageBroadcastAction() -> getAckMessageBroadcastAction
    java.lang.String getDeliveryAckMessageBroadcastAction() -> getDeliveryAckMessageBroadcastAction
    java.lang.String getContactInviteEventBroadcastAction() -> getContactInviteEventBroadcastAction
    java.lang.String getOfflineMessageBroadcastAction() -> getOfflineMessageBroadcastAction
    java.lang.String getIncomingVoiceCallBroadcastAction() -> getIncomingVoiceCallBroadcastAction
    java.lang.String getIncomingCallBroadcastAction() -> getIncomingCallBroadcastAction
    java.lang.String getBroadcastSuffix() -> getBroadcastSuffix
    void ackMessageRead(java.lang.String,java.lang.String) -> ackMessageRead
    void setMessageListened(com.easemob.chat.EMMessage) -> setMessageListened
    void checkConnection() -> checkConnection
    void addConnectionListener(com.easemob.chat.ConnectionListener) -> addConnectionListener
    void addConnectionListener(com.easemob.EMConnectionListener) -> addConnectionListener
    void removeConnectionListener(com.easemob.chat.ConnectionListener) -> removeConnectionListener
    void removeConnectionListener(com.easemob.EMConnectionListener) -> removeConnectionListener
    com.easemob.chat.EMMessage getMessage(java.lang.String) -> getMessage
    void replaceMessageId(java.lang.String,java.lang.String) -> replaceMessageId
    void addMessage(com.easemob.chat.EMMessage) -> addMessage
    void addMessage(com.easemob.chat.EMMessage,boolean) -> addMessage
    com.easemob.chat.EMConversation getConversation(java.lang.String) -> getConversation
    com.easemob.chat.EMConversation getConversation(java.lang.String,boolean) -> getConversation
    com.easemob.chat.EMConversation getConversationByType(java.lang.String,com.easemob.chat.EMConversation$EMConversationType) -> getConversationByType
    boolean deleteConversation(java.lang.String) -> deleteConversation
    void deleteAllConversation() -> deleteAllConversation
    void resetAllUnreadMsgCount() -> resetAllUnreadMsgCount
    void markAllConversationsAsRead() -> markAllConversationsAsRead
    boolean deleteConversation(java.lang.String,boolean) -> deleteConversation
    boolean deleteConversation(java.lang.String,boolean,boolean) -> deleteConversation
    boolean clearConversation(java.lang.String) -> clearConversation
    void loadAllConversations(com.easemob.EMCallBack) -> loadAllConversations
    void asyncLoadAllConversations(com.easemob.EMCallBack) -> asyncLoadAllConversations
    void asyncLoadAllConversations(com.easemob.EMCallBack,int) -> asyncLoadAllConversations
    void loadAllConversations() -> loadAllConversations
    java.util.Hashtable getAllConversations() -> getAllConversations
    int getUnreadMsgsCount() -> getUnreadMsgsCount
    void activityResumed() -> activityResumed
    void saveMessage(com.easemob.chat.EMMessage) -> saveMessage
    void saveMessage(com.easemob.chat.EMMessage,boolean) -> saveMessage
    boolean updateMessageBody(com.easemob.chat.EMMessage) -> updateMessageBody
    void updateMessageState(com.easemob.chat.EMMessage) -> updateMessageState
    java.util.List getContactUserNames() -> getContactUserNames
    java.lang.String getCurrentUser() -> getCurrentUser
    com.easemob.chat.EMChatOptions getChatOptions() -> getChatOptions
    void setChatOptions(com.easemob.chat.EMChatOptions) -> setChatOptions
    void setEncryptProvider(com.easemob.chat.EncryptProvider) -> setEncryptProvider
    com.easemob.chat.EncryptProvider getEncryptProvider() -> getEncryptProvider
    void addVoiceCallStateChangeListener(com.easemob.chat.EMCallStateChangeListener) -> addVoiceCallStateChangeListener
    void addCallStateChangeListener(com.easemob.chat.EMCallStateChangeListener) -> addCallStateChangeListener
    void removeCallStateChangeListener(com.easemob.chat.EMCallStateChangeListener) -> removeCallStateChangeListener
    void makeVoiceCall(java.lang.String) -> makeVoiceCall
    void answerCall() -> answerCall
    void rejectCall() -> rejectCall
    void endCall() -> endCall
    void makeVideoCall(java.lang.String) -> makeVideoCall
    com.easemob.util.CryptoUtils getCryptoUtils() -> getCryptoUtils
    void doStartService() -> doStartService
    void doStopService() -> doStopService
    void saveAppname() -> saveAppname
    void onReconnectionSuccessful() -> onReconnectionSuccessful
    void asyncFetchMessage(com.easemob.chat.EMMessage) -> asyncFetchMessage
    java.lang.String importMessage(com.easemob.chat.EMMessage,boolean) -> importMessage
    void importMessages(java.util.List) -> importMessages
    boolean updateCurrentUserNick(java.lang.String) -> updateCurrentUserNick
    void initDB(java.lang.String) -> initDB
    void loadDB() -> loadDB
    java.lang.String getAccessToken() -> getAccessToken
    void notifyMessageHandlerConnectionConnected() -> notifyMessageHandlerConnectionConnected
    java.util.List getConversationsUnread() -> getConversationsUnread
    boolean areAllConversationsLoaded() -> areAllConversationsLoaded
    java.util.List getConversationsByType(com.easemob.chat.EMConversation$EMConversationType) -> getConversationsByType
    void forceReconnect() -> forceReconnect
    boolean isSlientMessage(com.easemob.chat.EMMessage) -> isSlientMessage
    void configureCustomService(com.easemob.chat.EMCustomerServiceConfiguration) -> configureCustomService
    void downloadFile(java.lang.String,java.lang.String,java.util.Map,com.easemob.EMCallBack) -> downloadFile
    void addChatRoomChangeListener(com.easemob.EMChatRoomChangeListener) -> addChatRoomChangeListener
    void removeChatRoomChangeListener(com.easemob.EMChatRoomChangeListener) -> removeChatRoomChangeListener
    void joinChatRoom(java.lang.String,com.easemob.EMValueCallBack) -> joinChatRoom
    void leaveChatRoom(java.lang.String) -> leaveChatRoom
    com.easemob.chat.EMCursorResult fetchPublicChatRoomsFromServer(int,java.lang.String) -> fetchPublicChatRoomsFromServer
    com.easemob.chat.EMChatRoom fetchChatRoomFromServer(java.lang.String) -> fetchChatRoomFromServer
    com.easemob.chat.EMChatRoom getChatRoom(java.lang.String) -> getChatRoom
    java.util.List getAllChatRooms() -> getAllChatRooms
    java.util.List getRobotsFromServer() -> getRobotsFromServer
    void setGCMProjectNumber(java.lang.String) -> setGCMProjectNumber
    boolean isDirectCall() -> isDirectCall
    java.util.Map getKeywordInfoList(java.lang.String) -> getKeywordInfoList
    java.util.List getMessagesByKeyword(java.lang.String,java.lang.String,int,java.lang.String) -> getMessagesByKeyword
    void access$0(com.easemob.chat.EMChatManager,org.jivesoftware.smack.packet.Presence) -> access$0
    java.util.ArrayList access$1(com.easemob.chat.EMChatManager) -> access$1
    java.util.Map access$2(com.easemob.chat.EMChatManager) -> access$2
    android.os.Handler access$3(com.easemob.chat.EMChatManager) -> access$3
    java.util.List access$4(com.easemob.chat.EMChatManager) -> access$4
    java.util.concurrent.ExecutorService access$5(com.easemob.chat.EMChatManager) -> access$5
    java.util.List access$6(com.easemob.chat.EMChatManager) -> access$6
    void access$7(com.easemob.chat.EMChatManager) -> access$7
    com.easemob.chat.core.EMConnectionManager access$8(com.easemob.chat.EMChatManager) -> access$8
    com.easemob.util.CryptoUtils access$9(com.easemob.chat.EMChatManager) -> access$9
com.easemob.chat.EMChatManager$1 -> com.easemob.chat.EMChatManager$1:
    com.easemob.chat.EMChatManager this$0 -> this$0
    com.easemob.EMCallBack val$callback -> val$callback
    void onSuccess() -> onSuccess
    void onProgress(int,java.lang.String) -> onProgress
    void onError(int,java.lang.String) -> onError
com.easemob.chat.EMChatManager$10 -> com.easemob.chat.EMChatManager$10:
    com.easemob.chat.EMChatManager this$0 -> this$0
    com.easemob.EMConnectionListener val$listener -> val$listener
    void run() -> run
com.easemob.chat.EMChatManager$11 -> com.easemob.chat.EMChatManager$11:
    com.easemob.chat.EMChatManager this$0 -> this$0
    byte[] encrypt(byte[],java.lang.String) -> encrypt
    byte[] decrypt(byte[],java.lang.String) -> decrypt
com.easemob.chat.EMChatManager$12 -> com.easemob.chat.EMChatManager$12:
    com.easemob.chat.EMChatManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMChatManager$13 -> com.easemob.chat.EMChatManager$13:
    com.easemob.chat.EMChatManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMChatManager$14 -> com.easemob.chat.EMChatManager$14:
    com.easemob.chat.EMChatManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMChatManager$15 -> com.easemob.chat.EMChatManager$15:
    com.easemob.chat.EMChatManager this$0 -> this$0
    com.easemob.EMCallBack val$callback -> val$callback
    void onSuccess(java.lang.String) -> onSuccess
    void onError(java.lang.String) -> onError
    void onProgress(int) -> onProgress
com.easemob.chat.EMChatManager$2 -> com.easemob.chat.EMChatManager$2:
    com.easemob.chat.EMChatManager this$0 -> this$0
    com.easemob.EMCallBack val$callback -> val$callback
    void run() -> run
com.easemob.chat.EMChatManager$3 -> com.easemob.chat.EMChatManager$3:
    com.easemob.chat.EMChatManager this$0 -> this$0
    com.easemob.EMCallBack val$callback -> val$callback
    boolean val$isUnbindDeviceToken -> val$isUnbindDeviceToken
    void run() -> run
com.easemob.chat.EMChatManager$4 -> com.easemob.chat.EMChatManager$4:
    com.easemob.chat.EMChatManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
com.easemob.chat.EMChatManager$5 -> com.easemob.chat.EMChatManager$5:
    com.easemob.chat.EMChatManager this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
com.easemob.chat.EMChatManager$6 -> com.easemob.chat.EMChatManager$6:
    com.easemob.chat.EMChatManager this$0 -> this$0
    com.easemob.EMCallBack val$callback -> val$callback
    com.easemob.chat.EMMessage val$message -> val$message
    void onSuccess() -> onSuccess
    void onProgress(int,java.lang.String) -> onProgress
    void onError(int,java.lang.String) -> onError
com.easemob.chat.EMChatManager$7 -> com.easemob.chat.EMChatManager$7:
    com.easemob.chat.EMChatManager this$0 -> this$0
    com.easemob.chat.ConnectionListener val$listener -> val$listener
    void run() -> run
com.easemob.chat.EMChatManager$8 -> com.easemob.chat.EMChatManager$8:
    com.easemob.chat.EMChatManager this$0 -> this$0
    com.easemob.chat.ConnectionListener val$listener -> val$listener
    void run() -> run
com.easemob.chat.EMChatManager$9 -> com.easemob.chat.EMChatManager$9:
    com.easemob.chat.EMChatManager this$0 -> this$0
    com.easemob.EMConnectionListener val$listener -> val$listener
    void run() -> run
com.easemob.chat.EMChatManager$ChatServiceConnection -> com.easemob.chat.EMChatManager$ChatServiceConnection:
    com.easemob.chat.EMChatManager this$0 -> this$0
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.easemob.chat.EMChatManager$EMChatManagerListener -> com.easemob.chat.EMChatManager$EMChatManagerListener:
    com.easemob.chat.EMChatManager this$0 -> this$0
    void chatCreated(org.jivesoftware.smack.Chat,boolean) -> chatCreated
com.easemob.chat.EMChatManager$SingleInvitationListener -> com.easemob.chat.EMChatManager$SingleInvitationListener:
    com.easemob.chat.EMChatManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
com.easemob.chat.EMChatManager$XmppConnectionListener -> com.easemob.chat.EMChatManager$XmppConnectionListener:
    com.easemob.chat.EMChatManager this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
    void onConnectionSuccessful() -> onConnectionSuccessful
    void onConnecting() -> onConnecting
    com.easemob.chat.EMChatManager access$1(com.easemob.chat.EMChatManager$XmppConnectionListener) -> access$1
com.easemob.chat.EMChatManager$XmppConnectionListener$1 -> com.easemob.chat.EMChatManager$XmppConnectionListener$1:
    com.easemob.chat.EMChatManager$XmppConnectionListener this$1 -> this$1
    void run() -> run
com.easemob.chat.EMChatManager$XmppConnectionListener$2 -> com.easemob.chat.EMChatManager$XmppConnectionListener$2:
    com.easemob.chat.EMChatManager$XmppConnectionListener this$1 -> this$1
    void run() -> run
com.easemob.chat.EMChatManager$XmppConnectionListener$3 -> com.easemob.chat.EMChatManager$XmppConnectionListener$3:
    com.easemob.chat.EMChatManager$XmppConnectionListener this$1 -> this$1
    java.lang.Exception val$exception -> val$exception
    void run() -> run
com.easemob.chat.EMChatManager$XmppConnectionListener$4 -> com.easemob.chat.EMChatManager$XmppConnectionListener$4:
    com.easemob.chat.EMChatManager$XmppConnectionListener this$1 -> this$1
    java.lang.Exception val$exception -> val$exception
    void run() -> run
com.easemob.chat.EMChatManager$XmppConnectionListener$5 -> com.easemob.chat.EMChatManager$XmppConnectionListener$5:
    com.easemob.chat.EMChatManager$XmppConnectionListener this$1 -> this$1
    java.lang.Exception val$exception -> val$exception
    void run() -> run
com.easemob.chat.EMChatManager$XmppConnectionListener$6 -> com.easemob.chat.EMChatManager$XmppConnectionListener$6:
    com.easemob.chat.EMChatManager$XmppConnectionListener this$1 -> this$1
    java.lang.Exception val$exception -> val$exception
    void run() -> run
com.easemob.chat.EMChatManager$XmppConnectionListener$7 -> com.easemob.chat.EMChatManager$XmppConnectionListener$7:
    com.easemob.chat.EMChatManager$XmppConnectionListener this$1 -> this$1
    void run() -> run
com.easemob.chat.EMChatManager$XmppConnectionListener$8 -> com.easemob.chat.EMChatManager$XmppConnectionListener$8:
    com.easemob.chat.EMChatManager$XmppConnectionListener this$1 -> this$1
    void run() -> run
com.easemob.chat.EMChatOptions -> com.easemob.chat.EMChatOptions:
    boolean acceptInvitationAlways -> acceptInvitationAlways
    boolean useEncryption -> useEncryption
    boolean useRoster -> useRoster
    boolean noticedBySound -> noticedBySound
    boolean noticedByVibrate -> noticedByVibrate
    boolean notificationEnable -> notificationEnable
    boolean useSpeaker -> useSpeaker
    int numberOfMessagesLoaded -> numberOfMessagesLoaded
    boolean requireReadAck -> requireReadAck
    boolean requireDeliveryAck -> requireDeliveryAck
    boolean requireServerAck -> requireServerAck
    boolean audioFileWithExt -> audioFileWithExt
    com.easemob.chat.OnMessageNotifyListener onMessageNotifyListener -> onMessageNotifyListener
    com.easemob.chat.OnNotificationClickListener onNotificationClickListener -> onNotificationClickListener
    boolean showNotification -> showNotification
    android.net.Uri ringUri -> ringUri
    java.util.List groupsOfNotificationDisabled -> groupsOfNotificationDisabled
    java.util.List usersOfNotificationDisabled -> usersOfNotificationDisabled
    boolean autoConversationsLoaded -> autoConversationsLoaded
    boolean deleteMessagesAsExitGroup -> deleteMessagesAsExitGroup
    boolean isChatroomOwnerLeaveAllowed -> isChatroomOwnerLeaveAllowed
    long offlineInterval -> offlineInterval
    boolean getRequireAck() -> getRequireAck
    void setRequireAck(boolean) -> setRequireAck
    boolean getRequireDeliveryAck() -> getRequireDeliveryAck
    void setRequireDeliveryAck(boolean) -> setRequireDeliveryAck
    boolean getNoticedBySound() -> getNoticedBySound
    void setNoticeBySound(boolean) -> setNoticeBySound
    boolean getNoticedByVibrate() -> getNoticedByVibrate
    void setNoticedByVibrate(boolean) -> setNoticedByVibrate
    boolean getNotificationEnable() -> getNotificationEnable
    void setNotificationEnable(boolean) -> setNotificationEnable
    boolean getNotifyBySoundAndVibrate() -> getNotifyBySoundAndVibrate
    void setNotifyBySoundAndVibrate(boolean) -> setNotifyBySoundAndVibrate
    boolean getUseSpeaker() -> getUseSpeaker
    void setUseSpeaker(boolean) -> setUseSpeaker
    void setUseEncryption(boolean) -> setUseEncryption
    boolean getUseEncryption() -> getUseEncryption
    boolean getUseRoster() -> getUseRoster
    void setUseRoster(boolean) -> setUseRoster
    boolean getAcceptInvitationAlways() -> getAcceptInvitationAlways
    void setAcceptInvitationAlways(boolean) -> setAcceptInvitationAlways
    boolean getRequireServerAck() -> getRequireServerAck
    boolean getAudioFileWithExt() -> getAudioFileWithExt
    void setAudioFileWithExt(boolean) -> setAudioFileWithExt
    void setRequireServerAck(boolean) -> setRequireServerAck
    void setNotifyText(com.easemob.chat.OnMessageNotifyListener) -> setNotifyText
    void setOnNotificationClickListener(com.easemob.chat.OnNotificationClickListener) -> setOnNotificationClickListener
    void setShowNotificationInBackgroud(boolean) -> setShowNotificationInBackgroud
    boolean isShowNotificationInBackgroud() -> isShowNotificationInBackgroud
    void setNotifyRingUri(android.net.Uri) -> setNotifyRingUri
    android.net.Uri getNotifyRingUri() -> getNotifyRingUri
    int getNumberOfMessagesLoaded() -> getNumberOfMessagesLoaded
    void setNumberOfMessagesLoaded(int) -> setNumberOfMessagesLoaded
    void setReceiveNotNoifyGroup(java.util.List) -> setReceiveNotNoifyGroup
    java.util.List getReceiveNoNotifyGroup() -> getReceiveNoNotifyGroup
    void setGroupsOfNotificationDisabled(java.util.List) -> setGroupsOfNotificationDisabled
    java.util.List getGroupsOfNotificationDisabled() -> getGroupsOfNotificationDisabled
    void setUsersOfNotificationDisabled(java.util.List) -> setUsersOfNotificationDisabled
    java.util.List getUsersOfNotificationDisabled() -> getUsersOfNotificationDisabled
    void setDeleteMessagesAsExitGroup(boolean) -> setDeleteMessagesAsExitGroup
    boolean isDeleteMessagesAsExitGroup() -> isDeleteMessagesAsExitGroup
    void setAutoConversatonsLoaded(boolean) -> setAutoConversatonsLoaded
    boolean getAutoConversationsLoaded() -> getAutoConversationsLoaded
    void allowChatroomOwnerLeave(boolean) -> allowChatroomOwnerLeave
    boolean isChatroomOwnerLeaveAllowed() -> isChatroomOwnerLeaveAllowed
    void setOfflineInterval(long) -> setOfflineInterval
    long getOfflineInterval() -> getOfflineInterval
com.easemob.chat.EMChatRoom -> com.easemob.chat.EMChatRoom:
    void addMember(java.lang.String) -> addMember
    void removeMember(java.lang.String) -> removeMember
    java.lang.String toString() -> toString
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getId() -> getId
    void setMembers(java.util.List) -> setMembers
    void setMaxUsers(int) -> setMaxUsers
    java.lang.String getOwner() -> getOwner
    java.lang.String getDescription() -> getDescription
    java.util.List getMembers() -> getMembers
    int getMaxUsers() -> getMaxUsers
    void setId(java.lang.String) -> setId
    boolean isMsgBlocked() -> isMsgBlocked
    long getLastModifiedTime() -> getLastModifiedTime
    void setLastModifiedTime(long) -> setLastModifiedTime
    void setOwner(java.lang.String) -> setOwner
    boolean getMsgBlocked() -> getMsgBlocked
    void setAffiliationsCount(int) -> setAffiliationsCount
    void setDescription(java.lang.String) -> setDescription
    void setMsgBlocked(boolean) -> setMsgBlocked
    int getAffiliationsCount() -> getAffiliationsCount
com.easemob.chat.EMChatRoomManager -> com.easemob.chat.EMChatRoomManager:
    java.lang.String TAG -> TAG
    java.util.Map allChatRooms -> allChatRooms
    java.util.ArrayList chatRoomChangeListeners -> chatRoomChangeListeners
    java.util.ArrayList offlineChatRoomEvents -> offlineChatRoomEvents
    boolean allChatRoomLoaded -> allChatRoomLoaded
    com.easemob.chat.EMMultiUserChatProcessor chatProcessor -> chatProcessor
    com.easemob.chat.core.c cleaner -> cleaner
    boolean deadRoomLoaded -> deadRoomLoaded
    com.easemob.EMConnectionListener cnnListener -> cnnListener
    java.util.concurrent.ExecutorService threadPool -> threadPool
    int[] $SWITCH_TABLE$com$easemob$chat$EMChatRoomManager$EMChatRoomEventType -> $SWITCH_TABLE$com$easemob$chat$EMChatRoomManager$EMChatRoomEventType
    com.easemob.chat.EMCursorResult getChatRoomsFromServer(int,java.lang.String) -> getChatRoomsFromServer
    java.util.List getJoinedChatRooms() -> getJoinedChatRooms
    java.util.List retrieveChatRooms(boolean) -> retrieveChatRooms
    com.easemob.chat.EMChatRoom parseRoom(boolean,org.json.JSONObject) -> parseRoom
    void syncWithServers(java.util.List) -> syncWithServers
    com.easemob.chat.EMChatRoom getChatRoomFromServer(java.lang.String) -> getChatRoomFromServer
    java.util.List getAllChatRooms() -> getAllChatRooms
    java.util.Map loadAllChatRooms() -> loadAllChatRooms
    com.easemob.chat.EMChatRoom getChatRoom(java.lang.String) -> getChatRoom
    com.easemob.chat.EMChatRoom getChatRoomFromRest(java.lang.String,boolean) -> getChatRoomFromRest
    void addChangeListener(com.easemob.EMChatRoomChangeListener) -> addChangeListener
    void removeChangeListener(com.easemob.EMChatRoomChangeListener) -> removeChangeListener
    void joinChatRoom(java.lang.String,com.easemob.EMValueCallBack) -> joinChatRoom
    com.easemob.chat.EMChatRoom joinChatRoom(java.lang.String) -> joinChatRoom
    void exitChatRoom(java.lang.String,com.easemob.EMCallBack) -> exitChatRoom
    void exitChatRoom(java.lang.String) -> exitChatRoom
    void cmdExitRoom(java.lang.String) -> cmdExitRoom
    void handleRoomDestroy(java.lang.String) -> handleRoomDestroy
    void handleUserRemove(java.lang.String) -> handleUserRemove
    void onMemberExit(java.lang.String) -> onMemberExit
    void onMemberJoined(java.lang.String) -> onMemberJoined
    android.util.Pair parseRoomJid(java.lang.String) -> parseRoomJid
    void deleteLocalChatRoom(java.lang.String) -> deleteLocalChatRoom
    org.jivesoftware.smackx.muc.MultiUserChat getMUCWithoutJoin(java.lang.String) -> getMUCWithoutJoin
    com.easemob.chat.EMChatRoom saveRoomInCache(com.easemob.chat.EMChatRoom) -> saveRoomInCache
    void saveRoomInDB(com.easemob.chat.EMChatRoom) -> saveRoomInDB
    java.util.Map getAllChatRoom() -> getAllChatRoom
    void checkConnection() -> checkConnection
    void onInvitation(java.lang.String,java.lang.String,java.lang.String) -> onInvitation
    void processOfflineMessages() -> processOfflineMessages
    void onInit() -> onInit
    void onDestroy() -> onDestroy
    int[] $SWITCH_TABLE$com$easemob$chat$EMChatRoomManager$EMChatRoomEventType() -> $SWITCH_TABLE$com$easemob$chat$EMChatRoomManager$EMChatRoomEventType
    boolean access$1(com.easemob.chat.EMChatRoomManager) -> access$1
    com.easemob.chat.core.c access$2(com.easemob.chat.EMChatRoomManager) -> access$2
    void access$3(com.easemob.chat.EMChatRoomManager,boolean) -> access$3
com.easemob.chat.EMChatRoomManager$1 -> com.easemob.chat.EMChatRoomManager$1:
    com.easemob.chat.EMChatRoomManager this$0 -> this$0
    java.lang.String val$roomId -> val$roomId
    com.easemob.EMValueCallBack val$callback -> val$callback
    void run() -> run
com.easemob.chat.EMChatRoomManager$2 -> com.easemob.chat.EMChatRoomManager$2:
    com.easemob.chat.EMChatRoomManager this$0 -> this$0
    java.lang.String val$roomId -> val$roomId
    com.easemob.EMCallBack val$callback -> val$callback
    void run() -> run
com.easemob.chat.EMChatRoomManager$3 -> com.easemob.chat.EMChatRoomManager$3:
    com.easemob.chat.EMChatRoomManager this$0 -> this$0
    void onConnected() -> onConnected
    void onDisconnected(int) -> onDisconnected
com.easemob.chat.EMChatRoomManager$EMChatRoomChangeEvent -> com.easemob.chat.EMChatRoomManager$EMChatRoomChangeEvent:
    java.lang.String roomId -> roomId
    java.lang.String roomName -> roomName
    java.lang.String inviterUserName -> inviterUserName
    java.lang.String reason -> reason
    com.easemob.chat.EMChatRoomManager$EMChatRoomEventType type -> type
    com.easemob.chat.EMChatRoomManager this$0 -> this$0
com.easemob.chat.EMChatRoomManager$EMChatRoomEventType -> com.easemob.chat.EMChatRoomManager$EMChatRoomEventType:
    com.easemob.chat.EMChatRoomManager$EMChatRoomEventType Invitate -> Invitate
    com.easemob.chat.EMChatRoomManager$EMChatRoomEventType[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMChatRoomManager$EMChatRoomEventType[] values() -> values
    com.easemob.chat.EMChatRoomManager$EMChatRoomEventType valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMChatService -> com.easemob.chat.EMChatService:
    java.lang.String TAG -> TAG
    android.os.IBinder mBinder -> mBinder
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
com.easemob.chat.EMChatService$LocalBinder -> com.easemob.chat.EMChatService$LocalBinder:
    com.easemob.chat.EMChatService this$0 -> this$0
    com.easemob.chat.EMChatService getService() -> getService
com.easemob.chat.EMCloudOperationCallback -> com.easemob.chat.EMCloudOperationCallback:
com.easemob.chat.EMCmdManager -> com.easemob.chat.EMCmdManager:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMCmdManager instance -> instance
    java.util.List cmdProcessors -> cmdProcessors
    com.easemob.chat.EMCmdManager getInstance() -> getInstance
    void addCmdProcessor(com.easemob.chat.CmdMsgProcessor) -> addCmdProcessor
    void processCmd(com.easemob.chat.EMMessage) -> processCmd
com.easemob.chat.EMCmdMessageBody -> com.easemob.chat.EMCmdMessageBody:
com.easemob.chat.EMContact -> com.easemob.chat.EMContact:
    java.lang.String eid -> eid
    java.lang.String username -> username
    java.lang.String nick -> nick
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getUsername() -> getUsername
    void setNick(java.lang.String) -> setNick
    java.lang.String getNick() -> getNick
    int compare(com.easemob.chat.EMContact) -> compare
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getEid() -> getEid
    void setEid(java.lang.String) -> setEid
com.easemob.chat.EMContact$1 -> com.easemob.chat.EMContact$1:
    com.easemob.chat.EMContact createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.EMContact[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.easemob.chat.EMContactListener -> com.easemob.chat.EMContactListener:
    void onContactAdded(java.util.List) -> onContactAdded
    void onContactDeleted(java.util.List) -> onContactDeleted
    void onContactInvited(java.lang.String,java.lang.String) -> onContactInvited
    void onContactAgreed(java.lang.String) -> onContactAgreed
    void onContactRefused(java.lang.String) -> onContactRefused
com.easemob.chat.EMContactManager -> com.easemob.chat.EMContactManager:
    java.lang.String TAG -> TAG
    java.util.Map contactTable -> contactTable
    com.easemob.chat.EMRosterListener rosterListener -> rosterListener
    org.jivesoftware.smack.Roster roster -> roster
    com.easemob.chat.EMRosterStorageImpl rosterStorage -> rosterStorage
    com.easemob.chat.EMContactManager instance -> instance
    java.lang.String black_list_name -> black_list_name
    boolean enableRosterVersion -> enableRosterVersion
    com.easemob.chat.EMContactListener contactListener -> contactListener
    java.util.Set deleteContactsSet -> deleteContactsSet
    java.util.List blackList -> blackList
    boolean hasGetBlacklist -> hasGetBlacklist
    java.lang.String BROADCAST_CONTACT_CHANGED_ACTION -> BROADCAST_CONTACT_CHANGED_ACTION
    com.easemob.chat.core.EMConnectionManager xmppConnectionManager -> xmppConnectionManager
    android.content.Context context -> context
    boolean isIntied -> isIntied
    com.easemob.chat.EMContactManager getInstance() -> getInstance
    void init(android.content.Context,com.easemob.chat.core.EMConnectionManager) -> init
    boolean needGetRosterFromServer() -> needGetRosterFromServer
    void addContact(java.lang.String,java.lang.String) -> addContact
    void deleteContact(java.lang.String) -> deleteContact
    void addContactInternal(com.easemob.chat.EMContact) -> addContactInternal
    void deleteContactInternal(java.lang.String) -> deleteContactInternal
    com.easemob.chat.EMContact getContactByUserName(java.lang.String) -> getContactByUserName
    void removeContactFromRoster(java.lang.String) -> removeContactFromRoster
    void removeContactByUsername(java.lang.String) -> removeContactByUsername
    void reset() -> reset
    org.jivesoftware.smack.RosterStorage getRosterStorage(android.content.Context) -> getRosterStorage
    java.util.List getRosterUserNames() -> getRosterUserNames
    void addContactToRosterThroughPresence(java.lang.String,java.lang.String) -> addContactToRosterThroughPresence
    java.lang.String getBareEidFromUserName(java.lang.String) -> getBareEidFromUserName
    java.lang.String getEidFromUserName(java.lang.String) -> getEidFromUserName
    java.lang.String getUserNameFromEid(java.lang.String) -> getUserNameFromEid
    java.lang.String getEidFromGroupId(java.lang.String) -> getEidFromGroupId
    java.lang.String getGroupIdFromEid(java.lang.String) -> getGroupIdFromEid
    java.lang.String getCurrentUserFullJid() -> getCurrentUserFullJid
    java.util.List getContactUserNames() -> getContactUserNames
    void setContactListener(com.easemob.chat.EMContactListener) -> setContactListener
    void removeContactListener() -> removeContactListener
    void addUserToBlackList(java.lang.String,boolean) -> addUserToBlackList
    void deleteUserFromBlackList(java.lang.String) -> deleteUserFromBlackList
    java.util.List getBlackListUsernames() -> getBlackListUsernames
    java.util.List getBlackListUsernamesFromServer() -> getBlackListUsernamesFromServer
    void saveBlackList(java.util.List) -> saveBlackList
    void addToPrivacyList(java.lang.String,boolean) -> addToPrivacyList
    void deleteFromPrivacyList(java.lang.String) -> deleteFromPrivacyList
    java.lang.String getContactChangeAction() -> getContactChangeAction
    void checkConnection() -> checkConnection
    void loadContacts() -> loadContacts
com.easemob.chat.EMConversation -> com.easemob.chat.EMConversation:
    java.lang.String TAG -> TAG
    java.util.List messages -> messages
    int unreadMsgCount -> unreadMsgCount
    java.lang.String username -> username
    boolean isGroup -> isGroup
    com.easemob.chat.EMContact opposite -> opposite
    com.easemob.chat.EMConversation$EMConversationType type -> type
    long msgCount -> msgCount
    boolean isKeywordSearchEnabled -> isKeywordSearchEnabled
    void addMessage(com.easemob.chat.EMMessage) -> addMessage
    void addMessage(com.easemob.chat.EMMessage,boolean) -> addMessage
    void saveUnreadMsgCount(int) -> saveUnreadMsgCount
    void deleteUnreadMsgCountRecord() -> deleteUnreadMsgCountRecord
    int getUnreadMsgCount() -> getUnreadMsgCount
    void resetUnsetMsgCount() -> resetUnsetMsgCount
    void resetUnreadMsgCount() -> resetUnreadMsgCount
    void markAllMessagesAsRead() -> markAllMessagesAsRead
    int getMsgCount() -> getMsgCount
    int getAllMsgCount() -> getAllMsgCount
    com.easemob.chat.EMMessage getMessage(int) -> getMessage
    com.easemob.chat.EMMessage getMessage(int,boolean) -> getMessage
    java.util.List loadMoreMsgFromDB(java.lang.String,int) -> loadMoreMsgFromDB
    java.util.List loadMoreMessages(boolean,java.lang.String,int) -> loadMoreMessages
    java.util.List loadMoreGroupMsgFromDB(java.lang.String,int) -> loadMoreGroupMsgFromDB
    com.easemob.chat.EMMessage getMessage(java.lang.String) -> getMessage
    com.easemob.chat.EMMessage getMessage(java.lang.String,boolean) -> getMessage
    com.easemob.chat.EMMessage loadMessage(java.lang.String) -> loadMessage
    java.util.List loadMessages(java.util.List) -> loadMessages
    void markMessageAsRead(java.lang.String) -> markMessageAsRead
    java.util.List getAllMessages() -> getAllMessages
    int getMessagePosition(com.easemob.chat.EMMessage) -> getMessagePosition
    java.lang.String getUserName() -> getUserName
    void removeMessage(java.lang.String) -> removeMessage
    boolean getIsGroup() -> getIsGroup
    boolean isGroup() -> isGroup
    void setGroup(boolean) -> setGroup
    com.easemob.chat.EMMessage getLastMessage() -> getLastMessage
    void clear() -> clear
    void setExtField(java.lang.String) -> setExtField
    java.lang.String getExtField() -> getExtField
    com.easemob.chat.EMConversation$EMConversationType getType() -> getType
    void markAsKeywordSearch() -> markAsKeywordSearch
    void setType(com.easemob.chat.EMConversation$EMConversationType) -> setType
    com.easemob.chat.EMConversation$EMConversationType msgType2ConversationType(java.lang.String,com.easemob.chat.EMMessage$ChatType) -> msgType2ConversationType
    java.lang.String access$0(com.easemob.chat.EMConversation) -> access$0
com.easemob.chat.EMConversation$1 -> com.easemob.chat.EMConversation$1:
    com.easemob.chat.EMConversation this$0 -> this$0
    int val$count -> val$count
    void run() -> run
com.easemob.chat.EMConversation$2 -> com.easemob.chat.EMConversation$2:
    com.easemob.chat.EMConversation this$0 -> this$0
    void run() -> run
com.easemob.chat.EMConversation$EMConversationType -> com.easemob.chat.EMConversation$EMConversationType:
    com.easemob.chat.EMConversation$EMConversationType Chat -> Chat
    com.easemob.chat.EMConversation$EMConversationType GroupChat -> GroupChat
    com.easemob.chat.EMConversation$EMConversationType ChatRoom -> ChatRoom
    com.easemob.chat.EMConversation$EMConversationType DiscussionGroup -> DiscussionGroup
    com.easemob.chat.EMConversation$EMConversationType HelpDesk -> HelpDesk
    com.easemob.chat.EMConversation$EMConversationType[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMConversation$EMConversationType[] values() -> values
    com.easemob.chat.EMConversation$EMConversationType valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMConversationManager -> com.easemob.chat.EMConversationManager:
    java.lang.String TAG -> TAG
    int DEFAULT_LOAD_MESSAGE_COUNT -> DEFAULT_LOAD_MESSAGE_COUNT
    com.easemob.chat.EMConversationManager instance -> instance
    java.util.Hashtable allMessages -> allMessages
    java.util.Hashtable conversations -> conversations
    java.util.Hashtable tempConversations -> tempConversations
    java.util.Hashtable typeConversations -> typeConversations
    boolean allConversationsLoaded -> allConversationsLoaded
    com.easemob.chat.EMConversationManager getInstance() -> getInstance
    void loadAllConversations() -> loadAllConversations
    void loadAllConversations(int) -> loadAllConversations
    void asyncloadAllConversations(com.easemob.EMCallBack,int) -> asyncloadAllConversations
    void asyncloadAllConversations(com.easemob.EMCallBack) -> asyncloadAllConversations
    java.util.List getMessagesByMsgType(com.easemob.chat.EMMessage$Type,com.easemob.chat.EMMessage$ChatType,java.lang.String,java.lang.String,int) -> getMessagesByMsgType
    long getTotalMessageCountByMsgType(com.easemob.chat.EMMessage$Type,com.easemob.chat.EMMessage$ChatType,java.lang.String) -> getTotalMessageCountByMsgType
    com.easemob.chat.EMConversation getConversation(java.lang.String) -> getConversation
    com.easemob.chat.EMConversation getConversation(java.lang.String,boolean,com.easemob.chat.EMConversation$EMConversationType) -> getConversation
    boolean deleteConversation(java.lang.String) -> deleteConversation
    boolean deleteConversation(java.lang.String,boolean) -> deleteConversation
    boolean deleteConversation(java.lang.String,boolean,boolean) -> deleteConversation
    void deleteAllConversations() -> deleteAllConversations
    void resetAllUnreadMsgCount() -> resetAllUnreadMsgCount
    boolean clearConversation(java.lang.String) -> clearConversation
    void removeMessage(java.lang.String) -> removeMessage
    java.util.Hashtable getAllConversations() -> getAllConversations
    com.easemob.chat.EMMessage getMessage(java.lang.String) -> getMessage
    void replaceMessageId(java.lang.String,java.lang.String) -> replaceMessageId
    boolean areAllConversationsLoaded() -> areAllConversationsLoaded
    void addMessage(com.easemob.chat.EMMessage) -> addMessage
    void addMessage(com.easemob.chat.EMMessage,boolean) -> addMessage
    void addConversationToDB(com.easemob.chat.EMMessage) -> addConversationToDB
    void saveMessage(com.easemob.chat.EMMessage) -> saveMessage
    void saveMessage(com.easemob.chat.EMMessage,boolean) -> saveMessage
    int getUnreadMsgsCount() -> getUnreadMsgsCount
    java.util.List getConversationsUnread() -> getConversationsUnread
    java.util.List getConversationsByType(com.easemob.chat.EMConversation$EMConversationType) -> getConversationsByType
    void clear() -> clear
com.easemob.chat.EMConversationManager$1 -> com.easemob.chat.EMConversationManager$1:
    com.easemob.chat.EMConversationManager this$0 -> this$0
    int val$initMessagesToBeLoaded -> val$initMessagesToBeLoaded
    com.easemob.EMCallBack val$callback -> val$callback
    void run() -> run
com.easemob.chat.EMCursorResult -> com.easemob.chat.EMCursorResult:
    java.lang.String cursor -> cursor
    void setCursor(java.lang.String) -> setCursor
    java.lang.String getCursor() -> getCursor
    java.lang.Object getData() -> getData
com.easemob.chat.EMCustomerService -> com.easemob.chat.EMCustomerService:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMCustomerServiceConfiguration configuration -> configuration
    com.easemob.chat.EMCustomerService instance -> instance
    android.app.PendingIntent logoutIntent -> logoutIntent
    com.easemob.chat.EMCustomerService$HelpDeskLogoutReceiver logoutReceiver -> logoutReceiver
    java.lang.String CONFIG_EASEMOB_HELPDESK_JID -> CONFIG_EASEMOB_HELPDESK_JID
    java.lang.String HELPDESK_LOGOUT_BROADCAST -> HELPDESK_LOGOUT_BROADCAST
    long MAX_LOGOUT_DELAY -> MAX_LOGOUT_DELAY
    long MIN_INTERVAL_UPDATE_LOGOUT_TIME -> MIN_INTERVAL_UPDATE_LOGOUT_TIME
    long logoutDelay -> logoutDelay
    com.easemob.chat.EMCustomerService getInstance() -> getInstance
    void setConfiguration(com.easemob.chat.EMCustomerServiceConfiguration) -> setConfiguration
    boolean isCustomServiceAgent(java.lang.String) -> isCustomServiceAgent
    void setLogoutDelay(long) -> setLogoutDelay
    java.lang.String getLogoutBroadcastAction() -> getLogoutBroadcastAction
    void scheduleLogout(com.easemob.chat.EMCustomerService$EMScheduleLogoutReason) -> scheduleLogout
    void unregisterLogoutTimerReceiver() -> unregisterLogoutTimerReceiver
    void cancelScheduledLogout() -> cancelScheduledLogout
    void forceLogout() -> forceLogout
    boolean isMessageBelongingToCusomerService(com.easemob.chat.EMMessage) -> isMessageBelongingToCusomerService
    void onInit() -> onInit
    void onDestroy() -> onDestroy
    void access$0(com.easemob.chat.EMCustomerService) -> access$0
com.easemob.chat.EMCustomerService$EMScheduleLogoutReason -> com.easemob.chat.EMCustomerService$EMScheduleLogoutReason:
    com.easemob.chat.EMCustomerService$EMScheduleLogoutReason EMLogin -> EMLogin
    com.easemob.chat.EMCustomerService$EMScheduleLogoutReason EMNewMessage -> EMNewMessage
    com.easemob.chat.EMCustomerService$EMScheduleLogoutReason[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMCustomerService$EMScheduleLogoutReason[] values() -> values
    com.easemob.chat.EMCustomerService$EMScheduleLogoutReason valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMCustomerService$HelpDeskLogoutReceiver -> com.easemob.chat.EMCustomerService$HelpDeskLogoutReceiver:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMCustomerService this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.easemob.chat.EMCustomerServiceConfiguration -> com.easemob.chat.EMCustomerServiceConfiguration:
    java.util.List agents -> agents
    long connectionExpiredDuration -> connectionExpiredDuration
    void setAgents(java.util.List) -> setAgents
    java.util.List getAgents() -> getAgents
com.easemob.chat.EMEncryptUtils -> com.easemob.chat.EMEncryptUtils:
    java.lang.String TAG -> TAG
    java.lang.String encryptMessage(java.lang.String,java.lang.String) -> encryptMessage
    java.lang.String decryptMessage(java.lang.String,java.lang.String) -> decryptMessage
    java.lang.String encryptFile(java.lang.String,java.lang.String) -> encryptFile
    void decryptFile(java.lang.String,java.lang.String) -> decryptFile
com.easemob.chat.EMExtraService -> com.easemob.chat.EMExtraService:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMExtraService me -> me
    com.easemob.chat.EMExtraService getInstance() -> getInstance
    java.util.List getRobotsFromServer() -> getRobotsFromServer
com.easemob.chat.EMGCMBroadcastReceiver -> com.easemob.chat.EMGCMBroadcastReceiver:
    java.lang.String TAG -> TAG
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.easemob.chat.EMGCMListenerService -> com.easemob.chat.EMGCMListenerService:
    java.lang.String TAG -> TAG
    void onHandleIntent(android.content.Intent) -> onHandleIntent
com.easemob.chat.EMGroup -> com.easemob.chat.EMGroup:
    boolean isPublic -> isPublic
    boolean allowInvites -> allowInvites
    boolean membersOnly -> membersOnly
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    boolean isPublic() -> isPublic
    void setIsPublic(boolean) -> setIsPublic
    boolean isAllowInvites() -> isAllowInvites
    boolean isMembersOnly() -> isMembersOnly
    android.graphics.Bitmap getGroupAvator() -> getGroupAvator
    void copyGroup(com.easemob.chat.EMGroup) -> copyGroup
    void setPublic(boolean) -> setPublic
    java.lang.String toString() -> toString
    void removeMember(java.lang.String) -> removeMember
    java.lang.String getName() -> getName
    void addMember(java.lang.String) -> addMember
    void setName(java.lang.String) -> setName
    java.lang.String getId() -> getId
    void setMembers(java.util.List) -> setMembers
    void setMaxUsers(int) -> setMaxUsers
    java.lang.String getOwner() -> getOwner
    java.lang.String getDescription() -> getDescription
    java.util.List getMembers() -> getMembers
    int getMaxUsers() -> getMaxUsers
    void setId(java.lang.String) -> setId
    boolean isMsgBlocked() -> isMsgBlocked
    long getLastModifiedTime() -> getLastModifiedTime
    void setLastModifiedTime(long) -> setLastModifiedTime
    void setOwner(java.lang.String) -> setOwner
    boolean getMsgBlocked() -> getMsgBlocked
    void setAffiliationsCount(int) -> setAffiliationsCount
    void setDescription(java.lang.String) -> setDescription
    void setMsgBlocked(boolean) -> setMsgBlocked
    int getAffiliationsCount() -> getAffiliationsCount
com.easemob.chat.EMGroupInfo -> com.easemob.chat.EMGroupInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String groupId -> groupId
    java.lang.String groupName -> groupName
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    java.lang.String toString() -> toString
com.easemob.chat.EMGroupManager -> com.easemob.chat.EMGroupManager:
    java.lang.String TAG -> TAG
    java.lang.String MUC_NS_USER -> MUC_NS_USER
    java.lang.String PERMISSION_ERROR_ADD -> PERMISSION_ERROR_ADD
    java.lang.String PERMISSION_ERROR_REMOVE -> PERMISSION_ERROR_REMOVE
    java.lang.String PERMISSION_ERROR_DELETE -> PERMISSION_ERROR_DELETE
    java.lang.String PERMISSION_ERROR -> PERMISSION_ERROR
    int DEFAULT_MAX_USERS -> DEFAULT_MAX_USERS
    java.util.Map allGroups -> allGroups
    com.easemob.chat.EMGroupManager instance -> instance
    android.content.Context appContext -> appContext
    java.util.ArrayList groupChangeListeners -> groupChangeListeners
    boolean autoAcceptInvitation -> autoAcceptInvitation
    java.util.ArrayList offlineGroupEvents -> offlineGroupEvents
    com.easemob.chat.EMGroupManager$MucApplyListener applyListener -> applyListener
    boolean allGroupLoaded -> allGroupLoaded
    java.util.concurrent.ExecutorService threadPool -> threadPool
    org.jivesoftware.smack.XMPPConnection connection -> connection
    com.easemob.chat.EMMultiUserChatProcessor chatProcessor -> chatProcessor
    java.lang.Object mutex -> mutex
    boolean receivedQuery -> receivedQuery
    int[] $SWITCH_TABLE$com$easemob$chat$EMGroupManager$GroupEventType -> $SWITCH_TABLE$com$easemob$chat$EMGroupManager$GroupEventType
    com.easemob.chat.EMGroupManager getInstance() -> getInstance
    void syncLoadGroups(com.easemob.EMCallBack) -> syncLoadGroups
    void loadAllGroups(com.easemob.EMCallBack) -> loadAllGroups
    java.util.List getAllGroups() -> getAllGroups
    com.easemob.chat.EMGroup getGroup(java.lang.String) -> getGroup
    void loadAllGroups() -> loadAllGroups
    void loadGroups() -> loadGroups
    void joinGroupsAfterLogin() -> joinGroupsAfterLogin
    java.lang.String generateGroupId() -> generateGroupId
    com.easemob.chat.EMGroup createPublicGroup(java.lang.String,java.lang.String,java.lang.String[],boolean) -> createPublicGroup
    java.lang.String[] filterOwnerFromMembers(java.lang.String,java.lang.String[]) -> filterOwnerFromMembers
    com.easemob.chat.EMGroup createPublicGroup(java.lang.String,java.lang.String,java.lang.String[],boolean,int) -> createPublicGroup
    com.easemob.chat.EMGroup createPrivateGroup(java.lang.String,java.lang.String,java.lang.String[]) -> createPrivateGroup
    com.easemob.chat.EMGroup createPrivateGroup(java.lang.String,java.lang.String,java.lang.String[],boolean) -> createPrivateGroup
    com.easemob.chat.EMGroup createPrivateGroup(java.lang.String,java.lang.String,java.lang.String[],boolean,int) -> createPrivateGroup
    java.util.Map getAllGroup() -> getAllGroup
    com.easemob.chat.EMGroup createGroup(java.lang.String,java.lang.String,java.lang.String[]) -> createGroup
    void createPrivateXmppMUC(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int) -> createPrivateXmppMUC
    void createPublicXmppMUC(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int) -> createPublicXmppMUC
    void exitAndDeleteGroup(java.lang.String) -> exitAndDeleteGroup
    void deleteLocalGroup(java.lang.String) -> deleteLocalGroup
    void removeGroupFromCache(java.lang.String) -> removeGroupFromCache
    void checkGroupOwner(com.easemob.chat.EMGroup,java.lang.String) -> checkGroupOwner
    void addUsersToGroup(java.lang.String,java.lang.String[]) -> addUsersToGroup
    void addUserToMUC(java.lang.String,java.lang.String,boolean) -> addUserToMUC
    void removeUserFromGroup(java.lang.String,java.lang.String) -> removeUserFromGroup
    void removeUserFromMUC(java.lang.String,java.lang.String) -> removeUserFromMUC
    void exitFromGroup(java.lang.String) -> exitFromGroup
    com.easemob.chat.EMGroup getGroupFromServer(java.lang.String) -> getGroupFromServer
    com.easemob.chat.EMGroup getGroupFromRestServer(java.lang.String,boolean) -> getGroupFromRestServer
    com.easemob.chat.EMGroup createOrUpdateLocalGroup(com.easemob.chat.EMGroup) -> createOrUpdateLocalGroup
    com.easemob.chat.EMGroup updateCache(com.easemob.chat.EMGroup) -> updateCache
    com.easemob.chat.EMGroup getMUC(java.lang.String,java.lang.String,boolean,boolean) -> getMUC
    java.util.List getGroupsFromServer() -> getGroupsFromServer
    java.util.List getJoinedGroupsFromServer() -> getJoinedGroupsFromServer
    void checkConnection() -> checkConnection
    java.util.List getGroupsFromRestServer(boolean) -> getGroupsFromRestServer
    com.easemob.chat.EMGroup parseGroupFromData(boolean,org.json.JSONObject) -> parseGroupFromData
    void asyncGetGroupsFromServer(com.easemob.EMValueCallBack) -> asyncGetGroupsFromServer
    java.util.List getAllPublicGroupsFromServer() -> getAllPublicGroupsFromServer
    com.easemob.chat.EMCursorResult getPublicGroupsFromServer(int,java.lang.String) -> getPublicGroupsFromServer
    com.easemob.chat.EMCursorResult getPublicGroupsFromRest(int,java.lang.String) -> getPublicGroupsFromRest
    void asyncGetAllPublicGroupsFromServer(com.easemob.EMValueCallBack) -> asyncGetAllPublicGroupsFromServer
    void syncGroupsWithRemoteGroupList(java.util.List) -> syncGroupsWithRemoteGroupList
    void batchRemoveGroups(java.util.List) -> batchRemoveGroups
    java.util.List getMUCs(java.lang.String,boolean) -> getMUCs
    java.util.List getPublicMUCs(java.lang.String,java.lang.String) -> getPublicMUCs
    java.lang.String formatGroupName(java.lang.String) -> formatGroupName
    void clear() -> clear
    void removeMucs() -> removeMucs
    void retrieveUserMucsOnServer(java.lang.String) -> retrieveUserMucsOnServer
    void joinGroup(java.lang.String) -> joinGroup
    void changeGroupName(java.lang.String,java.lang.String) -> changeGroupName
    void addGroupChangeListener(com.easemob.chat.GroupChangeListener) -> addGroupChangeListener
    void removeGroupChangeListener(com.easemob.chat.GroupChangeListener) -> removeGroupChangeListener
    com.easemob.chat.EMGroup acceptInvitation(java.lang.String) -> acceptInvitation
    void declineInvitation(java.lang.String,java.lang.String,java.lang.String) -> declineInvitation
    void acceptApplication(java.lang.String,java.lang.String) -> acceptApplication
    void declineApplication(java.lang.String,java.lang.String,java.lang.String) -> declineApplication
    void setAutoAcceptInvitation(boolean) -> setAutoAcceptInvitation
    void inviteUser(java.lang.String,java.lang.String[],java.lang.String) -> inviteUser
    void inviteUserMUC(java.lang.String,java.util.List,java.lang.String) -> inviteUserMUC
    void applyJoinToGroup(java.lang.String,java.lang.String) -> applyJoinToGroup
    void blockGroupMessage(java.lang.String) -> blockGroupMessage
    void unblockGroupMessage(java.lang.String) -> unblockGroupMessage
    void blockUser(java.lang.String,java.lang.String) -> blockUser
    void blockUserMuc(java.lang.String,java.lang.String) -> blockUserMuc
    void unblockUser(java.lang.String,java.lang.String) -> unblockUser
    void unblockUserMuc(java.lang.String,java.lang.String) -> unblockUserMuc
    java.util.List getBlockedUsers(java.lang.String) -> getBlockedUsers
    java.util.List getBlockedUsersMuc(java.lang.String) -> getBlockedUsersMuc
    void onInvitation(java.lang.String,java.lang.String,java.lang.String) -> onInvitation
    void processOfflineMessages() -> processOfflineMessages
    org.jivesoftware.smackx.muc.MultiUserChat getMUCWithoutJoin(java.lang.String) -> getMUCWithoutJoin
    void handleRoomDestroy(java.lang.String) -> handleRoomDestroy
    void handleUserRemove(java.lang.String) -> handleUserRemove
    void apply(org.jivesoftware.smack.packet.Message,java.lang.String,java.lang.String,java.lang.String) -> apply
    void decline(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> decline
    void accept(java.lang.String,java.lang.String,java.lang.String) -> accept
    void onInit() -> onInit
    void onDestroy() -> onDestroy
    java.lang.String access$0() -> access$0
    java.lang.Object access$1(com.easemob.chat.EMGroupManager) -> access$1
    void access$2(com.easemob.chat.EMGroupManager,boolean) -> access$2
    void access$3(com.easemob.chat.EMGroupManager,com.easemob.EMCallBack) -> access$3
    com.easemob.chat.EMMultiUserChatProcessor access$4(com.easemob.chat.EMGroupManager) -> access$4
    int[] $SWITCH_TABLE$com$easemob$chat$EMGroupManager$GroupEventType() -> $SWITCH_TABLE$com$easemob$chat$EMGroupManager$GroupEventType
com.easemob.chat.EMGroupManager$1 -> com.easemob.chat.EMGroupManager$1:
    com.easemob.chat.EMGroupManager this$0 -> this$0
    com.easemob.EMCallBack val$callback -> val$callback
    void run() -> run
com.easemob.chat.EMGroupManager$2 -> com.easemob.chat.EMGroupManager$2:
    com.easemob.chat.EMGroupManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMGroupManager$3 -> com.easemob.chat.EMGroupManager$3:
    com.easemob.chat.EMGroupManager this$0 -> this$0
    com.easemob.EMValueCallBack val$callback -> val$callback
    void run() -> run
com.easemob.chat.EMGroupManager$4 -> com.easemob.chat.EMGroupManager$4:
    com.easemob.chat.EMGroupManager this$0 -> this$0
    com.easemob.EMValueCallBack val$callback -> val$callback
    void run() -> run
com.easemob.chat.EMGroupManager$5 -> com.easemob.chat.EMGroupManager$5:
    com.easemob.chat.EMGroupManager this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
com.easemob.chat.EMGroupManager$GroupChangeEvent -> com.easemob.chat.EMGroupManager$GroupChangeEvent:
    java.lang.String groupId -> groupId
    java.lang.String groupName -> groupName
    java.lang.String inviterUserName -> inviterUserName
    java.lang.String reason -> reason
    com.easemob.chat.EMGroupManager$GroupEventType type -> type
    com.easemob.chat.EMGroupManager this$0 -> this$0
com.easemob.chat.EMGroupManager$GroupEventType -> com.easemob.chat.EMGroupManager$GroupEventType:
    com.easemob.chat.EMGroupManager$GroupEventType Invitate -> Invitate
    com.easemob.chat.EMGroupManager$GroupEventType Apply -> Apply
    com.easemob.chat.EMGroupManager$GroupEventType ApplicationAccept -> ApplicationAccept
    com.easemob.chat.EMGroupManager$GroupEventType ApplicationDeclind -> ApplicationDeclind
    com.easemob.chat.EMGroupManager$GroupEventType[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMGroupManager$GroupEventType[] values() -> values
    com.easemob.chat.EMGroupManager$GroupEventType valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMGroupManager$MUCSearchIQ -> com.easemob.chat.EMGroupManager$MUCSearchIQ:
    com.easemob.chat.EMGroupManager this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
com.easemob.chat.EMGroupManager$MucApplyListener -> com.easemob.chat.EMGroupManager$MucApplyListener:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMGroupManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
com.easemob.chat.EMGroupManager$MucUserStatusListener -> com.easemob.chat.EMGroupManager$MucUserStatusListener:
    java.lang.String roomJid -> roomJid
    com.easemob.chat.EMGroupManager this$0 -> this$0
    void adminGranted() -> adminGranted
    void adminRevoked() -> adminRevoked
    void banned(java.lang.String,java.lang.String) -> banned
    void kicked(java.lang.String,java.lang.String) -> kicked
    void membershipGranted() -> membershipGranted
    void membershipRevoked() -> membershipRevoked
    void moderatorGranted() -> moderatorGranted
    void moderatorRevoked() -> moderatorRevoked
    void ownershipGranted() -> ownershipGranted
    void ownershipRevoked() -> ownershipRevoked
    void voiceGranted() -> voiceGranted
    void voiceRevoked() -> voiceRevoked
com.easemob.chat.EMGroupManager$RoomQueryIQ -> com.easemob.chat.EMGroupManager$RoomQueryIQ:
    com.easemob.chat.EMGroupManager this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
com.easemob.chat.EMGroupManager$SearchPacketListener -> com.easemob.chat.EMGroupManager$SearchPacketListener:
    com.easemob.chat.EMGroupManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
com.easemob.chat.EMGroupMessageListener -> com.easemob.chat.EMGroupMessageListener:
    java.lang.String TAG -> TAG
    com.easemob.chat.core.EMRoomTypeExtension extension -> extension
    boolean processMessage(org.jivesoftware.smack.packet.Message) -> processMessage
    void processGroupMessage(org.jivesoftware.smack.packet.Message,com.easemob.chat.EMMessage) -> processGroupMessage
com.easemob.chat.EMJingleStreamManager -> com.easemob.chat.EMJingleStreamManager:
    java.lang.String TAG -> TAG
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum creator -> creator
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum senders -> senders
    java.util.List mediaNames -> mediaNames
    com.easemob.media.AVNative avNative -> avNative
    com.easemob.media.EMVideoCallBridge videoBridge -> videoBridge
    boolean isVideoCall -> isVideoCall
    com.easemob.chat.EMStreamParams streamParams -> streamParams
    long callStartTime -> callStartTime
    int callCostTime -> callCostTime
    java.util.List getMediaNames() -> getMediaNames
    boolean addDefaultMedia(com.xonami.javaBells.MediaType,java.lang.String) -> addDefaultMedia
    java.util.List createContentList(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum) -> createContentList
    java.util.List createcontentList(java.lang.String) -> createcontentList
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.IceUdpTransportPacketExtension getLocalCandidatePacketExtensionForStream(java.lang.String,java.lang.String) -> getLocalCandidatePacketExtensionForStream
    boolean isVideoCall() -> isVideoCall
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension createContentPacketExtention(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum,java.lang.String) -> createContentPacketExtention
    java.util.List parseIncomingAndBuildMedia(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum) -> parseIncomingAndBuildMedia
    java.util.List parseIncomingAndBuildMedia(java.util.List,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum) -> parseIncomingAndBuildMedia
    void initStreamParams(com.easemob.chat.EMStreamParams) -> initStreamParams
    void startStream(com.easemob.chat.EMStreamParams) -> startStream
    void stopStream() -> stopStream
    boolean streamStarted() -> streamStarted
    java.lang.String access$000() -> access$000
    com.easemob.media.EMVideoCallBridge access$100(com.easemob.chat.EMJingleStreamManager) -> access$100
    com.easemob.media.AVNative access$200(com.easemob.chat.EMJingleStreamManager) -> access$200
    com.easemob.chat.EMStreamParams access$300(com.easemob.chat.EMJingleStreamManager) -> access$300
com.easemob.chat.EMJingleStreamManager$1 -> com.easemob.chat.EMJingleStreamManager$1:
    com.easemob.chat.EMJingleStreamManager this$0 -> this$0
    void updateStatus(int) -> updateStatus
com.easemob.chat.EMJingleStreamManager$2 -> com.easemob.chat.EMJingleStreamManager$2:
    com.easemob.media.IGxStatusCallback val$cb -> val$cb
    com.easemob.chat.EMStreamParams val$streamParams -> val$streamParams
    com.easemob.chat.EMJingleStreamManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMJingleStreamManager$3 -> com.easemob.chat.EMJingleStreamManager$3:
    com.easemob.chat.EMJingleStreamManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMKeywordSearchInfo -> com.easemob.chat.EMKeywordSearchInfo:
    java.lang.String username -> username
    com.easemob.chat.EMMessage message -> message
    long count -> count
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
    com.easemob.chat.EMMessage getMessage() -> getMessage
    void setMessage(com.easemob.chat.EMMessage) -> setMessage
    long getCount() -> getCount
    void setCount(long) -> setCount
com.easemob.chat.EMLeaveRoom -> com.easemob.chat.EMLeaveRoom:
    java.lang.String roomId -> roomId
    com.easemob.chat.EMChatRoomManager roomMgr -> roomMgr
    void run() -> run
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.easemob.chat.EMMessage -> com.easemob.chat.EMMessage:
    java.lang.String TAG -> TAG
    com.easemob.EMCallBack messageStatusCallBack -> messageStatusCallBack
    com.easemob.chat.EMMessage$Type type -> type
    com.easemob.chat.EMMessage$Direct direct -> direct
    com.easemob.chat.EMMessage$Status status -> status
    com.easemob.chat.EMContact from -> from
    com.easemob.chat.EMContact to -> to
    com.easemob.chat.MessageBody body -> body
    java.lang.String msgId -> msgId
    boolean isAcked -> isAcked
    boolean isDelivered -> isDelivered
    long msgTime -> msgTime
    com.easemob.chat.EMMessage$ChatType chatType -> chatType
    int progress -> progress
    java.util.Hashtable attributes -> attributes
    boolean unread -> unread
    boolean offline -> offline
    boolean isListened -> isListened
    java.lang.String ATTR_ENCRYPTED -> ATTR_ENCRYPTED
    int error -> error
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.easemob.chat.EMMessage$Type getType() -> getType
    com.easemob.chat.MessageBody getBody() -> getBody
    long getMsgTime() -> getMsgTime
    void setMsgTime(long) -> setMsgTime
    com.easemob.chat.EMMessage createSendMessage(com.easemob.chat.EMMessage$Type) -> createSendMessage
    com.easemob.chat.EMMessage createReceiveMessage(com.easemob.chat.EMMessage$Type) -> createReceiveMessage
    com.easemob.chat.EMMessage createTxtSendMessage(java.lang.String,java.lang.String) -> createTxtSendMessage
    com.easemob.chat.EMMessage createVoiceSendMessage(java.lang.String,int,java.lang.String) -> createVoiceSendMessage
    com.easemob.chat.EMMessage createImageSendMessage(java.lang.String,boolean,java.lang.String) -> createImageSendMessage
    com.easemob.chat.EMMessage createVideoSendMessage(java.lang.String,java.lang.String,int,java.lang.String) -> createVideoSendMessage
    com.easemob.chat.EMMessage createLocationSendMessage(double,double,java.lang.String,java.lang.String) -> createLocationSendMessage
    com.easemob.chat.EMMessage createFileSendMessage(java.lang.String,java.lang.String) -> createFileSendMessage
    void addBody(com.easemob.chat.MessageBody) -> addBody
    java.lang.String getFrom() -> getFrom
    void setFrom(java.lang.String) -> setFrom
    void setTo(java.lang.String) -> setTo
    java.lang.String getTo() -> getTo
    java.lang.String getMsgId() -> getMsgId
    void setMsgId(java.lang.String) -> setMsgId
    void setReceipt(java.lang.String) -> setReceipt
    void setMessageStatusCallback(com.easemob.EMCallBack) -> setMessageStatusCallback
    java.lang.String toString() -> toString
    void setAttribute(java.lang.String,boolean) -> setAttribute
    void setAttribute(java.lang.String,int) -> setAttribute
    void setAttribute(java.lang.String,org.json.JSONObject) -> setAttribute
    void setAttribute(java.lang.String,org.json.JSONArray) -> setAttribute
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    boolean getBooleanAttribute(java.lang.String) -> getBooleanAttribute
    boolean getBooleanAttribute(java.lang.String,boolean) -> getBooleanAttribute
    int getIntAttribute(java.lang.String,int) -> getIntAttribute
    int getIntAttribute(java.lang.String) -> getIntAttribute
    java.lang.String getStringAttribute(java.lang.String) -> getStringAttribute
    java.lang.String getStringAttribute(java.lang.String,java.lang.String) -> getStringAttribute
    org.json.JSONObject getJSONObjectAttribute(java.lang.String) -> getJSONObjectAttribute
    org.json.JSONArray getJSONArrayAttribute(java.lang.String) -> getJSONArrayAttribute
    com.easemob.chat.EMMessage$ChatType getChatType() -> getChatType
    void setChatType(com.easemob.chat.EMMessage$ChatType) -> setChatType
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object clone() -> clone
    boolean isAcked() -> isAcked
    void setAcked(boolean) -> setAcked
    boolean isDelivered() -> isDelivered
    void setDelivered(boolean) -> setDelivered
    boolean isUnread() -> isUnread
    void setUnread(boolean) -> setUnread
    void setType(com.easemob.chat.EMMessage$Type) -> setType
    boolean isListened() -> isListened
    void setListened(boolean) -> setListened
    java.lang.String getUserName() -> getUserName
    void setError(int) -> setError
    int getError() -> getError
com.easemob.chat.EMMessage$1 -> com.easemob.chat.EMMessage$1:
    com.easemob.chat.EMMessage createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.EMMessage[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.easemob.chat.EMMessage$ChatType -> com.easemob.chat.EMMessage$ChatType:
    com.easemob.chat.EMMessage$ChatType Chat -> Chat
    com.easemob.chat.EMMessage$ChatType GroupChat -> GroupChat
    com.easemob.chat.EMMessage$ChatType ChatRoom -> ChatRoom
    com.easemob.chat.EMMessage$ChatType[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMMessage$ChatType[] values() -> values
    com.easemob.chat.EMMessage$ChatType valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMMessage$Direct -> com.easemob.chat.EMMessage$Direct:
    com.easemob.chat.EMMessage$Direct SEND -> SEND
    com.easemob.chat.EMMessage$Direct RECEIVE -> RECEIVE
    com.easemob.chat.EMMessage$Direct[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMMessage$Direct[] values() -> values
    com.easemob.chat.EMMessage$Direct valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMMessage$Status -> com.easemob.chat.EMMessage$Status:
    com.easemob.chat.EMMessage$Status SUCCESS -> SUCCESS
    com.easemob.chat.EMMessage$Status FAIL -> FAIL
    com.easemob.chat.EMMessage$Status INPROGRESS -> INPROGRESS
    com.easemob.chat.EMMessage$Status CREATE -> CREATE
    com.easemob.chat.EMMessage$Status[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMMessage$Status[] values() -> values
    com.easemob.chat.EMMessage$Status valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMMessage$Type -> com.easemob.chat.EMMessage$Type:
    com.easemob.chat.EMMessage$Type TXT -> TXT
    com.easemob.chat.EMMessage$Type IMAGE -> IMAGE
    com.easemob.chat.EMMessage$Type VIDEO -> VIDEO
    com.easemob.chat.EMMessage$Type LOCATION -> LOCATION
    com.easemob.chat.EMMessage$Type VOICE -> VOICE
    com.easemob.chat.EMMessage$Type FILE -> FILE
    com.easemob.chat.EMMessage$Type CMD -> CMD
    com.easemob.chat.EMMessage$Type[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMMessage$Type[] values() -> values
    com.easemob.chat.EMMessage$Type valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMMessageDispatcher -> com.easemob.chat.EMMessageDispatcher:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMMessageDispatcher instance -> instance
    java.util.concurrent.ExecutorService sendThreadPool -> sendThreadPool
    com.easemob.chat.EMMessageDispatcher getInstance() -> getInstance
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onInit() -> onInit
    void onDestroy() -> onDestroy
com.easemob.chat.EMMessageHandler -> com.easemob.chat.EMMessageHandler:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMMessageHandler me -> me
    java.util.concurrent.ExecutorService sendThreadPool -> sendThreadPool
    org.jivesoftware.smack.PacketListener errorMsgLlistener -> errorMsgLlistener
    com.easemob.chat.EMMessageHandler getInstance() -> getInstance
    void sendGroupMessage(com.easemob.chat.EMMessage,com.easemob.EMCallBack) -> sendGroupMessage
    void sendMessage(org.jivesoftware.smack.Chat,com.easemob.chat.EMMessage,com.easemob.EMCallBack) -> sendMessage
    void asyncFetchMessage(com.easemob.chat.EMMessage) -> asyncFetchMessage
    void ackMessageRead(java.lang.String,java.lang.String,java.lang.String) -> ackMessageRead
    void updateMsgState(com.easemob.chat.EMMessage) -> updateMsgState
    void updateMsgBody(com.easemob.chat.EMMessage) -> updateMsgBody
    void onConnected() -> onConnected
    void onInit() -> onInit
    void onDestroy() -> onDestroy
    java.lang.String access$0() -> access$0
    void access$1(com.easemob.chat.EMMessageHandler,com.easemob.chat.EMMessage) -> access$1
    void access$2(com.easemob.chat.EMMessageHandler,com.easemob.chat.EMMessage) -> access$2
com.easemob.chat.EMMessageHandler$1 -> com.easemob.chat.EMMessageHandler$1:
    com.easemob.chat.EMMessageHandler this$0 -> this$0
    void updateMessage(java.lang.String,int) -> updateMessage
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
com.easemob.chat.EMMessageHandler$2 -> com.easemob.chat.EMMessageHandler$2:
    com.easemob.chat.EMMessageHandler this$0 -> this$0
    java.lang.String val$localThumbnailFilePath -> val$localThumbnailFilePath
    com.easemob.chat.EMMessage val$msg -> val$msg
    com.easemob.chat.FileMessageBody val$msgbody -> val$msgbody
    java.lang.String val$path -> val$path
    void onSuccess(java.lang.String) -> onSuccess
    void onError(java.lang.String) -> onError
    void onProgress(int) -> onProgress
com.easemob.chat.EMMessageListener -> com.easemob.chat.EMMessageListener:
    java.lang.String TAG -> TAG
    java.lang.String INTERNAL_ACTION_PREFIX -> INTERNAL_ACTION_PREFIX
    java.lang.String previousFrom -> previousFrom
    java.lang.String previousBody -> previousBody
    long previousTime -> previousTime
    com.easemob.chat.EMChatManager chatManager -> chatManager
    java.util.concurrent.ExecutorService recvThreadPool -> recvThreadPool
    java.util.concurrent.ArrayBlockingQueue recentMsgIdQueue -> recentMsgIdQueue
    int RECENT_QUEUE_SIZE -> RECENT_QUEUE_SIZE
    void ackMessage(org.jivesoftware.smack.packet.Message) -> ackMessage
    com.easemob.chat.core.EMRoomTypeExtension getRoomTypeExtension(org.jivesoftware.smack.packet.Packet) -> getRoomTypeExtension
    com.easemob.chat.core.EMRoomTypeExtension$RoomType getRoomType(org.jivesoftware.smack.packet.Packet) -> getRoomType
    boolean isDuplicateMsg(org.jivesoftware.smack.packet.Message) -> isDuplicateMsg
    boolean processMessage(org.jivesoftware.smack.packet.Message) -> processMessage
    boolean processEMMessage(com.easemob.chat.EMMessage) -> processEMMessage
    void handleCmdMessage(com.easemob.chat.EMMessage) -> handleCmdMessage
    boolean isAdvanceDebugMessage(java.lang.String) -> isAdvanceDebugMessage
    void handleNormalCmdMessage(com.easemob.chat.EMMessage) -> handleNormalCmdMessage
    void setLocalUrl(com.easemob.chat.EMMessage) -> setLocalUrl
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void clear() -> clear
com.easemob.chat.EMMessageUtils -> com.easemob.chat.EMMessageUtils:
    java.lang.String TAG -> TAG
    int checkMessageError(com.easemob.chat.EMMessage) -> checkMessageError
    void asyncCallback(com.easemob.EMCallBack,int,java.lang.String) -> asyncCallback
    java.lang.String getUniqueMessageId() -> getUniqueMessageId
com.easemob.chat.EMMessageUtils$1 -> com.easemob.chat.EMMessageUtils$1:
    com.easemob.EMCallBack val$callback -> val$callback
    int val$error -> val$error
    java.lang.String val$errorMsg -> val$errorMsg
    void run() -> run
com.easemob.chat.EMMonitor -> com.easemob.chat.EMMonitor:
    com.easemob.chat.EMMonitor _instance -> _instance
    java.lang.String FILENAME -> FILENAME
    java.lang.String TAG -> TAG
    boolean libraryLoaded -> libraryLoaded
    boolean nativeServiceStarted -> nativeServiceStarted
    android.content.Context mContext -> mContext
    boolean wakeuped -> wakeuped
    com.easemob.chat.core.EMMonitorDB monitorDB -> monitorDB
    com.easemob.chat.EMMonitor getInstance() -> getInstance
    void start(android.content.Context,java.lang.String) -> start
    void startWakeup(android.content.Context,java.lang.String) -> startWakeup
    com.easemob.chat.core.EMMonitorDB getMonitorDB() -> getMonitorDB
    void startMonitor(java.lang.String) -> startMonitor
    void startWakeup(java.lang.String[]) -> startWakeup
    void loadLibrary() -> loadLibrary
com.easemob.chat.EMMonitorReceiver -> com.easemob.chat.EMMonitorReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.easemob.chat.EMMultiUserChatManager -> com.easemob.chat.EMMultiUserChatManager:
    java.lang.String TAG -> TAG
    java.lang.String MUC_ELEMENT_NAME -> MUC_ELEMENT_NAME
    java.lang.String MUC_NS_USER -> MUC_NS_USER
    com.easemob.chat.EMMultiUserChatManager instance -> instance
    com.easemob.chat.EMMultiUserChatManager$EMMUCInvitationListener invitationListener -> invitationListener
    com.easemob.chat.EMChatRoomManager chatRoomManager -> chatRoomManager
    com.easemob.chat.EMGroupManager groupChatManager -> groupChatManager
    com.easemob.chat.EMMultiUserChatManager getInstance() -> getInstance
    void loadLocalData() -> loadLocalData
    void addChatRoomChangeListener(com.easemob.EMChatRoomChangeListener) -> addChatRoomChangeListener
    void removeChatRoomChangeListener(com.easemob.EMChatRoomChangeListener) -> removeChatRoomChangeListener
    void joinChatRoom(java.lang.String) -> joinChatRoom
    void joinChatRoom(java.lang.String,com.easemob.EMValueCallBack) -> joinChatRoom
    void leaveChatRoom(java.lang.String) -> leaveChatRoom
    java.util.List fetchJoinedChatRoomsFromServer() -> fetchJoinedChatRoomsFromServer
    com.easemob.chat.EMCursorResult fetchPublicChatRoomsFromServer(int,java.lang.String) -> fetchPublicChatRoomsFromServer
    com.easemob.chat.EMChatRoom fetchChatRoomFromServer(java.lang.String) -> fetchChatRoomFromServer
    com.easemob.chat.EMChatRoom getChatRoom(java.lang.String) -> getChatRoom
    java.util.List getAllChatRooms() -> getAllChatRooms
    void addGroupChangeListener(com.easemob.EMGroupChangeListener) -> addGroupChangeListener
    void removeGroupChangeListener(com.easemob.EMGroupChangeListener) -> removeGroupChangeListener
    void joinGroup(java.lang.String) -> joinGroup
    void leaveGroup(java.lang.String) -> leaveGroup
    void dismissGroup(java.lang.String) -> dismissGroup
    java.util.List fetchJoinedGroupsFromServer() -> fetchJoinedGroupsFromServer
    com.easemob.chat.EMGroup fetchGroupFromServer(java.lang.String) -> fetchGroupFromServer
    com.easemob.chat.EMCursorResult fetchPublicGroupsFromServer(int,java.lang.String) -> fetchPublicGroupsFromServer
    com.easemob.chat.EMGroup createPrivateGroup(java.lang.String,java.lang.String,java.lang.String[],boolean,int) -> createPrivateGroup
    com.easemob.chat.EMGroup createPublicGroup(java.lang.String,java.lang.String,java.lang.String[],boolean,int) -> createPublicGroup
    java.util.List getAllGroups() -> getAllGroups
    com.easemob.chat.EMGroup getGroup(java.lang.String) -> getGroup
    void addUsersToGroup(java.lang.String,java.lang.String[]) -> addUsersToGroup
    void removeUserFromGroup(java.lang.String,java.lang.String) -> removeUserFromGroup
    com.easemob.chat.EMGroup createOrUpdateLocalGroup(com.easemob.chat.EMGroup) -> createOrUpdateLocalGroup
    void changeGroupName(java.lang.String,java.lang.String) -> changeGroupName
    void acceptInvitation(java.lang.String) -> acceptInvitation
    void acceptApplication(java.lang.String,java.lang.String) -> acceptApplication
    void declineApplication(java.lang.String,java.lang.String,java.lang.String) -> declineApplication
    void setAutoAcceptInvitation(boolean) -> setAutoAcceptInvitation
    void inviteUser(java.lang.String,java.lang.String[],java.lang.String) -> inviteUser
    void applyJoinToGroup(java.lang.String,java.lang.String) -> applyJoinToGroup
    void blockGroupMessage(java.lang.String) -> blockGroupMessage
    void unblockGroupMessage(java.lang.String) -> unblockGroupMessage
    void blockUser(java.lang.String,java.lang.String) -> blockUser
    void unblockUser(java.lang.String,java.lang.String) -> unblockUser
    java.util.List getBlockedUsers(java.lang.String) -> getBlockedUsers
    com.easemob.chat.EMMultiUserChatRoomModelBase getRoom(java.lang.String) -> getRoom
    org.jivesoftware.smackx.muc.MultiUserChat getMUCWithoutJoin(java.lang.String,com.easemob.chat.EMMessage$ChatType) -> getMUCWithoutJoin
    com.easemob.chat.core.EMRoomTypeExtension getRoomTypeExtension(org.jivesoftware.smack.packet.Packet) -> getRoomTypeExtension
    void clearRooms() -> clearRooms
    void onInit() -> onInit
    void onDestroy() -> onDestroy
    void onAppReady() -> onAppReady
    void parseRoom(com.easemob.chat.EMMultiUserChatRoomModelBase,boolean,org.json.JSONObject) -> parseRoom
    com.easemob.chat.EMGroupManager access$0(com.easemob.chat.EMMultiUserChatManager) -> access$0
    com.easemob.chat.EMChatRoomManager access$1(com.easemob.chat.EMMultiUserChatManager) -> access$1
com.easemob.chat.EMMultiUserChatManager$EMMUCInvitationListener -> com.easemob.chat.EMMultiUserChatManager$EMMUCInvitationListener:
    com.easemob.chat.EMMultiUserChatManager this$0 -> this$0
    void invitationReceived(org.jivesoftware.smack.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.jivesoftware.smack.packet.Message) -> invitationReceived
com.easemob.chat.EMMultiUserChatManager$EMMUCPresenceListener -> com.easemob.chat.EMMultiUserChatManager$EMMUCPresenceListener:
    java.lang.String ITEM_DESTROY -> ITEM_DESTROY
    java.lang.String ITEM_EXITMUC -> ITEM_EXITMUC
    java.lang.String AFFILIATION_NONE -> AFFILIATION_NONE
    java.lang.String ROLE_NONE -> ROLE_NONE
    java.lang.String ROLE_PARTICIPANT -> ROLE_PARTICIPANT
    com.easemob.chat.EMMultiUserChatManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
com.easemob.chat.EMMultiUserChatProcessor -> com.easemob.chat.EMMultiUserChatProcessor:
    java.lang.String TAG -> TAG
    java.util.Map multiUserChats -> multiUserChats
    org.jivesoftware.smack.XMPPConnection connection -> connection
    void onInit() -> onInit
    void onDestroy() -> onDestroy
    void joinMUC(java.lang.String,java.lang.String) -> joinMUC
    org.jivesoftware.smackx.muc.MultiUserChat getMUC(java.lang.String) -> getMUC
    org.jivesoftware.smackx.muc.MultiUserChat getMUC(java.lang.String,long) -> getMUC
    org.jivesoftware.smackx.muc.MultiUserChat getMUCWithoutJoin(java.lang.String) -> getMUCWithoutJoin
    void deleteMUC(java.lang.String) -> deleteMUC
    void leaveMUC(java.lang.String,java.lang.String) -> leaveMUC
    void leaveMUCWithoutJoin(java.lang.String) -> leaveMUCWithoutJoin
    void leaveMUCRemoveMember(java.lang.String,java.lang.String) -> leaveMUCRemoveMember
    void addMuc(java.lang.String,org.jivesoftware.smackx.muc.MultiUserChat) -> addMuc
    void removeMuc(java.lang.String) -> removeMuc
com.easemob.chat.EMMultiUserChatRoomModelBase -> com.easemob.chat.EMMultiUserChatRoomModelBase:
    java.lang.String description -> description
    java.lang.String owner -> owner
    java.util.ArrayList members -> members
    long lastModifiedTime -> lastModifiedTime
    int maxUsers -> maxUsers
    int affiliationsCount -> affiliationsCount
    boolean isMsgBlocked -> isMsgBlocked
    void init() -> init
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getOwner() -> getOwner
    void setOwner(java.lang.String) -> setOwner
    void addMember(java.lang.String) -> addMember
    void removeMember(java.lang.String) -> removeMember
    java.util.List getMembers() -> getMembers
    void setMembers(java.util.List) -> setMembers
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int getMaxUsers() -> getMaxUsers
    void setMaxUsers(int) -> setMaxUsers
    int getAffiliationsCount() -> getAffiliationsCount
    void setAffiliationsCount(int) -> setAffiliationsCount
    boolean getMsgBlocked() -> getMsgBlocked
    boolean isMsgBlocked() -> isMsgBlocked
    void setMsgBlocked(boolean) -> setMsgBlocked
    java.lang.String toString() -> toString
    android.graphics.Bitmap getGroupAvator() -> getGroupAvator
    void copyModel(com.easemob.chat.EMMultiUserChatRoomModelBase) -> copyModel
    long getLastModifiedTime() -> getLastModifiedTime
    void setLastModifiedTime(long) -> setLastModifiedTime
com.easemob.chat.EMNotifier -> com.easemob.chat.EMNotifier:
    java.lang.String TAG -> TAG
    android.media.Ringtone ringtone -> ringtone
    java.lang.String[] msg_eng -> msg_eng
    java.lang.String[] msg_ch -> msg_ch
    int notifyID -> notifyID
    android.app.NotificationManager notificationManager -> notificationManager
    java.util.HashSet fromUsers -> fromUsers
    int notificationNum -> notificationNum
    android.content.Context appContext -> appContext
    java.lang.String appName -> appName
    java.lang.String packageName -> packageName
    java.lang.String[] msgs -> msgs
    long lastNotifiyTime -> lastNotifiyTime
    com.easemob.chat.EMNotifier instance -> instance
    com.easemob.chat.OnMessageNotifyListener onMessageNotifyListener -> onMessageNotifyListener
    android.media.AudioManager audioManager -> audioManager
    android.os.Vibrator vibrator -> vibrator
    java.util.Hashtable filteredEventListeners -> filteredEventListeners
    java.util.concurrent.ExecutorService notifierThread -> notifierThread
    java.util.concurrent.ExecutorService newMsgQueue -> newMsgQueue
    void clear() -> clear
    com.easemob.chat.EMNotifier getInstance(android.content.Context) -> getInstance
    void stop() -> stop
    void registerEventListener(com.easemob.EMEventListener) -> registerEventListener
    void removeEventListener(com.easemob.EMEventListener) -> removeEventListener
    void registerEventListener(com.easemob.EMEventListener,com.easemob.EMNotifierEvent$Event[]) -> registerEventListener
    void remove(java.util.List,com.easemob.EMEventListener) -> remove
    boolean publishEvent(com.easemob.EMNotifierEvent$Event,java.lang.Object) -> publishEvent
    void registerEventListener(com.easemob.EMEventListener,com.easemob.EMNotifierEvent$Event) -> registerEventListener
    boolean containsType(com.easemob.EMNotifierEvent$Event) -> containsType
    void publishEvent(java.util.Iterator,com.easemob.EMNotifierEvent$Event,java.lang.Object) -> publishEvent
    void resetNotificationCount() -> resetNotificationCount
    void notifyChatMsg(com.easemob.chat.EMMessage) -> notifyChatMsg
    void sendReadAckMsgBroadcast(java.lang.String,java.lang.String) -> sendReadAckMsgBroadcast
    void sendDeliveryAckMsgBroadcast(java.lang.String,java.lang.String) -> sendDeliveryAckMsgBroadcast
    void sendBroadcast(com.easemob.chat.EMMessage) -> sendBroadcast
    void sendCmdMsgBroadcast(com.easemob.chat.EMMessage) -> sendCmdMsgBroadcast
    void sendNotification(com.easemob.chat.EMMessage) -> sendNotification
    void notifyOnNewMsg() -> notifyOnNewMsg
    void cancelNotificaton() -> cancelNotificaton
    void sendIncomingVoiceCallBroadcast(java.lang.String,java.lang.String) -> sendIncomingVoiceCallBroadcast
    java.util.Hashtable access$000(com.easemob.chat.EMNotifier) -> access$000
    boolean access$100(com.easemob.chat.EMNotifier,com.easemob.EMNotifierEvent$Event) -> access$100
    void access$200(com.easemob.chat.EMNotifier,java.util.Iterator,com.easemob.EMNotifierEvent$Event,java.lang.Object) -> access$200
    android.content.Context access$300(com.easemob.chat.EMNotifier) -> access$300
    void access$400(com.easemob.chat.EMNotifier,com.easemob.chat.EMMessage) -> access$400
com.easemob.chat.EMNotifier$1 -> com.easemob.chat.EMNotifier$1:
    com.easemob.EMNotifierEvent$Event val$event -> val$event
    java.lang.Object val$obj -> val$obj
    com.easemob.chat.EMNotifier this$0 -> this$0
    void run() -> run
com.easemob.chat.EMNotifier$2 -> com.easemob.chat.EMNotifier$2:
    com.easemob.chat.EMMessage val$message -> val$message
    com.easemob.chat.EMNotifier this$0 -> this$0
    void run() -> run
com.easemob.chat.EMNotifier$3 -> com.easemob.chat.EMNotifier$3:
    com.easemob.chat.EMNotifier this$0 -> this$0
    void run() -> run
com.easemob.chat.EMNotifier$4 -> com.easemob.chat.EMNotifier$4:
    int[] $SwitchMap$com$easemob$chat$EMMessage$Type -> $SwitchMap$com$easemob$chat$EMMessage$Type
com.easemob.chat.EMOfflineMessageHandler -> com.easemob.chat.EMOfflineMessageHandler:
    java.lang.String TAG -> TAG
    java.util.Set offlineMsgUserSenders -> offlineMsgUserSenders
    java.util.Set offlineMsgGrpSenders -> offlineMsgGrpSenders
    java.util.List offlineMessages -> offlineMessages
    java.util.List offlineCmdMessagesList -> offlineCmdMessagesList
    com.easemob.chat.EMMessage curOfflineMsg -> curOfflineMsg
    com.easemob.chat.EMMessage preOfflineMsg -> preOfflineMsg
    long OFFLINE_INTERVAL -> OFFLINE_INTERVAL
    long publishInterval -> publishInterval
    java.lang.Thread notifyThread -> notifyThread
    boolean needSend -> needSend
    void onAppReady() -> onAppReady
    void setPublishInterval(long) -> setPublishInterval
    void onNewOfflineMessage(com.easemob.chat.EMMessage) -> onNewOfflineMessage
    void addOfflineCmdMessage(com.easemob.chat.EMMessage) -> addOfflineCmdMessage
    void processOfflineCmdMessages() -> processOfflineCmdMessages
    void stop() -> stop
    void startOfflineThread() -> startOfflineThread
    void stopOfflineThread() -> stopOfflineThread
    void sendOfflineBroadcast() -> sendOfflineBroadcast
    void reset() -> reset
    long access$0(com.easemob.chat.EMOfflineMessageHandler) -> access$0
    com.easemob.chat.EMMessage access$1(com.easemob.chat.EMOfflineMessageHandler) -> access$1
    com.easemob.chat.EMMessage access$2(com.easemob.chat.EMOfflineMessageHandler) -> access$2
    void access$3(com.easemob.chat.EMOfflineMessageHandler) -> access$3
    void access$4(com.easemob.chat.EMOfflineMessageHandler,java.lang.Thread) -> access$4
    void access$5(com.easemob.chat.EMOfflineMessageHandler,com.easemob.chat.EMMessage) -> access$5
    void access$6(com.easemob.chat.EMOfflineMessageHandler,com.easemob.chat.EMMessage) -> access$6
com.easemob.chat.EMOfflineMessageHandler$1 -> com.easemob.chat.EMOfflineMessageHandler$1:
    com.easemob.chat.EMOfflineMessageHandler this$0 -> this$0
    void run() -> run
com.easemob.chat.EMPresenceHandler -> com.easemob.chat.EMPresenceHandler:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMPresenceHandler me -> me
    com.easemob.chat.EMPresenceHandler getInstance() -> getInstance
    void acceptInvitation(java.lang.String,boolean) -> acceptInvitation
    void refuseInvitation(java.lang.String) -> refuseInvitation
    void processRosterPresence(org.jivesoftware.smack.packet.Presence) -> processRosterPresence
com.easemob.chat.EMPushNotificationHelper -> com.easemob.chat.EMPushNotificationHelper:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMPushNotificationHelper instance -> instance
    java.lang.Thread pushThread -> pushThread
    java.lang.Object sendTokenLock -> sendTokenLock
    boolean isLogout -> isLogout
    com.easemob.chat.EMPushNotificationHelper getInstance() -> getInstance
    boolean checkAvailablePushService() -> checkAvailablePushService
    boolean isPushServiceEnabled() -> isPushServiceEnabled
    void onInit() -> onInit
    void sendDeviceTokenToServer() -> sendDeviceTokenToServer
    void onDestroy(boolean) -> onDestroy
    boolean sendTokenToServer(java.lang.String) -> sendTokenToServer
    boolean sendDeviceInfo(java.lang.String) -> sendDeviceInfo
    java.lang.String getDeviceToken() -> getDeviceToken
    boolean notificationDisplayStyle(int) -> notificationDisplayStyle
com.easemob.chat.EMPushNotificationHelper$1 -> com.easemob.chat.EMPushNotificationHelper$1:
    com.easemob.chat.EMPushNotificationHelper this$0 -> this$0
    void run() -> run
com.easemob.chat.EMRandomDelay -> com.easemob.chat.EMRandomDelay:
    int randomBase -> randomBase
    void reset() -> reset
    int timeDelay(int) -> timeDelay
com.easemob.chat.EMReceiveMessageThread -> com.easemob.chat.EMReceiveMessageThread:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMMessage msg -> msg
    com.easemob.chat.FileMessageBody msgbody -> msgbody
    boolean encrypted -> encrypted
    void run() -> run
    void updateMsgState() -> updateMsgState
    void updateMsgBody(com.easemob.chat.EMMessage) -> updateMsgBody
    boolean access$0(com.easemob.chat.EMReceiveMessageThread) -> access$0
    com.easemob.chat.EMMessage access$1(com.easemob.chat.EMReceiveMessageThread) -> access$1
    com.easemob.chat.FileMessageBody access$2(com.easemob.chat.EMReceiveMessageThread) -> access$2
com.easemob.chat.EMReceiveMessageThread$1 -> com.easemob.chat.EMReceiveMessageThread$1:
    com.easemob.chat.EMReceiveMessageThread this$0 -> this$0
    java.lang.String val$localThumbnailFilePath -> val$localThumbnailFilePath
    java.lang.String val$path -> val$path
    void onSuccess(java.lang.String) -> onSuccess
    void onError(java.lang.String) -> onError
    void onProgress(int) -> onProgress
com.easemob.chat.EMReceiverJingleSession -> com.easemob.chat.EMReceiverJingleSession:
    java.lang.String TAG -> TAG
    java.util.List acceptedContent -> acceptedContent
    java.lang.String acceptedContentJsonStr -> acceptedContentJsonStr
    com.easemob.media.EIce callee -> callee
    void closeSession(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason) -> closeSession
    void handleCallerRelay(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleCallerRelay
    void handleSessionAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionAccept
    void answerCall() -> answerCall
    void acceptContent(boolean) -> acceptContent
    void freeIce() -> freeIce
    void rejectCall() -> rejectCall
    void rejectSessionInitiate() -> rejectSessionInitiate
    void acceptSessionInitiate() -> acceptSessionInitiate
    void handleSessionInitiate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionInitiate
    void handleSessionTerminate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionTerminate
    void onConnectionConnected() -> onConnectionConnected
    boolean acceptCallFrom(java.lang.String) -> acceptCallFrom
    void access$0(com.easemob.chat.EMReceiverJingleSession,java.lang.String) -> access$0
    void access$1(com.easemob.chat.EMReceiverJingleSession,java.util.List) -> access$1
    java.util.List access$2(com.easemob.chat.EMReceiverJingleSession) -> access$2
    java.lang.String access$3() -> access$3
    java.lang.String access$4(com.easemob.chat.EMReceiverJingleSession) -> access$4
    void access$5(com.easemob.chat.EMReceiverJingleSession,com.easemob.media.EIce) -> access$5
    com.easemob.media.EIce access$6(com.easemob.chat.EMReceiverJingleSession) -> access$6
    java.lang.String access$7(com.easemob.chat.EMReceiverJingleSession) -> access$7
    java.lang.String access$8(com.easemob.chat.EMReceiverJingleSession) -> access$8
    java.lang.String access$9(com.easemob.chat.EMReceiverJingleSession) -> access$9
    org.jivesoftware.smack.XMPPConnection access$10(com.easemob.chat.EMReceiverJingleSession) -> access$10
    void access$11(com.easemob.chat.EMReceiverJingleSession,com.xonami.javaBells.DefaultJingleSession$SessionState) -> access$11
com.easemob.chat.EMReceiverJingleSession$1 -> com.easemob.chat.EMReceiverJingleSession$1:
    com.easemob.chat.EMReceiverJingleSession this$0 -> this$0
    boolean val$isVideoCall -> val$isVideoCall
    void run() -> run
com.easemob.chat.EMRecvAckListener -> com.easemob.chat.EMRecvAckListener:
    java.lang.String TAG -> TAG
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    boolean processClientAckMessage(org.jivesoftware.smack.packet.Message) -> processClientAckMessage
    void onReadAckReceived(org.jivesoftware.smack.packet.Message) -> onReadAckReceived
    void onDeliveryAckReceived(org.jivesoftware.smack.packet.Message) -> onDeliveryAckReceived
com.easemob.chat.EMRestResultParser -> com.easemob.chat.EMRestResultParser:
    void parseRoom(com.easemob.chat.EMMultiUserChatRoomModelBase,boolean,org.json.JSONObject) -> parseRoom
com.easemob.chat.EMResult -> com.easemob.chat.EMResult:
    java.lang.Object data -> data
    java.lang.Object getData() -> getData
    void setData(java.lang.Object) -> setData
com.easemob.chat.EMRosterListener -> com.easemob.chat.EMRosterListener:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMContactManager contactManager -> contactManager
    org.jivesoftware.smack.Roster roster -> roster
    void entriesAdded(java.util.Collection) -> entriesAdded
    void entriesDeleted(java.util.Collection) -> entriesDeleted
    void entriesUpdated(java.util.Collection) -> entriesUpdated
    void presenceChanged(org.jivesoftware.smack.packet.Presence) -> presenceChanged
com.easemob.chat.EMRosterStorageImpl -> com.easemob.chat.EMRosterStorageImpl:
    java.lang.String TAG -> TAG
    java.lang.String PERF_KEY_ROSTERVER -> PERF_KEY_ROSTERVER
    java.lang.String version -> version
    com.easemob.chat.EMContactManager contactManager -> contactManager
    android.content.Context appContext -> appContext
    java.util.ArrayList rosterItems -> rosterItems
    void loadEntries() -> loadEntries
    void addEntry(org.jivesoftware.smack.packet.RosterPacket$Item,java.lang.String) -> addEntry
    java.util.List getEntries() -> getEntries
    org.jivesoftware.smack.packet.RosterPacket$Item getEntry(java.lang.String) -> getEntry
    int getEntryCount() -> getEntryCount
    java.lang.String getRosterVersion() -> getRosterVersion
    void updateRosterVersion(java.lang.String) -> updateRosterVersion
    void removeEntry(java.lang.String,java.lang.String) -> removeEntry
    void updateLocalEntry(org.jivesoftware.smack.packet.RosterPacket$Item) -> updateLocalEntry
com.easemob.chat.EMSDKLocalTest -> com.easemob.chat.EMSDKLocalTest:
    long previousMsgTime -> previousMsgTime
    void addMsgs(java.lang.String,int) -> addMsgs
    void addConversations(int,int) -> addConversations
    com.easemob.chat.EMMessage createSentTextMsg(java.lang.String) -> createSentTextMsg
    com.easemob.chat.EMMessage createReceivedTextMsg(java.lang.String) -> createReceivedTextMsg
    long getNextMsgTime() -> getNextMsgTime
com.easemob.chat.EMSendMessageRunnable -> com.easemob.chat.EMSendMessageRunnable:
    java.lang.String TAG -> TAG
    java.lang.String PERF -> PERF
    org.jivesoftware.smack.Chat chat -> chat
    org.jivesoftware.smackx.muc.MultiUserChat muc -> muc
    com.easemob.chat.EMMessage msg -> msg
    com.easemob.EMCallBack callback -> callback
    int WAIT_TIME_OUT -> WAIT_TIME_OUT
    java.util.Hashtable sendLocks -> sendLocks
    java.util.Hashtable errorMsgWaitLocks -> errorMsgWaitLocks
    java.lang.Object mutex -> mutex
    java.lang.Object errorWaitLock -> errorWaitLock
    int WAIT_SEND_TIME_OUT -> WAIT_SEND_TIME_OUT
    java.util.Hashtable sendMsgLocks -> sendMsgLocks
    java.lang.Object sendMutex -> sendMutex
    java.lang.String groupId -> groupId
    boolean connectedBeforeSend -> connectedBeforeSend
    int numberOfRetried -> numberOfRetried
    long lastForceReconnectTime -> lastForceReconnectTime
    java.util.concurrent.ConcurrentLinkedQueue pendingMsgQueue -> pendingMsgQueue
    java.util.concurrent.ExecutorService sendThreadPool -> sendThreadPool
    com.easemob.analytics.EMTimeTag timeTag -> timeTag
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Type -> $SWITCH_TABLE$com$easemob$chat$EMMessage$Type
    void addSendLock(java.lang.String,java.lang.Object) -> addSendLock
    void notifySendLock(java.lang.String) -> notifySendLock
    void addErrorMsgWaitLock(java.lang.String,java.lang.Object) -> addErrorMsgWaitLock
    boolean notifyErrorMsgWaitLock(java.lang.String) -> notifyErrorMsgWaitLock
    void flushPendingQueue() -> flushPendingQueue
    void run() -> run
    void sendMessageXmpp(com.easemob.chat.EMMessage) -> sendMessageXmpp
    void sendImageMessage(com.easemob.chat.EMMessage,com.easemob.EMCallBack) -> sendImageMessage
    void sendVideoMessage(com.easemob.chat.EMMessage,com.easemob.EMCallBack) -> sendVideoMessage
    java.util.Map uploadEncryptedThumbnailImage(java.io.File,com.easemob.chat.EMMessage) -> uploadEncryptedThumbnailImage
    void sendFileMessage(com.easemob.chat.EMMessage,com.easemob.EMCallBack) -> sendFileMessage
    void updateMsgState(com.easemob.chat.EMMessage) -> updateMsgState
    java.lang.String getThumbnailImagePath(java.lang.String) -> getThumbnailImagePath
    void checkConnection() -> checkConnection
    void addSendMsgLock(java.lang.String,java.lang.Object) -> addSendMsgLock
    void notifySendMsgLocks() -> notifySendMsgLocks
    void onInit() -> onInit
    void onDestroy() -> onDestroy
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Type() -> $SWITCH_TABLE$com$easemob$chat$EMMessage$Type
    void access$1(com.easemob.chat.EMSendMessageRunnable,com.easemob.chat.EMMessage) -> access$1
    java.util.Map access$2(com.easemob.chat.EMSendMessageRunnable,java.io.File,com.easemob.chat.EMMessage) -> access$2
    void access$3(com.easemob.chat.EMSendMessageRunnable,com.easemob.chat.EMMessage) -> access$3
com.easemob.chat.EMSendMessageRunnable$1 -> com.easemob.chat.EMSendMessageRunnable$1:
    com.easemob.chat.EMSendMessageRunnable this$0 -> this$0
    com.easemob.chat.EMMessage val$msg -> val$msg
    long val$startTime -> val$startTime
    long val$fileLength -> val$fileLength
    com.easemob.EMCallBack val$callback -> val$callback
    boolean val$needToDeleteFile -> val$needToDeleteFile
    java.io.File val$fileToSend -> val$fileToSend
    java.lang.String val$remoteFilePath -> val$remoteFilePath
    com.easemob.chat.ImageMessageBody val$imgMsgBody -> val$imgMsgBody
    void onProgress(int) -> onProgress
    void onError(java.lang.String) -> onError
    void onSuccess(java.lang.String) -> onSuccess
com.easemob.chat.EMSendMessageRunnable$2 -> com.easemob.chat.EMSendMessageRunnable$2:
    com.easemob.chat.EMSendMessageRunnable this$0 -> this$0
    java.lang.String val$remoteFilePath -> val$remoteFilePath
    java.lang.String val$thumFilePath -> val$thumFilePath
    com.easemob.chat.EMMessage val$msg -> val$msg
    com.easemob.EMCallBack val$callback -> val$callback
    com.easemob.chat.VideoMessageBody val$videoMsgBody -> val$videoMsgBody
    void onSuccess(java.lang.String) -> onSuccess
    void onProgress(int) -> onProgress
    void onError(java.lang.String) -> onError
com.easemob.chat.EMSendMessageRunnable$3 -> com.easemob.chat.EMSendMessageRunnable$3:
    com.easemob.chat.EMSendMessageRunnable this$0 -> this$0
    java.util.Map val$maps -> val$maps
    java.lang.Object val$lock -> val$lock
    void onSuccess(java.lang.String) -> onSuccess
    void onError(java.lang.String) -> onError
    void onProgress(int) -> onProgress
com.easemob.chat.EMSendMessageRunnable$4 -> com.easemob.chat.EMSendMessageRunnable$4:
    com.easemob.chat.EMSendMessageRunnable this$0 -> this$0
    com.easemob.chat.EMMessage val$msg -> val$msg
    long val$startTime -> val$startTime
    long val$fileLength -> val$fileLength
    com.easemob.EMCallBack val$callback -> val$callback
    java.lang.String val$remoteFilePath -> val$remoteFilePath
    com.easemob.chat.FileMessageBody val$fileMsgBody -> val$fileMsgBody
    void onProgress(int) -> onProgress
    void onError(java.lang.String) -> onError
    void onSuccess(java.lang.String) -> onSuccess
com.easemob.chat.EMSessionHandler -> com.easemob.chat.EMSessionHandler:
    com.easemob.chat.EMVoiceCallSession activeSession -> activeSession
    java.lang.String TAG -> TAG
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    com.easemob.chat.EMVoiceCallSession getActiveSession() -> getActiveSession
    void setActiveSession(com.easemob.chat.EMVoiceCallSession) -> setActiveSession
    boolean isGeneralJiq(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> isGeneralJiq
    boolean jiqAccepted(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> jiqAccepted
com.easemob.chat.EMSessionManager -> com.easemob.chat.EMSessionManager:
    java.lang.String TAG -> TAG
    com.easemob.chat.core.EMConnectionManager connectionManager -> connectionManager
    android.content.Context appContext -> appContext
    java.lang.String PREF_KEY_LOGIN_USER -> PREF_KEY_LOGIN_USER
    java.lang.String PREF_KEY_LOGIN_PWD -> PREF_KEY_LOGIN_PWD
    com.easemob.chat.EMContact currentUser -> currentUser
    com.easemob.chat.EMSessionManager instance -> instance
    java.lang.String lastLoginUser -> lastLoginUser
    java.lang.String lastLoginPwd -> lastLoginPwd
    com.easemob.chat.core.EMHeartBeatReceiver heartbeatReceiver -> heartbeatReceiver
    android.app.PendingIntent heartbeatIntent -> heartbeatIntent
    int HEARTBEAT_INTERVAL -> HEARTBEAT_INTERVAL
    int WIFI_HEARTBEAT_INTERVAL -> WIFI_HEARTBEAT_INTERVAL
    boolean loginOngoing -> loginOngoing
    android.os.Handler handler -> handler
    android.os.HandlerThread handlerThread -> handlerThread
    java.lang.Object loginLock -> loginLock
    com.easemob.chat.core.y pingPacket -> pingPacket
    java.lang.Runnable heartBeat -> heartBeat
    com.easemob.chat.EMSessionManager getInstance(android.content.Context) -> getInstance
    com.easemob.chat.EMSessionManager getInstance() -> getInstance
    com.easemob.chat.EMSessionManager onInit() -> onInit
    void initXmppConnection(java.lang.String,java.lang.String) -> initXmppConnection
    void checkConnection() -> checkConnection
    void loadDB() -> loadDB
    void loginSync(java.lang.String,java.lang.String,boolean,com.easemob.EMCallBack) -> loginSync
    void login(java.lang.String,java.lang.String,boolean,com.easemob.EMCallBack) -> login
    void logout() -> logout
    void syncLogout() -> syncLogout
    void stopHeartbeatTimer() -> stopHeartbeatTimer
    void scheduleNextHeartBeat() -> scheduleNextHeartBeat
    void scheduleNextAlarm() -> scheduleNextAlarm
    java.lang.String getLastLoginUser() -> getLastLoginUser
    void setLastLoginUser(java.lang.String) -> setLastLoginUser
    java.lang.String getLastLoginPwd() -> getLastLoginPwd
    void clearLastLoginUser() -> clearLastLoginUser
    void clearLastLoginPwd() -> clearLastLoginPwd
    void setLastLoginPwd(java.lang.String) -> setLastLoginPwd
    boolean isConnected() -> isConnected
    org.jivesoftware.smack.XMPPConnection getConnection() -> getConnection
    java.lang.String getLoginUserName() -> getLoginUserName
    void changePasswordXMPP(java.lang.String) -> changePasswordXMPP
    void createAccountXMPP(java.lang.String,java.lang.String) -> createAccountXMPP
    void forceReconnect() -> forceReconnect
    void createAccountRest(java.lang.String,java.lang.String) -> createAccountRest
    android.content.Context access$0(com.easemob.chat.EMSessionManager) -> access$0
    com.easemob.chat.core.EMConnectionManager access$1(com.easemob.chat.EMSessionManager) -> access$1
    void access$2(com.easemob.chat.EMSessionManager,java.lang.String,java.lang.String,boolean,com.easemob.EMCallBack) -> access$2
com.easemob.chat.EMSessionManager$1 -> com.easemob.chat.EMSessionManager$1:
    com.easemob.chat.EMSessionManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMSessionManager$2 -> com.easemob.chat.EMSessionManager$2:
    com.easemob.chat.EMSessionManager this$0 -> this$0
    java.lang.String val$username -> val$username
    java.lang.String val$password -> val$password
    boolean val$fromLoginLayout -> val$fromLoginLayout
    com.easemob.EMCallBack val$callback -> val$callback
    void run() -> run
com.easemob.chat.EMSessionManager$3 -> com.easemob.chat.EMSessionManager$3:
    com.easemob.chat.EMSessionManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMStreamParams -> com.easemob.chat.EMStreamParams:
    java.lang.String remoteAddress -> remoteAddress
    java.lang.String localAddress -> localAddress
    java.lang.String videoRemoteAddress -> videoRemoteAddress
    int remotePort -> remotePort
    int videoRemotePort -> videoRemotePort
    int localPort -> localPort
    int videoLocalPort -> videoLocalPort
    int channelId -> channelId
    int videoChannelId -> videoChannelId
    java.lang.String conferenceId -> conferenceId
    java.lang.String rcode -> rcode
    boolean isRelayCall -> isRelayCall
com.easemob.chat.EMVideoCallHelper -> com.easemob.chat.EMVideoCallHelper:
    com.easemob.chat.EMVideoCallHelper instance -> instance
    com.easemob.chat.EMVideoCallHelper$EMVideoOrientation videoOrientation -> videoOrientation
    com.easemob.chat.EMVideoCallHelper getInstance() -> getInstance
    void processPreviewData(int,int,byte[]) -> processPreviewData
    void onWindowResize(int,int,int) -> onWindowResize
    void setSurfaceView(android.view.SurfaceView) -> setSurfaceView
    void setResolution(int,int) -> setResolution
    int takePicture(java.lang.String) -> takePicture
    void setVideoOrientation(com.easemob.chat.EMVideoCallHelper$EMVideoOrientation) -> setVideoOrientation
    com.easemob.chat.EMVideoCallHelper$EMVideoOrientation getVideoOrientation() -> getVideoOrientation
    int getVideoTimedelay() -> getVideoTimedelay
    int getVideoFramerate() -> getVideoFramerate
    int getVideoLostcnt() -> getVideoLostcnt
    int getVideoWidth() -> getVideoWidth
    int getVideoHeight() -> getVideoHeight
    int getRemoteBitrate() -> getRemoteBitrate
    int getLocalBitrate() -> getLocalBitrate
com.easemob.chat.EMVideoCallHelper$EMVideoOrientation -> com.easemob.chat.EMVideoCallHelper$EMVideoOrientation:
    com.easemob.chat.EMVideoCallHelper$EMVideoOrientation EMPortrait -> EMPortrait
    com.easemob.chat.EMVideoCallHelper$EMVideoOrientation EMLandscape -> EMLandscape
    com.easemob.chat.EMVideoCallHelper$EMVideoOrientation[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMVideoCallHelper$EMVideoOrientation[] values() -> values
    com.easemob.chat.EMVideoCallHelper$EMVideoOrientation valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMVoiceCallManager -> com.easemob.chat.EMVoiceCallManager:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMVoiceCallManager instance -> instance
    com.easemob.chat.EMSessionHandler incomingCallListener -> incomingCallListener
    com.easemob.chat.EMSessionHandler outgoingCallHandler -> outgoingCallHandler
    com.easemob.chat.EMCallStateChangeListener stateChangeListener -> stateChangeListener
    com.easemob.chat.EMVoiceCallManager$CallStateChangeListenerDelegate stateChangeListenerDelegate -> stateChangeListenerDelegate
    boolean inited -> inited
    com.easemob.chat.EMVoiceCallSession activeSession -> activeSession
    java.lang.Thread makingCallThread -> makingCallThread
    java.util.Timer callingTimer -> callingTimer
    boolean callWasEnded -> callWasEnded
    long CALLING_TIMEROUT -> CALLING_TIMEROUT
    void init() -> init
    void registerIceLogListener() -> registerIceLogListener
    com.easemob.chat.EMVoiceCallManager getInstance() -> getInstance
    boolean isActiveCallOngoing() -> isActiveCallOngoing
    com.easemob.chat.EMVoiceCallSession getActiveSession() -> getActiveSession
    boolean isDirectCall() -> isDirectCall
    com.easemob.chat.EMCallDirection getCallDirection() -> getCallDirection
    void addStateChangeListener(com.easemob.chat.EMCallStateChangeListener) -> addStateChangeListener
    void removeStateChangeListener(com.easemob.chat.EMCallStateChangeListener) -> removeStateChangeListener
    void startListeningCall() -> startListeningCall
    void makeCall(java.lang.String,com.easemob.chat.EMVoiceCallManager$CallType) -> makeCall
    void syncMakeCall(java.lang.String,com.easemob.chat.EMVoiceCallManager$CallType) -> syncMakeCall
    java.lang.String getCallConfig(com.easemob.chat.EMVoiceCallManager$CallType,boolean,java.util.List,java.util.List) -> getCallConfig
    void putConferenceConfig(org.json.JSONObject,com.easemob.chat.core.e) -> putConferenceConfig
    void startCallingTimer() -> startCallingTimer
    void answerCall() -> answerCall
    void rejectCall() -> rejectCall
    void endCall() -> endCall
    void onCallRinging(com.easemob.chat.EMVoiceCallSession) -> onCallRinging
    void onJingleInitiateAction(com.easemob.chat.EMVoiceCallSession) -> onJingleInitiateAction
    void registerConnectionListener() -> registerConnectionListener
    com.easemob.chat.core.p joinP2PConference(com.easemob.chat.EMVoiceCallManager$CallType,java.lang.String) -> joinP2PConference
    void removeP2PConference(java.lang.String) -> removeP2PConference
    void checkConnection() -> checkConnection
    java.lang.String access$0() -> access$0
    java.util.Timer access$1(com.easemob.chat.EMVoiceCallManager) -> access$1
    void access$2(com.easemob.chat.EMVoiceCallManager,com.easemob.chat.EMVoiceCallSession) -> access$2
    com.easemob.chat.EMCallStateChangeListener access$3(com.easemob.chat.EMVoiceCallManager) -> access$3
    com.easemob.chat.EMVoiceCallManager$CallStateChangeListenerDelegate access$4(com.easemob.chat.EMVoiceCallManager) -> access$4
    void access$5(com.easemob.chat.EMVoiceCallManager,java.lang.String,com.easemob.chat.EMVoiceCallManager$CallType) -> access$5
    com.easemob.chat.EMVoiceCallSession access$6(com.easemob.chat.EMVoiceCallManager) -> access$6
    java.lang.Thread access$7(com.easemob.chat.EMVoiceCallManager) -> access$7
    com.easemob.chat.EMSessionHandler access$8(com.easemob.chat.EMVoiceCallManager) -> access$8
    void access$9(com.easemob.chat.EMVoiceCallManager,com.easemob.chat.EMSessionHandler) -> access$9
    void access$10(com.easemob.chat.EMVoiceCallManager) -> access$10
com.easemob.chat.EMVoiceCallManager$1 -> com.easemob.chat.EMVoiceCallManager$1:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    void onLog(int,java.lang.String) -> onLog
com.easemob.chat.EMVoiceCallManager$2 -> com.easemob.chat.EMVoiceCallManager$2:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    boolean jiqAccepted(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> jiqAccepted
    com.xonami.javaBells.JingleSession createJingleSession(java.lang.String,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> createJingleSession
com.easemob.chat.EMVoiceCallManager$3 -> com.easemob.chat.EMVoiceCallManager$3:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    java.lang.String val$user -> val$user
    com.easemob.chat.EMVoiceCallManager$CallType val$callType -> val$callType
    void run() -> run
com.easemob.chat.EMVoiceCallManager$4 -> com.easemob.chat.EMVoiceCallManager$4:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    java.lang.String val$tojid -> val$tojid
    com.easemob.chat.EMJingleStreamManager val$jsm -> val$jsm
    java.lang.String val$callConfig -> val$callConfig
    boolean jiqAccepted(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> jiqAccepted
    com.xonami.javaBells.JingleSession createJingleSession(java.lang.String,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> createJingleSession
com.easemob.chat.EMVoiceCallManager$5 -> com.easemob.chat.EMVoiceCallManager$5:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMVoiceCallManager$6 -> com.easemob.chat.EMVoiceCallManager$6:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    com.easemob.chat.EMReceiverJingleSession val$receiver -> val$receiver
    void run() -> run
com.easemob.chat.EMVoiceCallManager$7 -> com.easemob.chat.EMVoiceCallManager$7:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    com.easemob.chat.EMReceiverJingleSession val$receiver -> val$receiver
    void run() -> run
com.easemob.chat.EMVoiceCallManager$8 -> com.easemob.chat.EMVoiceCallManager$8:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMVoiceCallManager$9 -> com.easemob.chat.EMVoiceCallManager$9:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    void onConnected() -> onConnected
    void onDisconnected(int) -> onDisconnected
com.easemob.chat.EMVoiceCallManager$CallStateChangeListenerDelegate -> com.easemob.chat.EMVoiceCallManager$CallStateChangeListenerDelegate:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    void onCallStateChanged(com.easemob.chat.EMCallStateChangeListener$CallState,com.easemob.chat.EMCallStateChangeListener$CallError) -> onCallStateChanged
com.easemob.chat.EMVoiceCallManager$CallType -> com.easemob.chat.EMVoiceCallManager$CallType:
    com.easemob.chat.EMVoiceCallManager$CallType audio -> audio
    com.easemob.chat.EMVoiceCallManager$CallType video -> video
    com.easemob.chat.EMVoiceCallManager$CallType[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMVoiceCallManager$CallType[] values() -> values
    com.easemob.chat.EMVoiceCallManager$CallType valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMVoiceCallSession -> com.easemob.chat.EMVoiceCallSession:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMJingleStreamManager jingleStreamManager -> jingleStreamManager
    com.easemob.chat.EMCallStateChangeListener stateChangeListener -> stateChangeListener
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ jingleIQ -> jingleIQ
    com.easemob.chat.EMCallStateChangeListener$CallState callState -> callState
    com.easemob.chat.EMStreamParams streamParams -> streamParams
    boolean isLocalHostCandiate -> isLocalHostCandiate
    boolean noNeedToCloseSesson -> noNeedToCloseSesson
    com.easemob.chat.EMCallDirection callDirection -> callDirection
    java.lang.String callConfig -> callConfig
    boolean isRelayCall -> isRelayCall
    java.lang.String getPeerJid() -> getPeerJid
    com.easemob.chat.EMVoiceCallSession build(com.easemob.chat.EMJingleStreamManager) -> build
    com.easemob.chat.EMVoiceCallSession buildCallConfig(java.lang.String) -> buildCallConfig
    com.easemob.chat.EMVoiceCallSession registerCallStateListener(com.easemob.chat.EMCallStateChangeListener) -> registerCallStateListener
    void freeIce() -> freeIce
    java.lang.String contentListToJson(java.util.List) -> contentListToJson
    com.easemob.chat.EMCallDirection getCallDirection() -> getCallDirection
    com.easemob.chat.EMCallStateChangeListener$CallState getCallState() -> getCallState
    void handleCallAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleCallAccept
    void handleCallerRelay(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleCallerRelay
    void onBusy() -> onBusy
    void endCall() -> endCall
    boolean isVideoCall() -> isVideoCall
    void handleNegoResult(java.lang.String) -> handleNegoResult
    void onNegotiationFailed() -> onNegotiationFailed
    java.lang.String getConferenceId() -> getConferenceId
    void onNegotiationSuccessed(org.json.JSONObject) -> onNegotiationSuccessed
    boolean isVideoCallCandidate(int,boolean) -> isVideoCallCandidate
    boolean isVoiceCallCandidate(int) -> isVoiceCallCandidate
    void onConnectionConnected() -> onConnectionConnected
    void closeSession(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason) -> closeSession
    java.lang.String getCallStatistic(int) -> getCallStatistic
    void changeState(com.easemob.chat.EMCallStateChangeListener$CallState,com.easemob.chat.EMCallStateChangeListener$CallError) -> changeState
    void free() -> free
    void onTimerOut() -> onTimerOut
    java.lang.String access$0(com.easemob.chat.EMVoiceCallSession) -> access$0
    java.lang.String access$1(com.easemob.chat.EMVoiceCallSession) -> access$1
    java.lang.String access$2(com.easemob.chat.EMVoiceCallSession) -> access$2
    org.jivesoftware.smack.XMPPConnection access$3(com.easemob.chat.EMVoiceCallSession) -> access$3
com.easemob.chat.EMVoiceCallSession$1 -> com.easemob.chat.EMVoiceCallSession$1:
    com.easemob.chat.EMVoiceCallSession this$0 -> this$0
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason val$reason -> val$reason
    void run() -> run
com.easemob.chat.EncryptProvider -> com.easemob.chat.EncryptProvider:
    byte[] encrypt(byte[],java.lang.String) -> encrypt
    byte[] decrypt(byte[],java.lang.String) -> decrypt
com.easemob.chat.FileMessageBody -> com.easemob.chat.FileMessageBody:
    com.easemob.EMCallBack downloadCallback -> downloadCallback
    boolean downloaded -> downloaded
    java.lang.String fileName -> fileName
    java.lang.String localUrl -> localUrl
    java.lang.String remoteUrl -> remoteUrl
    java.lang.String secret -> secret
    void setDownloadCallback(com.easemob.EMCallBack) -> setDownloadCallback
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    java.lang.String getLocalUrl() -> getLocalUrl
    void setLocalUrl(java.lang.String) -> setLocalUrl
    java.lang.String getRemoteUrl() -> getRemoteUrl
    void setRemoteUrl(java.lang.String) -> setRemoteUrl
    void setSecret(java.lang.String) -> setSecret
    java.lang.String getSecret() -> getSecret
com.easemob.chat.GroupChangeListener -> com.easemob.chat.GroupChangeListener:
    void onInvitationReceived(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onInvitationReceived
    void onApplicationReceived(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onApplicationReceived
    void onApplicationAccept(java.lang.String,java.lang.String,java.lang.String) -> onApplicationAccept
    void onApplicationDeclined(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onApplicationDeclined
    void onInvitationAccpted(java.lang.String,java.lang.String,java.lang.String) -> onInvitationAccpted
    void onInvitationDeclined(java.lang.String,java.lang.String,java.lang.String) -> onInvitationDeclined
    void onUserRemoved(java.lang.String,java.lang.String) -> onUserRemoved
    void onGroupDestroy(java.lang.String,java.lang.String) -> onGroupDestroy
com.easemob.chat.GroupReomveListener -> com.easemob.chat.GroupReomveListener:
    void onInvitationReceived(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onInvitationReceived
    void onApplicationReceived(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onApplicationReceived
    void onApplicationAccept(java.lang.String,java.lang.String,java.lang.String) -> onApplicationAccept
    void onApplicationDeclined(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onApplicationDeclined
    void onInvitationAccpted(java.lang.String,java.lang.String,java.lang.String) -> onInvitationAccpted
    void onInvitationDeclined(java.lang.String,java.lang.String,java.lang.String) -> onInvitationDeclined
com.easemob.chat.ImageMessageBody -> com.easemob.chat.ImageMessageBody:
    java.lang.String thumbnailUrl -> thumbnailUrl
    java.lang.String thumbnailSecret -> thumbnailSecret
    int width -> width
    int height -> height
    boolean sendOriginalImage -> sendOriginalImage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getThumbnailUrl() -> getThumbnailUrl
    void setThumbnailUrl(java.lang.String) -> setThumbnailUrl
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void setThumbnailSecret(java.lang.String) -> setThumbnailSecret
    java.lang.String getThumbnailSecret() -> getThumbnailSecret
    void setSendOriginalImage(boolean) -> setSendOriginalImage
    boolean isSendOriginalImage() -> isSendOriginalImage
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.easemob.chat.ImageMessageBody$1 -> com.easemob.chat.ImageMessageBody$1:
    com.easemob.chat.ImageMessageBody createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.ImageMessageBody[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.easemob.chat.InitSmackStaticCode -> com.easemob.chat.InitSmackStaticCode:
    void initStaticCode(android.content.Context) -> initStaticCode
com.easemob.chat.LocationMessageBody -> com.easemob.chat.LocationMessageBody:
    java.lang.String address -> address
    double latitude -> latitude
    double longitude -> longitude
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getAddress() -> getAddress
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.easemob.chat.LocationMessageBody$1 -> com.easemob.chat.LocationMessageBody$1:
    com.easemob.chat.LocationMessageBody createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.LocationMessageBody[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.easemob.chat.MessageBody -> com.easemob.chat.MessageBody:
com.easemob.chat.MessageEncoder -> com.easemob.chat.MessageEncoder:
    java.lang.String TAG -> TAG
    java.lang.String ATTR_TYPE -> ATTR_TYPE
    java.lang.String ATTR_TO -> ATTR_TO
    java.lang.String ATTR_FROM -> ATTR_FROM
    java.lang.String ATTR_MSG -> ATTR_MSG
    java.lang.String ATTR_URL -> ATTR_URL
    java.lang.String ATTR_LOCALURL -> ATTR_LOCALURL
    java.lang.String ATTR_THUMB_LOCALURL -> ATTR_THUMB_LOCALURL
    java.lang.String ATTR_FILENAME -> ATTR_FILENAME
    java.lang.String ATTR_THUMBNAIL -> ATTR_THUMBNAIL
    java.lang.String ATTR_SECRET -> ATTR_SECRET
    java.lang.String ATTR_SIZE -> ATTR_SIZE
    java.lang.String ATTR_IMG_WIDTH -> ATTR_IMG_WIDTH
    java.lang.String ATTR_IMG_HEIGHT -> ATTR_IMG_HEIGHT
    java.lang.String ATTR_THUMBNAIL_SECRET -> ATTR_THUMBNAIL_SECRET
    java.lang.String ATTR_LENGTH -> ATTR_LENGTH
    java.lang.String ATTR_ADDRESS -> ATTR_ADDRESS
    java.lang.String ATTR_LATITUDE -> ATTR_LATITUDE
    java.lang.String ATTR_LONGITUDE -> ATTR_LONGITUDE
    java.lang.String ATTR_ACTION -> ATTR_ACTION
    java.lang.String ATTR_PARAM -> ATTR_PARAM
    java.lang.String ATTR_FILE_LENGTH -> ATTR_FILE_LENGTH
    java.lang.String ATTR_EXT -> ATTR_EXT
    java.lang.String ATTR_TYPE_TXT -> ATTR_TYPE_TXT
    java.lang.String ATTR_TYPE_IMG -> ATTR_TYPE_IMG
    java.lang.String ATTR_TYPE_VOICE -> ATTR_TYPE_VOICE
    java.lang.String ATTR_TYPE_VIDEO -> ATTR_TYPE_VIDEO
    java.lang.String ATTR_TYPE_LOCATION -> ATTR_TYPE_LOCATION
    java.lang.String ATTR_TYPE_CMD -> ATTR_TYPE_CMD
    java.lang.String ATTR_TYPE_file -> ATTR_TYPE_file
    java.lang.String getJSONMsg(com.easemob.chat.EMMessage,boolean) -> getJSONMsg
    void addExtAttr(java.lang.StringBuffer,com.easemob.chat.EMMessage) -> addExtAttr
    void addImageBody(java.lang.StringBuffer,com.easemob.chat.EMMessage,boolean) -> addImageBody
    void addVideoBody(java.lang.StringBuffer,com.easemob.chat.EMMessage,boolean) -> addVideoBody
    void addTxtBody(java.lang.StringBuffer,com.easemob.chat.EMMessage) -> addTxtBody
    void addCmdBody(java.lang.StringBuffer,com.easemob.chat.EMMessage) -> addCmdBody
    void addVoiceBody(java.lang.StringBuffer,com.easemob.chat.EMMessage,boolean) -> addVoiceBody
    void addFileBody(java.lang.StringBuffer,com.easemob.chat.EMMessage,boolean) -> addFileBody
    void addLocationBody(java.lang.StringBuffer,com.easemob.chat.EMMessage) -> addLocationBody
    com.easemob.chat.EMMessage parseXmppMsg(org.jivesoftware.smack.packet.Message) -> parseXmppMsg
    com.easemob.chat.EMMessage getMsgFromJson(java.lang.String) -> getMsgFromJson
com.easemob.chat.NormalFileMessageBody -> com.easemob.chat.NormalFileMessageBody:
    long fileSize -> fileSize
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    long getFileSize() -> getFileSize
com.easemob.chat.NormalFileMessageBody$1 -> com.easemob.chat.NormalFileMessageBody$1:
    com.easemob.chat.NormalFileMessageBody createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.NormalFileMessageBody[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.easemob.chat.NotificationCompat -> com.easemob.chat.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    com.easemob.chat.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    com.easemob.chat.NotificationCompat$NotificationCompatImpl access$0() -> access$0
com.easemob.chat.NotificationCompat$Action -> com.easemob.chat.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
com.easemob.chat.NotificationCompat$BigPictureStyle -> com.easemob.chat.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    com.easemob.chat.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    com.easemob.chat.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    com.easemob.chat.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    com.easemob.chat.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
com.easemob.chat.NotificationCompat$BigTextStyle -> com.easemob.chat.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    com.easemob.chat.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    com.easemob.chat.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    com.easemob.chat.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
com.easemob.chat.NotificationCompat$Builder -> com.easemob.chat.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    com.easemob.chat.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    com.easemob.chat.NotificationCompat$Builder setWhen(long) -> setWhen
    com.easemob.chat.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    com.easemob.chat.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    com.easemob.chat.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    com.easemob.chat.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    com.easemob.chat.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    com.easemob.chat.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    com.easemob.chat.NotificationCompat$Builder setNumber(int) -> setNumber
    com.easemob.chat.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    com.easemob.chat.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    com.easemob.chat.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    com.easemob.chat.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    com.easemob.chat.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    com.easemob.chat.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    com.easemob.chat.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    com.easemob.chat.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    com.easemob.chat.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    com.easemob.chat.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    com.easemob.chat.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    com.easemob.chat.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    com.easemob.chat.NotificationCompat$Builder setLights(int,int,int) -> setLights
    com.easemob.chat.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    com.easemob.chat.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    com.easemob.chat.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    com.easemob.chat.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    com.easemob.chat.NotificationCompat$Builder setPriority(int) -> setPriority
    com.easemob.chat.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    com.easemob.chat.NotificationCompat$Builder setStyle(com.easemob.chat.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
com.easemob.chat.NotificationCompat$InboxStyle -> com.easemob.chat.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    com.easemob.chat.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    com.easemob.chat.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    com.easemob.chat.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
com.easemob.chat.NotificationCompat$NotificationCompatImpl -> com.easemob.chat.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(com.easemob.chat.NotificationCompat$Builder) -> build
com.easemob.chat.NotificationCompat$NotificationCompatImplBase -> com.easemob.chat.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(com.easemob.chat.NotificationCompat$Builder) -> build
com.easemob.chat.NotificationCompat$NotificationCompatImplGingerbread -> com.easemob.chat.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(com.easemob.chat.NotificationCompat$Builder) -> build
com.easemob.chat.NotificationCompat$NotificationCompatImplHoneycomb -> com.easemob.chat.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(com.easemob.chat.NotificationCompat$Builder) -> build
com.easemob.chat.NotificationCompat$NotificationCompatImplIceCreamSandwich -> com.easemob.chat.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(com.easemob.chat.NotificationCompat$Builder) -> build
com.easemob.chat.NotificationCompat$NotificationCompatImplJellybean -> com.easemob.chat.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(com.easemob.chat.NotificationCompat$Builder) -> build
com.easemob.chat.NotificationCompat$Style -> com.easemob.chat.NotificationCompat$Style:
    com.easemob.chat.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(com.easemob.chat.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
com.easemob.chat.NotificationCompatGingerbread -> com.easemob.chat.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
com.easemob.chat.NotificationCompatHoneycomb -> com.easemob.chat.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
com.easemob.chat.NotificationCompatIceCreamSandwich -> com.easemob.chat.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
com.easemob.chat.NotificationCompatJellybean -> com.easemob.chat.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
com.easemob.chat.OnMessageNotifyListener -> com.easemob.chat.OnMessageNotifyListener:
    java.lang.String onNewMessageNotify(com.easemob.chat.EMMessage) -> onNewMessageNotify
    java.lang.String onLatestMessageNotify(com.easemob.chat.EMMessage,int,int) -> onLatestMessageNotify
    java.lang.String onSetNotificationTitle(com.easemob.chat.EMMessage) -> onSetNotificationTitle
    int onSetSmallIcon(com.easemob.chat.EMMessage) -> onSetSmallIcon
com.easemob.chat.OnNotificationClickListener -> com.easemob.chat.OnNotificationClickListener:
    android.content.Intent onNotificationClick(com.easemob.chat.EMMessage) -> onNotificationClick
com.easemob.chat.StartServiceReceiver -> com.easemob.chat.StartServiceReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void scheduleNextAlarm(android.content.Context) -> scheduleNextAlarm
com.easemob.chat.SwipeCmdProcessor -> com.easemob.chat.SwipeCmdProcessor:
    java.lang.String TAG -> TAG
    java.lang.String action -> action
    java.lang.String getAction() -> getAction
    boolean processCmd(com.easemob.chat.EMMessage) -> processCmd
    void deleteDir(java.io.File) -> deleteDir
com.easemob.chat.TextMessageBody -> com.easemob.chat.TextMessageBody:
    java.lang.String message -> message
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.easemob.chat.TextMessageBody$1 -> com.easemob.chat.TextMessageBody$1:
    com.easemob.chat.TextMessageBody createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.TextMessageBody[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.easemob.chat.VideoMessageBody -> com.easemob.chat.VideoMessageBody:
    int length -> length
    java.lang.String thumbnailUrl -> thumbnailUrl
    java.lang.String localThumb -> localThumb
    java.lang.String thumbnailSecret -> thumbnailSecret
    long file_length -> file_length
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getThumbnailUrl() -> getThumbnailUrl
    void setThumbnailUrl(java.lang.String) -> setThumbnailUrl
    long getVideoFileLength() -> getVideoFileLength
    void setVideoFileLength(long) -> setVideoFileLength
    void setLocalThumb(java.lang.String) -> setLocalThumb
    java.lang.String getLocalThumb() -> getLocalThumb
    int getLength() -> getLength
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void setThumbnailSecret(java.lang.String) -> setThumbnailSecret
    java.lang.String getThumbnailSecret() -> getThumbnailSecret
com.easemob.chat.VideoMessageBody$1 -> com.easemob.chat.VideoMessageBody$1:
    com.easemob.chat.VideoMessageBody[] newArray(int) -> newArray
    com.easemob.chat.VideoMessageBody createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.easemob.chat.VoiceMessageBody -> com.easemob.chat.VoiceMessageBody:
    int length -> length
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getLength() -> getLength
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.easemob.chat.VoiceMessageBody$1 -> com.easemob.chat.VoiceMessageBody$1:
    com.easemob.chat.VoiceMessageBody createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.VoiceMessageBody[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.easemob.chat.a.a.a -> com.easemob.chat.a.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String getChildElementXML() -> getChildElementXML
com.easemob.chat.a.a.b -> com.easemob.chat.a.a.b:
com.easemob.chat.core.EMAdvanceDebugManager -> com.easemob.chat.core.EMAdvanceDebugManager:
    java.lang.String a -> a
    java.lang.String b -> b
    com.easemob.chat.core.EMAdvanceDebugManager c -> c
    android.content.BroadcastReceiver d -> d
    android.content.Context e -> e
    com.easemob.chat.core.EMConnectionManager f -> f
    int[] g -> g
    com.easemob.chat.core.EMAdvanceDebugManager a() -> a
    void a(com.easemob.chat.core.EMConnectionManager) -> a
    void h() -> h
    void a(com.easemob.chat.EMMessage,com.easemob.chat.core.EMAdvanceDebugManager$Type) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void a(boolean) -> a
    java.lang.String e() -> e
    void onInit() -> onInit
    void onDestroy() -> onDestroy
    java.lang.String f() -> f
    com.easemob.chat.core.EMConnectionManager a(com.easemob.chat.core.EMAdvanceDebugManager) -> a
    int[] g() -> g
com.easemob.chat.core.EMAdvanceDebugManager$1 -> com.easemob.chat.core.EMAdvanceDebugManager$1:
    com.easemob.chat.core.EMAdvanceDebugManager a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.easemob.chat.core.EMAdvanceDebugManager$2 -> com.easemob.chat.core.EMAdvanceDebugManager$2:
    com.easemob.chat.core.EMAdvanceDebugManager a -> a
    void run() -> run
com.easemob.chat.core.EMAdvanceDebugManager$3 -> com.easemob.chat.core.EMAdvanceDebugManager$3:
    com.easemob.chat.core.EMAdvanceDebugManager a -> a
    void onSuccess() -> onSuccess
    void onError(int,java.lang.String) -> onError
    void onProgress(int,java.lang.String) -> onProgress
com.easemob.chat.core.EMAdvanceDebugManager$Type -> com.easemob.chat.core.EMAdvanceDebugManager$Type:
    com.easemob.chat.core.EMAdvanceDebugManager$Type em_retrieve_dns -> em_retrieve_dns
    com.easemob.chat.core.EMAdvanceDebugManager$Type em_upload_dns -> em_upload_dns
    com.easemob.chat.core.EMAdvanceDebugManager$Type em_start_debug -> em_start_debug
    com.easemob.chat.core.EMAdvanceDebugManager$Type em_stop_debug -> em_stop_debug
    com.easemob.chat.core.EMAdvanceDebugManager$Type em_upload_log -> em_upload_log
    com.easemob.chat.core.EMAdvanceDebugManager$Type em_print_user -> em_print_user
    com.easemob.chat.core.EMAdvanceDebugManager$Type em_change_appkey -> em_change_appkey
    com.easemob.chat.core.EMAdvanceDebugManager$Type em_change_servers -> em_change_servers
    com.easemob.chat.core.EMAdvanceDebugManager$Type[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.core.EMAdvanceDebugManager$Type[] values() -> values
    com.easemob.chat.core.EMAdvanceDebugManager$Type valueOf(java.lang.String) -> valueOf
com.easemob.chat.core.EMConnectionManager -> com.easemob.chat.core.EMConnectionManager:
    java.lang.String TAG -> TAG
    java.lang.String PERF -> PERF
    java.lang.String RESOURCE -> RESOURCE
    java.lang.String xmppResource -> xmppResource
    java.lang.String bareJid -> bareJid
    java.lang.String password -> password
    android.content.Context context -> context
    com.easemob.chat.core.EMConnectionManager$PingListener pingListener -> pingListener
    org.jivesoftware.smack.XMPPConnection connection -> connection
    org.jivesoftware.smack.ConnectionConfiguration connectionConfig -> connectionConfig
    com.easemob.chat.core.EMConnectionManager$XmppConnectionListener connectionListener -> connectionListener
    com.easemob.chat.core.n chatConnectionListener -> chatConnectionListener
    com.easemob.chat.core.EMConnectionManager instance -> instance
    int randomBase -> randomBase
    int attempts -> attempts
    java.lang.Thread reconnectionThread -> reconnectionThread
    com.easemob.chat.core.h$c currentHost -> currentHost
    boolean enableWakeLock -> enableWakeLock
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    java.lang.String LOCK -> LOCK
    boolean isDone -> isDone
    boolean isConnectivityRegistered -> isConnectivityRegistered
    com.easemob.analytics.EMTimeTag chatTag -> chatTag
    com.easemob.analytics.EMTimeTag imTag -> imTag
    boolean connectDisabled -> connectDisabled
    android.content.BroadcastReceiver connectivityBroadcastReceiver -> connectivityBroadcastReceiver
    void onInit() -> onInit
    void onInit(java.lang.String,java.lang.String) -> onInit
    void setChatTag(com.easemob.analytics.EMTimeTag) -> setChatTag
    java.lang.String getCurrentUser() -> getCurrentUser
    java.lang.String getCurrentPwd() -> getCurrentPwd
    void initConnectionConfig() -> initConnectionConfig
    void setChatConnectionListener(com.easemob.chat.core.n) -> setChatConnectionListener
    void connect() -> connect
    void initConnection() -> initConnection
    void login() -> login
    void sendVersionIQ() -> sendVersionIQ
    void reuse() -> reuse
    void connectSync(boolean) -> connectSync
    void onDnsConfigChanged() -> onDnsConfigChanged
    void reConnect() -> reConnect
    void forceReconnect() -> forceReconnect
    void reconnectSync() -> reconnectSync
    void reconnectASync() -> reconnectASync
    boolean disconnect() -> disconnect
    org.jivesoftware.smack.XMPPConnection getConnection() -> getConnection
    boolean isAuthentificated() -> isAuthentificated
    boolean isConnected() -> isConnected
    void initFeatures() -> initFeatures
    void discoverServerFeatures() -> discoverServerFeatures
    void configure(org.jivesoftware.smack.provider.ProviderManager) -> configure
    void resetAttempts() -> resetAttempts
    int timeDelay() -> timeDelay
    void startReconnectionThread() -> startReconnectionThread
    void onDisconnected() -> onDisconnected
    java.lang.String getXmppResource(android.content.Context) -> getXmppResource
    boolean isFinished() -> isFinished
    void setBlackListActive() -> setBlackListActive
    void enableConnect(boolean) -> enableConnect
    void registerConnectivityReceiver() -> registerConnectivityReceiver
    void unregisterConnectivityReceiver() -> unregisterConnectivityReceiver
    java.lang.String access$0() -> access$0
    java.lang.Thread access$1(com.easemob.chat.core.EMConnectionManager) -> access$1
    void access$2(com.easemob.chat.core.EMConnectionManager) -> access$2
    void access$3(com.easemob.chat.core.EMConnectionManager) -> access$3
    void access$4(com.easemob.chat.core.EMConnectionManager) -> access$4
    org.jivesoftware.smack.XMPPConnection access$5(com.easemob.chat.core.EMConnectionManager) -> access$5
    void access$6(com.easemob.chat.core.EMConnectionManager) -> access$6
    void access$7(com.easemob.chat.core.EMConnectionManager) -> access$7
    com.easemob.chat.core.n access$8(com.easemob.chat.core.EMConnectionManager) -> access$8
    void access$9(com.easemob.chat.core.EMConnectionManager) -> access$9
    android.content.Context access$10(com.easemob.chat.core.EMConnectionManager) -> access$10
    int access$11(com.easemob.chat.core.EMConnectionManager) -> access$11
    com.easemob.chat.core.EMConnectionManager$XmppConnectionListener access$12(com.easemob.chat.core.EMConnectionManager) -> access$12
com.easemob.chat.core.EMConnectionManager$1 -> com.easemob.chat.core.EMConnectionManager$1:
    com.easemob.chat.core.EMConnectionManager this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.easemob.chat.core.EMConnectionManager access$0(com.easemob.chat.core.EMConnectionManager$1) -> access$0
com.easemob.chat.core.EMConnectionManager$1$1 -> com.easemob.chat.core.EMConnectionManager$1$1:
    com.easemob.chat.core.EMConnectionManager$1 this$1 -> this$1
    void run() -> run
com.easemob.chat.core.EMConnectionManager$1$2 -> com.easemob.chat.core.EMConnectionManager$1$2:
    com.easemob.chat.core.EMConnectionManager$1 this$1 -> this$1
    void run() -> run
com.easemob.chat.core.EMConnectionManager$2 -> com.easemob.chat.core.EMConnectionManager$2:
    com.easemob.chat.core.EMConnectionManager this$0 -> this$0
    void run() -> run
com.easemob.chat.core.EMConnectionManager$3 -> com.easemob.chat.core.EMConnectionManager$3:
    com.easemob.chat.core.EMConnectionManager this$0 -> this$0
    void run() -> run
com.easemob.chat.core.EMConnectionManager$PingListener -> com.easemob.chat.core.EMConnectionManager$PingListener:
    com.easemob.chat.core.EMConnectionManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
com.easemob.chat.core.EMConnectionManager$XmppConnectionListener -> com.easemob.chat.core.EMConnectionManager$XmppConnectionListener:
    com.easemob.chat.core.EMConnectionManager this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
com.easemob.chat.core.EMDBManager -> com.easemob.chat.core.EMDBManager:
    java.lang.String d -> d
    java.lang.String a -> a
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String b -> b
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String c -> c
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    java.lang.String O -> O
    java.lang.String P -> P
    java.lang.String Q -> Q
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String ac -> ac
    java.lang.String ad -> ad
    java.lang.String ae -> ae
    java.lang.String af -> af
    java.lang.String ag -> ag
    java.lang.String ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    java.lang.String ak -> ak
    com.easemob.chat.core.EMDBManager al -> al
    boolean am -> am
    java.lang.String an -> an
    android.content.Context ao -> ao
    boolean ap -> ap
    void a(java.lang.String) -> a
    com.easemob.chat.core.EMDBManager a() -> a
    void b() -> b
    void m() -> m
    android.database.sqlite.SQLiteDatabase n() -> n
    boolean a(com.easemob.chat.EMMessage) -> a
    boolean b(com.easemob.chat.EMMessage) -> b
    void b(java.lang.String) -> b
    java.lang.String a(android.database.Cursor) -> a
    com.easemob.chat.EMConversation$EMConversationType a(boolean,java.lang.String,android.database.sqlite.SQLiteDatabase) -> a
    java.util.Hashtable c() -> c
    com.easemob.chat.EMConversation$EMConversationType b(int) -> b
    java.util.Hashtable a(int) -> a
    long a(java.lang.String,boolean) -> a
    com.easemob.chat.EMMessage c(java.lang.String) -> c
    java.util.List d() -> d
    java.util.List e() -> e
    java.util.List a(java.lang.String,com.easemob.chat.EMMessage$ChatType) -> a
    java.util.List a(java.lang.String,java.lang.String,int) -> a
    java.util.List a(java.lang.String,boolean,java.lang.String,int) -> a
    java.util.List b(java.lang.String,boolean,java.lang.String,int) -> b
    java.util.List b(java.lang.String,java.lang.String,int) -> b
    com.easemob.chat.EMMessage b(android.database.Cursor) -> b
    void d(java.lang.String) -> d
    void a(java.lang.String,com.easemob.chat.EMConversation$EMConversationType) -> a
    void b(java.lang.String,boolean) -> b
    void c(java.lang.String,boolean) -> c
    boolean d(java.lang.String,boolean) -> d
    void e(java.lang.String,boolean) -> e
    void f(java.lang.String,boolean) -> f
    void g(java.lang.String,boolean) -> g
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,android.content.ContentValues) -> a
    java.lang.String e(java.util.List) -> e
    void a(com.easemob.chat.EMGroup) -> a
    void a(java.util.List) -> a
    void b(java.util.List) -> b
    void a(com.easemob.chat.EMChatRoom) -> a
    java.util.Map f() -> f
    java.util.Map g() -> g
    com.easemob.chat.EMGroup e(java.lang.String) -> e
    com.easemob.chat.EMChatRoom f(java.lang.String) -> f
    com.easemob.chat.EMGroup c(android.database.Cursor) -> c
    com.easemob.chat.EMChatRoom d(android.database.Cursor) -> d
    void b(com.easemob.chat.EMGroup) -> b
    void b(com.easemob.chat.EMChatRoom) -> b
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    boolean c(com.easemob.chat.EMMessage) -> c
    void c(java.util.List) -> c
    int j(java.lang.String) -> j
    void a(java.lang.String,int) -> a
    void k(java.lang.String) -> k
    java.util.List h() -> h
    void a(java.lang.String,com.easemob.chat.core.EMInternalConfigManager$a) -> a
    com.easemob.chat.core.EMInternalConfigManager$a l(java.lang.String) -> l
    void b(java.lang.String,java.lang.String) -> b
    void m(java.lang.String) -> m
    java.util.List i() -> i
    java.util.List j() -> j
    void d(java.util.List) -> d
    void n(java.lang.String) -> n
    void o(java.lang.String) -> o
    void a(java.lang.String,boolean,java.lang.String) -> a
    java.lang.String h(java.lang.String,boolean) -> h
    boolean k() -> k
    java.util.List a(com.easemob.chat.EMMessage$Type,com.easemob.chat.EMMessage$ChatType,java.lang.String,java.lang.String,int) -> a
    long a(com.easemob.chat.EMMessage$Type,com.easemob.chat.EMMessage$ChatType,java.lang.String) -> a
    java.util.List a(com.easemob.chat.EMMessage$ChatType,java.lang.String,java.lang.String,int,java.lang.String) -> a
    java.util.Map p(java.lang.String) -> p
    java.lang.String l() -> l
    void a(com.easemob.chat.core.EMDBManager,boolean) -> a
com.easemob.chat.core.EMDBManager$EMChatDBOpenHelper -> com.easemob.chat.core.EMDBManager$EMChatDBOpenHelper:
    com.easemob.chat.core.EMDBManager$EMChatDBOpenHelper instance -> instance
    java.lang.String username -> username
    com.easemob.chat.core.EMDBManager$EMChatDBOpenHelper getInstance(android.content.Context,java.lang.String) -> getInstance
    void closeDB() -> closeDB
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    boolean isColumnExist(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String) -> isColumnExist
    void migrateFrom10To12(android.database.sqlite.SQLiteDatabase) -> migrateFrom10To12
    void clearContactTable_v10(android.database.sqlite.SQLiteDatabase) -> clearContactTable_v10
    void initializeConversation(android.database.sqlite.SQLiteDatabase) -> initializeConversation
    void addConversation(android.database.sqlite.SQLiteDatabase,java.lang.String,boolean) -> addConversation
com.easemob.chat.core.EMHeartBeatReceiver -> com.easemob.chat.core.EMHeartBeatReceiver:
    java.lang.String TAG -> TAG
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.easemob.chat.core.EMInternalConfigManager -> com.easemob.chat.core.EMInternalConfigManager:
    java.lang.String f -> f
    int a -> a
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    long k -> k
    boolean l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    com.easemob.chat.core.EMInternalConfigManager o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    int E -> E
    java.util.List b -> b
    com.easemob.util.CryptoUtils F -> F
    com.easemob.chat.EMChatConfig$EMEnvMode c -> c
    com.easemob.chat.EMChatConfig$EMSDKMode d -> d
    boolean e -> e
    boolean G -> G
    boolean H -> H
    boolean I -> I
    java.lang.String J -> J
    java.lang.String[] K -> K
    java.lang.String L -> L
    boolean M -> M
    java.lang.String N -> N
    boolean a() -> a
    void a(boolean) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    com.easemob.chat.core.EMInternalConfigManager c() -> c
    java.lang.String d() -> d
    void b(boolean) -> b
    void c(boolean) -> c
    boolean e() -> e
    void d(boolean) -> d
    boolean f() -> f
    void e(boolean) -> e
    boolean g() -> g
    java.lang.String h() -> h
    boolean i() -> i
    void f(boolean) -> f
    boolean j() -> j
    boolean k() -> k
    java.lang.String l() -> l
    java.lang.String m() -> m
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    java.lang.String n() -> n
    java.lang.String o() -> o
    java.lang.String p() -> p
    java.lang.String q() -> q
    java.lang.String r() -> r
    java.lang.String s() -> s
    void a(int) -> a
    void a(com.easemob.chat.EMChatConfig$EMEnvMode) -> a
    com.easemob.chat.EMChatConfig$EMEnvMode t() -> t
    void a(com.easemob.chat.EMChatConfig$EMSDKMode) -> a
    com.easemob.chat.EMChatConfig$EMSDKMode u() -> u
    void d(java.lang.String) -> d
    java.lang.String v() -> v
    void e(java.lang.String) -> e
    java.lang.String w() -> w
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String x() -> x
    java.lang.String y() -> y
    long z() -> z
    void A() -> A
    void g(boolean) -> g
    boolean B() -> B
    java.lang.String f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void a(long) -> a
    void b(long) -> b
    long C() -> C
    java.lang.String D() -> D
    java.lang.String E() -> E
    long F() -> F
    boolean G() -> G
    boolean H() -> H
    long I() -> I
    void c(long) -> c
    void J() -> J
    java.lang.String i(java.lang.String) -> i
    java.lang.String K() -> K
    java.lang.String L() -> L
    void a(java.util.List) -> a
    java.util.List M() -> M
    boolean N() -> N
    com.easemob.chat.core.r O() -> O
    java.lang.String P() -> P
    void j(java.lang.String) -> j
com.easemob.chat.core.EMInternalConfigManager$EMTransportAddress -> com.easemob.chat.core.EMInternalConfigManager$EMTransportAddress:
    java.lang.String a -> a
    int b -> b
    com.easemob.chat.core.EMInternalConfigManager$EMTransportAddress$EMTransportType c -> c
com.easemob.chat.core.EMInternalConfigManager$EMTransportAddress$EMTransportType -> com.easemob.chat.core.EMInternalConfigManager$EMTransportAddress$EMTransportType:
    com.easemob.chat.core.EMInternalConfigManager$EMTransportAddress$EMTransportType EUdp -> EUdp
    com.easemob.chat.core.EMInternalConfigManager$EMTransportAddress$EMTransportType ETcp -> ETcp
    com.easemob.chat.core.EMInternalConfigManager$EMTransportAddress$EMTransportType[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.core.EMInternalConfigManager$EMTransportAddress$EMTransportType[] values() -> values
    com.easemob.chat.core.EMInternalConfigManager$EMTransportAddress$EMTransportType valueOf(java.lang.String) -> valueOf
com.easemob.chat.core.EMInternalConfigManager$a -> com.easemob.chat.core.EMInternalConfigManager$a:
    java.lang.String a -> a
    long b -> b
    java.lang.String a() -> a
    com.easemob.chat.core.EMInternalConfigManager$a a(java.lang.String) -> a
    long b() -> b
    com.easemob.chat.core.EMInternalConfigManager$a a(long) -> a
com.easemob.chat.core.EMMonitorDB -> com.easemob.chat.core.EMMonitorDB:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    com.easemob.chat.core.EMMonitorDB$EMMonitorDBHelper d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.util.List a() -> a
com.easemob.chat.core.EMMonitorDB$EMMonitorDBHelper -> com.easemob.chat.core.EMMonitorDB$EMMonitorDBHelper:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    com.easemob.chat.core.EMMonitorDB$a getCustomContext(android.content.Context,java.lang.String) -> getCustomContext
com.easemob.chat.core.EMMonitorDB$a -> com.easemob.chat.core.EMMonitorDB$a:
    java.lang.String dirPath -> dirPath
    java.io.File getDatabasePath(java.lang.String) -> getDatabasePath
    android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory) -> openOrCreateDatabase
    android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler) -> openOrCreateDatabase
com.easemob.chat.core.EMRoomTypeExtension -> com.easemob.chat.core.EMRoomTypeExtension:
    com.easemob.chat.core.EMRoomTypeExtension$RoomType c -> c
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    com.easemob.chat.core.EMRoomTypeExtension$RoomType a() -> a
    void a(com.easemob.chat.core.EMRoomTypeExtension$RoomType) -> a
com.easemob.chat.core.EMRoomTypeExtension$RoomType -> com.easemob.chat.core.EMRoomTypeExtension$RoomType:
    com.easemob.chat.core.EMRoomTypeExtension$RoomType chatroom -> chatroom
    com.easemob.chat.core.EMRoomTypeExtension$RoomType[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.core.EMRoomTypeExtension$RoomType[] values() -> values
    com.easemob.chat.core.EMRoomTypeExtension$RoomType valueOf(java.lang.String) -> valueOf
com.easemob.chat.core.a -> com.easemob.chat.core.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String toXML() -> toXML
    java.lang.String a() -> a
    void a(java.lang.String) -> a
com.easemob.chat.core.b -> com.easemob.chat.core.b:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
com.easemob.chat.core.c -> com.easemob.chat.core.c:
    java.lang.String a -> a
    java.util.List b -> b
    java.util.concurrent.ExecutorService c -> c
    int d -> d
    com.easemob.chat.core.c a(int) -> a
    void a(com.easemob.chat.core.d) -> a
    void a(java.util.List) -> a
    void b(com.easemob.chat.core.d) -> b
    boolean c(com.easemob.chat.core.d) -> c
    void a() -> a
    void d(com.easemob.chat.core.d) -> d
    void onInit() -> onInit
    void onDestroy() -> onDestroy
    java.util.List a(com.easemob.chat.core.c) -> a
    void b(com.easemob.chat.core.c) -> b
com.easemob.chat.core.c$1 -> com.easemob.chat.core.c$1:
    com.easemob.chat.core.c a -> a
    void run() -> run
com.easemob.chat.core.c$2 -> com.easemob.chat.core.c$2:
    com.easemob.chat.core.c a -> a
    com.easemob.chat.core.d b -> b
    void run() -> run
com.easemob.chat.core.d -> com.easemob.chat.core.d:
    void run() -> run
com.easemob.chat.core.e -> com.easemob.chat.core.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void b(java.lang.String) -> b
    java.lang.String b() -> b
    void c(java.lang.String) -> c
    java.lang.String c() -> c
    void d(java.lang.String) -> d
    java.lang.String d() -> d
    void e(java.lang.String) -> e
    java.lang.String e() -> e
    void f(java.lang.String) -> f
    java.lang.String f() -> f
    void g(java.lang.String) -> g
    java.lang.String g() -> g
    void h(java.lang.String) -> h
    java.lang.String h() -> h
    void i(java.lang.String) -> i
    java.lang.String i() -> i
com.easemob.chat.core.f -> com.easemob.chat.core.f:
    void a() -> a
com.easemob.chat.core.g -> com.easemob.chat.core.g:
    com.easemob.chat.core.h$c a() -> a
    java.util.List b() -> b
    boolean c() -> c
com.easemob.chat.core.h -> com.easemob.chat.core.h:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    com.easemob.chat.core.h$a i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    long m -> m
    com.easemob.chat.core.h n -> n
    com.easemob.chat.core.l o -> o
    boolean p -> p
    java.lang.Object q -> q
    com.easemob.chat.core.h a() -> a
    void a(android.content.Context) -> a
    com.easemob.chat.core.h$c b() -> b
    com.easemob.chat.core.h$c c() -> c
    com.easemob.chat.core.h$c d() -> d
    com.easemob.chat.core.h$c e() -> e
    com.easemob.chat.core.h$c f() -> f
    com.easemob.chat.core.h$c g() -> g
    boolean h() -> h
    com.easemob.chat.core.h$a i() -> i
    void j() -> j
    void k() -> k
    com.easemob.chat.core.h$a l() -> l
    com.easemob.chat.core.h$a m() -> m
    java.lang.String n() -> n
    void a(com.easemob.chat.core.h$a,java.lang.String) -> a
    com.easemob.chat.core.h$a a(java.lang.String) -> a
    com.easemob.chat.core.h$a a(java.io.InputStream) -> a
    void a(org.xmlpull.v1.XmlPullParser,java.util.List) -> a
    void o() -> o
    void a(java.util.List) -> a
com.easemob.chat.core.h$a -> com.easemob.chat.core.h$a:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    boolean d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.util.List g -> g
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.easemob.chat.core.h$b -> com.easemob.chat.core.h$b:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.easemob.chat.core.h$c -> com.easemob.chat.core.h$c:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    com.easemob.chat.core.h$b d -> d
com.easemob.chat.core.i -> com.easemob.chat.core.i:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
com.easemob.chat.core.j -> com.easemob.chat.core.j:
    java.lang.String a -> a
    com.easemob.chat.core.h$a b -> b
    int c -> c
    int d -> d
    boolean e -> e
    com.easemob.chat.core.h$c f -> f
    com.easemob.chat.core.k g -> g
    int h -> h
    int i -> i
    com.easemob.chat.core.f j -> j
    void a(com.easemob.chat.core.f) -> a
    com.easemob.chat.core.h$c b() -> b
    com.easemob.chat.core.h$c c() -> c
    int d() -> d
    void e() -> e
    void a(com.easemob.chat.core.h$a) -> a
    com.easemob.chat.core.h$b f() -> f
    com.easemob.chat.core.h$b g() -> g
    com.easemob.chat.core.h$b a(int) -> a
    void a(com.easemob.chat.core.k) -> a
    void a() -> a
com.easemob.chat.core.k -> com.easemob.chat.core.k:
    com.easemob.chat.core.h$c a() -> a
    java.util.List b() -> b
    boolean c() -> c
com.easemob.chat.core.l -> com.easemob.chat.core.l:
    java.lang.String a -> a
    com.easemob.chat.core.j b -> b
    com.easemob.chat.core.j c -> c
    com.easemob.chat.core.j d -> d
    com.easemob.chat.core.h$c b() -> b
    com.easemob.chat.core.h$c c() -> c
    com.easemob.chat.core.h$c d() -> d
    int e() -> e
    int f() -> f
    int g() -> g
    com.easemob.chat.core.h$c h() -> h
    com.easemob.chat.core.h$c i() -> i
    com.easemob.chat.core.h$c j() -> j
    void a() -> a
    void k() -> k
com.easemob.chat.core.m -> com.easemob.chat.core.m:
    com.easemob.chat.core.h$c a() -> a
    java.util.List b() -> b
    boolean c() -> c
com.easemob.chat.core.n -> com.easemob.chat.core.n:
    void onConnectionSuccessful() -> onConnectionSuccessful
    void onConnecting() -> onConnecting
com.easemob.chat.core.o -> com.easemob.chat.core.o:
    void onInit() -> onInit
    void onDestroy() -> onDestroy
com.easemob.chat.core.p -> com.easemob.chat.core.p:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.lang.String getChildElementXML() -> getChildElementXML
    java.util.List a() -> a
    void a(com.easemob.chat.core.e) -> a
    void a(java.util.List) -> a
    java.util.List b() -> b
    com.easemob.chat.core.p a(boolean,java.lang.String) -> a
    com.easemob.chat.core.p a(java.lang.String) -> a
com.easemob.chat.core.p$a -> com.easemob.chat.core.p$a:
    com.easemob.chat.core.p$a a -> a
    com.easemob.chat.core.p$a b -> b
    com.easemob.chat.core.p$a c -> c
    java.lang.String d -> d
    com.easemob.chat.core.p$a[] e -> e
    java.lang.String toString() -> toString
    com.easemob.chat.core.p$a[] values() -> values
    com.easemob.chat.core.p$a valueOf(java.lang.String) -> valueOf
com.easemob.chat.core.p$b -> com.easemob.chat.core.p$b:
    java.lang.String a -> a
    java.lang.String b -> b
    com.easemob.chat.core.p c -> c
com.easemob.chat.core.q -> com.easemob.chat.core.q:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    com.easemob.chat.core.e a(org.xmlpull.v1.XmlPullParser) -> a
    java.util.List b(org.xmlpull.v1.XmlPullParser) -> b
com.easemob.chat.core.r -> com.easemob.chat.core.r:
    java.lang.String a -> a
    android.content.SharedPreferences b -> b
    android.content.SharedPreferences$Editor c -> c
    com.easemob.chat.core.r d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    long k -> k
    com.easemob.chat.core.r a() -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(long) -> a
    void b(long) -> b
    long b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    long e() -> e
    boolean f() -> f
    long g() -> g
    void c(long) -> c
    void h() -> h
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String i() -> i
    java.lang.String j() -> j
    void c(java.lang.String) -> c
    java.lang.String k() -> k
    void a(boolean) -> a
    java.lang.String l() -> l
    void d(java.lang.String) -> d
    java.lang.String m() -> m
com.easemob.chat.core.s -> com.easemob.chat.core.s:
    com.easemob.chat.core.h$c a() -> a
    java.util.List b() -> b
    boolean c() -> c
com.easemob.chat.core.t -> com.easemob.chat.core.t:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
com.easemob.chat.core.u -> com.easemob.chat.core.u:
com.easemob.chat.core.v -> com.easemob.chat.core.v:
    java.util.Date a -> a
    java.util.Date a() -> a
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
com.easemob.chat.core.w -> com.easemob.chat.core.w:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
com.easemob.chat.core.x -> com.easemob.chat.core.x:
    java.lang.String b -> b
    java.lang.String a -> a
    java.lang.String getChildElementXML() -> getChildElementXML
com.easemob.chat.core.y -> com.easemob.chat.core.y:
    java.lang.String toXML() -> toXML
com.easemob.cloud.CloudFileManager -> com.easemob.cloud.CloudFileManager:
    java.util.Properties sessionContext -> sessionContext
    java.lang.String TAG -> TAG
    com.easemob.cloud.CloudFileManager instance -> instance
    boolean authorization() -> authorization
    java.lang.String getRemoteFileName(java.lang.String,java.lang.String) -> getRemoteFileName
    void uploadFileInBackground(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> uploadFileInBackground
    void downloadFile(java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> downloadFile
    void deleteFileInBackground(java.lang.String,java.lang.String,java.lang.String,com.easemob.cloud.CloudOperationCallback) -> deleteFileInBackground
com.easemob.cloud.CloudFileMetaData -> com.easemob.cloud.CloudFileMetaData:
    java.lang.String name -> name
    java.lang.String lastModified -> lastModified
    java.lang.String size -> size
    java.lang.String path -> path
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getLastModified() -> getLastModified
    void setLastModified(java.lang.String) -> setLastModified
    java.lang.String getSize() -> getSize
    void setSize(java.lang.String) -> setSize
    java.lang.String toString() -> toString
com.easemob.cloud.CloudOperationCallback -> com.easemob.cloud.CloudOperationCallback:
    void onSuccess(java.lang.String) -> onSuccess
    void onError(java.lang.String) -> onError
    void onProgress(int) -> onProgress
com.easemob.cloud.CustomMultiPartEntity -> com.easemob.cloud.CustomMultiPartEntity:
    com.easemob.cloud.CustomMultiPartEntity$ProgressListener a -> a
    void writeTo(java.io.OutputStream) -> writeTo
com.easemob.cloud.CustomMultiPartEntity$CountingOutputStream -> com.easemob.cloud.CustomMultiPartEntity$CountingOutputStream:
    com.easemob.cloud.CustomMultiPartEntity$ProgressListener listener -> listener
    long transferred -> transferred
    void write(byte[],int,int) -> write
    void write(int) -> write
com.easemob.cloud.CustomMultiPartEntity$ProgressListener -> com.easemob.cloud.CustomMultiPartEntity$ProgressListener:
    void transferred(long) -> transferred
com.easemob.cloud.EMHttpClient -> com.easemob.cloud.EMHttpClient:
    java.lang.String TAG -> TAG
    java.lang.String GET -> GET
    java.lang.String POST -> POST
    java.lang.String PUT -> PUT
    java.lang.String DELETE -> DELETE
    com.easemob.cloud.EMHttpClient instance -> instance
    com.easemob.cloud.EMHttpClient getInstance() -> getInstance
    android.util.Pair sendRequest(java.lang.String,java.util.Map,java.lang.String,java.lang.String) -> sendRequest
    org.apache.http.HttpResponse httpExecute(java.lang.String,java.util.Map,java.lang.String,java.lang.String) -> httpExecute
    void downloadFile(java.lang.String,java.lang.String,java.util.Map,com.easemob.chat.EMCloudOperationCallback) -> downloadFile
    void uploadFile(java.lang.String,java.lang.String,java.util.Map,com.easemob.chat.EMCloudOperationCallback) -> uploadFile
    android.util.Pair sendRequestWithToken(java.lang.String,java.lang.String,java.lang.String) -> sendRequestWithToken
com.easemob.cloud.EMHttpClient$1 -> com.easemob.cloud.EMHttpClient$1:
    com.easemob.cloud.EMHttpClient a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.Map d -> d
    com.easemob.chat.EMCloudOperationCallback e -> e
    void run() -> run
com.easemob.cloud.EMHttpClient$2 -> com.easemob.cloud.EMHttpClient$2:
    com.easemob.cloud.EMHttpClient a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.Map d -> d
    com.easemob.chat.EMCloudOperationCallback e -> e
    void run() -> run
com.easemob.cloud.HttpClientConfig -> com.easemob.cloud.HttpClientConfig:
    java.lang.String EASEMOB_USERSERVER_DOMAIN_ID -> EASEMOB_USERSERVER_DOMAIN_ID
    java.lang.String EASEMOB_PLATFORM -> EASEMOB_PLATFORM
    java.lang.String EM_TIME_OUT_KEY -> EM_TIME_OUT_KEY
    int EM_DEFAULT_TIMEOUT -> EM_DEFAULT_TIMEOUT
    java.lang.String getEaseMobUserServerDomainId() -> getEaseMobUserServerDomainId
    java.lang.String getDefaultUserAgent() -> getDefaultUserAgent
    org.apache.http.impl.client.DefaultHttpClient getDefaultHttpClient() -> getDefaultHttpClient
    org.apache.http.impl.client.DefaultHttpClient getDefaultHttpClient(int) -> getDefaultHttpClient
    java.lang.String getFileRemoteUrl(java.lang.String) -> getFileRemoteUrl
    java.lang.String getFileDirRemoteUrl() -> getFileDirRemoteUrl
    java.lang.String getBaseUrlByAppKey() -> getBaseUrlByAppKey
    int getTimeout(java.util.Map) -> getTimeout
com.easemob.cloud.HttpClientManager -> com.easemob.cloud.HttpClientManager:
    java.lang.String TAG -> TAG
    java.lang.String Method_GET -> Method_GET
    java.lang.String Method_POST -> Method_POST
    java.lang.String Method_PUT -> Method_PUT
    java.lang.String Method_DELETE -> Method_DELETE
    int max_retries_times_on_connection_refused -> max_retries_times_on_connection_refused
    long retrivedTokenTime -> retrivedTokenTime
    int retriveInterval -> retriveInterval
    boolean isRetring -> isRetring
    java.lang.String sendHttpRequest(java.lang.String,java.util.Map,java.lang.String,java.lang.String) -> sendHttpRequest
    android.util.Pair sendRequestWithToken(java.lang.String,java.lang.String,java.lang.String) -> sendRequestWithToken
    android.util.Pair sendHttpRequestWithRetryToken(java.lang.String,java.util.Map,java.lang.String,java.lang.String) -> sendHttpRequestWithRetryToken
    android.util.Pair sendRequest(java.lang.String,java.util.Map,java.lang.String,java.lang.String) -> sendRequest
    org.apache.http.HttpResponse sendRequestWithCountDown(java.lang.String,java.util.Map,java.lang.String,java.lang.String) -> sendRequestWithCountDown
    java.lang.String sendHttpRequestWithCountDown(java.lang.String,java.util.Map,java.lang.String,java.lang.String) -> sendHttpRequestWithCountDown
    java.lang.String getNewHost(java.lang.String,com.easemob.chat.core.h$c) -> getNewHost
    java.util.Map addDomainToHeaders(java.util.Map) -> addDomainToHeaders
    void checkAndProcessSSL(java.lang.String,org.apache.http.impl.client.DefaultHttpClient) -> checkAndProcessSSL
    org.apache.http.HttpResponse getHttpResponse(java.lang.String,java.util.Map,java.lang.String,java.lang.String) -> getHttpResponse
    org.apache.http.HttpResponse httpExecute(java.lang.String,java.util.Map,java.lang.String,java.lang.String) -> httpExecute
com.easemob.cloud.HttpFileManager -> com.easemob.cloud.HttpFileManager:
    long MAX_ALLOWED_FILE_SIZE -> MAX_ALLOWED_FILE_SIZE
    long totalSize -> totalSize
    android.content.Context appContext -> appContext
    boolean tokenRetrieved -> tokenRetrieved
    int max_retry_times_on_connection_refused -> max_retry_times_on_connection_refused
    boolean authorization() -> authorization
    void sendFiletoServerHttp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> sendFiletoServerHttp
    void sendFiletoServerHttpWithCountDown(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback,int,boolean) -> sendFiletoServerHttpWithCountDown
    java.lang.String getMimeType(java.io.File) -> getMimeType
    void uploadFileInBackground(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> uploadFileInBackground
    void uploadFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> uploadFile
    void downloadFile(java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> downloadFile
    void downloadFile(java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> downloadFile
    void downloadFileWithCountDown(java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback,int) -> downloadFileWithCountDown
    java.lang.String processUrl(java.lang.String) -> processUrl
    void processHeaders(org.apache.http.client.methods.HttpGet,java.util.Map) -> processHeaders
    long onDownloadCompleted(org.apache.http.HttpResponse,com.easemob.cloud.CloudOperationCallback,java.lang.String) -> onDownloadCompleted
    void deleteFileInBackground(java.lang.String,java.lang.String,java.lang.String,com.easemob.cloud.CloudOperationCallback) -> deleteFileInBackground
    long access$0(com.easemob.cloud.HttpFileManager) -> access$0
    void access$1(com.easemob.cloud.HttpFileManager,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback,int,boolean) -> access$1
    void access$2(com.easemob.cloud.HttpFileManager,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> access$2
    void access$3(com.easemob.cloud.HttpFileManager,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback,int) -> access$3
com.easemob.cloud.HttpFileManager$1 -> com.easemob.cloud.HttpFileManager$1:
    com.easemob.cloud.HttpFileManager a -> a
    com.easemob.cloud.CloudOperationCallback b -> b
    void transferred(long) -> transferred
com.easemob.cloud.HttpFileManager$2 -> com.easemob.cloud.HttpFileManager$2:
    com.easemob.cloud.HttpFileManager a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.util.Map f -> f
    com.easemob.cloud.CloudOperationCallback g -> g
    void run() -> run
com.easemob.cloud.HttpFileManager$3 -> com.easemob.cloud.HttpFileManager$3:
    com.easemob.cloud.HttpFileManager a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.util.Map f -> f
    com.easemob.cloud.CloudOperationCallback g -> g
    int h -> h
    void run() -> run
com.easemob.cloud.HttpFileManager$4 -> com.easemob.cloud.HttpFileManager$4:
    com.easemob.cloud.HttpFileManager a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.util.Map f -> f
    com.easemob.cloud.CloudOperationCallback g -> g
    void run() -> run
com.easemob.cloud.HttpFileManager$5 -> com.easemob.cloud.HttpFileManager$5:
    com.easemob.cloud.HttpFileManager a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.util.Map f -> f
    com.easemob.cloud.CloudOperationCallback g -> g
    int h -> h
    void run() -> run
com.easemob.cloud.HttpFileManager$6 -> com.easemob.cloud.HttpFileManager$6:
    com.easemob.cloud.HttpFileManager a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.util.Map f -> f
    com.easemob.cloud.CloudOperationCallback g -> g
    void run() -> run
com.easemob.cloud.HttpFileManager$7 -> com.easemob.cloud.HttpFileManager$7:
    com.easemob.cloud.HttpFileManager a -> a
    com.easemob.cloud.CloudOperationCallback b -> b
    java.util.Map c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void run() -> run
com.easemob.cloud.HttpFileManager$8 -> com.easemob.cloud.HttpFileManager$8:
    com.easemob.cloud.HttpFileManager a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.Map d -> d
    com.easemob.cloud.CloudOperationCallback e -> e
    int f -> f
    void run() -> run
com.easemob.cloud.HttpFileManager$9 -> com.easemob.cloud.HttpFileManager$9:
    com.easemob.cloud.HttpFileManager a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.easemob.cloud.CloudOperationCallback d -> d
    void run() -> run
com.easemob.debug.DebugHelper -> com.easemob.debug.DebugHelper:
    java.lang.String UUID -> UUID
    java.lang.String TOKEN_ENTITY -> TOKEN_ENTITY
    java.lang.String TAG -> TAG
    void uploadLog(android.content.Context,java.lang.String,com.easemob.EMCallBack) -> uploadLog
com.easemob.debug.DebugHelper$1 -> com.easemob.debug.DebugHelper$1:
    com.easemob.EMCallBack val$callback -> val$callback
    java.lang.String val$remoteServer -> val$remoteServer
    void run() -> run
com.easemob.debug.DebugHelper$1$1 -> com.easemob.debug.DebugHelper$1$1:
    com.easemob.debug.DebugHelper$1 this$1 -> this$1
    com.easemob.EMCallBack val$callback -> val$callback
    java.lang.String val$remoteServer -> val$remoteServer
    void onSuccess(java.lang.String) -> onSuccess
    void onError(java.lang.String) -> onError
    void onProgress(int) -> onProgress
com.easemob.easeui.BuildConfig -> com.easemob.easeui.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.easemob.easeui.EaseConstant -> com.easemob.easeui.EaseConstant:
    java.lang.String MESSAGE_ATTR_IS_VOICE_CALL -> MESSAGE_ATTR_IS_VOICE_CALL
    java.lang.String MESSAGE_ATTR_IS_VIDEO_CALL -> MESSAGE_ATTR_IS_VIDEO_CALL
    int CHATTYPE_SINGLE -> CHATTYPE_SINGLE
    int CHATTYPE_GROUP -> CHATTYPE_GROUP
    int CHATTYPE_CHATROOM -> CHATTYPE_CHATROOM
    java.lang.String EXTRA_CHAT_TYPE -> EXTRA_CHAT_TYPE
    java.lang.String EXTRA_USER_ID -> EXTRA_USER_ID
com.easemob.easeui.R -> com.easemob.easeui.R:
com.easemob.easeui.R$anim -> com.easemob.easeui.R$anim:
    int fade_in -> fade_in
    int fade_out -> fade_out
    int head_in -> head_in
    int head_out -> head_out
    int hold -> hold
    int push_bottom_in -> push_bottom_in
    int push_bottom_out -> push_bottom_out
    int push_top_in -> push_top_in
    int push_top_in2 -> push_top_in2
    int push_top_out -> push_top_out
    int push_top_out2 -> push_top_out2
    int slide_in_from_left -> slide_in_from_left
    int slide_in_from_right -> slide_in_from_right
    int slide_out_to_left -> slide_out_to_left
    int slide_out_to_right -> slide_out_to_right
    int voice_from_icon -> voice_from_icon
    int voice_to_icon -> voice_to_icon
com.easemob.easeui.R$attr -> com.easemob.easeui.R$attr:
    int ctsListInitialLetterBg -> ctsListInitialLetterBg
    int ctsListInitialLetterColor -> ctsListInitialLetterColor
    int ctsListPrimaryTextColor -> ctsListPrimaryTextColor
    int ctsListPrimaryTextSize -> ctsListPrimaryTextSize
    int ctsListShowSiderBar -> ctsListShowSiderBar
    int cvsListPrimaryTextColor -> cvsListPrimaryTextColor
    int cvsListPrimaryTextSize -> cvsListPrimaryTextSize
    int cvsListSecondaryTextColor -> cvsListSecondaryTextColor
    int cvsListSecondaryTextSize -> cvsListSecondaryTextSize
    int cvsListTimeTextColor -> cvsListTimeTextColor
    int cvsListTimeTextSize -> cvsListTimeTextSize
    int emojiconColumns -> emojiconColumns
    int emojiconRows -> emojiconRows
    int msgListMyBubbleBackground -> msgListMyBubbleBackground
    int msgListOtherBubbleBackground -> msgListOtherBubbleBackground
    int msgListShowUserAvatar -> msgListShowUserAvatar
    int msgListShowUserNick -> msgListShowUserNick
    int numColumns -> numColumns
    int switchCloseImage -> switchCloseImage
    int switchOpenImage -> switchOpenImage
    int switchStatus -> switchStatus
    int titleBarBackground -> titleBarBackground
    int titleBarLeftImage -> titleBarLeftImage
    int titleBarRightImage -> titleBarRightImage
    int titleBarTitle -> titleBarTitle
com.easemob.easeui.R$color -> com.easemob.easeui.R$color:
    int black_deep -> black_deep
    int bottom_bar_normal_bg -> bottom_bar_normal_bg
    int bottom_text_color_normal -> bottom_text_color_normal
    int btn_answer_normal -> btn_answer_normal
    int btn_answer_pressed -> btn_answer_pressed
    int btn_blue_normal -> btn_blue_normal
    int btn_blue_pressed -> btn_blue_pressed
    int btn_gray_normal -> btn_gray_normal
    int btn_gray_pressed -> btn_gray_pressed
    int btn_gray_pressed_status -> btn_gray_pressed_status
    int btn_green_noraml -> btn_green_noraml
    int btn_green_pressed -> btn_green_pressed
    int btn_login_normal -> btn_login_normal
    int btn_login_pressed -> btn_login_pressed
    int btn_logout_normal -> btn_logout_normal
    int btn_logout_pressed -> btn_logout_pressed
    int btn_pressed_green_solid -> btn_pressed_green_solid
    int btn_register_normal -> btn_register_normal
    int btn_register_pressed -> btn_register_pressed
    int btn_white_normal -> btn_white_normal
    int btn_white_pressed -> btn_white_pressed
    int common_bg -> common_bg
    int common_bottom_bar_normal_bg -> common_bottom_bar_normal_bg
    int common_bottom_bar_selected_bg -> common_bottom_bar_selected_bg
    int common_botton_bar_blue -> common_botton_bar_blue
    int common_top_bar_blue -> common_top_bar_blue
    int divider_list -> divider_list
    int error_item_color -> error_item_color
    int gray_normal -> gray_normal
    int gray_pressed -> gray_pressed
    int grid_state_focused -> grid_state_focused
    int grid_state_pressed -> grid_state_pressed
    int holo_blue_bright -> holo_blue_bright
    int holo_green_light -> holo_green_light
    int holo_orange_light -> holo_orange_light
    int holo_red_light -> holo_red_light
    int list_itease_primary_color -> list_itease_primary_color
    int list_itease_secondary_color -> list_itease_secondary_color
    int orange -> orange
    int top_bar_normal_bg -> top_bar_normal_bg
    int voip_interface_text_color -> voip_interface_text_color
com.easemob.easeui.R$dimen -> com.easemob.easeui.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int call_button_padding_left -> call_button_padding_left
    int call_button_padding_right -> call_button_padding_right
    int call_button_padding_vertical -> call_button_padding_vertical
    int chat_nick_margin_left -> chat_nick_margin_left
    int chat_nick_text_size -> chat_nick_text_size
    int field_margin_right -> field_margin_right
    int field_textsize -> field_textsize
    int height_row_weixin -> height_row_weixin
    int height_top_bar -> height_top_bar
    int image_thumbnail_size -> image_thumbnail_size
    int image_thumbnail_spacing -> image_thumbnail_spacing
    int margin_chat_activity -> margin_chat_activity
    int padding_search_bar -> padding_search_bar
    int sidebar_text_size -> sidebar_text_size
    int size_avatar -> size_avatar
com.easemob.easeui.R$drawable -> com.easemob.easeui.R$drawable:
    int delete_expression -> delete_expression
    int ease_app_panel_video_icon -> ease_app_panel_video_icon
    int ease_appitem_del_btn_normal -> ease_appitem_del_btn_normal
    int ease_appitem_del_btn_pressed -> ease_appitem_del_btn_pressed
    int ease_back -> ease_back
    int ease_blue_add -> ease_blue_add
    int ease_btn_blue_normal_shape -> ease_btn_blue_normal_shape
    int ease_btn_blue_pressed_shape -> ease_btn_blue_pressed_shape
    int ease_btn_blue_selector -> ease_btn_blue_selector
    int ease_btn_cancel_bj -> ease_btn_cancel_bj
    int ease_btn_cancel_normal_shape -> ease_btn_cancel_normal_shape
    int ease_btn_cancel_pressed_shape -> ease_btn_cancel_pressed_shape
    int ease_chat_edit_normal -> ease_chat_edit_normal
    int ease_chat_face_normal -> ease_chat_face_normal
    int ease_chat_face_pressed -> ease_chat_face_pressed
    int ease_chat_image_normal -> ease_chat_image_normal
    int ease_chat_image_pressed -> ease_chat_image_pressed
    int ease_chat_image_selector -> ease_chat_image_selector
    int ease_chat_item_file -> ease_chat_item_file
    int ease_chat_location_normal -> ease_chat_location_normal
    int ease_chat_location_pressed -> ease_chat_location_pressed
    int ease_chat_location_selector -> ease_chat_location_selector
    int ease_chat_press_speak_btn -> ease_chat_press_speak_btn
    int ease_chat_press_speak_btn_normal -> ease_chat_press_speak_btn_normal
    int ease_chat_press_speak_btn_pressed -> ease_chat_press_speak_btn_pressed
    int ease_chat_send_btn_normal -> ease_chat_send_btn_normal
    int ease_chat_send_btn_pressed -> ease_chat_send_btn_pressed
    int ease_chat_send_btn_selector -> ease_chat_send_btn_selector
    int ease_chat_takepic_normal -> ease_chat_takepic_normal
    int ease_chat_takepic_pressed -> ease_chat_takepic_pressed
    int ease_chat_takepic_selector -> ease_chat_takepic_selector
    int ease_chat_video_call_receive -> ease_chat_video_call_receive
    int ease_chat_video_call_self -> ease_chat_video_call_self
    int ease_chat_video_mask_to -> ease_chat_video_mask_to
    int ease_chat_voice_call_receive -> ease_chat_voice_call_receive
    int ease_chat_voice_call_self -> ease_chat_voice_call_self
    int ease_chatfrom_bg -> ease_chatfrom_bg
    int ease_chatfrom_bg_focused -> ease_chatfrom_bg_focused
    int ease_chatfrom_bg_normal -> ease_chatfrom_bg_normal
    int ease_chatfrom_voice_playing -> ease_chatfrom_voice_playing
    int ease_chatfrom_voice_playing_f1 -> ease_chatfrom_voice_playing_f1
    int ease_chatfrom_voice_playing_f2 -> ease_chatfrom_voice_playing_f2
    int ease_chatfrom_voice_playing_f3 -> ease_chatfrom_voice_playing_f3
    int ease_chatting_biaoqing_btn_enable -> ease_chatting_biaoqing_btn_enable
    int ease_chatting_biaoqing_btn_normal -> ease_chatting_biaoqing_btn_normal
    int ease_chatting_setmode_keyboard_btn -> ease_chatting_setmode_keyboard_btn
    int ease_chatting_setmode_keyboard_btn_normal -> ease_chatting_setmode_keyboard_btn_normal
    int ease_chatting_setmode_keyboard_btn_pressed -> ease_chatting_setmode_keyboard_btn_pressed
    int ease_chatting_setmode_voice_btn -> ease_chatting_setmode_voice_btn
    int ease_chatting_setmode_voice_btn_normal -> ease_chatting_setmode_voice_btn_normal
    int ease_chatting_setmode_voice_btn_pressed -> ease_chatting_setmode_voice_btn_pressed
    int ease_chatto_bg -> ease_chatto_bg
    int ease_chatto_bg_focused -> ease_chatto_bg_focused
    int ease_chatto_bg_normal -> ease_chatto_bg_normal
    int ease_chatto_voice_playing -> ease_chatto_voice_playing
    int ease_chatto_voice_playing_f1 -> ease_chatto_voice_playing_f1
    int ease_chatto_voice_playing_f2 -> ease_chatto_voice_playing_f2
    int ease_chatto_voice_playing_f3 -> ease_chatto_voice_playing_f3
    int ease_close_icon -> ease_close_icon
    int ease_common_tab_bg -> ease_common_tab_bg
    int ease_contact_list_normal -> ease_contact_list_normal
    int ease_contact_list_selected -> ease_contact_list_selected
    int ease_conversation_normal -> ease_conversation_normal
    int ease_conversation_selected -> ease_conversation_selected
    int ease_default_avatar -> ease_default_avatar
    int ease_default_image -> ease_default_image
    int ease_delete_expression -> ease_delete_expression
    int ease_dx_checkbox_gray_on -> ease_dx_checkbox_gray_on
    int ease_dx_checkbox_off -> ease_dx_checkbox_off
    int ease_dx_checkbox_on -> ease_dx_checkbox_on
    int ease_edit_text_bg -> ease_edit_text_bg
    int ease_group_icon -> ease_group_icon
    int ease_groups_icon -> ease_groups_icon
    int ease_ic_launcher -> ease_ic_launcher
    int ease_icon_marka -> ease_icon_marka
    int ease_input_bar_bg_active -> ease_input_bar_bg_active
    int ease_input_bar_bg_normal -> ease_input_bar_bg_normal
    int ease_location_msg -> ease_location_msg
    int ease_login_error_icon -> ease_login_error_icon
    int ease_mm_listitem -> ease_mm_listitem
    int ease_mm_listitem_disable -> ease_mm_listitem_disable
    int ease_mm_listitem_grey -> ease_mm_listitem_grey
    int ease_mm_listitem_grey_normal -> ease_mm_listitem_grey_normal
    int ease_mm_listitem_pressed -> ease_mm_listitem_pressed
    int ease_mm_listitem_simple -> ease_mm_listitem_simple
    int ease_mm_title_back -> ease_mm_title_back
    int ease_mm_title_remove -> ease_mm_title_remove
    int ease_msg_state_fail_resend -> ease_msg_state_fail_resend
    int ease_msg_state_fail_resend_pressed -> ease_msg_state_fail_resend_pressed
    int ease_msg_state_failed_resend -> ease_msg_state_failed_resend
    int ease_new_friends_icon -> ease_new_friends_icon
    int ease_open_icon -> ease_open_icon
    int ease_record_animate_01 -> ease_record_animate_01
    int ease_record_animate_02 -> ease_record_animate_02
    int ease_record_animate_03 -> ease_record_animate_03
    int ease_record_animate_04 -> ease_record_animate_04
    int ease_record_animate_05 -> ease_record_animate_05
    int ease_record_animate_06 -> ease_record_animate_06
    int ease_record_animate_07 -> ease_record_animate_07
    int ease_record_animate_08 -> ease_record_animate_08
    int ease_record_animate_09 -> ease_record_animate_09
    int ease_record_animate_10 -> ease_record_animate_10
    int ease_record_animate_11 -> ease_record_animate_11
    int ease_record_animate_12 -> ease_record_animate_12
    int ease_record_animate_13 -> ease_record_animate_13
    int ease_record_animate_14 -> ease_record_animate_14
    int ease_recording_hint_bg -> ease_recording_hint_bg
    int ease_recording_text_hint_bg -> ease_recording_text_hint_bg
    int ease_seabar_input -> ease_seabar_input
    int ease_search_bar_icon_normal -> ease_search_bar_icon_normal
    int ease_search_clear -> ease_search_clear
    int ease_search_clear_normal -> ease_search_clear_normal
    int ease_search_clear_pressed -> ease_search_clear_pressed
    int ease_settings_normal -> ease_settings_normal
    int ease_settings_selected -> ease_settings_selected
    int ease_show_head_toast_bg -> ease_show_head_toast_bg
    int ease_sidebar_background_pressed -> ease_sidebar_background_pressed
    int ease_slidetab_bg_press -> ease_slidetab_bg_press
    int ease_timestampe_bg -> ease_timestampe_bg
    int ease_to_group_details_normal -> ease_to_group_details_normal
    int ease_type_select_btn -> ease_type_select_btn
    int ease_type_select_btn_nor -> ease_type_select_btn_nor
    int ease_type_select_btn_pressed -> ease_type_select_btn_pressed
    int ease_unread_count_bg -> ease_unread_count_bg
    int ease_unread_dot -> ease_unread_dot
    int ease_video_download_btn_nor -> ease_video_download_btn_nor
    int ease_video_play_btn_small_nor -> ease_video_play_btn_small_nor
    int ease_video_recorder_start_btn -> ease_video_recorder_start_btn
    int ease_video_recorder_stop_btn -> ease_video_recorder_stop_btn
    int ease_voice_unread -> ease_voice_unread
    int ee_1 -> ee_1
    int ee_10 -> ee_10
    int ee_11 -> ee_11
    int ee_12 -> ee_12
    int ee_13 -> ee_13
    int ee_14 -> ee_14
    int ee_15 -> ee_15
    int ee_16 -> ee_16
    int ee_17 -> ee_17
    int ee_18 -> ee_18
    int ee_19 -> ee_19
    int ee_2 -> ee_2
    int ee_20 -> ee_20
    int ee_21 -> ee_21
    int ee_22 -> ee_22
    int ee_23 -> ee_23
    int ee_24 -> ee_24
    int ee_25 -> ee_25
    int ee_26 -> ee_26
    int ee_27 -> ee_27
    int ee_28 -> ee_28
    int ee_29 -> ee_29
    int ee_3 -> ee_3
    int ee_30 -> ee_30
    int ee_31 -> ee_31
    int ee_32 -> ee_32
    int ee_33 -> ee_33
    int ee_34 -> ee_34
    int ee_35 -> ee_35
    int ee_4 -> ee_4
    int ee_5 -> ee_5
    int ee_6 -> ee_6
    int ee_7 -> ee_7
    int ee_8 -> ee_8
    int ee_9 -> ee_9
    int ic_launcher -> ic_launcher
com.easemob.easeui.R$id -> com.easemob.easeui.R$id:
    int alert_message -> alert_message
    int avatar -> avatar
    int avatar_container -> avatar_container
    int bmapView -> bmapView
    int btn_cancel -> btn_cancel
    int btn_location_send -> btn_location_send
    int btn_more -> btn_more
    int btn_ok -> btn_ok
    int btn_press_to_speak -> btn_press_to_speak
    int btn_send -> btn_send
    int btn_set_mode_keyboard -> btn_set_mode_keyboard
    int btn_set_mode_voice -> btn_set_mode_voice
    int bubble -> bubble
    int chat_menu_container -> chat_menu_container
    int chat_swipe_layout -> chat_swipe_layout
    int chatting_content_iv -> chatting_content_iv
    int chatting_length_iv -> chatting_length_iv
    int chatting_size_iv -> chatting_size_iv
    int chatting_status_btn -> chatting_status_btn
    int chatting_video_data_area -> chatting_video_data_area
    int close -> close
    int contact_list -> contact_list
    int content_container -> content_container
    int edittext_layout -> edittext_layout
    int emojicon -> emojicon
    int emojicon_menu_container -> emojicon_menu_container
    int et_sendmessage -> et_sendmessage
    int extend_menu -> extend_menu
    int extend_menu_container -> extend_menu_container
    int fl_error_item -> fl_error_item
    int floating_header -> floating_header
    int gridview -> gridview
    int header -> header
    int image -> image
    int input_menu -> input_menu
    int iv_call_icon -> iv_call_icon
    int iv_expression -> iv_expression
    int iv_face_checked -> iv_face_checked
    int iv_face_normal -> iv_face_normal
    int iv_switch_close -> iv_switch_close
    int iv_switch_open -> iv_switch_open
    int iv_unread_voice -> iv_unread_voice
    int iv_userhead -> iv_userhead
    int iv_voice -> iv_voice
    int left_image -> left_image
    int left_layout -> left_layout
    int list -> list
    int list_itease_layout -> list_itease_layout
    int ll_face_container -> ll_face_container
    int ll_loading -> ll_loading
    int loading_layout -> loading_layout
    int message -> message
    int message_list -> message_list
    int mic_image -> mic_image
    int msg_state -> msg_state
    int msg_status -> msg_status
    int name -> name
    int open -> open
    int pb_load_local -> pb_load_local
    int percentage -> percentage
    int primary_menu -> primary_menu
    int primary_menu_container -> primary_menu_container
    int progressBar -> progressBar
    int progress_bar -> progress_bar
    int query -> query
    int recording_hint -> recording_hint
    int right_image -> right_image
    int right_layout -> right_layout
    int rl_bottom -> rl_bottom
    int rl_face -> rl_face
    int rl_picture -> rl_picture
    int root -> root
    int search_bar_view -> search_bar_view
    int search_clear -> search_clear
    int sidebar -> sidebar
    int signature -> signature
    int text -> text
    int textView -> textView
    int time -> time
    int timestamp -> timestamp
    int title -> title
    int title_bar -> title_bar
    int tv_ack -> tv_ack
    int tv_chatcontent -> tv_chatcontent
    int tv_delivered -> tv_delivered
    int tv_file_name -> tv_file_name
    int tv_file_size -> tv_file_size
    int tv_file_state -> tv_file_state
    int tv_length -> tv_length
    int tv_location -> tv_location
    int tv_userid -> tv_userid
    int unread_msg_number -> unread_msg_number
    int vPager -> vPager
    int voice_recorder -> voice_recorder
com.easemob.easeui.R$layout -> com.easemob.easeui.R$layout:
    int ease_activity_baidumap -> ease_activity_baidumap
    int ease_activity_show_big_image -> ease_activity_show_big_image
    int ease_activity_show_file -> ease_activity_show_file
    int ease_alert_dialog -> ease_alert_dialog
    int ease_chat_menu_item -> ease_chat_menu_item
    int ease_chat_message_list -> ease_chat_message_list
    int ease_commom_back_btn -> ease_commom_back_btn
    int ease_conversation_item -> ease_conversation_item
    int ease_emojicon -> ease_emojicon
    int ease_expression_gridview -> ease_expression_gridview
    int ease_fragment_chat -> ease_fragment_chat
    int ease_fragment_contact_list -> ease_fragment_contact_list
    int ease_fragment_conversation_list -> ease_fragment_conversation_list
    int ease_layout_chat_primary_menu -> ease_layout_chat_primary_menu
    int ease_layout_emojicon_menu -> ease_layout_emojicon_menu
    int ease_row_chat_history -> ease_row_chat_history
    int ease_row_contact -> ease_row_contact
    int ease_row_expression -> ease_row_expression
    int ease_row_received_file -> ease_row_received_file
    int ease_row_received_location -> ease_row_received_location
    int ease_row_received_message -> ease_row_received_message
    int ease_row_received_picture -> ease_row_received_picture
    int ease_row_received_video -> ease_row_received_video
    int ease_row_received_video_call -> ease_row_received_video_call
    int ease_row_received_voice -> ease_row_received_voice
    int ease_row_received_voice_call -> ease_row_received_voice_call
    int ease_row_sent_file -> ease_row_sent_file
    int ease_row_sent_location -> ease_row_sent_location
    int ease_row_sent_message -> ease_row_sent_message
    int ease_row_sent_picture -> ease_row_sent_picture
    int ease_row_sent_video -> ease_row_sent_video
    int ease_row_sent_video_call -> ease_row_sent_video_call
    int ease_row_sent_voice -> ease_row_sent_voice
    int ease_row_sent_voice_call -> ease_row_sent_voice_call
    int ease_search_bar -> ease_search_bar
    int ease_search_bar_with_padding -> ease_search_bar_with_padding
    int ease_showvideo_activity -> ease_showvideo_activity
    int ease_widget_chat_input_menu -> ease_widget_chat_input_menu
    int ease_widget_chat_primary_menu -> ease_widget_chat_primary_menu
    int ease_widget_contact_list -> ease_widget_contact_list
    int ease_widget_emojicon -> ease_widget_emojicon
    int ease_widget_switch_button -> ease_widget_switch_button
    int ease_widget_title_bar -> ease_widget_title_bar
    int ease_widget_voice_recorder -> ease_widget_voice_recorder
com.easemob.easeui.R$string -> com.easemob.easeui.R$string:
    int Add_a_button_was_clicked -> Add_a_button_was_clicked
    int Add_a_friend -> Add_a_friend
    int Add_group_members_fail -> Add_group_members_fail
    int Agree_with_failure -> Agree_with_failure
    int Agreed_to_your_group_chat_application -> Agreed_to_your_group_chat_application
    int Application_and_notify -> Application_and_notify
    int Apply_to_the_group_of -> Apply_to_the_group_of
    int Are_agree_with -> Are_agree_with
    int Are_connected_to_each_other -> Are_connected_to_each_other
    int Are_logged_out -> Are_logged_out
    int Are_moving_to_blacklist -> Are_moving_to_blacklist
    int Are_removed -> Are_removed
    int Cant_chat_with_yourself -> Cant_chat_with_yourself
    int Change_the_group_name -> Change_the_group_name
    int Confirm_password_cannot_be_empty -> Confirm_password_cannot_be_empty
    int Connection_failure -> Connection_failure
    int Current_version -> Current_version
    int Delete_failed -> Delete_failed
    int Delete_the_contact -> Delete_the_contact
    int Did_not_download -> Did_not_download
    int Dissolve_group_chat_tofail -> Dissolve_group_chat_tofail
    int Download_the_pictures -> Download_the_pictures
    int Download_the_pictures_new -> Download_the_pictures_new
    int Empty_the_chat_record -> Empty_the_chat_record
    int Exit_the_group_chat -> Exit_the_group_chat
    int Exit_the_group_chat_failure -> Exit_the_group_chat_failure
    int Failed_to_create_groups -> Failed_to_create_groups
    int Failed_to_download_file -> Failed_to_download_file
    int Failed_to_get_group_chat_information -> Failed_to_get_group_chat_information
    int Failed_to_join_the_group_chat -> Failed_to_join_the_group_chat
    int File_does_not_exist -> File_does_not_exist
    int Group_chat -> Group_chat
    int Group_chat_information -> Group_chat_information
    int Group_chat_profile -> Group_chat_profile
    int Group_name_cannot_be_empty -> Group_name_cannot_be_empty
    int Group_of_Lord -> Group_of_Lord
    int Hands_free -> Hands_free
    int Has_agreed_to -> Has_agreed_to
    int Has_agreed_to_your_friend_request -> Has_agreed_to_your_friend_request
    int Has_been_cancelled -> Has_been_cancelled
    int Has_refused_to -> Has_refused_to
    int Have_downloaded -> Have_downloaded
    int In_the_call -> In_the_call
    int Into_the_blacklist -> Into_the_blacklist
    int Introduction -> Introduction
    int Invite_you_to_join_a_group_chat -> Invite_you_to_join_a_group_chat
    int Is_download_voice_click_later -> Is_download_voice_click_later
    int Is_landing -> Is_landing
    int Is_moved_into_blacklist -> Is_moved_into_blacklist
    int Is_not_yet_connected_to_the_server -> Is_not_yet_connected_to_the_server
    int Is_sending_a_request -> Is_sending_a_request
    int Is_the_registered -> Is_the_registered
    int Is_to_create_a_group_chat -> Is_to_create_a_group_chat
    int Is_unblock -> Is_unblock
    int Join_the_group_chat -> Join_the_group_chat
    int Log_Upload_failed -> Log_Upload_failed
    int Log_uploaded_successfully -> Log_uploaded_successfully
    int Login_failed -> Login_failed
    int Logoff_notification -> Logoff_notification
    int Making_sure_your_location -> Making_sure_your_location
    int Modify_the_group_name_successful -> Modify_the_group_name_successful
    int Move_into_blacklist_failure -> Move_into_blacklist_failure
    int Move_into_blacklist_success -> Move_into_blacklist_success
    int Move_into_the_blacklist_new -> Move_into_the_blacklist_new
    int Network_error -> Network_error
    int Not_Set -> Not_Set
    int Open_group_chat -> Open_group_chat
    int Open_group_members_invited -> Open_group_members_invited
    int Open_the_equipment_failure -> Open_the_equipment_failure
    int Password_cannot_be_empty -> Password_cannot_be_empty
    int Please_enter_a_username -> Please_enter_a_username
    int Recording_without_permission -> Recording_without_permission
    int Refused -> Refused
    int Registered_successfully -> Registered_successfully
    int Registration_failed -> Registration_failed
    int Remove_the_notification -> Remove_the_notification
    int Removed_from_the_failure -> Removed_from_the_failure
    int Request_add_buddy_failure -> Request_add_buddy_failure
    int Request_to_add_you_as_a_friend -> Request_to_add_you_as_a_friend
    int Request_to_join -> Request_to_join
    int Select_the_contact -> Select_the_contact
    int Send_the_following_pictures -> Send_the_following_pictures
    int Send_voice_need_sdcard_support -> Send_voice_need_sdcard_support
    int Shielding_of_the_message -> Shielding_of_the_message
    int Sync_Groups_From_Server -> Sync_Groups_From_Server
    int The_delete_button_is_clicked -> The_delete_button_is_clicked
    int The_file_is_not_greater_than_10_m -> The_file_is_not_greater_than_10_m
    int The_new_group_chat -> The_new_group_chat
    int The_other_is_hang_up -> The_other_is_hang_up
    int The_other_is_not_online -> The_other_is_not_online
    int The_other_is_on_the_phone -> The_other_is_on_the_phone
    int The_other_is_on_the_phone_please -> The_other_is_on_the_phone_please
    int The_other_party_did_not_answer -> The_other_party_did_not_answer
    int The_other_party_did_not_answer_new -> The_other_party_did_not_answer_new
    int The_other_party_has_refused_to -> The_other_party_has_refused_to
    int The_other_party_is_not_online -> The_other_party_is_not_online
    int The_other_party_refused_to_accept -> The_other_party_refused_to_accept
    int The_recording_time_is_too_short -> The_recording_time_is_too_short
    int The_video_to_start -> The_video_to_start
    int This_user_is_already_your_friend -> This_user_is_already_your_friend
    int To_join_the_chat -> To_join_the_chat
    int Two_input_password -> Two_input_password
    int Upload_the_log -> Upload_the_log
    int User_already_exists -> User_already_exists
    int User_name_cannot_be_empty -> User_name_cannot_be_empty
    int Version_number_is_wrong -> Version_number_is_wrong
    int Video_footage -> Video_footage
    int Whether_the_public -> Whether_the_public
    int Whether_to_empty_all_chats -> Whether_to_empty_all_chats
    int Whether_to_send -> Whether_to_send
    int add_friend -> add_friend
    int add_public_chat_room -> add_public_chat_room
    int add_public_group_chat -> add_public_group_chat
    int address_book -> address_book
    int agree -> agree
    int answer -> answer
    int are_empty_group_of_news -> are_empty_group_of_news
    int attach_file -> attach_file
    int attach_location -> attach_location
    int attach_picture -> attach_picture
    int attach_smile -> attach_smile
    int attach_take_pic -> attach_take_pic
    int attach_video -> attach_video
    int attach_video_call -> attach_video_call
    int attach_voice_call -> attach_voice_call
    int back -> back
    int be_removing -> be_removing
    int being_added -> being_added
    int black_item -> black_item
    int blacklist -> blacklist
    int book_black -> book_black
    int button_add -> button_add
    int button_cancel -> button_cancel
    int button_logout -> button_logout
    int button_pushtotalk -> button_pushtotalk
    int button_save -> button_save
    int button_search -> button_search
    int button_send -> button_send
    int button_uploadlog -> button_uploadlog
    int call_duration -> call_duration
    int can_not_connect_chat_server_connection -> can_not_connect_chat_server_connection
    int cancel -> cancel
    int cant_find_pictures -> cant_find_pictures
    int change_the_group_name_failed_please -> change_the_group_name_failed_please
    int chat_room -> chat_room
    int chatroom_allow_owner_leave -> chatroom_allow_owner_leave
    int chatset -> chatset
    int chatting_is_dissolution -> chatting_is_dissolution
    int clear_all_records -> clear_all_records
    int clear_records -> clear_records
    int confirm_forward_to -> confirm_forward_to
    int confirm_resend -> confirm_resend
    int confirm_the_members -> confirm_the_members
    int confirmpassword -> confirmpassword
    int connect_conflict -> connect_conflict
    int connect_failuer_toast -> connect_failuer_toast
    int copy -> copy
    int copy_message -> copy_message
    int delete -> delete
    int delete_conversation -> delete_conversation
    int delete_conversation_messages -> delete_conversation_messages
    int delete_message -> delete_message
    int delete_video -> delete_video
    int delete_voice -> delete_voice
    int deleting -> deleting
    int diagnose -> diagnose
    int did_not_answer -> did_not_answer
    int direct_call -> direct_call
    int dismiss_group -> dismiss_group
    int dissolution_group_hint -> dissolution_group_hint
    int dl_cancel -> dl_cancel
    int dl_msg_local_upload -> dl_msg_local_upload
    int dl_msg_take_photo -> dl_msg_take_photo
    int dl_ok -> dl_ok
    int dl_title_upload_photo -> dl_title_upload_photo
    int dl_update_nick -> dl_update_nick
    int dl_update_photo -> dl_update_photo
    int dl_waiting -> dl_waiting
    int downwaiting -> downwaiting
    int ease_user_remove -> ease_user_remove
    int error_send_invalid_content -> error_send_invalid_content
    int error_send_not_in_the_group -> error_send_not_in_the_group
    int exit_group -> exit_group
    int exit_group_hint -> exit_group_hint
    int expression -> expression
    int failed_to_load_data -> failed_to_load_data
    int failed_to_move_into -> failed_to_move_into
    int file -> file
    int forward -> forward
    int get_failed_please_check -> get_failed_please_check
    int gorup_not_found -> gorup_not_found
    int group_chat -> group_chat
    int group_id -> group_id
    int group_is_blocked -> group_is_blocked
    int group_name -> group_name
    int group_not_existed -> group_not_existed
    int group_of_shielding -> group_of_shielding
    int group_search_failed -> group_search_failed
    int hang_up -> hang_up
    int hanging_up -> hanging_up
    int have_connected_with -> have_connected_with
    int have_you_removed -> have_you_removed
    int illegal_user_name -> illegal_user_name
    int input_new_nick_hint -> input_new_nick_hint
    int is_down_please_wait -> is_down_please_wait
    int is_modify_the_group_name -> is_modify_the_group_name
    int is_quit_the_group_chat -> is_quit_the_group_chat
    int join_public_group -> join_public_group
    int list_is_for -> list_is_for
    int location_message -> location_message
    int location_prefix -> location_prefix
    int location_recv -> location_recv
    int login -> login
    int login_failure_failed -> login_failure_failed
    int logout -> logout
    int logout_hint -> logout_hint
    int move_out_backlist -> move_out_backlist
    int move_up_to_cancel -> move_up_to_cancel
    int mute -> mute
    int network_anomalies -> network_anomalies
    int network_isnot_available -> network_isnot_available
    int network_unavailable -> network_unavailable
    int newchat -> newchat
    int newnotify -> newnotify
    int nickname -> nickname
    int nickname_description -> nickname_description
    int no_more_messages -> no_more_messages
    int not_add_myself -> not_add_myself
    int not_connect_to_server -> not_connect_to_server
    int not_delete_myself -> not_delete_myself
    int not_download -> not_download
    int notify -> notify
    int now_refresh_list -> now_refresh_list
    int ok -> ok
    int password -> password
    int people -> people
    int picture -> picture
    int please_check -> please_check
    int please_set_the_current -> please_set_the_current
    int prompt -> prompt
    int push_nick -> push_nick
    int receive_the_passthrough -> receive_the_passthrough
    int recoding_fail -> recoding_fail
    int recording_video -> recording_video
    int refreshing_group_list -> refreshing_group_list
    int register -> register
    int registration_failed_without_permission -> registration_failed_without_permission
    int relay_call -> relay_call
    int release_to_cancel -> release_to_cancel
    int remove_group_of -> remove_group_of
    int resend -> resend
    int robot_chat -> robot_chat
    int save -> save
    int save_new_nickname -> save_new_nickname
    int sd_card_does_not_exist -> sd_card_does_not_exist
    int search -> search
    int search_header -> search_header
    int search_new -> search_new
    int search_pubic_group -> search_pubic_group
    int searching -> searching
    int select_contacts -> select_contacts
    int send_fail -> send_fail
    int send_failure_please -> send_failure_please
    int send_successful -> send_successful
    int send_the_request_is -> send_the_request_is
    int session -> session
    int set -> set
    int setting -> setting
    int setting_nickname -> setting_nickname
    int shake -> shake
    int sure_to_empty_this -> sure_to_empty_this
    int temporary_does_not -> temporary_does_not
    int text_ack_msg -> text_ack_msg
    int text_delivered_msg -> text_delivered_msg
    int the_current_group -> the_current_group
    int the_current_network -> the_current_network
    int title_user_profile -> title_user_profile
    int toast_nick_not_isnull -> toast_nick_not_isnull
    int toast_no_support -> toast_no_support
    int toast_updatenick_fail -> toast_updatenick_fail
    int toast_updatenick_success -> toast_updatenick_success
    int toast_updatephoto_fail -> toast_updatephoto_fail
    int toast_updatephoto_success -> toast_updatephoto_success
    int unable_to_connect -> unable_to_connect
    int unable_to_get_loaction -> unable_to_get_loaction
    int update_black_list -> update_black_list
    int update_black_list_failed -> update_black_list_failed
    int update_contact_list -> update_contact_list
    int update_contact_list_failed -> update_contact_list_failed
    int update_groups -> update_groups
    int update_groups_failed -> update_groups_failed
    int user_card -> user_card
    int user_name -> user_name
    int video -> video
    int voice -> voice
    int voice_call -> voice_call
    int voice_prefix -> voice_prefix
    int yangshengqi -> yangshengqi
    int you_are_group -> you_are_group
com.easemob.easeui.R$style -> com.easemob.easeui.R$style:
    int AnimBottom -> AnimBottom
    int AnimFade -> AnimFade
    int AnimFade2 -> AnimFade2
    int AnimHead -> AnimHead
    int AnimTop -> AnimTop
    int AnimTop2 -> AnimTop2
    int Anim_style -> Anim_style
    int Anim_style2 -> Anim_style2
    int AppTheme -> AppTheme
    int HeadScale -> HeadScale
    int MyAlertDialog -> MyAlertDialog
    int MyDialogStyle -> MyDialogStyle
    int MyDialogStyleBottom -> MyDialogStyleBottom
    int MyDialogStyleTop -> MyDialogStyleTop
    int bottom_line_edit_text_style -> bottom_line_edit_text_style
    int chat_content_date_style -> chat_content_date_style
    int chat_text_date_style -> chat_text_date_style
    int chat_text_name_style -> chat_text_name_style
    int devide_line_eee -> devide_line_eee
    int horizontal_slide -> horizontal_slide
    int nornal_style -> nornal_style
com.easemob.easeui.R$styleable -> com.easemob.easeui.R$styleable:
    int[] EaseChatExtendMenu -> EaseChatExtendMenu
    int EaseChatExtendMenu_numColumns -> EaseChatExtendMenu_numColumns
    int[] EaseChatMessageList -> EaseChatMessageList
    int EaseChatMessageList_msgListMyBubbleBackground -> EaseChatMessageList_msgListMyBubbleBackground
    int EaseChatMessageList_msgListOtherBubbleBackground -> EaseChatMessageList_msgListOtherBubbleBackground
    int EaseChatMessageList_msgListShowUserAvatar -> EaseChatMessageList_msgListShowUserAvatar
    int EaseChatMessageList_msgListShowUserNick -> EaseChatMessageList_msgListShowUserNick
    int[] EaseContactList -> EaseContactList
    int EaseContactList_ctsListInitialLetterBg -> EaseContactList_ctsListInitialLetterBg
    int EaseContactList_ctsListInitialLetterColor -> EaseContactList_ctsListInitialLetterColor
    int EaseContactList_ctsListPrimaryTextColor -> EaseContactList_ctsListPrimaryTextColor
    int EaseContactList_ctsListPrimaryTextSize -> EaseContactList_ctsListPrimaryTextSize
    int EaseContactList_ctsListShowSiderBar -> EaseContactList_ctsListShowSiderBar
    int[] EaseConversationList -> EaseConversationList
    int EaseConversationList_cvsListPrimaryTextColor -> EaseConversationList_cvsListPrimaryTextColor
    int EaseConversationList_cvsListPrimaryTextSize -> EaseConversationList_cvsListPrimaryTextSize
    int EaseConversationList_cvsListSecondaryTextColor -> EaseConversationList_cvsListSecondaryTextColor
    int EaseConversationList_cvsListSecondaryTextSize -> EaseConversationList_cvsListSecondaryTextSize
    int EaseConversationList_cvsListTimeTextColor -> EaseConversationList_cvsListTimeTextColor
    int EaseConversationList_cvsListTimeTextSize -> EaseConversationList_cvsListTimeTextSize
    int[] EaseEmojiconMenu -> EaseEmojiconMenu
    int EaseEmojiconMenu_emojiconColumns -> EaseEmojiconMenu_emojiconColumns
    int EaseEmojiconMenu_emojiconRows -> EaseEmojiconMenu_emojiconRows
    int[] EaseSwitchButton -> EaseSwitchButton
    int EaseSwitchButton_switchCloseImage -> EaseSwitchButton_switchCloseImage
    int EaseSwitchButton_switchOpenImage -> EaseSwitchButton_switchOpenImage
    int EaseSwitchButton_switchStatus -> EaseSwitchButton_switchStatus
    int[] EaseTitleBar -> EaseTitleBar
    int EaseTitleBar_titleBarBackground -> EaseTitleBar_titleBarBackground
    int EaseTitleBar_titleBarLeftImage -> EaseTitleBar_titleBarLeftImage
    int EaseTitleBar_titleBarRightImage -> EaseTitleBar_titleBarRightImage
    int EaseTitleBar_titleBarTitle -> EaseTitleBar_titleBarTitle
com.easemob.easeui.adapter.EaseContactAdapter -> com.easemob.easeui.adapter.EaseContactAdapter:
    java.lang.String TAG -> TAG
    java.util.List list -> list
    java.util.List userList -> userList
    java.util.List copyUserList -> copyUserList
    android.view.LayoutInflater layoutInflater -> layoutInflater
    android.util.SparseIntArray positionOfSection -> positionOfSection
    android.util.SparseIntArray sectionOfPosition -> sectionOfPosition
    int res -> res
    com.easemob.easeui.adapter.EaseContactAdapter$MyFilter myFilter -> myFilter
    boolean notiyfyByFilter -> notiyfyByFilter
    int primaryColor -> primaryColor
    int primarySize -> primarySize
    android.graphics.drawable.Drawable initialLetterBg -> initialLetterBg
    int initialLetterColor -> initialLetterColor
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.easemob.easeui.domain.EaseUser getItem(int) -> getItem
    int getCount() -> getCount
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.Object[] getSections() -> getSections
    android.widget.Filter getFilter() -> getFilter
    void notifyDataSetChanged() -> notifyDataSetChanged
    com.easemob.easeui.adapter.EaseContactAdapter setPrimaryColor(int) -> setPrimaryColor
    com.easemob.easeui.adapter.EaseContactAdapter setPrimarySize(int) -> setPrimarySize
    com.easemob.easeui.adapter.EaseContactAdapter setInitialLetterBg(android.graphics.drawable.Drawable) -> setInitialLetterBg
    com.easemob.easeui.adapter.EaseContactAdapter setInitialLetterColor(int) -> setInitialLetterColor
    java.lang.Object getItem(int) -> getItem
    boolean access$102(com.easemob.easeui.adapter.EaseContactAdapter,boolean) -> access$102
com.easemob.easeui.adapter.EaseContactAdapter$1 -> com.easemob.easeui.adapter.EaseContactAdapter$1:
com.easemob.easeui.adapter.EaseContactAdapter$MyFilter -> com.easemob.easeui.adapter.EaseContactAdapter$MyFilter:
    java.util.List mOriginalList -> mOriginalList
    com.easemob.easeui.adapter.EaseContactAdapter this$0 -> this$0
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
com.easemob.easeui.adapter.EaseContactAdapter$ViewHolder -> com.easemob.easeui.adapter.EaseContactAdapter$ViewHolder:
    android.widget.ImageView avatar -> avatar
    android.widget.TextView nameView -> nameView
    android.widget.TextView headerView -> headerView
com.easemob.easeui.adapter.EaseConversationAdapater -> com.easemob.easeui.adapter.EaseConversationAdapater:
    java.lang.String TAG -> TAG
    java.util.List conversationList -> conversationList
    java.util.List copyConversationList -> copyConversationList
    com.easemob.easeui.adapter.EaseConversationAdapater$ConversationFilter conversationFilter -> conversationFilter
    boolean notiyfyByFilter -> notiyfyByFilter
    int primaryColor -> primaryColor
    int secondaryColor -> secondaryColor
    int timeColor -> timeColor
    int primarySize -> primarySize
    int secondarySize -> secondarySize
    float timeSize -> timeSize
    int getCount() -> getCount
    com.easemob.chat.EMConversation getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void notifyDataSetChanged() -> notifyDataSetChanged
    android.widget.Filter getFilter() -> getFilter
    void setPrimaryColor(int) -> setPrimaryColor
    void setSecondaryColor(int) -> setSecondaryColor
    void setTimeColor(int) -> setTimeColor
    void setPrimarySize(int) -> setPrimarySize
    void setSecondarySize(int) -> setSecondarySize
    void setTimeSize(float) -> setTimeSize
    java.lang.Object getItem(int) -> getItem
    java.util.List access$100(com.easemob.easeui.adapter.EaseConversationAdapater) -> access$100
    java.util.List access$200(com.easemob.easeui.adapter.EaseConversationAdapater) -> access$200
    boolean access$302(com.easemob.easeui.adapter.EaseConversationAdapater,boolean) -> access$302
com.easemob.easeui.adapter.EaseConversationAdapater$1 -> com.easemob.easeui.adapter.EaseConversationAdapater$1:
com.easemob.easeui.adapter.EaseConversationAdapater$ConversationFilter -> com.easemob.easeui.adapter.EaseConversationAdapater$ConversationFilter:
    java.util.List mOriginalValues -> mOriginalValues
    com.easemob.easeui.adapter.EaseConversationAdapater this$0 -> this$0
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
com.easemob.easeui.adapter.EaseConversationAdapater$ViewHolder -> com.easemob.easeui.adapter.EaseConversationAdapater$ViewHolder:
    android.widget.TextView name -> name
    android.widget.TextView unreadLabel -> unreadLabel
    android.widget.TextView message -> message
    android.widget.TextView time -> time
    android.widget.ImageView avatar -> avatar
    android.view.View msgState -> msgState
    android.widget.RelativeLayout list_itease_layout -> list_itease_layout
com.easemob.easeui.adapter.EaseExpressionPagerAdapter -> com.easemob.easeui.adapter.EaseExpressionPagerAdapter:
    java.util.List views -> views
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
com.easemob.easeui.adapter.EaseMessageAdapter -> com.easemob.easeui.adapter.EaseMessageAdapter:
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    int HANDLER_MESSAGE_REFRESH_LIST -> HANDLER_MESSAGE_REFRESH_LIST
    int HANDLER_MESSAGE_SELECT_LAST -> HANDLER_MESSAGE_SELECT_LAST
    int HANDLER_MESSAGE_SEEK_TO -> HANDLER_MESSAGE_SEEK_TO
    int MESSAGE_TYPE_RECV_TXT -> MESSAGE_TYPE_RECV_TXT
    int MESSAGE_TYPE_SENT_TXT -> MESSAGE_TYPE_SENT_TXT
    int MESSAGE_TYPE_SENT_IMAGE -> MESSAGE_TYPE_SENT_IMAGE
    int MESSAGE_TYPE_SENT_LOCATION -> MESSAGE_TYPE_SENT_LOCATION
    int MESSAGE_TYPE_RECV_LOCATION -> MESSAGE_TYPE_RECV_LOCATION
    int MESSAGE_TYPE_RECV_IMAGE -> MESSAGE_TYPE_RECV_IMAGE
    int MESSAGE_TYPE_SENT_VOICE -> MESSAGE_TYPE_SENT_VOICE
    int MESSAGE_TYPE_RECV_VOICE -> MESSAGE_TYPE_RECV_VOICE
    int MESSAGE_TYPE_SENT_VIDEO -> MESSAGE_TYPE_SENT_VIDEO
    int MESSAGE_TYPE_RECV_VIDEO -> MESSAGE_TYPE_RECV_VIDEO
    int MESSAGE_TYPE_SENT_FILE -> MESSAGE_TYPE_SENT_FILE
    int MESSAGE_TYPE_RECV_FILE -> MESSAGE_TYPE_RECV_FILE
    int itemTypeCount -> itemTypeCount
    com.easemob.chat.EMConversation conversation -> conversation
    com.easemob.chat.EMMessage[] messages -> messages
    java.lang.String toChatUsername -> toChatUsername
    com.easemob.easeui.widget.EaseChatMessageList$MessageListItemClickListener itemClickListener -> itemClickListener
    com.easemob.easeui.widget.chatrow.EaseCustomChatRowProvider customRowProvider -> customRowProvider
    boolean showUserNick -> showUserNick
    boolean showAvatar -> showAvatar
    android.graphics.drawable.Drawable myBubbleBg -> myBubbleBg
    android.graphics.drawable.Drawable otherBuddleBg -> otherBuddleBg
    android.widget.ListView listView -> listView
    android.os.Handler handler -> handler
    void refresh() -> refresh
    void refreshSelectLast() -> refreshSelectLast
    void refreshSeekTo(int) -> refreshSeekTo
    com.easemob.chat.EMMessage getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getCount() -> getCount
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    com.easemob.easeui.widget.chatrow.EaseChatRow createChatRow(android.content.Context,com.easemob.chat.EMMessage,int) -> createChatRow
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String getToChatUsername() -> getToChatUsername
    void setShowUserNick(boolean) -> setShowUserNick
    void setShowAvatar(boolean) -> setShowAvatar
    void setMyBubbleBg(android.graphics.drawable.Drawable) -> setMyBubbleBg
    void setOtherBuddleBg(android.graphics.drawable.Drawable) -> setOtherBuddleBg
    void setItemClickListener(com.easemob.easeui.widget.EaseChatMessageList$MessageListItemClickListener) -> setItemClickListener
    void setCustomChatRowProvider(com.easemob.easeui.widget.chatrow.EaseCustomChatRowProvider) -> setCustomChatRowProvider
    boolean isShowUserNick() -> isShowUserNick
    boolean isShowAvatar() -> isShowAvatar
    android.graphics.drawable.Drawable getMyBubbleBg() -> getMyBubbleBg
    android.graphics.drawable.Drawable getOtherBuddleBg() -> getOtherBuddleBg
    java.lang.Object getItem(int) -> getItem
    com.easemob.chat.EMConversation access$000(com.easemob.easeui.adapter.EaseMessageAdapter) -> access$000
    android.widget.ListView access$100(com.easemob.easeui.adapter.EaseMessageAdapter) -> access$100
com.easemob.easeui.adapter.EaseMessageAdapter$1 -> com.easemob.easeui.adapter.EaseMessageAdapter$1:
    com.easemob.easeui.adapter.EaseMessageAdapter this$0 -> this$0
    void refreshList() -> refreshList
    void handleMessage(android.os.Message) -> handleMessage
com.easemob.easeui.adapter.EaseMessageAdapter$2 -> com.easemob.easeui.adapter.EaseMessageAdapter$2:
    int[] $SwitchMap$com$easemob$chat$EMMessage$Type -> $SwitchMap$com$easemob$chat$EMMessage$Type
com.easemob.easeui.controller.EaseUI -> com.easemob.easeui.controller.EaseUI:
    java.lang.String TAG -> TAG
    com.easemob.easeui.controller.EaseUI instance -> instance
    com.easemob.EMEventListener eventListener -> eventListener
    com.easemob.easeui.controller.EaseUI$EaseUserProfileProvider userProvider -> userProvider
    com.easemob.easeui.controller.EaseUI$EaseSettingsProvider settingsProvider -> settingsProvider
    android.content.Context appContext -> appContext
    boolean sdkInited -> sdkInited
    com.easemob.easeui.model.EaseNotifier notifier -> notifier
    java.util.List activityList -> activityList
    void pushActivity(android.app.Activity) -> pushActivity
    void popActivity(android.app.Activity) -> popActivity
    com.easemob.easeui.controller.EaseUI getInstance() -> getInstance
    boolean init(android.content.Context) -> init
    void initChatOptions() -> initChatOptions
    com.easemob.easeui.model.EaseNotifier createNotifier() -> createNotifier
    com.easemob.easeui.model.EaseNotifier getNotifier() -> getNotifier
    boolean hasForegroundActivies() -> hasForegroundActivies
    void setUserProfileProvider(com.easemob.easeui.controller.EaseUI$EaseUserProfileProvider) -> setUserProfileProvider
    com.easemob.easeui.controller.EaseUI$EaseUserProfileProvider getUserProfileProvider() -> getUserProfileProvider
    void setSettingsProvider(com.easemob.easeui.controller.EaseUI$EaseSettingsProvider) -> setSettingsProvider
    com.easemob.easeui.controller.EaseUI$EaseSettingsProvider getSettingsProvider() -> getSettingsProvider
    java.lang.String getAppName(int) -> getAppName
com.easemob.easeui.controller.EaseUI$DefaultSettingsProvider -> com.easemob.easeui.controller.EaseUI$DefaultSettingsProvider:
    com.easemob.easeui.controller.EaseUI this$0 -> this$0
    boolean isMsgNotifyAllowed(com.easemob.chat.EMMessage) -> isMsgNotifyAllowed
    boolean isMsgSoundAllowed(com.easemob.chat.EMMessage) -> isMsgSoundAllowed
    boolean isMsgVibrateAllowed(com.easemob.chat.EMMessage) -> isMsgVibrateAllowed
    boolean isSpeakerOpened() -> isSpeakerOpened
com.easemob.easeui.controller.EaseUI$EaseSettingsProvider -> com.easemob.easeui.controller.EaseUI$EaseSettingsProvider:
    boolean isMsgNotifyAllowed(com.easemob.chat.EMMessage) -> isMsgNotifyAllowed
    boolean isMsgSoundAllowed(com.easemob.chat.EMMessage) -> isMsgSoundAllowed
    boolean isMsgVibrateAllowed(com.easemob.chat.EMMessage) -> isMsgVibrateAllowed
    boolean isSpeakerOpened() -> isSpeakerOpened
com.easemob.easeui.controller.EaseUI$EaseUserProfileProvider -> com.easemob.easeui.controller.EaseUI$EaseUserProfileProvider:
    com.easemob.easeui.domain.EaseUser getUser(java.lang.String) -> getUser
com.easemob.easeui.domain.EaseEmojicon -> com.easemob.easeui.domain.EaseEmojicon:
    int icon -> icon
    java.lang.String emojiText -> emojiText
    int getIcon() -> getIcon
    void setIcon(int) -> setIcon
    java.lang.String getEmojiText() -> getEmojiText
    void setEmojiText(java.lang.String) -> setEmojiText
com.easemob.easeui.domain.EaseUser -> com.easemob.easeui.domain.EaseUser:
    java.lang.String initialLetter -> initialLetter
    java.lang.String avatar -> avatar
    java.lang.String getInitialLetter() -> getInitialLetter
    void setInitialLetter(java.lang.String) -> setInitialLetter
    java.lang.String getAvatar() -> getAvatar
    void setAvatar(java.lang.String) -> setAvatar
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.easemob.easeui.model.EaseImageCache -> com.easemob.easeui.model.EaseImageCache:
    com.easemob.easeui.model.EaseImageCache imageCache -> imageCache
    android.support.v4.util.LruCache cache -> cache
    com.easemob.easeui.model.EaseImageCache getInstance() -> getInstance
    android.graphics.Bitmap put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
com.easemob.easeui.model.EaseImageCache$1 -> com.easemob.easeui.model.EaseImageCache$1:
    com.easemob.easeui.model.EaseImageCache this$0 -> this$0
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.easemob.easeui.model.EaseNotifier -> com.easemob.easeui.model.EaseNotifier:
    java.lang.String TAG -> TAG
    android.media.Ringtone ringtone -> ringtone
    java.lang.String[] msg_eng -> msg_eng
    java.lang.String[] msg_ch -> msg_ch
    int notifyID -> notifyID
    int foregroundNotifyID -> foregroundNotifyID
    android.app.NotificationManager notificationManager -> notificationManager
    java.util.HashSet fromUsers -> fromUsers
    int notificationNum -> notificationNum
    android.content.Context appContext -> appContext
    java.lang.String packageName -> packageName
    java.lang.String[] msgs -> msgs
    long lastNotifiyTime -> lastNotifiyTime
    android.media.AudioManager audioManager -> audioManager
    android.os.Vibrator vibrator -> vibrator
    com.easemob.easeui.model.EaseNotifier$EaseNotificationInfoProvider notificationInfoProvider -> notificationInfoProvider
    com.easemob.easeui.model.EaseNotifier init(android.content.Context) -> init
    void reset() -> reset
    void resetNotificationCount() -> resetNotificationCount
    void cancelNotificaton() -> cancelNotificaton
    void onNewMsg(com.easemob.chat.EMMessage) -> onNewMsg
    void onNewMesg(java.util.List) -> onNewMesg
    void sendNotification(java.util.List,boolean) -> sendNotification
    void sendNotification(com.easemob.chat.EMMessage,boolean) -> sendNotification
    void sendNotification(com.easemob.chat.EMMessage,boolean,boolean) -> sendNotification
    void viberateAndPlayTone(com.easemob.chat.EMMessage) -> viberateAndPlayTone
    void setNotificationInfoProvider(com.easemob.easeui.model.EaseNotifier$EaseNotificationInfoProvider) -> setNotificationInfoProvider
com.easemob.easeui.model.EaseNotifier$1 -> com.easemob.easeui.model.EaseNotifier$1:
    com.easemob.easeui.model.EaseNotifier this$0 -> this$0
    void run() -> run
com.easemob.easeui.model.EaseNotifier$2 -> com.easemob.easeui.model.EaseNotifier$2:
    int[] $SwitchMap$com$easemob$chat$EMMessage$Type -> $SwitchMap$com$easemob$chat$EMMessage$Type
com.easemob.easeui.model.EaseNotifier$EaseNotificationInfoProvider -> com.easemob.easeui.model.EaseNotifier$EaseNotificationInfoProvider:
    java.lang.String getDisplayedText(com.easemob.chat.EMMessage) -> getDisplayedText
    java.lang.String getLatestText(com.easemob.chat.EMMessage,int,int) -> getLatestText
    java.lang.String getTitle(com.easemob.chat.EMMessage) -> getTitle
    int getSmallIcon(com.easemob.chat.EMMessage) -> getSmallIcon
    android.content.Intent getLaunchIntent(com.easemob.chat.EMMessage) -> getLaunchIntent
com.easemob.easeui.model.EaseVoiceRecorder -> com.easemob.easeui.model.EaseVoiceRecorder:
    android.media.MediaRecorder recorder -> recorder
    java.lang.String PREFIX -> PREFIX
    java.lang.String EXTENSION -> EXTENSION
    boolean isRecording -> isRecording
    long startTime -> startTime
    java.lang.String voiceFilePath -> voiceFilePath
    java.lang.String voiceFileName -> voiceFileName
    java.io.File file -> file
    android.os.Handler handler -> handler
    java.lang.String startRecording(android.content.Context) -> startRecording
    void discardRecording() -> discardRecording
    int stopRecoding() -> stopRecoding
    void finalize() -> finalize
    java.lang.String getVoiceFileName(java.lang.String) -> getVoiceFileName
    boolean isRecording() -> isRecording
    java.lang.String getVoiceFilePath() -> getVoiceFilePath
    java.lang.String getVoiceFileName() -> getVoiceFileName
    boolean access$000(com.easemob.easeui.model.EaseVoiceRecorder) -> access$000
    android.os.Handler access$100(com.easemob.easeui.model.EaseVoiceRecorder) -> access$100
com.easemob.easeui.model.EaseVoiceRecorder$1 -> com.easemob.easeui.model.EaseVoiceRecorder$1:
    com.easemob.easeui.model.EaseVoiceRecorder this$0 -> this$0
    void run() -> run
com.easemob.easeui.ui.EaseBaiduMapActivity -> com.easemob.easeui.ui.EaseBaiduMapActivity:
    java.lang.String TAG -> TAG
    com.baidu.mapapi.map.MapView mMapView -> mMapView
    android.widget.FrameLayout mMapViewContainer -> mMapViewContainer
    com.baidu.location.LocationClient mLocClient -> mLocClient
    com.easemob.easeui.ui.EaseBaiduMapActivity$MyLocationListenner myListener -> myListener
    com.easemob.easeui.ui.EaseBaiduMapActivity$NotifyLister mNotifyer -> mNotifyer
    android.widget.Button sendButton -> sendButton
    android.widget.EditText indexText -> indexText
    int index -> index
    com.baidu.location.BDLocation lastLocation -> lastLocation
    com.easemob.easeui.ui.EaseBaiduMapActivity instance -> instance
    android.app.ProgressDialog progressDialog -> progressDialog
    com.baidu.mapapi.map.BaiduMap mBaiduMap -> mBaiduMap
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode mCurrentMode -> mCurrentMode
    com.easemob.easeui.ui.EaseBaiduMapActivity$BaiduSDKReceiver mBaiduReceiver -> mBaiduReceiver
    void onCreate(android.os.Bundle) -> onCreate
    void showMap(double,double,java.lang.String) -> showMap
    void showMapWithLocationClient() -> showMapWithLocationClient
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void initMapView() -> initMapView
    void back(android.view.View) -> back
    void sendLocation(android.view.View) -> sendLocation
    com.baidu.mapapi.map.BaiduMap access$000(com.easemob.easeui.ui.EaseBaiduMapActivity) -> access$000
com.easemob.easeui.ui.EaseBaiduMapActivity$1 -> com.easemob.easeui.ui.EaseBaiduMapActivity$1:
    com.easemob.easeui.ui.EaseBaiduMapActivity this$0 -> this$0
    void onCancel(android.content.DialogInterface) -> onCancel
com.easemob.easeui.ui.EaseBaiduMapActivity$BaiduSDKReceiver -> com.easemob.easeui.ui.EaseBaiduMapActivity$BaiduSDKReceiver:
    com.easemob.easeui.ui.EaseBaiduMapActivity this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.easemob.easeui.ui.EaseBaiduMapActivity$MyLocationListenner -> com.easemob.easeui.ui.EaseBaiduMapActivity$MyLocationListenner:
    com.easemob.easeui.ui.EaseBaiduMapActivity this$0 -> this$0
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    void onReceivePoi(com.baidu.location.BDLocation) -> onReceivePoi
com.easemob.easeui.ui.EaseBaiduMapActivity$NotifyLister -> com.easemob.easeui.ui.EaseBaiduMapActivity$NotifyLister:
    com.easemob.easeui.ui.EaseBaiduMapActivity this$0 -> this$0
    void onNotify(com.baidu.location.BDLocation,float) -> onNotify
com.easemob.easeui.ui.EaseBaseActivity -> com.easemob.easeui.ui.EaseBaseActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void back(android.view.View) -> back
com.easemob.easeui.ui.EaseBaseFragment -> com.easemob.easeui.ui.EaseBaseFragment:
    com.easemob.easeui.widget.EaseTitleBar titleBar -> titleBar
    android.view.inputmethod.InputMethodManager inputMethodManager -> inputMethodManager
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void ShowTitleBar() -> ShowTitleBar
    void hideTitleBar() -> hideTitleBar
    void hideSoftKeyboard() -> hideSoftKeyboard
    void initView() -> initView
    void setUpView() -> setUpView
com.easemob.easeui.ui.EaseChatFragment -> com.easemob.easeui.ui.EaseChatFragment:
    java.lang.String TAG -> TAG
    int REQUEST_CODE_MAP -> REQUEST_CODE_MAP
    int REQUEST_CODE_CAMERA -> REQUEST_CODE_CAMERA
    int REQUEST_CODE_LOCAL -> REQUEST_CODE_LOCAL
    android.os.Bundle fragmentArgs -> fragmentArgs
    int chatType -> chatType
    java.lang.String toChatUsername -> toChatUsername
    com.easemob.easeui.widget.EaseChatMessageList messageList -> messageList
    com.easemob.easeui.widget.EaseChatInputMenu inputMenu -> inputMenu
    com.easemob.chat.EMConversation conversation -> conversation
    android.view.inputmethod.InputMethodManager inputManager -> inputManager
    android.text.ClipboardManager clipboard -> clipboard
    android.os.Handler handler -> handler
    java.io.File cameraFile -> cameraFile
    com.easemob.easeui.widget.EaseVoiceRecorderView voiceRecorderView -> voiceRecorderView
    android.support.v4.widget.SwipeRefreshLayout swipeRefreshLayout -> swipeRefreshLayout
    android.widget.ListView listView -> listView
    boolean isloading -> isloading
    boolean haveMoreData -> haveMoreData
    int pagesize -> pagesize
    com.easemob.easeui.ui.EaseChatFragment$GroupListener groupListener -> groupListener
    com.easemob.chat.EMMessage contextMenuMessage -> contextMenuMessage
    int ITEM_TAKE_PICTURE -> ITEM_TAKE_PICTURE
    int ITEM_PICTURE -> ITEM_PICTURE
    int ITEM_LOCATION -> ITEM_LOCATION
    int[] itemStrings -> itemStrings
    int[] itemdrawables -> itemdrawables
    int[] itemIds -> itemIds
    com.easemob.EMChatRoomChangeListener chatRoomChangeListener -> chatRoomChangeListener
    boolean isMessageListInited -> isMessageListInited
    com.easemob.easeui.ui.EaseChatFragment$MyItemClickListener extendMenuItemClickListener -> extendMenuItemClickListener
    com.easemob.easeui.ui.EaseChatFragment$EaseChatFragmentListener chatFragmentListener -> chatFragmentListener
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void initView() -> initView
    void setUpView() -> setUpView
    void registerExtendMenuItem() -> registerExtendMenuItem
    void onConversationInit() -> onConversationInit
    void onMessageListInit() -> onMessageListInit
    void setListItemClickListener() -> setListItemClickListener
    void setRefreshLayoutListener() -> setRefreshLayoutListener
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onEvent(com.easemob.EMNotifierEvent) -> onEvent
    void onBackPressed() -> onBackPressed
    void onChatRoomViewCreation() -> onChatRoomViewCreation
    void addChatRoomChangeListenr() -> addChatRoomChangeListenr
    void showChatroomToast(java.lang.String) -> showChatroomToast
    void sendTextMessage(java.lang.String) -> sendTextMessage
    void sendVoiceMessage(java.lang.String,int) -> sendVoiceMessage
    void sendImageMessage(java.lang.String) -> sendImageMessage
    void sendLocationMessage(double,double,java.lang.String) -> sendLocationMessage
    void sendVideoMessage(java.lang.String,java.lang.String,int) -> sendVideoMessage
    void sendFileMessage(java.lang.String) -> sendFileMessage
    void sendMessage(com.easemob.chat.EMMessage) -> sendMessage
    void resendMessage(com.easemob.chat.EMMessage) -> resendMessage
    void sendPicByUri(android.net.Uri) -> sendPicByUri
    void sendFileByUri(android.net.Uri) -> sendFileByUri
    void selectPicFromCamera() -> selectPicFromCamera
    void selectPicFromLocal() -> selectPicFromLocal
    void emptyHistory() -> emptyHistory
    void toGroupDetails() -> toGroupDetails
    void hideKeyboard() -> hideKeyboard
    void forwardMessage(java.lang.String) -> forwardMessage
    void setChatFragmentListener(com.easemob.easeui.ui.EaseChatFragment$EaseChatFragmentListener) -> setChatFragmentListener
com.easemob.easeui.ui.EaseChatFragment$1 -> com.easemob.easeui.ui.EaseChatFragment$1:
    com.easemob.easeui.ui.EaseChatFragment this$0 -> this$0
    void onSendMessage(java.lang.String) -> onSendMessage
    boolean onPressToSpeakBtnTouch(android.view.View,android.view.MotionEvent) -> onPressToSpeakBtnTouch
com.easemob.easeui.ui.EaseChatFragment$1$1 -> com.easemob.easeui.ui.EaseChatFragment$1$1:
    com.easemob.easeui.ui.EaseChatFragment$1 this$1 -> this$1
    void onVoiceRecordComplete(java.lang.String,int) -> onVoiceRecordComplete
com.easemob.easeui.ui.EaseChatFragment$10 -> com.easemob.easeui.ui.EaseChatFragment$10:
    com.easemob.easeui.ui.EaseChatFragment this$0 -> this$0
    void onResult(boolean,android.os.Bundle) -> onResult
com.easemob.easeui.ui.EaseChatFragment$11 -> com.easemob.easeui.ui.EaseChatFragment$11:
    int[] $SwitchMap$com$easemob$EMNotifierEvent$Event -> $SwitchMap$com$easemob$EMNotifierEvent$Event
    int[] $SwitchMap$com$easemob$chat$EMMessage$Type -> $SwitchMap$com$easemob$chat$EMMessage$Type
com.easemob.easeui.ui.EaseChatFragment$2 -> com.easemob.easeui.ui.EaseChatFragment$2:
    com.easemob.easeui.ui.EaseChatFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.easemob.easeui.ui.EaseChatFragment$3 -> com.easemob.easeui.ui.EaseChatFragment$3:
    com.easemob.easeui.ui.EaseChatFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.easemob.easeui.ui.EaseChatFragment$4 -> com.easemob.easeui.ui.EaseChatFragment$4:
    com.easemob.easeui.ui.EaseChatFragment this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.easemob.easeui.ui.EaseChatFragment$5 -> com.easemob.easeui.ui.EaseChatFragment$5:
    com.easemob.easeui.ui.EaseChatFragment this$0 -> this$0
    void onUserAvatarClick(java.lang.String) -> onUserAvatarClick
    void onResendClick(com.easemob.chat.EMMessage) -> onResendClick
    void onBubbleLongClick(com.easemob.chat.EMMessage) -> onBubbleLongClick
    boolean onBubbleClick(com.easemob.chat.EMMessage) -> onBubbleClick
com.easemob.easeui.ui.EaseChatFragment$5$1 -> com.easemob.easeui.ui.EaseChatFragment$5$1:
    com.easemob.chat.EMMessage val$message -> val$message
    com.easemob.easeui.ui.EaseChatFragment$5 this$1 -> this$1
    void onResult(boolean,android.os.Bundle) -> onResult
com.easemob.easeui.ui.EaseChatFragment$6 -> com.easemob.easeui.ui.EaseChatFragment$6:
    com.easemob.easeui.ui.EaseChatFragment this$0 -> this$0
    void onRefresh() -> onRefresh
com.easemob.easeui.ui.EaseChatFragment$6$1 -> com.easemob.easeui.ui.EaseChatFragment$6$1:
    com.easemob.easeui.ui.EaseChatFragment$6 this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseChatFragment$7 -> com.easemob.easeui.ui.EaseChatFragment$7:
    android.app.ProgressDialog val$pd -> val$pd
    com.easemob.easeui.ui.EaseChatFragment this$0 -> this$0
    void onSuccess(com.easemob.chat.EMChatRoom) -> onSuccess
    void onError(int,java.lang.String) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
com.easemob.easeui.ui.EaseChatFragment$7$1 -> com.easemob.easeui.ui.EaseChatFragment$7$1:
    com.easemob.chat.EMChatRoom val$value -> val$value
    com.easemob.easeui.ui.EaseChatFragment$7 this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseChatFragment$7$2 -> com.easemob.easeui.ui.EaseChatFragment$7$2:
    com.easemob.easeui.ui.EaseChatFragment$7 this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseChatFragment$8 -> com.easemob.easeui.ui.EaseChatFragment$8:
    com.easemob.easeui.ui.EaseChatFragment this$0 -> this$0
    void onChatRoomDestroyed(java.lang.String,java.lang.String) -> onChatRoomDestroyed
    void onMemberJoined(java.lang.String,java.lang.String) -> onMemberJoined
    void onMemberExited(java.lang.String,java.lang.String,java.lang.String) -> onMemberExited
    void onMemberKicked(java.lang.String,java.lang.String,java.lang.String) -> onMemberKicked
com.easemob.easeui.ui.EaseChatFragment$9 -> com.easemob.easeui.ui.EaseChatFragment$9:
    java.lang.String val$toastContent -> val$toastContent
    com.easemob.easeui.ui.EaseChatFragment this$0 -> this$0
    void run() -> run
com.easemob.easeui.ui.EaseChatFragment$EaseChatFragmentListener -> com.easemob.easeui.ui.EaseChatFragment$EaseChatFragmentListener:
    void onSetMessageAttributes(com.easemob.chat.EMMessage) -> onSetMessageAttributes
    void onEnterToChatDetails() -> onEnterToChatDetails
    void onAvatarClick(java.lang.String) -> onAvatarClick
    boolean onMessageBubbleClick(com.easemob.chat.EMMessage) -> onMessageBubbleClick
    void onMessageBubbleLongClick(com.easemob.chat.EMMessage) -> onMessageBubbleLongClick
    boolean onExtendMenuItemClick(int,android.view.View) -> onExtendMenuItemClick
    com.easemob.easeui.widget.chatrow.EaseCustomChatRowProvider onSetCustomChatRowProvider() -> onSetCustomChatRowProvider
com.easemob.easeui.ui.EaseChatFragment$GroupListener -> com.easemob.easeui.ui.EaseChatFragment$GroupListener:
    com.easemob.easeui.ui.EaseChatFragment this$0 -> this$0
    void onUserRemoved(java.lang.String,java.lang.String) -> onUserRemoved
    void onGroupDestroy(java.lang.String,java.lang.String) -> onGroupDestroy
com.easemob.easeui.ui.EaseChatFragment$GroupListener$1 -> com.easemob.easeui.ui.EaseChatFragment$GroupListener$1:
    java.lang.String val$groupId -> val$groupId
    com.easemob.easeui.ui.EaseChatFragment$GroupListener this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseChatFragment$GroupListener$2 -> com.easemob.easeui.ui.EaseChatFragment$GroupListener$2:
    java.lang.String val$groupId -> val$groupId
    com.easemob.easeui.ui.EaseChatFragment$GroupListener this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseChatFragment$MyItemClickListener -> com.easemob.easeui.ui.EaseChatFragment$MyItemClickListener:
    com.easemob.easeui.ui.EaseChatFragment this$0 -> this$0
    void onClick(int,android.view.View) -> onClick
com.easemob.easeui.ui.EaseContactListFragment -> com.easemob.easeui.ui.EaseContactListFragment:
    java.lang.String TAG -> TAG
    java.util.List contactList -> contactList
    android.widget.ListView listView -> listView
    boolean hidden -> hidden
    java.util.List blackList -> blackList
    android.widget.ImageButton clearSearch -> clearSearch
    android.widget.EditText query -> query
    android.os.Handler handler -> handler
    com.easemob.easeui.domain.EaseUser toBeProcessUser -> toBeProcessUser
    java.lang.String toBeProcessUsername -> toBeProcessUsername
    com.easemob.easeui.widget.EaseContactList contactListLayout -> contactListLayout
    boolean isConflict -> isConflict
    android.widget.FrameLayout contentContainer -> contentContainer
    java.util.Map contactsMap -> contactsMap
    com.easemob.EMConnectionListener connectionListener -> connectionListener
    com.easemob.easeui.ui.EaseContactListFragment$EaseContactListItemClickListener listItemClickListener -> listItemClickListener
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void initView() -> initView
    void setUpView() -> setUpView
    void onHiddenChanged(boolean) -> onHiddenChanged
    void onResume() -> onResume
    void moveToBlacklist(java.lang.String) -> moveToBlacklist
    void refresh() -> refresh
    void onDestroy() -> onDestroy
    void getContactList() -> getContactList
    void onConnectionDisconnected() -> onConnectionDisconnected
    void onConnectionConnected() -> onConnectionConnected
    void setContactsMap(java.util.Map) -> setContactsMap
    void setContactListItemClickListener(com.easemob.easeui.ui.EaseContactListFragment$EaseContactListItemClickListener) -> setContactListItemClickListener
    com.easemob.easeui.ui.EaseContactListFragment$EaseContactListItemClickListener access$000(com.easemob.easeui.ui.EaseContactListFragment) -> access$000
com.easemob.easeui.ui.EaseContactListFragment$1 -> com.easemob.easeui.ui.EaseContactListFragment$1:
    com.easemob.easeui.ui.EaseContactListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.easemob.easeui.ui.EaseContactListFragment$2 -> com.easemob.easeui.ui.EaseContactListFragment$2:
    com.easemob.easeui.ui.EaseContactListFragment this$0 -> this$0
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.easemob.easeui.ui.EaseContactListFragment$3 -> com.easemob.easeui.ui.EaseContactListFragment$3:
    com.easemob.easeui.ui.EaseContactListFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.easemob.easeui.ui.EaseContactListFragment$4 -> com.easemob.easeui.ui.EaseContactListFragment$4:
    com.easemob.easeui.ui.EaseContactListFragment this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.easemob.easeui.ui.EaseContactListFragment$5 -> com.easemob.easeui.ui.EaseContactListFragment$5:
    java.lang.String val$username -> val$username
    android.app.ProgressDialog val$pd -> val$pd
    java.lang.String val$st2 -> val$st2
    java.lang.String val$st3 -> val$st3
    com.easemob.easeui.ui.EaseContactListFragment this$0 -> this$0
    void run() -> run
com.easemob.easeui.ui.EaseContactListFragment$5$1 -> com.easemob.easeui.ui.EaseContactListFragment$5$1:
    com.easemob.easeui.ui.EaseContactListFragment$5 this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseContactListFragment$5$2 -> com.easemob.easeui.ui.EaseContactListFragment$5$2:
    com.easemob.easeui.ui.EaseContactListFragment$5 this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseContactListFragment$6 -> com.easemob.easeui.ui.EaseContactListFragment$6:
    com.easemob.easeui.ui.EaseContactListFragment this$0 -> this$0
    int compare(com.easemob.easeui.domain.EaseUser,com.easemob.easeui.domain.EaseUser) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.easemob.easeui.ui.EaseContactListFragment$7 -> com.easemob.easeui.ui.EaseContactListFragment$7:
    com.easemob.easeui.ui.EaseContactListFragment this$0 -> this$0
    void onDisconnected(int) -> onDisconnected
    void onConnected() -> onConnected
com.easemob.easeui.ui.EaseContactListFragment$7$1 -> com.easemob.easeui.ui.EaseContactListFragment$7$1:
    com.easemob.easeui.ui.EaseContactListFragment$7 this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseContactListFragment$7$2 -> com.easemob.easeui.ui.EaseContactListFragment$7$2:
    com.easemob.easeui.ui.EaseContactListFragment$7 this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseContactListFragment$EaseContactListItemClickListener -> com.easemob.easeui.ui.EaseContactListFragment$EaseContactListItemClickListener:
    void onListItemClicked(com.easemob.easeui.domain.EaseUser) -> onListItemClicked
com.easemob.easeui.ui.EaseConversationListFragment -> com.easemob.easeui.ui.EaseConversationListFragment:
    android.widget.EditText query -> query
    android.widget.ImageButton clearSearch -> clearSearch
    boolean hidden -> hidden
    java.util.List conversationList -> conversationList
    com.easemob.easeui.widget.EaseConversationList conversationListView -> conversationListView
    android.widget.FrameLayout errorItemContainer -> errorItemContainer
    boolean isConflict -> isConflict
    com.easemob.EMConnectionListener connectionListener -> connectionListener
    com.easemob.easeui.ui.EaseConversationListFragment$EaseConversationListItemClickListener listItemClickListener -> listItemClickListener
    android.os.Handler handler -> handler
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void initView() -> initView
    void setUpView() -> setUpView
    void onConnectionConnected() -> onConnectionConnected
    void onConnectionDisconnected() -> onConnectionDisconnected
    void refresh() -> refresh
    java.util.List loadConversationList() -> loadConversationList
    void sortConversationByLastChatTime(java.util.List) -> sortConversationByLastChatTime
    void hideSoftKeyboard() -> hideSoftKeyboard
    void onHiddenChanged(boolean) -> onHiddenChanged
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setConversationListItemClickListener(com.easemob.easeui.ui.EaseConversationListFragment$EaseConversationListItemClickListener) -> setConversationListItemClickListener
    com.easemob.easeui.ui.EaseConversationListFragment$EaseConversationListItemClickListener access$000(com.easemob.easeui.ui.EaseConversationListFragment) -> access$000
com.easemob.easeui.ui.EaseConversationListFragment$1 -> com.easemob.easeui.ui.EaseConversationListFragment$1:
    com.easemob.easeui.ui.EaseConversationListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.easemob.easeui.ui.EaseConversationListFragment$2 -> com.easemob.easeui.ui.EaseConversationListFragment$2:
    com.easemob.easeui.ui.EaseConversationListFragment this$0 -> this$0
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.easemob.easeui.ui.EaseConversationListFragment$3 -> com.easemob.easeui.ui.EaseConversationListFragment$3:
    com.easemob.easeui.ui.EaseConversationListFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.easemob.easeui.ui.EaseConversationListFragment$4 -> com.easemob.easeui.ui.EaseConversationListFragment$4:
    com.easemob.easeui.ui.EaseConversationListFragment this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.easemob.easeui.ui.EaseConversationListFragment$5 -> com.easemob.easeui.ui.EaseConversationListFragment$5:
    com.easemob.easeui.ui.EaseConversationListFragment this$0 -> this$0
    void onDisconnected(int) -> onDisconnected
    void onConnected() -> onConnected
com.easemob.easeui.ui.EaseConversationListFragment$6 -> com.easemob.easeui.ui.EaseConversationListFragment$6:
    com.easemob.easeui.ui.EaseConversationListFragment this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.easemob.easeui.ui.EaseConversationListFragment$7 -> com.easemob.easeui.ui.EaseConversationListFragment$7:
    com.easemob.easeui.ui.EaseConversationListFragment this$0 -> this$0
    int compare(android.util.Pair,android.util.Pair) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.easemob.easeui.ui.EaseConversationListFragment$EaseConversationListItemClickListener -> com.easemob.easeui.ui.EaseConversationListFragment$EaseConversationListItemClickListener:
    void onListItemClicked(com.easemob.chat.EMConversation) -> onListItemClicked
com.easemob.easeui.ui.EaseGroupRemoveListener -> com.easemob.easeui.ui.EaseGroupRemoveListener:
    void onInvitationReceived(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onInvitationReceived
    void onApplicationReceived(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onApplicationReceived
    void onApplicationAccept(java.lang.String,java.lang.String,java.lang.String) -> onApplicationAccept
    void onApplicationDeclined(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onApplicationDeclined
    void onInvitationAccpted(java.lang.String,java.lang.String,java.lang.String) -> onInvitationAccpted
    void onInvitationDeclined(java.lang.String,java.lang.String,java.lang.String) -> onInvitationDeclined
com.easemob.easeui.ui.EaseShowBigImageActivity -> com.easemob.easeui.ui.EaseShowBigImageActivity:
    java.lang.String TAG -> TAG
    android.app.ProgressDialog pd -> pd
    com.easemob.easeui.widget.photoview.EasePhotoView image -> image
    int default_res -> default_res
    java.lang.String localFilePath -> localFilePath
    android.graphics.Bitmap bitmap -> bitmap
    boolean isDownloaded -> isDownloaded
    android.widget.ProgressBar loadLocalPb -> loadLocalPb
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String getLocalFilePath(java.lang.String) -> getLocalFilePath
    void downloadImage(java.lang.String,java.util.Map) -> downloadImage
    void onBackPressed() -> onBackPressed
    android.graphics.Bitmap access$002(com.easemob.easeui.ui.EaseShowBigImageActivity,android.graphics.Bitmap) -> access$002
    java.lang.String access$100(com.easemob.easeui.ui.EaseShowBigImageActivity) -> access$100
    android.graphics.Bitmap access$000(com.easemob.easeui.ui.EaseShowBigImageActivity) -> access$000
    int access$200(com.easemob.easeui.ui.EaseShowBigImageActivity) -> access$200
    com.easemob.easeui.widget.photoview.EasePhotoView access$300(com.easemob.easeui.ui.EaseShowBigImageActivity) -> access$300
    boolean access$402(com.easemob.easeui.ui.EaseShowBigImageActivity,boolean) -> access$402
    android.app.ProgressDialog access$500(com.easemob.easeui.ui.EaseShowBigImageActivity) -> access$500
com.easemob.easeui.ui.EaseShowBigImageActivity$1 -> com.easemob.easeui.ui.EaseShowBigImageActivity$1:
    com.easemob.easeui.ui.EaseShowBigImageActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.easemob.easeui.ui.EaseShowBigImageActivity$2 -> com.easemob.easeui.ui.EaseShowBigImageActivity$2:
    com.easemob.easeui.ui.EaseShowBigImageActivity this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(int,java.lang.String) -> onError
    void onProgress(int,java.lang.String) -> onProgress
com.easemob.easeui.ui.EaseShowBigImageActivity$2$1 -> com.easemob.easeui.ui.EaseShowBigImageActivity$2$1:
    com.easemob.easeui.ui.EaseShowBigImageActivity$2 this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseShowBigImageActivity$2$2 -> com.easemob.easeui.ui.EaseShowBigImageActivity$2$2:
    com.easemob.easeui.ui.EaseShowBigImageActivity$2 this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseShowBigImageActivity$2$3 -> com.easemob.easeui.ui.EaseShowBigImageActivity$2$3:
    java.lang.String val$str2 -> val$str2
    int val$progress -> val$progress
    com.easemob.easeui.ui.EaseShowBigImageActivity$2 this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseShowNormalFileActivity -> com.easemob.easeui.ui.EaseShowNormalFileActivity:
    android.widget.ProgressBar progressBar -> progressBar
    java.io.File file -> file
    void onCreate(android.os.Bundle) -> onCreate
    java.io.File access$000(com.easemob.easeui.ui.EaseShowNormalFileActivity) -> access$000
    android.widget.ProgressBar access$100(com.easemob.easeui.ui.EaseShowNormalFileActivity) -> access$100
com.easemob.easeui.ui.EaseShowNormalFileActivity$1 -> com.easemob.easeui.ui.EaseShowNormalFileActivity$1:
    com.easemob.easeui.ui.EaseShowNormalFileActivity this$0 -> this$0
    void onSuccess() -> onSuccess
    void onProgress(int,java.lang.String) -> onProgress
    void onError(int,java.lang.String) -> onError
com.easemob.easeui.ui.EaseShowNormalFileActivity$1$1 -> com.easemob.easeui.ui.EaseShowNormalFileActivity$1$1:
    com.easemob.easeui.ui.EaseShowNormalFileActivity$1 this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseShowNormalFileActivity$1$2 -> com.easemob.easeui.ui.EaseShowNormalFileActivity$1$2:
    int val$progress -> val$progress
    com.easemob.easeui.ui.EaseShowNormalFileActivity$1 this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseShowNormalFileActivity$1$3 -> com.easemob.easeui.ui.EaseShowNormalFileActivity$1$3:
    java.lang.String val$msg -> val$msg
    com.easemob.easeui.ui.EaseShowNormalFileActivity$1 this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseShowVideoActivity -> com.easemob.easeui.ui.EaseShowVideoActivity:
    java.lang.String TAG -> TAG
    android.widget.RelativeLayout loadingLayout -> loadingLayout
    android.widget.ProgressBar progressBar -> progressBar
    java.lang.String localFilePath -> localFilePath
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String getLocalFilePath(java.lang.String) -> getLocalFilePath
    void showLocalVideo(java.lang.String) -> showLocalVideo
    void downloadVideo(java.lang.String,java.util.Map) -> downloadVideo
    void onBackPressed() -> onBackPressed
    android.widget.RelativeLayout access$000(com.easemob.easeui.ui.EaseShowVideoActivity) -> access$000
    android.widget.ProgressBar access$100(com.easemob.easeui.ui.EaseShowVideoActivity) -> access$100
    java.lang.String access$200(com.easemob.easeui.ui.EaseShowVideoActivity) -> access$200
    void access$300(com.easemob.easeui.ui.EaseShowVideoActivity,java.lang.String) -> access$300
com.easemob.easeui.ui.EaseShowVideoActivity$1 -> com.easemob.easeui.ui.EaseShowVideoActivity$1:
    com.easemob.easeui.ui.EaseShowVideoActivity this$0 -> this$0
    void onSuccess() -> onSuccess
    void onProgress(int,java.lang.String) -> onProgress
    void onError(int,java.lang.String) -> onError
com.easemob.easeui.ui.EaseShowVideoActivity$1$1 -> com.easemob.easeui.ui.EaseShowVideoActivity$1$1:
    com.easemob.easeui.ui.EaseShowVideoActivity$1 this$1 -> this$1
    void run() -> run
com.easemob.easeui.ui.EaseShowVideoActivity$1$2 -> com.easemob.easeui.ui.EaseShowVideoActivity$1$2:
    int val$progress -> val$progress
    com.easemob.easeui.ui.EaseShowVideoActivity$1 this$1 -> this$1
    void run() -> run
com.easemob.easeui.utils.EaseCommonUtils -> com.easemob.easeui.utils.EaseCommonUtils:
    java.lang.String TAG -> TAG
    boolean isNetWorkConnected(android.content.Context) -> isNetWorkConnected
    boolean isExitsSdcard() -> isExitsSdcard
    java.lang.String getMessageDigest(com.easemob.chat.EMMessage,android.content.Context) -> getMessageDigest
    java.lang.String getString(android.content.Context,int) -> getString
    java.lang.String getTopActivity(android.content.Context) -> getTopActivity
    void setUserInitialLetter(com.easemob.easeui.domain.EaseUser) -> setUserInitialLetter
com.easemob.easeui.utils.EaseCommonUtils$1 -> com.easemob.easeui.utils.EaseCommonUtils$1:
    int[] $SwitchMap$com$easemob$chat$EMMessage$Type -> $SwitchMap$com$easemob$chat$EMMessage$Type
com.easemob.easeui.utils.EaseImageUtils -> com.easemob.easeui.utils.EaseImageUtils:
    java.lang.String getImagePath(java.lang.String) -> getImagePath
    java.lang.String getThumbnailImagePath(java.lang.String) -> getThumbnailImagePath
com.easemob.easeui.utils.EaseLoadLocalBigImgTask -> com.easemob.easeui.utils.EaseLoadLocalBigImgTask:
    android.widget.ProgressBar pb -> pb
    com.easemob.easeui.widget.photoview.EasePhotoView photoView -> photoView
    java.lang.String path -> path
    int width -> width
    int height -> height
    android.content.Context context -> context
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.easemob.easeui.utils.EaseSmileUtils -> com.easemob.easeui.utils.EaseSmileUtils:
    java.lang.String ee_1 -> ee_1
    java.lang.String ee_2 -> ee_2
    java.lang.String ee_3 -> ee_3
    java.lang.String ee_4 -> ee_4
    java.lang.String ee_5 -> ee_5
    java.lang.String ee_6 -> ee_6
    java.lang.String ee_7 -> ee_7
    java.lang.String ee_8 -> ee_8
    java.lang.String ee_9 -> ee_9
    java.lang.String ee_10 -> ee_10
    java.lang.String ee_11 -> ee_11
    java.lang.String ee_12 -> ee_12
    java.lang.String ee_13 -> ee_13
    java.lang.String ee_14 -> ee_14
    java.lang.String ee_15 -> ee_15
    java.lang.String ee_16 -> ee_16
    java.lang.String ee_17 -> ee_17
    java.lang.String ee_18 -> ee_18
    java.lang.String ee_19 -> ee_19
    java.lang.String ee_20 -> ee_20
    java.lang.String ee_21 -> ee_21
    java.lang.String ee_22 -> ee_22
    java.lang.String ee_23 -> ee_23
    java.lang.String ee_24 -> ee_24
    java.lang.String ee_25 -> ee_25
    java.lang.String ee_26 -> ee_26
    java.lang.String ee_27 -> ee_27
    java.lang.String ee_28 -> ee_28
    java.lang.String ee_29 -> ee_29
    java.lang.String ee_30 -> ee_30
    java.lang.String ee_31 -> ee_31
    java.lang.String ee_32 -> ee_32
    java.lang.String ee_33 -> ee_33
    java.lang.String ee_34 -> ee_34
    java.lang.String ee_35 -> ee_35
    android.text.Spannable$Factory spannableFactory -> spannableFactory
    java.util.Map emoticons -> emoticons
    int simlesSize -> simlesSize
    void addPattern(java.util.Map,java.lang.String,int) -> addPattern
    boolean addSmiles(android.content.Context,android.text.Spannable) -> addSmiles
    android.text.Spannable getSmiledText(android.content.Context,java.lang.CharSequence) -> getSmiledText
    boolean containsKey(java.lang.String) -> containsKey
    int getSmilesSize() -> getSmilesSize
com.easemob.easeui.utils.EaseUserUtils -> com.easemob.easeui.utils.EaseUserUtils:
    com.easemob.easeui.controller.EaseUI$EaseUserProfileProvider userProvider -> userProvider
    com.easemob.easeui.domain.EaseUser getUserInfo(java.lang.String) -> getUserInfo
    void setUserAvatar(android.content.Context,java.lang.String,android.widget.ImageView) -> setUserAvatar
    void setUserNick(java.lang.String,android.widget.TextView) -> setUserNick
com.easemob.easeui.widget.EaseAlertDialog -> com.easemob.easeui.widget.EaseAlertDialog:
    java.lang.String title -> title
    java.lang.String msg -> msg
    com.easemob.easeui.widget.EaseAlertDialog$AlertDialogUser user -> user
    android.os.Bundle bundle -> bundle
    boolean showCancel -> showCancel
    void onCreate(android.os.Bundle) -> onCreate
    void onOk(android.view.View) -> onOk
    void onCancel(android.view.View) -> onCancel
com.easemob.easeui.widget.EaseAlertDialog$1 -> com.easemob.easeui.widget.EaseAlertDialog$1:
    com.easemob.easeui.widget.EaseAlertDialog this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.easemob.easeui.widget.EaseAlertDialog$AlertDialogUser -> com.easemob.easeui.widget.EaseAlertDialog$AlertDialogUser:
    void onResult(boolean,android.os.Bundle) -> onResult
com.easemob.easeui.widget.EaseChatExtendMenu -> com.easemob.easeui.widget.EaseChatExtendMenu:
    android.content.Context context -> context
    java.util.List itemModels -> itemModels
    void init(android.content.Context,android.util.AttributeSet) -> init
    void init() -> init
    void registerMenuItem(java.lang.String,int,int,com.easemob.easeui.widget.EaseChatExtendMenu$EaseChatExtendMenuItemClickListener) -> registerMenuItem
    void registerMenuItem(int,int,int,com.easemob.easeui.widget.EaseChatExtendMenu$EaseChatExtendMenuItemClickListener) -> registerMenuItem
com.easemob.easeui.widget.EaseChatExtendMenu$ChatMenuItem -> com.easemob.easeui.widget.EaseChatExtendMenu$ChatMenuItem:
    android.widget.ImageView imageView -> imageView
    android.widget.TextView textView -> textView
    com.easemob.easeui.widget.EaseChatExtendMenu this$0 -> this$0
    void init(android.content.Context,android.util.AttributeSet) -> init
    void setImage(int) -> setImage
    void setText(int) -> setText
    void setText(java.lang.String) -> setText
com.easemob.easeui.widget.EaseChatExtendMenu$ChatMenuItemModel -> com.easemob.easeui.widget.EaseChatExtendMenu$ChatMenuItemModel:
    java.lang.String name -> name
    int image -> image
    int id -> id
    com.easemob.easeui.widget.EaseChatExtendMenu$EaseChatExtendMenuItemClickListener clickListener -> clickListener
    com.easemob.easeui.widget.EaseChatExtendMenu this$0 -> this$0
com.easemob.easeui.widget.EaseChatExtendMenu$EaseChatExtendMenuItemClickListener -> com.easemob.easeui.widget.EaseChatExtendMenu$EaseChatExtendMenuItemClickListener:
    void onClick(int,android.view.View) -> onClick
com.easemob.easeui.widget.EaseChatExtendMenu$ItemAdapter -> com.easemob.easeui.widget.EaseChatExtendMenu$ItemAdapter:
    android.content.Context context -> context
    com.easemob.easeui.widget.EaseChatExtendMenu this$0 -> this$0
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.easemob.easeui.widget.EaseChatExtendMenu$ItemAdapter$1 -> com.easemob.easeui.widget.EaseChatExtendMenu$ItemAdapter$1:
    int val$position -> val$position
    com.easemob.easeui.widget.EaseChatExtendMenu$ItemAdapter this$1 -> this$1
    void onClick(android.view.View) -> onClick
com.easemob.easeui.widget.EaseChatInputMenu -> com.easemob.easeui.widget.EaseChatInputMenu:
    android.widget.FrameLayout primaryMenuContainer -> primaryMenuContainer
    android.widget.FrameLayout emojiconMenuContainer -> emojiconMenuContainer
    com.easemob.easeui.widget.EaseChatPrimaryMenuBase chatPrimaryMenu -> chatPrimaryMenu
    com.easemob.easeui.widget.EaseEmojiconMenuBase emojiconMenu -> emojiconMenu
    com.easemob.easeui.widget.EaseChatExtendMenu chatExtendMenu -> chatExtendMenu
    android.widget.FrameLayout chatExtendMenuContainer -> chatExtendMenuContainer
    android.view.LayoutInflater layoutInflater -> layoutInflater
    android.os.Handler handler -> handler
    com.easemob.easeui.widget.EaseChatInputMenu$ChatInputMenuListener listener -> listener
    android.content.Context context -> context
    void init(android.content.Context,android.util.AttributeSet) -> init
    void init() -> init
    void setCustomEmojiconMenu(com.easemob.easeui.widget.EaseEmojiconMenuBase) -> setCustomEmojiconMenu
    void setCustomPrimaryMenu(com.easemob.easeui.widget.EaseChatPrimaryMenuBase) -> setCustomPrimaryMenu
    void registerExtendMenuItem(java.lang.String,int,int,com.easemob.easeui.widget.EaseChatExtendMenu$EaseChatExtendMenuItemClickListener) -> registerExtendMenuItem
    void registerExtendMenuItem(int,int,int,com.easemob.easeui.widget.EaseChatExtendMenu$EaseChatExtendMenuItemClickListener) -> registerExtendMenuItem
    void processChatMenu() -> processChatMenu
    void toggleMore() -> toggleMore
    void toggleEmojicon() -> toggleEmojicon
    void hideKeyboard() -> hideKeyboard
    void hideExtendMenuContainer() -> hideExtendMenuContainer
    boolean onBackPressed() -> onBackPressed
    void setChatInputMenuListener(com.easemob.easeui.widget.EaseChatInputMenu$ChatInputMenuListener) -> setChatInputMenuListener
    com.easemob.easeui.widget.EaseChatInputMenu$ChatInputMenuListener access$000(com.easemob.easeui.widget.EaseChatInputMenu) -> access$000
com.easemob.easeui.widget.EaseChatInputMenu$1 -> com.easemob.easeui.widget.EaseChatInputMenu$1:
    com.easemob.easeui.widget.EaseChatInputMenu this$0 -> this$0
    void onSendBtnClicked(java.lang.String) -> onSendBtnClicked
    void onToggleVoiceBtnClicked() -> onToggleVoiceBtnClicked
    void onToggleExtendClicked() -> onToggleExtendClicked
    void onToggleEmojiconClicked() -> onToggleEmojiconClicked
    void onEditTextClicked() -> onEditTextClicked
    boolean onPressToSpeakBtnTouch(android.view.View,android.view.MotionEvent) -> onPressToSpeakBtnTouch
com.easemob.easeui.widget.EaseChatInputMenu$2 -> com.easemob.easeui.widget.EaseChatInputMenu$2:
    com.easemob.easeui.widget.EaseChatInputMenu this$0 -> this$0
    void onExpressionClicked(java.lang.CharSequence) -> onExpressionClicked
    void onDeleteImageClicked() -> onDeleteImageClicked
com.easemob.easeui.widget.EaseChatInputMenu$3 -> com.easemob.easeui.widget.EaseChatInputMenu$3:
    com.easemob.easeui.widget.EaseChatInputMenu this$0 -> this$0
    void run() -> run
com.easemob.easeui.widget.EaseChatInputMenu$4 -> com.easemob.easeui.widget.EaseChatInputMenu$4:
    com.easemob.easeui.widget.EaseChatInputMenu this$0 -> this$0
    void run() -> run
com.easemob.easeui.widget.EaseChatInputMenu$ChatInputMenuListener -> com.easemob.easeui.widget.EaseChatInputMenu$ChatInputMenuListener:
    void onSendMessage(java.lang.String) -> onSendMessage
    boolean onPressToSpeakBtnTouch(android.view.View,android.view.MotionEvent) -> onPressToSpeakBtnTouch
com.easemob.easeui.widget.EaseChatMessageList -> com.easemob.easeui.widget.EaseChatMessageList:
    java.lang.String TAG -> TAG
    android.widget.ListView listView -> listView
    android.support.v4.widget.SwipeRefreshLayout swipeRefreshLayout -> swipeRefreshLayout
    android.content.Context context -> context
    com.easemob.chat.EMConversation conversation -> conversation
    int chatType -> chatType
    java.lang.String toChatUsername -> toChatUsername
    com.easemob.easeui.adapter.EaseMessageAdapter messageAdapter -> messageAdapter
    boolean showUserNick -> showUserNick
    boolean showAvatar -> showAvatar
    android.graphics.drawable.Drawable myBubbleBg -> myBubbleBg
    android.graphics.drawable.Drawable otherBuddleBg -> otherBuddleBg
    void init(android.content.Context) -> init
    void init(java.lang.String,int,com.easemob.easeui.widget.chatrow.EaseCustomChatRowProvider) -> init
    void parseStyle(android.content.Context,android.util.AttributeSet) -> parseStyle
    void refresh() -> refresh
    void refreshSelectLast() -> refreshSelectLast
    void refreshSeekTo(int) -> refreshSeekTo
    android.widget.ListView getListView() -> getListView
    android.support.v4.widget.SwipeRefreshLayout getSwipeRefreshLayout() -> getSwipeRefreshLayout
    com.easemob.chat.EMMessage getItem(int) -> getItem
    void setShowUserNick(boolean) -> setShowUserNick
    boolean isShowUserNick() -> isShowUserNick
    void setItemClickListener(com.easemob.easeui.widget.EaseChatMessageList$MessageListItemClickListener) -> setItemClickListener
    void setCustomChatRowProvider(com.easemob.easeui.widget.chatrow.EaseCustomChatRowProvider) -> setCustomChatRowProvider
com.easemob.easeui.widget.EaseChatMessageList$MessageListItemClickListener -> com.easemob.easeui.widget.EaseChatMessageList$MessageListItemClickListener:
    void onResendClick(com.easemob.chat.EMMessage) -> onResendClick
    boolean onBubbleClick(com.easemob.chat.EMMessage) -> onBubbleClick
    void onBubbleLongClick(com.easemob.chat.EMMessage) -> onBubbleLongClick
    void onUserAvatarClick(java.lang.String) -> onUserAvatarClick
com.easemob.easeui.widget.EaseChatPrimaryMenu -> com.easemob.easeui.widget.EaseChatPrimaryMenu:
    android.widget.EditText editText -> editText
    android.view.View buttonSetModeKeyboard -> buttonSetModeKeyboard
    android.widget.RelativeLayout edittext_layout -> edittext_layout
    android.view.View buttonSetModeVoice -> buttonSetModeVoice
    android.view.View buttonSend -> buttonSend
    android.view.View buttonPressToSpeak -> buttonPressToSpeak
    android.widget.ImageView faceNormal -> faceNormal
    android.widget.ImageView faceChecked -> faceChecked
    android.widget.Button buttonMore -> buttonMore
    android.widget.RelativeLayout faceLayout -> faceLayout
    android.content.Context context -> context
    com.easemob.easeui.widget.EaseVoiceRecorderView voiceRecorderView -> voiceRecorderView
    void init(android.content.Context,android.util.AttributeSet) -> init
    void setPressToSpeakRecorderView(com.easemob.easeui.widget.EaseVoiceRecorderView) -> setPressToSpeakRecorderView
    void onEmojiconInputEvent(java.lang.CharSequence) -> onEmojiconInputEvent
    void onEmojiconDeleteEvent() -> onEmojiconDeleteEvent
    void onClick(android.view.View) -> onClick
    void setModeVoice() -> setModeVoice
    void setModeKeyboard() -> setModeKeyboard
    void toggleFaceImage() -> toggleFaceImage
    void showNormalFaceImage() -> showNormalFaceImage
    void showSelectedFaceImage() -> showSelectedFaceImage
    void onExtendMenuContainerHide() -> onExtendMenuContainerHide
    android.widget.RelativeLayout access$000(com.easemob.easeui.widget.EaseChatPrimaryMenu) -> access$000
    android.widget.Button access$100(com.easemob.easeui.widget.EaseChatPrimaryMenu) -> access$100
    android.view.View access$200(com.easemob.easeui.widget.EaseChatPrimaryMenu) -> access$200
com.easemob.easeui.widget.EaseChatPrimaryMenu$1 -> com.easemob.easeui.widget.EaseChatPrimaryMenu$1:
    com.easemob.easeui.widget.EaseChatPrimaryMenu this$0 -> this$0
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.easemob.easeui.widget.EaseChatPrimaryMenu$2 -> com.easemob.easeui.widget.EaseChatPrimaryMenu$2:
    com.easemob.easeui.widget.EaseChatPrimaryMenu this$0 -> this$0
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.easemob.easeui.widget.EaseChatPrimaryMenu$3 -> com.easemob.easeui.widget.EaseChatPrimaryMenu$3:
    com.easemob.easeui.widget.EaseChatPrimaryMenu this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.easemob.easeui.widget.EaseChatPrimaryMenuBase -> com.easemob.easeui.widget.EaseChatPrimaryMenuBase:
    com.easemob.easeui.widget.EaseChatPrimaryMenuBase$EaseChatPrimaryMenuListener listener -> listener
    android.app.Activity activity -> activity
    android.view.inputmethod.InputMethodManager inputManager -> inputManager
    void init(android.content.Context) -> init
    void setChatPrimaryMenuListener(com.easemob.easeui.widget.EaseChatPrimaryMenuBase$EaseChatPrimaryMenuListener) -> setChatPrimaryMenuListener
    void onEmojiconInputEvent(java.lang.CharSequence) -> onEmojiconInputEvent
    void onEmojiconDeleteEvent() -> onEmojiconDeleteEvent
    void onExtendMenuContainerHide() -> onExtendMenuContainerHide
    void hideKeyboard() -> hideKeyboard
com.easemob.easeui.widget.EaseChatPrimaryMenuBase$EaseChatPrimaryMenuListener -> com.easemob.easeui.widget.EaseChatPrimaryMenuBase$EaseChatPrimaryMenuListener:
    void onSendBtnClicked(java.lang.String) -> onSendBtnClicked
    boolean onPressToSpeakBtnTouch(android.view.View,android.view.MotionEvent) -> onPressToSpeakBtnTouch
    void onToggleVoiceBtnClicked() -> onToggleVoiceBtnClicked
    void onToggleExtendClicked() -> onToggleExtendClicked
    void onToggleEmojiconClicked() -> onToggleEmojiconClicked
    void onEditTextClicked() -> onEditTextClicked
com.easemob.easeui.widget.EaseContactList -> com.easemob.easeui.widget.EaseContactList:
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    android.widget.ListView listView -> listView
    com.easemob.easeui.adapter.EaseContactAdapter adapter -> adapter
    java.util.List contactList -> contactList
    com.easemob.easeui.widget.EaseSidebar sidebar -> sidebar
    int primaryColor -> primaryColor
    int primarySize -> primarySize
    boolean showSiderBar -> showSiderBar
    android.graphics.drawable.Drawable initialLetterBg -> initialLetterBg
    int MSG_UPDATE_LIST -> MSG_UPDATE_LIST
    android.os.Handler handler -> handler
    int initialLetterColor -> initialLetterColor
    void init(android.content.Context,android.util.AttributeSet) -> init
    void init(java.util.List) -> init
    void refresh() -> refresh
    void filter(java.lang.CharSequence) -> filter
    android.widget.ListView getListView() -> getListView
    void setShowSiderBar(boolean) -> setShowSiderBar
com.easemob.easeui.widget.EaseContactList$1 -> com.easemob.easeui.widget.EaseContactList$1:
    com.easemob.easeui.widget.EaseContactList this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.easemob.easeui.widget.EaseConversationList -> com.easemob.easeui.widget.EaseConversationList:
    int primaryColor -> primaryColor
    int secondaryColor -> secondaryColor
    int timeColor -> timeColor
    int primarySize -> primarySize
    int secondarySize -> secondarySize
    float timeSize -> timeSize
    int MSG_REFRESH_ADAPTER_DATA -> MSG_REFRESH_ADAPTER_DATA
    android.content.Context context -> context
    com.easemob.easeui.adapter.EaseConversationAdapater adapter -> adapter
    java.util.List conversationList -> conversationList
    android.os.Handler handler -> handler
    void init(android.content.Context,android.util.AttributeSet) -> init
    void init(java.util.List) -> init
    java.util.List loadConversationsWithRecentChat() -> loadConversationsWithRecentChat
    void sortConversationByLastChatTime(java.util.List) -> sortConversationByLastChatTime
    com.easemob.chat.EMConversation getItem(int) -> getItem
    void refresh() -> refresh
    void filter(java.lang.CharSequence) -> filter
    java.util.List access$000(com.easemob.easeui.widget.EaseConversationList) -> access$000
com.easemob.easeui.widget.EaseConversationList$1 -> com.easemob.easeui.widget.EaseConversationList$1:
    com.easemob.easeui.widget.EaseConversationList this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.easemob.easeui.widget.EaseConversationList$2 -> com.easemob.easeui.widget.EaseConversationList$2:
    com.easemob.easeui.widget.EaseConversationList this$0 -> this$0
    int compare(android.util.Pair,android.util.Pair) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.easemob.easeui.widget.EaseEmojiconMenu -> com.easemob.easeui.widget.EaseEmojiconMenu:
    float emojiconSize -> emojiconSize
    java.util.List reslist -> reslist
    android.content.Context context -> context
    android.support.v4.view.ViewPager expressionViewpager -> expressionViewpager
    int emojiconRows -> emojiconRows
    int emojiconColumns -> emojiconColumns
    int defaultRows -> defaultRows
    int defaultColumns -> defaultColumns
    void init(android.content.Context,android.util.AttributeSet) -> init
    java.util.List getGridChildViews() -> getGridChildViews
    java.util.List getExpressionRes(int) -> getExpressionRes
    android.content.Context access$000(com.easemob.easeui.widget.EaseEmojiconMenu) -> access$000
com.easemob.easeui.widget.EaseEmojiconMenu$1 -> com.easemob.easeui.widget.EaseEmojiconMenu$1:
    com.easemob.easeui.widget.EaseEmojiconMenu$EmojiconGridAdapter val$gridAdapter -> val$gridAdapter
    com.easemob.easeui.widget.EaseEmojiconMenu this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.easemob.easeui.widget.EaseEmojiconMenu$EmojiconGridAdapter -> com.easemob.easeui.widget.EaseEmojiconMenu$EmojiconGridAdapter:
    com.easemob.easeui.widget.EaseEmojiconMenu this$0 -> this$0
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.easemob.easeui.widget.EaseEmojiconMenuBase -> com.easemob.easeui.widget.EaseEmojiconMenuBase:
    com.easemob.easeui.widget.EaseEmojiconMenuBase$EaseEmojiconMenuListener listener -> listener
    void setEmojiconMenuListener(com.easemob.easeui.widget.EaseEmojiconMenuBase$EaseEmojiconMenuListener) -> setEmojiconMenuListener
com.easemob.easeui.widget.EaseEmojiconMenuBase$EaseEmojiconMenuListener -> com.easemob.easeui.widget.EaseEmojiconMenuBase$EaseEmojiconMenuListener:
    void onExpressionClicked(java.lang.CharSequence) -> onExpressionClicked
    void onDeleteImageClicked() -> onDeleteImageClicked
com.easemob.easeui.widget.EaseExpandGridView -> com.easemob.easeui.widget.EaseExpandGridView:
    void onMeasure(int,int) -> onMeasure
com.easemob.easeui.widget.EaseSidebar -> com.easemob.easeui.widget.EaseSidebar:
    android.graphics.Paint paint -> paint
    android.widget.TextView header -> header
    float height -> height
    android.widget.ListView mListView -> mListView
    android.content.Context context -> context
    android.widget.SectionIndexer sectionIndexter -> sectionIndexter
    java.lang.String[] sections -> sections
    void setListView(android.widget.ListView) -> setListView
    void init() -> init
    void onDraw(android.graphics.Canvas) -> onDraw
    int sectionForPoint(float) -> sectionForPoint
    void setHeaderTextAndscroll(android.view.MotionEvent) -> setHeaderTextAndscroll
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.easemob.easeui.widget.EaseSwitchButton -> com.easemob.easeui.widget.EaseSwitchButton:
    android.widget.ImageView openImage -> openImage
    android.widget.ImageView closeImage -> closeImage
    boolean isSwitchOpen() -> isSwitchOpen
    void openSwitch() -> openSwitch
    void closeSwitch() -> closeSwitch
com.easemob.easeui.widget.EaseTitleBar -> com.easemob.easeui.widget.EaseTitleBar:
    android.widget.RelativeLayout leftLayout -> leftLayout
    android.widget.ImageView leftImage -> leftImage
    android.widget.RelativeLayout rightLayout -> rightLayout
    android.widget.ImageView rightImage -> rightImage
    android.widget.TextView titleView -> titleView
    android.widget.RelativeLayout titleLayout -> titleLayout
    void init(android.content.Context,android.util.AttributeSet) -> init
    void parseStyle(android.content.Context,android.util.AttributeSet) -> parseStyle
    void setLeftImageResource(int) -> setLeftImageResource
    void setRightImageResource(int) -> setRightImageResource
    void setLeftLayoutClickListener(android.view.View$OnClickListener) -> setLeftLayoutClickListener
    void setRightLayoutClickListener(android.view.View$OnClickListener) -> setRightLayoutClickListener
    void setLeftLayoutVisibility(int) -> setLeftLayoutVisibility
    void setRightLayoutVisibility(int) -> setRightLayoutVisibility
    void setTitle(java.lang.String) -> setTitle
    void setBackgroundColor(int) -> setBackgroundColor
    android.widget.RelativeLayout getLeftLayout() -> getLeftLayout
    android.widget.RelativeLayout getRightLayout() -> getRightLayout
com.easemob.easeui.widget.EaseVoiceRecorderView -> com.easemob.easeui.widget.EaseVoiceRecorderView:
    android.content.Context context -> context
    android.view.LayoutInflater inflater -> inflater
    android.graphics.drawable.Drawable[] micImages -> micImages
    com.easemob.easeui.model.EaseVoiceRecorder voiceRecorder -> voiceRecorder
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    android.widget.ImageView micImage -> micImage
    android.widget.TextView recordingHint -> recordingHint
    android.os.Handler micImageHandler -> micImageHandler
    void init(android.content.Context) -> init
    boolean onPressToSpeakBtnTouch(android.view.View,android.view.MotionEvent,com.easemob.easeui.widget.EaseVoiceRecorderView$EaseVoiceRecorderCallback) -> onPressToSpeakBtnTouch
    void startRecording() -> startRecording
    void showReleaseToCancelHint() -> showReleaseToCancelHint
    void showMoveUpToCancelHint() -> showMoveUpToCancelHint
    void discardRecording() -> discardRecording
    int stopRecoding() -> stopRecoding
    java.lang.String getVoiceFilePath() -> getVoiceFilePath
    java.lang.String getVoiceFileName() -> getVoiceFileName
    boolean isRecording() -> isRecording
com.easemob.easeui.widget.EaseVoiceRecorderView$1 -> com.easemob.easeui.widget.EaseVoiceRecorderView$1:
    com.easemob.easeui.widget.EaseVoiceRecorderView this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.easemob.easeui.widget.EaseVoiceRecorderView$EaseVoiceRecorderCallback -> com.easemob.easeui.widget.EaseVoiceRecorderView$EaseVoiceRecorderCallback:
    void onVoiceRecordComplete(java.lang.String,int) -> onVoiceRecordComplete
com.easemob.easeui.widget.chatrow.EaseChatRow -> com.easemob.easeui.widget.chatrow.EaseChatRow:
    java.lang.String TAG -> TAG
    android.view.LayoutInflater inflater -> inflater
    android.content.Context context -> context
    android.widget.BaseAdapter adapter -> adapter
    com.easemob.chat.EMMessage message -> message
    int position -> position
    android.widget.TextView timeStampView -> timeStampView
    android.widget.ImageView userAvatarView -> userAvatarView
    android.view.View bubbleLayout -> bubbleLayout
    android.widget.TextView usernickView -> usernickView
    android.widget.TextView percentageView -> percentageView
    android.widget.ProgressBar progressBar -> progressBar
    android.widget.ImageView statusView -> statusView
    android.app.Activity activity -> activity
    android.widget.TextView ackedView -> ackedView
    android.widget.TextView deliveredView -> deliveredView
    com.easemob.EMCallBack messageSendCallback -> messageSendCallback
    com.easemob.EMCallBack messageReceiveCallback -> messageReceiveCallback
    com.easemob.easeui.widget.EaseChatMessageList$MessageListItemClickListener itemClickListener -> itemClickListener
    void initView() -> initView
    void setUpView(com.easemob.chat.EMMessage,int,com.easemob.easeui.widget.EaseChatMessageList$MessageListItemClickListener) -> setUpView
    void setUpBaseView() -> setUpBaseView
    void setMessageSendCallback() -> setMessageSendCallback
    void setMessageReceiveCallback() -> setMessageReceiveCallback
    void setClickListener() -> setClickListener
    void updateView() -> updateView
    void onInflatView() -> onInflatView
    void onFindViewById() -> onFindViewById
    void onUpdateView() -> onUpdateView
    void onSetUpView() -> onSetUpView
    void onBubbleClick() -> onBubbleClick
com.easemob.easeui.widget.chatrow.EaseChatRow$1 -> com.easemob.easeui.widget.chatrow.EaseChatRow$1:
    com.easemob.easeui.widget.chatrow.EaseChatRow this$0 -> this$0
    void onSuccess() -> onSuccess
    void onProgress(int,java.lang.String) -> onProgress
    void onError(int,java.lang.String) -> onError
com.easemob.easeui.widget.chatrow.EaseChatRow$1$1 -> com.easemob.easeui.widget.chatrow.EaseChatRow$1$1:
    int val$progress -> val$progress
    com.easemob.easeui.widget.chatrow.EaseChatRow$1 this$1 -> this$1
    void run() -> run
com.easemob.easeui.widget.chatrow.EaseChatRow$2 -> com.easemob.easeui.widget.chatrow.EaseChatRow$2:
    com.easemob.easeui.widget.chatrow.EaseChatRow this$0 -> this$0
    void onSuccess() -> onSuccess
    void onProgress(int,java.lang.String) -> onProgress
    void onError(int,java.lang.String) -> onError
com.easemob.easeui.widget.chatrow.EaseChatRow$2$1 -> com.easemob.easeui.widget.chatrow.EaseChatRow$2$1:
    int val$progress -> val$progress
    com.easemob.easeui.widget.chatrow.EaseChatRow$2 this$1 -> this$1
    void run() -> run
com.easemob.easeui.widget.chatrow.EaseChatRow$3 -> com.easemob.easeui.widget.chatrow.EaseChatRow$3:
    com.easemob.easeui.widget.chatrow.EaseChatRow this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.easemob.easeui.widget.chatrow.EaseChatRow$4 -> com.easemob.easeui.widget.chatrow.EaseChatRow$4:
    com.easemob.easeui.widget.chatrow.EaseChatRow this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
com.easemob.easeui.widget.chatrow.EaseChatRow$5 -> com.easemob.easeui.widget.chatrow.EaseChatRow$5:
    com.easemob.easeui.widget.chatrow.EaseChatRow this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.easemob.easeui.widget.chatrow.EaseChatRow$6 -> com.easemob.easeui.widget.chatrow.EaseChatRow$6:
    com.easemob.easeui.widget.chatrow.EaseChatRow this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.easemob.easeui.widget.chatrow.EaseChatRow$7 -> com.easemob.easeui.widget.chatrow.EaseChatRow$7:
    com.easemob.easeui.widget.chatrow.EaseChatRow this$0 -> this$0
    void run() -> run
com.easemob.easeui.widget.chatrow.EaseChatRowFile -> com.easemob.easeui.widget.chatrow.EaseChatRowFile:
    android.widget.TextView fileNameView -> fileNameView
    android.widget.TextView fileSizeView -> fileSizeView
    android.widget.TextView fileStateView -> fileStateView
    com.easemob.EMCallBack sendfileCallBack -> sendfileCallBack
    boolean isNotifyProcessed -> isNotifyProcessed
    com.easemob.chat.NormalFileMessageBody fileMessageBody -> fileMessageBody
    void onInflatView() -> onInflatView
    void onFindViewById() -> onFindViewById
    void onSetUpView() -> onSetUpView
    void handleSendMessage() -> handleSendMessage
    void onUpdateView() -> onUpdateView
    void onBubbleClick() -> onBubbleClick
com.easemob.easeui.widget.chatrow.EaseChatRowFile$1 -> com.easemob.easeui.widget.chatrow.EaseChatRowFile$1:
    int[] $SwitchMap$com$easemob$chat$EMMessage$Status -> $SwitchMap$com$easemob$chat$EMMessage$Status
com.easemob.easeui.widget.chatrow.EaseChatRowImage -> com.easemob.easeui.widget.chatrow.EaseChatRowImage:
    android.widget.ImageView imageView -> imageView
    com.easemob.chat.ImageMessageBody imgBody -> imgBody
    void onInflatView() -> onInflatView
    void onFindViewById() -> onFindViewById
    void onSetUpView() -> onSetUpView
    void onUpdateView() -> onUpdateView
    void onBubbleClick() -> onBubbleClick
    boolean showImageView(java.lang.String,android.widget.ImageView,java.lang.String,com.easemob.chat.EMMessage) -> showImageView
com.easemob.easeui.widget.chatrow.EaseChatRowImage$1 -> com.easemob.easeui.widget.chatrow.EaseChatRowImage$1:
    java.lang.String val$thumbernailPath -> val$thumbernailPath
    com.easemob.chat.EMMessage val$message -> val$message
    java.lang.String val$localFullSizePath -> val$localFullSizePath
    android.widget.ImageView val$iv -> val$iv
    com.easemob.easeui.widget.chatrow.EaseChatRowImage this$0 -> this$0
    android.graphics.Bitmap doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.easemob.easeui.widget.chatrow.EaseChatRowImage$1$1 -> com.easemob.easeui.widget.chatrow.EaseChatRowImage$1$1:
    com.easemob.easeui.widget.chatrow.EaseChatRowImage$1 this$1 -> this$1
    void run() -> run
com.easemob.easeui.widget.chatrow.EaseChatRowLocation -> com.easemob.easeui.widget.chatrow.EaseChatRowLocation:
    android.widget.TextView locationView -> locationView
    com.easemob.chat.LocationMessageBody locBody -> locBody
    void onInflatView() -> onInflatView
    void onFindViewById() -> onFindViewById
    void onSetUpView() -> onSetUpView
    void onUpdateView() -> onUpdateView
    void onBubbleClick() -> onBubbleClick
com.easemob.easeui.widget.chatrow.EaseChatRowLocation$1 -> com.easemob.easeui.widget.chatrow.EaseChatRowLocation$1:
    int[] $SwitchMap$com$easemob$chat$EMMessage$Status -> $SwitchMap$com$easemob$chat$EMMessage$Status
com.easemob.easeui.widget.chatrow.EaseChatRowLocation$MapClickListener -> com.easemob.easeui.widget.chatrow.EaseChatRowLocation$MapClickListener:
    com.easemob.util.LatLng location -> location
    java.lang.String address -> address
    com.easemob.easeui.widget.chatrow.EaseChatRowLocation this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.easemob.easeui.widget.chatrow.EaseChatRowText -> com.easemob.easeui.widget.chatrow.EaseChatRowText:
    android.widget.TextView contentView -> contentView
    void onInflatView() -> onInflatView
    void onFindViewById() -> onFindViewById
    void onSetUpView() -> onSetUpView
    void onUpdateView() -> onUpdateView
    void onBubbleClick() -> onBubbleClick
com.easemob.easeui.widget.chatrow.EaseChatRowText$1 -> com.easemob.easeui.widget.chatrow.EaseChatRowText$1:
    int[] $SwitchMap$com$easemob$chat$EMMessage$Status -> $SwitchMap$com$easemob$chat$EMMessage$Status
com.easemob.easeui.widget.chatrow.EaseChatRowVideo -> com.easemob.easeui.widget.chatrow.EaseChatRowVideo:
    android.widget.ImageView imageView -> imageView
    android.widget.TextView sizeView -> sizeView
    android.widget.TextView timeLengthView -> timeLengthView
    android.widget.ImageView playView -> playView
    void onInflatView() -> onInflatView
    void onFindViewById() -> onFindViewById
    void onSetUpView() -> onSetUpView
    void onBubbleClick() -> onBubbleClick
    void showVideoThumbView(java.lang.String,android.widget.ImageView,java.lang.String,com.easemob.chat.EMMessage) -> showVideoThumbView
com.easemob.easeui.widget.chatrow.EaseChatRowVideo$1 -> com.easemob.easeui.widget.chatrow.EaseChatRowVideo$1:
    java.lang.String val$localThumb -> val$localThumb
    android.widget.ImageView val$iv -> val$iv
    com.easemob.chat.EMMessage val$message -> val$message
    com.easemob.easeui.widget.chatrow.EaseChatRowVideo this$0 -> this$0
    android.graphics.Bitmap doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.easemob.easeui.widget.chatrow.EaseChatRowVoice -> com.easemob.easeui.widget.chatrow.EaseChatRowVoice:
    android.widget.ImageView voiceImageView -> voiceImageView
    android.widget.TextView voiceLengthView -> voiceLengthView
    android.widget.ImageView readStutausView -> readStutausView
    void onInflatView() -> onInflatView
    void onFindViewById() -> onFindViewById
    void onSetUpView() -> onSetUpView
    void onUpdateView() -> onUpdateView
    void onBubbleClick() -> onBubbleClick
com.easemob.easeui.widget.chatrow.EaseChatRowVoicePlayClickListener -> com.easemob.easeui.widget.chatrow.EaseChatRowVoicePlayClickListener:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMMessage message -> message
    com.easemob.chat.VoiceMessageBody voiceBody -> voiceBody
    android.widget.ImageView voiceIconView -> voiceIconView
    android.graphics.drawable.AnimationDrawable voiceAnimation -> voiceAnimation
    android.media.MediaPlayer mediaPlayer -> mediaPlayer
    android.widget.ImageView iv_read_status -> iv_read_status
    android.app.Activity activity -> activity
    com.easemob.chat.EMMessage$ChatType chatType -> chatType
    android.widget.BaseAdapter adapter -> adapter
    boolean isPlaying -> isPlaying
    com.easemob.easeui.widget.chatrow.EaseChatRowVoicePlayClickListener currentPlayListener -> currentPlayListener
    java.lang.String playMsgId -> playMsgId
    void stopPlayVoice() -> stopPlayVoice
    void playVoice(java.lang.String) -> playVoice
    void showAnimation() -> showAnimation
    void onClick(android.view.View) -> onClick
    android.widget.BaseAdapter access$000(com.easemob.easeui.widget.chatrow.EaseChatRowVoicePlayClickListener) -> access$000
com.easemob.easeui.widget.chatrow.EaseChatRowVoicePlayClickListener$1 -> com.easemob.easeui.widget.chatrow.EaseChatRowVoicePlayClickListener$1:
    com.easemob.easeui.widget.chatrow.EaseChatRowVoicePlayClickListener this$0 -> this$0
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.easemob.easeui.widget.chatrow.EaseChatRowVoicePlayClickListener$2 -> com.easemob.easeui.widget.chatrow.EaseChatRowVoicePlayClickListener$2:
    com.easemob.easeui.widget.chatrow.EaseChatRowVoicePlayClickListener this$0 -> this$0
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.easemob.easeui.widget.chatrow.EaseCustomChatRowProvider -> com.easemob.easeui.widget.chatrow.EaseCustomChatRowProvider:
    int getCustomChatRowTypeCount() -> getCustomChatRowTypeCount
    int getCustomChatRowType(com.easemob.chat.EMMessage) -> getCustomChatRowType
    com.easemob.easeui.widget.chatrow.EaseChatRow getCustomChatRow(com.easemob.chat.EMMessage,int,android.widget.BaseAdapter) -> getCustomChatRow
com.easemob.easeui.widget.photoview.Compat -> com.easemob.easeui.widget.photoview.Compat:
    int SIXTY_FPS_INTERVAL -> SIXTY_FPS_INTERVAL
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
com.easemob.easeui.widget.photoview.EasePhotoView -> com.easemob.easeui.widget.photoview.EasePhotoView:
    com.easemob.easeui.widget.photoview.PhotoViewAttacher mAttacher -> mAttacher
    android.widget.ImageView$ScaleType mPendingScaleType -> mPendingScaleType
    boolean canZoom() -> canZoom
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    float getMinScale() -> getMinScale
    float getMidScale() -> getMidScale
    float getMaxScale() -> getMaxScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMidScale(float) -> setMidScale
    void setMaxScale(float) -> setMaxScale
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    void setOnMatrixChangeListener(com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnPhotoTapListener(com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void zoomTo(float,float,float) -> zoomTo
    void onDetachedFromWindow() -> onDetachedFromWindow
com.easemob.easeui.widget.photoview.IPhotoView -> com.easemob.easeui.widget.photoview.IPhotoView:
    boolean canZoom() -> canZoom
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    float getMinScale() -> getMinScale
    float getMidScale() -> getMidScale
    float getMaxScale() -> getMaxScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMidScale(float) -> setMidScale
    void setMaxScale(float) -> setMaxScale
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnMatrixChangeListener(com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnPhotoTapListener(com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void zoomTo(float,float,float) -> zoomTo
com.easemob.easeui.widget.photoview.PhotoViewAttacher -> com.easemob.easeui.widget.photoview.PhotoViewAttacher:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean DEBUG -> DEBUG
    int EDGE_NONE -> EDGE_NONE
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_BOTH -> EDGE_BOTH
    float DEFAULT_MAX_SCALE -> DEFAULT_MAX_SCALE
    float DEFAULT_MIN_SCALE -> DEFAULT_MIN_SCALE
    float mMinScale -> mMinScale
    float mMaxScale -> mMaxScale
    boolean mAllowParentInterceptOnEdge -> mAllowParentInterceptOnEdge
    java.lang.ref.WeakReference mImageView -> mImageView
    android.view.ViewTreeObserver mViewTreeObserver -> mViewTreeObserver
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    com.easemob.easeui.widget.photoview.VersionedGestureDetector mScaleDragDetector -> mScaleDragDetector
    android.graphics.Matrix mBaseMatrix -> mBaseMatrix
    android.graphics.Matrix mDrawMatrix -> mDrawMatrix
    android.graphics.Matrix mSuppMatrix -> mSuppMatrix
    android.graphics.RectF mDisplayRect -> mDisplayRect
    float[] mMatrixValues -> mMatrixValues
    com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnMatrixChangedListener mMatrixChangeListener -> mMatrixChangeListener
    com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnPhotoTapListener mPhotoTapListener -> mPhotoTapListener
    com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnViewTapListener mViewTapListener -> mViewTapListener
    android.view.View$OnLongClickListener mLongClickListener -> mLongClickListener
    int mIvTop -> mIvTop
    int mIvRight -> mIvRight
    int mIvBottom -> mIvBottom
    int mIvLeft -> mIvLeft
    com.easemob.easeui.widget.photoview.PhotoViewAttacher$FlingRunnable mCurrentFlingRunnable -> mCurrentFlingRunnable
    int mScrollEdge -> mScrollEdge
    boolean mZoomEnabled -> mZoomEnabled
    android.widget.ImageView$ScaleType mScaleType -> mScaleType
    void checkZoomLevels(float,float) -> checkZoomLevels
    boolean hasDrawable(android.widget.ImageView) -> hasDrawable
    boolean isSupportedScaleType(android.widget.ImageView$ScaleType) -> isSupportedScaleType
    void setImageViewScaleTypeMatrix(android.widget.ImageView) -> setImageViewScaleTypeMatrix
    boolean canZoom() -> canZoom
    void cleanup() -> cleanup
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    android.widget.ImageView getImageView() -> getImageView
    float getMinScale() -> getMinScale
    float getMaxScale() -> getMaxScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    void onDrag(float,float) -> onDrag
    void onFling(float,float,float,float) -> onFling
    void onGlobalLayout() -> onGlobalLayout
    void onScale(float,float,float) -> onScale
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMaxScale(float) -> setMaxScale
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnMatrixChangeListener(com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnPhotoTapListener(com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void update() -> update
    void zoomTo(float,float,float) -> zoomTo
    android.graphics.Matrix getDisplayMatrix() -> getDisplayMatrix
    void cancelFling() -> cancelFling
    void checkAndDisplayMatrix() -> checkAndDisplayMatrix
    void checkImageViewScaleType() -> checkImageViewScaleType
    void checkMatrixBounds() -> checkMatrixBounds
    android.graphics.RectF getDisplayRect(android.graphics.Matrix) -> getDisplayRect
    float getValue(android.graphics.Matrix,int) -> getValue
    void resetMatrix() -> resetMatrix
    void setImageViewMatrix(android.graphics.Matrix) -> setImageViewMatrix
    void updateBaseMatrix(android.graphics.drawable.Drawable) -> updateBaseMatrix
    float getMidScale() -> getMidScale
    void setMidScale(float) -> setMidScale
    android.view.View$OnLongClickListener access$000(com.easemob.easeui.widget.photoview.PhotoViewAttacher) -> access$000
    java.lang.ref.WeakReference access$100(com.easemob.easeui.widget.photoview.PhotoViewAttacher) -> access$100
    android.graphics.Matrix access$200(com.easemob.easeui.widget.photoview.PhotoViewAttacher) -> access$200
    void access$300(com.easemob.easeui.widget.photoview.PhotoViewAttacher) -> access$300
    void access$400(com.easemob.easeui.widget.photoview.PhotoViewAttacher,android.graphics.Matrix) -> access$400
com.easemob.easeui.widget.photoview.PhotoViewAttacher$1 -> com.easemob.easeui.widget.photoview.PhotoViewAttacher$1:
    com.easemob.easeui.widget.photoview.PhotoViewAttacher this$0 -> this$0
    void onLongPress(android.view.MotionEvent) -> onLongPress
com.easemob.easeui.widget.photoview.PhotoViewAttacher$2 -> com.easemob.easeui.widget.photoview.PhotoViewAttacher$2:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
com.easemob.easeui.widget.photoview.PhotoViewAttacher$AnimatedZoomRunnable -> com.easemob.easeui.widget.photoview.PhotoViewAttacher$AnimatedZoomRunnable:
    float ANIMATION_SCALE_PER_ITERATION_IN -> ANIMATION_SCALE_PER_ITERATION_IN
    float ANIMATION_SCALE_PER_ITERATION_OUT -> ANIMATION_SCALE_PER_ITERATION_OUT
    float mFocalX -> mFocalX
    float mFocalY -> mFocalY
    float mTargetZoom -> mTargetZoom
    float mDeltaScale -> mDeltaScale
    com.easemob.easeui.widget.photoview.PhotoViewAttacher this$0 -> this$0
    void run() -> run
com.easemob.easeui.widget.photoview.PhotoViewAttacher$FlingRunnable -> com.easemob.easeui.widget.photoview.PhotoViewAttacher$FlingRunnable:
    com.easemob.easeui.widget.photoview.ScrollerProxy mScroller -> mScroller
    int mCurrentX -> mCurrentX
    int mCurrentY -> mCurrentY
    com.easemob.easeui.widget.photoview.PhotoViewAttacher this$0 -> this$0
    void cancelFling() -> cancelFling
    void fling(int,int,int,int) -> fling
    void run() -> run
com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnMatrixChangedListener -> com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnMatrixChangedListener:
    void onMatrixChanged(android.graphics.RectF) -> onMatrixChanged
com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnPhotoTapListener -> com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnPhotoTapListener:
    void onPhotoTap(android.view.View,float,float) -> onPhotoTap
com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnViewTapListener -> com.easemob.easeui.widget.photoview.PhotoViewAttacher$OnViewTapListener:
    void onViewTap(android.view.View,float,float) -> onViewTap
com.easemob.easeui.widget.photoview.SDK16 -> com.easemob.easeui.widget.photoview.SDK16:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
com.easemob.easeui.widget.photoview.ScrollerProxy -> com.easemob.easeui.widget.photoview.ScrollerProxy:
    com.easemob.easeui.widget.photoview.ScrollerProxy getScroller(android.content.Context) -> getScroller
    boolean computeScrollOffset() -> computeScrollOffset
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void forceFinished(boolean) -> forceFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
com.easemob.easeui.widget.photoview.ScrollerProxy$GingerScroller -> com.easemob.easeui.widget.photoview.ScrollerProxy$GingerScroller:
    android.widget.OverScroller mScroller -> mScroller
    boolean computeScrollOffset() -> computeScrollOffset
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void forceFinished(boolean) -> forceFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
com.easemob.easeui.widget.photoview.ScrollerProxy$PreGingerScroller -> com.easemob.easeui.widget.photoview.ScrollerProxy$PreGingerScroller:
    android.widget.Scroller mScroller -> mScroller
    boolean computeScrollOffset() -> computeScrollOffset
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void forceFinished(boolean) -> forceFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
com.easemob.easeui.widget.photoview.VersionedGestureDetector -> com.easemob.easeui.widget.photoview.VersionedGestureDetector:
    java.lang.String LOG_TAG -> LOG_TAG
    com.easemob.easeui.widget.photoview.VersionedGestureDetector$OnGestureListener mListener -> mListener
    com.easemob.easeui.widget.photoview.VersionedGestureDetector newInstance(android.content.Context,com.easemob.easeui.widget.photoview.VersionedGestureDetector$OnGestureListener) -> newInstance
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isScaling() -> isScaling
com.easemob.easeui.widget.photoview.VersionedGestureDetector$CupcakeDetector -> com.easemob.easeui.widget.photoview.VersionedGestureDetector$CupcakeDetector:
    float mLastTouchX -> mLastTouchX
    float mLastTouchY -> mLastTouchY
    float mTouchSlop -> mTouchSlop
    float mMinimumVelocity -> mMinimumVelocity
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    boolean mIsDragging -> mIsDragging
    float getActiveX(android.view.MotionEvent) -> getActiveX
    float getActiveY(android.view.MotionEvent) -> getActiveY
    boolean isScaling() -> isScaling
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.easemob.easeui.widget.photoview.VersionedGestureDetector$EclairDetector -> com.easemob.easeui.widget.photoview.VersionedGestureDetector$EclairDetector:
    int INVALID_POINTER_ID -> INVALID_POINTER_ID
    int mActivePointerId -> mActivePointerId
    int mActivePointerIndex -> mActivePointerIndex
    float getActiveX(android.view.MotionEvent) -> getActiveX
    float getActiveY(android.view.MotionEvent) -> getActiveY
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.easemob.easeui.widget.photoview.VersionedGestureDetector$FroyoDetector -> com.easemob.easeui.widget.photoview.VersionedGestureDetector$FroyoDetector:
    android.view.ScaleGestureDetector mDetector -> mDetector
    android.view.ScaleGestureDetector$OnScaleGestureListener mScaleListener -> mScaleListener
    boolean isScaling() -> isScaling
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.easemob.easeui.widget.photoview.VersionedGestureDetector$FroyoDetector$1 -> com.easemob.easeui.widget.photoview.VersionedGestureDetector$FroyoDetector$1:
    com.easemob.easeui.widget.photoview.VersionedGestureDetector$FroyoDetector this$0 -> this$0
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
com.easemob.easeui.widget.photoview.VersionedGestureDetector$OnGestureListener -> com.easemob.easeui.widget.photoview.VersionedGestureDetector$OnGestureListener:
    void onDrag(float,float) -> onDrag
    void onFling(float,float,float,float) -> onFling
    void onScale(float,float,float) -> onScale
com.easemob.exceptions.EMAuthenticationException -> com.easemob.exceptions.EMAuthenticationException:
    long serialVersionUID -> serialVersionUID
com.easemob.exceptions.EMDuplicateResourceException -> com.easemob.exceptions.EMDuplicateResourceException:
    long serialVersionUID -> serialVersionUID
com.easemob.exceptions.EMExceptionUtils -> com.easemob.exceptions.EMExceptionUtils:
    int fromExceptionToErrorCode(java.lang.Exception) -> fromExceptionToErrorCode
com.easemob.exceptions.EMNetworkUnconnectedException -> com.easemob.exceptions.EMNetworkUnconnectedException:
    long serialVersionUID -> serialVersionUID
com.easemob.exceptions.EMNoActiveCallException -> com.easemob.exceptions.EMNoActiveCallException:
    long serialVersionUID -> serialVersionUID
com.easemob.exceptions.EMPermissionException -> com.easemob.exceptions.EMPermissionException:
    long serialVersionUID -> serialVersionUID
com.easemob.exceptions.EMResourceNotExistException -> com.easemob.exceptions.EMResourceNotExistException:
    long serialVersionUID -> serialVersionUID
com.easemob.exceptions.EMServiceNotReadyException -> com.easemob.exceptions.EMServiceNotReadyException:
    long serialVersionUID -> serialVersionUID
com.easemob.exceptions.EaseMobException -> com.easemob.exceptions.EaseMobException:
    int errorCode -> errorCode
    long serialVersionUID -> serialVersionUID
    int getErrorCode() -> getErrorCode
    void setErrorCode(int) -> setErrorCode
com.easemob.media.AVNative -> com.easemob.media.AVNative:
    java.lang.String TAG -> TAG
    int nativeVoeClient_Register(com.easemob.media.IGxStatusCallback,android.content.Context,int,java.lang.String,int,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean,int) -> nativeVoeClient_Register
    int nativeVoeClient_FullDuplexSpeech(java.lang.String) -> nativeVoeClient_FullDuplexSpeech
    int nativeVoeClient_Stop(java.lang.String) -> nativeVoeClient_Stop
    int nativeVoeClient_Release(java.lang.String) -> nativeVoeClient_Release
    int nativeVoeClient_GetAudioLevel(java.lang.String) -> nativeVoeClient_GetAudioLevel
    int nativeVoeClient_StartRecodeMic(com.easemob.media.IGxStatusCallback,android.content.Context,java.lang.String,java.lang.String) -> nativeVoeClient_StartRecodeMic
    int nativeVoeClient_StopRecodeMic(java.lang.String) -> nativeVoeClient_StopRecodeMic
    int nativeVoeClient_GetAudioOutputLevel(java.lang.String) -> nativeVoeClient_GetAudioOutputLevel
    int nativeTakePicture(java.lang.String) -> nativeTakePicture
    int nativeProcessPcm(byte[],int,java.lang.String) -> nativeProcessPcm
    int register(com.easemob.media.IGxStatusCallback,android.content.Context,int,java.lang.String,int,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean,int) -> register
    int unregister(java.lang.String) -> unregister
    int stop(java.lang.String) -> stop
    int setFullDuplexSpeech(java.lang.String) -> setFullDuplexSpeech
    int GetAudioInputLevel(java.lang.String) -> GetAudioInputLevel
    int GetAudioOutputLevel(java.lang.String) -> GetAudioOutputLevel
    int nativeStartVideo(com.easemob.media.IGxStatusCallback,int,int,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int,int,int,boolean) -> nativeStartVideo
    void nativeStopVideo() -> nativeStopVideo
    int nativeProcessYUV(int,int,byte[]) -> nativeProcessYUV
    void nativeInit(com.easemob.media.EMVideoCallBridge) -> nativeInit
    void nativeQuit() -> nativeQuit
    void nativePause() -> nativePause
    void nativeResume() -> nativeResume
    void onNativeResize(int,int,int) -> onNativeResize
    void onNativeKeyDown(int) -> onNativeKeyDown
    void onNativeKeyUp(int) -> onNativeKeyUp
    void onNativeTouch(int,int,int,float,float,float) -> onNativeTouch
    void onNativeAccel(float,float,float) -> onNativeAccel
    int nativeGetVideoTimedelay() -> nativeGetVideoTimedelay
    int nativeGetVideoFramerate() -> nativeGetVideoFramerate
    int nativeGetVideoLostcnt() -> nativeGetVideoLostcnt
    int nativeGetVideoWidth() -> nativeGetVideoWidth
    int nativeGetVideoHeight() -> nativeGetVideoHeight
    int nativeGetRemoteBitrate() -> nativeGetRemoteBitrate
    int nativeGetLocalBitrate() -> nativeGetLocalBitrate
com.easemob.media.AudioManagerAndroid -> com.easemob.media.AudioManagerAndroid:
    int DEFAULT_SAMPLING_RATE -> DEFAULT_SAMPLING_RATE
    int DEFAULT_FRAMES_PER_BUFFER -> DEFAULT_FRAMES_PER_BUFFER
    int mNativeOutputSampleRate -> mNativeOutputSampleRate
    boolean mAudioLowLatencySupported -> mAudioLowLatencySupported
    int mAudioLowLatencyOutputFrameSize -> mAudioLowLatencyOutputFrameSize
    int getNativeOutputSampleRate() -> getNativeOutputSampleRate
    boolean isAudioLowLatencySupported() -> isAudioLowLatencySupported
    int getAudioLowLatencyOutputFrameSize() -> getAudioLowLatencyOutputFrameSize
com.easemob.media.EIce -> com.easemob.media.EIce:
    java.lang.String TAG -> TAG
    long nativeHandle -> nativeHandle
    java.lang.String localContent -> localContent
    java.lang.String negoResult -> negoResult
    java.lang.Thread queryThread -> queryThread
    boolean stopReq -> stopReq
    com.easemob.media.EIce$LogListener sLogListener -> sLogListener
    void nativeInitEIce() -> nativeInitEIce
    long nativeNewCaller(java.lang.String) -> nativeNewCaller
    long nativeNewCallee(java.lang.String,java.lang.String) -> nativeNewCallee
    java.lang.String nativeGetLocalContent(long) -> nativeGetLocalContent
    void nativeCallerNego(long,java.lang.String) -> nativeCallerNego
    void nativeFreeCall(long) -> nativeFreeCall
    java.lang.String nativeGetNegoResult(long) -> nativeGetNegoResult
    com.easemob.media.EIce newCaller(java.lang.String) -> newCaller
    com.easemob.media.EIce newCallee(java.lang.String,java.lang.String) -> newCallee
    java.lang.String getLocalContent() -> getLocalContent
    void startQueryResult(com.easemob.media.EIce$EIceListener) -> startQueryResult
    void callerNego(java.lang.String,com.easemob.media.EIce$EIceListener) -> callerNego
    void calleeNego(com.easemob.media.EIce$EIceListener) -> calleeNego
    java.lang.String waitforNegoResult() -> waitforNegoResult
    java.lang.String getNegoResult() -> getNegoResult
    void freeCall() -> freeCall
    void registerLogListener(com.easemob.media.EIce$LogListener) -> registerLogListener
    void callbackLog(int,java.lang.String) -> callbackLog
com.easemob.media.EIce$1 -> com.easemob.media.EIce$1:
    com.easemob.media.EIce this$0 -> this$0
    com.easemob.media.EIce$EIceListener val$listener -> val$listener
    void run() -> run
com.easemob.media.EIce$EIceListener -> com.easemob.media.EIce$EIceListener:
    void onNegoResult(java.lang.String) -> onNegoResult
com.easemob.media.EIce$LogListener -> com.easemob.media.EIce$LogListener:
    void onLog(int,java.lang.String) -> onLog
com.easemob.media.EMVideoCallBridge -> com.easemob.media.EMVideoCallBridge:
    com.easemob.media.EMVideoCallBridge instance -> instance
    com.easemob.media.EMVideoCallBridge getInstance() -> getInstance
    boolean createGLContext(int,int) -> createGLContext
    void flipBuffers() -> flipBuffers
    void setActivityTitle(java.lang.String) -> setActivityTitle
    void updateStatus(int) -> updateStatus
com.easemob.media.IGxStatusCallback -> com.easemob.media.IGxStatusCallback:
    void updateStatus(int) -> updateStatus
com.easemob.media.WebRtcAudioRecord -> com.easemob.media.WebRtcAudioRecord:
    android.media.AudioRecord _audioRecord -> _audioRecord
    android.content.Context _context -> _context
    java.nio.ByteBuffer _recBuffer -> _recBuffer
    byte[] _tempBufRec -> _tempBufRec
    java.util.concurrent.locks.ReentrantLock _recLock -> _recLock
    boolean _doRecInit -> _doRecInit
    boolean _isRecording -> _isRecording
    int _bufferedRecSamples -> _bufferedRecSamples
    java.lang.String logTag -> logTag
    int InitRecording(int,int) -> InitRecording
    int StartRecording() -> StartRecording
    int StopRecording() -> StopRecording
    int RecordAudio(int) -> RecordAudio
    void DoLog(java.lang.String) -> DoLog
    void DoLogErr(java.lang.String) -> DoLogErr
com.easemob.media.WebRtcAudioTrack -> com.easemob.media.WebRtcAudioTrack:
    android.media.AudioTrack _audioTrack -> _audioTrack
    android.content.Context _context -> _context
    android.media.AudioManager _audioManager -> _audioManager
    java.nio.ByteBuffer _playBuffer -> _playBuffer
    byte[] _tempBufPlay -> _tempBufPlay
    java.util.concurrent.locks.ReentrantLock _playLock -> _playLock
    boolean _doPlayInit -> _doPlayInit
    boolean _doRecInit -> _doRecInit
    boolean _isRecording -> _isRecording
    boolean _isPlaying -> _isPlaying
    int _bufferedPlaySamples -> _bufferedPlaySamples
    int _playPosition -> _playPosition
    java.lang.String logTag -> logTag
    int InitPlayback(int) -> InitPlayback
    int StartPlayback() -> StartPlayback
    int StopPlayback() -> StopPlayback
    int PlayAudio(int) -> PlayAudio
    int SetPlayoutSpeaker(boolean) -> SetPlayoutSpeaker
    int SetPlayoutVolume(int) -> SetPlayoutVolume
    int GetPlayoutVolume() -> GetPlayoutVolume
    void DoLog(java.lang.String) -> DoLog
    void DoLogErr(java.lang.String) -> DoLogErr
com.easemob.util.CryptoUtils -> com.easemob.util.CryptoUtils:
    javax.crypto.Cipher cipher -> cipher
    javax.crypto.Cipher decipher -> decipher
    int ALGORIGHM_DES -> ALGORIGHM_DES
    int ALGORIGHM_AES -> ALGORIGHM_AES
    byte[] keyBytes -> keyBytes
    java.lang.String key -> key
    java.lang.String HEXES -> HEXES
    void init(int) -> init
    void initDES() -> initDES
    void initAES() -> initAES
    java.lang.String encryptBase64String(java.lang.String) -> encryptBase64String
    java.lang.String decryptBase64String(java.lang.String) -> decryptBase64String
    byte[] encrypt(java.lang.String) -> encrypt
    byte[] encrypt(byte[]) -> encrypt
    byte[] decrypt(byte[]) -> decrypt
    java.lang.String getHex(byte[]) -> getHex
com.easemob.util.DateUtils -> com.easemob.util.DateUtils:
    long INTERVAL_IN_MILLISECONDS -> INTERVAL_IN_MILLISECONDS
    java.lang.String getTimestampString(java.util.Date) -> getTimestampString
    boolean isCloseEnough(long,long) -> isCloseEnough
    boolean isSameDay(long) -> isSameDay
    boolean isYesterday(long) -> isYesterday
    java.util.Date StringToDate(java.lang.String,java.lang.String) -> StringToDate
    java.lang.String toTime(int) -> toTime
    java.lang.String toTimeBySecond(int) -> toTimeBySecond
    com.easemob.util.TimeInfo getYesterdayStartAndEndTime() -> getYesterdayStartAndEndTime
    com.easemob.util.TimeInfo getTodayStartAndEndTime() -> getTodayStartAndEndTime
    com.easemob.util.TimeInfo getBeforeYesterdayStartAndEndTime() -> getBeforeYesterdayStartAndEndTime
    com.easemob.util.TimeInfo getCurrentMonthStartAndEndTime() -> getCurrentMonthStartAndEndTime
    com.easemob.util.TimeInfo getLastMonthStartAndEndTime() -> getLastMonthStartAndEndTime
    java.lang.String getTimestampStr() -> getTimestampStr
com.easemob.util.DensityUtil -> com.easemob.util.DensityUtil:
    int dip2px(android.content.Context,float) -> dip2px
    int px2dip(android.content.Context,float) -> px2dip
    int sp2px(android.content.Context,float) -> sp2px
    int px2sp(android.content.Context,float) -> px2sp
com.easemob.util.DeviceUuidFactory -> com.easemob.util.DeviceUuidFactory:
    java.lang.String PREFS_FILE -> PREFS_FILE
    java.lang.String PREFS_DEVICE_ID -> PREFS_DEVICE_ID
    java.util.UUID uuid -> uuid
    java.util.UUID generateDeviceUuid(android.content.Context) -> generateDeviceUuid
    java.util.UUID getDeviceUuid() -> getDeviceUuid
    boolean isEmpty(java.lang.Object) -> isEmpty
com.easemob.util.EMLog -> com.easemob.util.EMLog:
    boolean debugMode -> debugMode
    com.easemob.util.EMLog$ELogMode logMode -> logMode
    com.easemob.util.FileLogger fileLog -> fileLog
    int[] $SWITCH_TABLE$com$easemob$util$EMLog$ELogMode -> $SWITCH_TABLE$com$easemob$util$EMLog$ELogMode
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void i(java.lang.String,java.lang.String) -> i
    void v(java.lang.String,java.lang.String) -> v
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void setLogMode(com.easemob.util.EMLog$ELogMode) -> setLogMode
    java.io.File getLogRoot() -> getLogRoot
    void freeLogFiles() -> freeLogFiles
    int[] $SWITCH_TABLE$com$easemob$util$EMLog$ELogMode() -> $SWITCH_TABLE$com$easemob$util$EMLog$ELogMode
com.easemob.util.EMLog$ELogMode -> com.easemob.util.EMLog$ELogMode:
    com.easemob.util.EMLog$ELogMode KLogConsoleOnly -> KLogConsoleOnly
    com.easemob.util.EMLog$ELogMode KLogFileOnly -> KLogFileOnly
    com.easemob.util.EMLog$ELogMode KLogConsoleFile -> KLogConsoleFile
    com.easemob.util.EMLog$ELogMode[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.util.EMLog$ELogMode[] values() -> values
    com.easemob.util.EMLog$ELogMode valueOf(java.lang.String) -> valueOf
com.easemob.util.EMPrivateConstant -> com.easemob.util.EMPrivateConstant:
    java.lang.String CONNECTION_REFUSED -> CONNECTION_REFUSED
com.easemob.util.EMPrivateConstant$EMMultiUserConstant -> com.easemob.util.EMPrivateConstant$EMMultiUserConstant:
    java.lang.String ROOM_ID -> ROOM_ID
    java.lang.String ROOM_NAME -> ROOM_NAME
    java.lang.String ROOM_OWNER -> ROOM_OWNER
    java.lang.String ROOM_DESCRIPTION -> ROOM_DESCRIPTION
    java.lang.String ROOM_MAX_USERS -> ROOM_MAX_USERS
    java.lang.String ROOM_AFFILIATIONS_COUNT -> ROOM_AFFILIATIONS_COUNT
    java.lang.String ROOM_AFFILIATIONS -> ROOM_AFFILIATIONS
    java.lang.String ROOM_MEMBER -> ROOM_MEMBER
    java.lang.String ROOM_MEMBER_KICKED -> ROOM_MEMBER_KICKED
    java.lang.String ROOM_MEMBER_LEAVE -> ROOM_MEMBER_LEAVE
    java.lang.String MUC_ELEMENT_NAME -> MUC_ELEMENT_NAME
    java.lang.String ITEM_DESTROY -> ITEM_DESTROY
    java.lang.String ITEM_EXITMUC -> ITEM_EXITMUC
    java.lang.String AFFILIATION_NONE -> AFFILIATION_NONE
    java.lang.String ROLE_NONE -> ROLE_NONE
    java.lang.String MUC_NS_USER -> MUC_NS_USER
    java.lang.String ROLE_PARTICIPANT -> ROLE_PARTICIPANT
com.easemob.util.EasyUtils -> com.easemob.util.EasyUtils:
    java.util.Hashtable resourceTable -> resourceTable
    boolean isAppRunningForeground(android.content.Context) -> isAppRunningForeground
    java.lang.String getTopActivityName(android.content.Context) -> getTopActivityName
    java.util.List getRunningApps(android.content.Context) -> getRunningApps
    java.lang.String getTimeStamp() -> getTimeStamp
    boolean writeToZipFile(byte[],java.lang.String) -> writeToZipFile
    java.lang.String getAppResourceString(android.content.Context,java.lang.String) -> getAppResourceString
    java.lang.String convertByteArrayToString(byte[]) -> convertByteArrayToString
    boolean isSdcardExist() -> isSdcardExist
com.easemob.util.FileLogger -> com.easemob.util.FileLogger:
    java.lang.String TAG -> TAG
    long MB -> MB
    long LOG_LIMIT -> LOG_LIMIT
    long FREE_SPACE_LIMIT -> FREE_SPACE_LIMIT
    long FREE_SPACE_TIMER -> FREE_SPACE_TIMER
    java.lang.String INFO_COLOR -> INFO_COLOR
    java.lang.String ERROR_COLOR -> ERROR_COLOR
    java.lang.String WARN_COLOR -> WARN_COLOR
    java.lang.String DEBUG_COLOR -> DEBUG_COLOR
    java.util.concurrent.ExecutorService singleThreadService -> singleThreadService
    java.io.File logRoot -> logRoot
    java.util.Timer timer -> timer
    boolean spaceAvailable -> spaceAvailable
    void d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void v(java.lang.String,java.lang.String) -> v
    void startThreadService(java.lang.String,java.lang.String) -> startThreadService
    java.lang.Runnable getWriterRunnable(java.lang.String,java.lang.String) -> getWriterRunnable
    java.io.File getAvailableFile() -> getAvailableFile
    java.lang.String getLogFileName(int) -> getLogFileName
    java.io.File getLogFolder() -> getLogFolder
    void removeFolderBeforeDay(java.lang.String,int) -> removeFolderBeforeDay
    void removeOldFolders() -> removeOldFolders
    void deleteFile(java.io.File) -> deleteFile
    long getDirSize(java.io.File) -> getDirSize
    java.lang.String getSpecifiedDayBefore(java.lang.String,int) -> getSpecifiedDayBefore
    java.io.File getStorageDir() -> getStorageDir
    void getSortedFileListByName(java.util.List) -> getSortedFileListByName
    boolean spaceIsAlearting() -> spaceIsAlearting
    boolean logSizeAlearting() -> logSizeAlearting
    boolean freeSpace() -> freeSpace
    void freeLogFolder() -> freeLogFolder
    void freeOldFolders() -> freeOldFolders
    void freeOldFiles() -> freeOldFiles
    long getCurrentAvailabeSpace() -> getCurrentAvailabeSpace
    java.io.File getLogRoot() -> getLogRoot
    void checkAndFreeLogFiles() -> checkAndFreeLogFiles
    void startCleanUpTimer() -> startCleanUpTimer
    java.util.Timer access$0(com.easemob.util.FileLogger) -> access$0
    void access$1(com.easemob.util.FileLogger) -> access$1
    java.io.File access$2(com.easemob.util.FileLogger) -> access$2
    java.util.concurrent.ExecutorService access$3(com.easemob.util.FileLogger) -> access$3
    void access$4(com.easemob.util.FileLogger,boolean) -> access$4
com.easemob.util.FileLogger$1 -> com.easemob.util.FileLogger$1:
    com.easemob.util.FileLogger this$0 -> this$0
    java.lang.String val$msg -> val$msg
    java.lang.String val$color -> val$color
    void run() -> run
com.easemob.util.FileLogger$2 -> com.easemob.util.FileLogger$2:
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.easemob.util.FileLogger$3 -> com.easemob.util.FileLogger$3:
    com.easemob.util.FileLogger this$0 -> this$0
    void run() -> run
    com.easemob.util.FileLogger access$0(com.easemob.util.FileLogger$3) -> access$0
com.easemob.util.FileLogger$3$1 -> com.easemob.util.FileLogger$3$1:
    com.easemob.util.FileLogger$3 this$1 -> this$1
    void run() -> run
com.easemob.util.FileUtils -> com.easemob.util.FileUtils:
    java.lang.String[] fileTypes -> fileTypes
    java.io.File[] loadFiles(java.io.File) -> loadFiles
    java.lang.String getMIMEType(java.io.File) -> getMIMEType
    java.lang.String getMIMEType(java.lang.String) -> getMIMEType
    void openFile(java.io.File,android.app.Activity) -> openFile
    void openFile(android.net.Uri,java.lang.String,android.app.Activity) -> openFile
    void saveObjectToFile(java.lang.Object,java.io.File) -> saveObjectToFile
    java.lang.Object readObjectFromFile(java.io.File) -> readObjectFromFile
com.easemob.util.FileUtils$MyComparator -> com.easemob.util.FileUtils$MyComparator:
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.easemob.util.HanziToPinyin -> com.easemob.util.HanziToPinyin:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    char[] UNIHANS -> UNIHANS
    byte[][] PINYINS -> PINYINS
    java.lang.String FIRST_PINYIN_UNIHAN -> FIRST_PINYIN_UNIHAN
    java.lang.String LAST_PINYIN_UNIHAN -> LAST_PINYIN_UNIHAN
    java.text.Collator COLLATOR -> COLLATOR
    com.easemob.util.HanziToPinyin sInstance -> sInstance
    boolean mHasChinaCollator -> mHasChinaCollator
    com.easemob.util.HanziToPinyin getInstance() -> getInstance
    boolean doSelfValidation() -> doSelfValidation
    com.easemob.util.HanziToPinyin$Token getToken(char) -> getToken
    java.util.ArrayList get(java.lang.String) -> get
    void addToken(java.lang.StringBuilder,java.util.ArrayList,int) -> addToken
com.easemob.util.HanziToPinyin$Token -> com.easemob.util.HanziToPinyin$Token:
    java.lang.String SEPARATOR -> SEPARATOR
    int LATIN -> LATIN
    int PINYIN -> PINYIN
    int UNKNOWN -> UNKNOWN
    int type -> type
    java.lang.String source -> source
    java.lang.String target -> target
com.easemob.util.ImageUtils -> com.easemob.util.ImageUtils:
    int SCALE_IMAGE_WIDTH -> SCALE_IMAGE_WIDTH
    int SCALE_IMAGE_HEIGHT -> SCALE_IMAGE_HEIGHT
    android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap) -> getRoundedCornerBitmap
    android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap,float) -> getRoundedCornerBitmap
    android.graphics.Bitmap getVideoThumbnail(java.lang.String,int,int,int) -> getVideoThumbnail
    java.lang.String saveVideoThumb(java.io.File,int,int,int) -> saveVideoThumb
    android.graphics.Bitmap decodeScaleImage(java.lang.String,int,int) -> decodeScaleImage
    android.graphics.Bitmap decodeScaleImage(android.content.Context,int,int,int) -> decodeScaleImage
    int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> calculateInSampleSize
    java.lang.String getThumbnailImage(java.lang.String,int) -> getThumbnailImage
    java.lang.String getScaledImage(android.content.Context,java.lang.String) -> getScaledImage
    java.lang.String getScaledImage(android.content.Context,java.lang.String,int) -> getScaledImage
    android.graphics.Bitmap mergeImages(int,int,java.util.List) -> mergeImages
    int readPictureDegree(java.lang.String) -> readPictureDegree
    android.graphics.Bitmap rotaingImageView(int,android.graphics.Bitmap) -> rotaingImageView
    android.graphics.BitmapFactory$Options getBitmapOptions(java.lang.String) -> getBitmapOptions
com.easemob.util.LatLng -> com.easemob.util.LatLng:
    double latitude -> latitude
    double longitude -> longitude
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.easemob.util.NetUtils -> com.easemob.util.NetUtils:
    java.lang.String TAG -> TAG
    int LOW_SPEED_UPLOAD_BUF_SIZE -> LOW_SPEED_UPLOAD_BUF_SIZE
    int HIGH_SPEED_UPLOAD_BUF_SIZE -> HIGH_SPEED_UPLOAD_BUF_SIZE
    int MAX_SPEED_UPLOAD_BUF_SIZE -> MAX_SPEED_UPLOAD_BUF_SIZE
    int LOW_SPEED_DOWNLOAD_BUF_SIZE -> LOW_SPEED_DOWNLOAD_BUF_SIZE
    int HIGH_SPEED_DOWNLOAD_BUF_SIZE -> HIGH_SPEED_DOWNLOAD_BUF_SIZE
    int MAX_SPEED_DOWNLOAD_BUF_SIZE -> MAX_SPEED_DOWNLOAD_BUF_SIZE
    boolean hasNetwork(android.content.Context) -> hasNetwork
    boolean hasDataConnection(android.content.Context) -> hasDataConnection
    boolean isWifiConnection(android.content.Context) -> isWifiConnection
    int getUploadBufSize(android.content.Context) -> getUploadBufSize
    int getDownloadBufSize(android.content.Context) -> getDownloadBufSize
    boolean isConnectionFast(int,int) -> isConnectionFast
    java.lang.String getNetworkType(android.content.Context) -> getNetworkType
com.easemob.util.PathUtil -> com.easemob.util.PathUtil:
    java.lang.String pathPrefix -> pathPrefix
    java.lang.String historyPathName -> historyPathName
    java.lang.String imagePathName -> imagePathName
    java.lang.String voicePathName -> voicePathName
    java.lang.String filePathName -> filePathName
    java.lang.String videoPathName -> videoPathName
    java.lang.String netdiskDownloadPathName -> netdiskDownloadPathName
    java.lang.String meetingPathName -> meetingPathName
    java.io.File storageDir -> storageDir
    com.easemob.util.PathUtil instance -> instance
    java.io.File voicePath -> voicePath
    java.io.File imagePath -> imagePath
    java.io.File historyPath -> historyPath
    java.io.File videoPath -> videoPath
    java.io.File filePath -> filePath
    com.easemob.util.PathUtil getInstance() -> getInstance
    void initDirs(java.lang.String,java.lang.String,android.content.Context) -> initDirs
    java.io.File getImagePath() -> getImagePath
    java.io.File getVoicePath() -> getVoicePath
    java.io.File getFilePath() -> getFilePath
    java.io.File getVideoPath() -> getVideoPath
    java.io.File getHistoryPath() -> getHistoryPath
    java.io.File getStorageDir(android.content.Context) -> getStorageDir
    java.io.File generateImagePath(java.lang.String,java.lang.String,android.content.Context) -> generateImagePath
    java.io.File generateVoicePath(java.lang.String,java.lang.String,android.content.Context) -> generateVoicePath
    java.io.File generateFiePath(java.lang.String,java.lang.String,android.content.Context) -> generateFiePath
    java.io.File generateVideoPath(java.lang.String,java.lang.String,android.content.Context) -> generateVideoPath
    java.io.File generateHistoryPath(java.lang.String,java.lang.String,android.content.Context) -> generateHistoryPath
    java.io.File generateMessagePath(java.lang.String,java.lang.String,android.content.Context) -> generateMessagePath
    java.io.File getTempPath(java.io.File) -> getTempPath
com.easemob.util.PerfUtils -> com.easemob.util.PerfUtils:
    int getTimeSpendSecond(long) -> getTimeSpendSecond
    int getSpeed(long,long) -> getSpeed
com.easemob.util.TextFormater -> com.easemob.util.TextFormater:
    int GB_SP_DIFF -> GB_SP_DIFF
    int[] secPosvalueList -> secPosvalueList
    char[] firstLetter -> firstLetter
    java.lang.String getDataSize(long) -> getDataSize
    java.lang.String getKBDataSize(long) -> getKBDataSize
    java.lang.String formatStr(android.content.Context,int,java.lang.String) -> formatStr
    java.lang.String getFirstLetter(java.lang.String) -> getFirstLetter
    char convert(byte[]) -> convert
com.easemob.util.TimeInfo -> com.easemob.util.TimeInfo:
    long startTime -> startTime
    long endTime -> endTime
    long getStartTime() -> getStartTime
    void setStartTime(long) -> setStartTime
    long getEndTime() -> getEndTime
    void setEndTime(long) -> setEndTime
com.easemob.util.VoiceRecorder -> com.easemob.util.VoiceRecorder:
    android.media.MediaRecorder recorder -> recorder
    java.lang.String PREFIX -> PREFIX
    java.lang.String EXTENSION -> EXTENSION
    boolean isRecording -> isRecording
    long startTime -> startTime
    java.lang.String voiceFilePath -> voiceFilePath
    java.lang.String voiceFileName -> voiceFileName
    java.io.File file -> file
    android.os.Handler handler -> handler
    java.lang.String startRecording(java.lang.String,java.lang.String,android.content.Context) -> startRecording
    void discardRecording() -> discardRecording
    int stopRecoding() -> stopRecoding
    void finalize() -> finalize
    java.lang.String getVoiceFileName(java.lang.String) -> getVoiceFileName
    boolean isRecording() -> isRecording
    java.lang.String getVoiceFilePath() -> getVoiceFilePath
    boolean access$0(com.easemob.util.VoiceRecorder) -> access$0
    android.os.Handler access$1(com.easemob.util.VoiceRecorder) -> access$1
com.easemob.util.VoiceRecorder$1 -> com.easemob.util.VoiceRecorder$1:
    com.easemob.util.VoiceRecorder this$0 -> this$0
    void run() -> run
com.easemob.util.ZipUtils -> com.easemob.util.ZipUtils:
    int BUFF_SIZE -> BUFF_SIZE
    void zip(java.io.File,java.io.File) -> zip
    void zipFiles(java.io.File,java.util.zip.ZipOutputStream,java.lang.String) -> zipFiles
    void zipFile(java.io.File,java.util.zip.ZipOutputStream,java.lang.String) -> zipFile
com.facebook.rebound.AndroidSpringLooperFactory -> com.facebook.rebound.AndroidSpringLooperFactory:
    com.facebook.rebound.SpringLooper createSpringLooper() -> createSpringLooper
com.facebook.rebound.AndroidSpringLooperFactory$ChoreographerAndroidSpringLooper -> com.facebook.rebound.AndroidSpringLooperFactory$ChoreographerAndroidSpringLooper:
    android.view.Choreographer mChoreographer -> mChoreographer
    android.view.Choreographer$FrameCallback mFrameCallback -> mFrameCallback
    boolean mStarted -> mStarted
    long mLastTime -> mLastTime
    com.facebook.rebound.AndroidSpringLooperFactory$ChoreographerAndroidSpringLooper create() -> create
    void start() -> start
    void stop() -> stop
    boolean access$0(com.facebook.rebound.AndroidSpringLooperFactory$ChoreographerAndroidSpringLooper) -> access$0
    long access$1(com.facebook.rebound.AndroidSpringLooperFactory$ChoreographerAndroidSpringLooper) -> access$1
    void access$2(com.facebook.rebound.AndroidSpringLooperFactory$ChoreographerAndroidSpringLooper,long) -> access$2
    android.view.Choreographer access$3(com.facebook.rebound.AndroidSpringLooperFactory$ChoreographerAndroidSpringLooper) -> access$3
    android.view.Choreographer$FrameCallback access$4(com.facebook.rebound.AndroidSpringLooperFactory$ChoreographerAndroidSpringLooper) -> access$4
com.facebook.rebound.AndroidSpringLooperFactory$ChoreographerAndroidSpringLooper$1 -> com.facebook.rebound.AndroidSpringLooperFactory$ChoreographerAndroidSpringLooper$1:
    com.facebook.rebound.AndroidSpringLooperFactory$ChoreographerAndroidSpringLooper this$1 -> this$1
    void doFrame(long) -> doFrame
com.facebook.rebound.AndroidSpringLooperFactory$LegacyAndroidSpringLooper -> com.facebook.rebound.AndroidSpringLooperFactory$LegacyAndroidSpringLooper:
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mLooperRunnable -> mLooperRunnable
    boolean mStarted -> mStarted
    long mLastTime -> mLastTime
    com.facebook.rebound.SpringLooper create() -> create
    void start() -> start
    void stop() -> stop
    boolean access$0(com.facebook.rebound.AndroidSpringLooperFactory$LegacyAndroidSpringLooper) -> access$0
    long access$1(com.facebook.rebound.AndroidSpringLooperFactory$LegacyAndroidSpringLooper) -> access$1
    android.os.Handler access$2(com.facebook.rebound.AndroidSpringLooperFactory$LegacyAndroidSpringLooper) -> access$2
    java.lang.Runnable access$3(com.facebook.rebound.AndroidSpringLooperFactory$LegacyAndroidSpringLooper) -> access$3
com.facebook.rebound.AndroidSpringLooperFactory$LegacyAndroidSpringLooper$1 -> com.facebook.rebound.AndroidSpringLooperFactory$LegacyAndroidSpringLooper$1:
    com.facebook.rebound.AndroidSpringLooperFactory$LegacyAndroidSpringLooper this$1 -> this$1
    void run() -> run
com.facebook.rebound.BaseSpringSystem -> com.facebook.rebound.BaseSpringSystem:
    java.util.Map mSpringRegistry -> mSpringRegistry
    java.util.Set mActiveSprings -> mActiveSprings
    com.facebook.rebound.SpringLooper mSpringLooper -> mSpringLooper
    java.util.concurrent.CopyOnWriteArraySet mListeners -> mListeners
    boolean mIdle -> mIdle
    boolean getIsIdle() -> getIsIdle
    com.facebook.rebound.Spring createSpring() -> createSpring
    com.facebook.rebound.Spring getSpringById(java.lang.String) -> getSpringById
    java.util.List getAllSprings() -> getAllSprings
    void registerSpring(com.facebook.rebound.Spring) -> registerSpring
    void deregisterSpring(com.facebook.rebound.Spring) -> deregisterSpring
    void advance(double) -> advance
    void loop(double) -> loop
    void activateSpring(java.lang.String) -> activateSpring
    void addListener(com.facebook.rebound.SpringSystemListener) -> addListener
    void removeListener(com.facebook.rebound.SpringSystemListener) -> removeListener
    void removeAllListeners() -> removeAllListeners
com.facebook.rebound.OrigamiValueConverter -> com.facebook.rebound.OrigamiValueConverter:
    double tensionFromOrigamiValue(double) -> tensionFromOrigamiValue
    double origamiValueFromTension(double) -> origamiValueFromTension
    double frictionFromOrigamiValue(double) -> frictionFromOrigamiValue
    double origamiValueFromFriction(double) -> origamiValueFromFriction
com.facebook.rebound.SimpleSpringListener -> com.facebook.rebound.SimpleSpringListener:
    void onSpringUpdate(com.facebook.rebound.Spring) -> onSpringUpdate
    void onSpringAtRest(com.facebook.rebound.Spring) -> onSpringAtRest
    void onSpringActivate(com.facebook.rebound.Spring) -> onSpringActivate
    void onSpringEndStateChange(com.facebook.rebound.Spring) -> onSpringEndStateChange
com.facebook.rebound.Spring -> com.facebook.rebound.Spring:
    int ID -> ID
    double MAX_DELTA_TIME_SEC -> MAX_DELTA_TIME_SEC
    double SOLVER_TIMESTEP_SEC -> SOLVER_TIMESTEP_SEC
    com.facebook.rebound.SpringConfig mSpringConfig -> mSpringConfig
    boolean mOvershootClampingEnabled -> mOvershootClampingEnabled
    java.lang.String mId -> mId
    com.facebook.rebound.Spring$PhysicsState mCurrentState -> mCurrentState
    com.facebook.rebound.Spring$PhysicsState mPreviousState -> mPreviousState
    com.facebook.rebound.Spring$PhysicsState mTempState -> mTempState
    double mStartValue -> mStartValue
    double mEndValue -> mEndValue
    boolean mWasAtRest -> mWasAtRest
    double mRestSpeedThreshold -> mRestSpeedThreshold
    double mDisplacementFromRestThreshold -> mDisplacementFromRestThreshold
    java.util.concurrent.CopyOnWriteArraySet mListeners -> mListeners
    double mTimeAccumulator -> mTimeAccumulator
    com.facebook.rebound.BaseSpringSystem mSpringSystem -> mSpringSystem
    void destroy() -> destroy
    java.lang.String getId() -> getId
    com.facebook.rebound.Spring setSpringConfig(com.facebook.rebound.SpringConfig) -> setSpringConfig
    com.facebook.rebound.SpringConfig getSpringConfig() -> getSpringConfig
    com.facebook.rebound.Spring setCurrentValue(double) -> setCurrentValue
    double getStartValue() -> getStartValue
    double getCurrentValue() -> getCurrentValue
    double getCurrentDisplacementDistance() -> getCurrentDisplacementDistance
    double getDisplacementDistanceForState(com.facebook.rebound.Spring$PhysicsState) -> getDisplacementDistanceForState
    com.facebook.rebound.Spring setEndValue(double) -> setEndValue
    double getEndValue() -> getEndValue
    com.facebook.rebound.Spring setVelocity(double) -> setVelocity
    double getVelocity() -> getVelocity
    com.facebook.rebound.Spring setRestSpeedThreshold(double) -> setRestSpeedThreshold
    double getRestSpeedThreshold() -> getRestSpeedThreshold
    com.facebook.rebound.Spring setRestDisplacementThreshold(double) -> setRestDisplacementThreshold
    double getRestDisplacementThreshold() -> getRestDisplacementThreshold
    com.facebook.rebound.Spring setOvershootClampingEnabled(boolean) -> setOvershootClampingEnabled
    boolean isOvershootClampingEnabled() -> isOvershootClampingEnabled
    boolean isOvershooting() -> isOvershooting
    void advance(double) -> advance
    boolean systemShouldAdvance() -> systemShouldAdvance
    boolean wasAtRest() -> wasAtRest
    boolean isAtRest() -> isAtRest
    com.facebook.rebound.Spring setAtRest() -> setAtRest
    void interpolate(double) -> interpolate
    com.facebook.rebound.Spring addListener(com.facebook.rebound.SpringListener) -> addListener
    com.facebook.rebound.Spring removeListener(com.facebook.rebound.SpringListener) -> removeListener
    com.facebook.rebound.Spring removeAllListeners() -> removeAllListeners
    boolean currentValueIsApproximately(double) -> currentValueIsApproximately
com.facebook.rebound.Spring$PhysicsState -> com.facebook.rebound.Spring$PhysicsState:
    double position -> position
    double velocity -> velocity
com.facebook.rebound.SpringConfig -> com.facebook.rebound.SpringConfig:
    double friction -> friction
    double tension -> tension
    com.facebook.rebound.SpringConfig defaultConfig -> defaultConfig
    com.facebook.rebound.SpringConfig fromOrigamiTensionAndFriction(double,double) -> fromOrigamiTensionAndFriction
com.facebook.rebound.SpringConfigRegistry -> com.facebook.rebound.SpringConfigRegistry:
    com.facebook.rebound.SpringConfigRegistry INSTANCE -> INSTANCE
    java.util.Map mSpringConfigMap -> mSpringConfigMap
    com.facebook.rebound.SpringConfigRegistry getInstance() -> getInstance
    boolean addSpringConfig(com.facebook.rebound.SpringConfig,java.lang.String) -> addSpringConfig
    boolean removeSpringConfig(com.facebook.rebound.SpringConfig) -> removeSpringConfig
    java.util.Map getAllSpringConfig() -> getAllSpringConfig
    void removeAllSpringConfig() -> removeAllSpringConfig
com.facebook.rebound.SpringListener -> com.facebook.rebound.SpringListener:
    void onSpringUpdate(com.facebook.rebound.Spring) -> onSpringUpdate
    void onSpringAtRest(com.facebook.rebound.Spring) -> onSpringAtRest
    void onSpringActivate(com.facebook.rebound.Spring) -> onSpringActivate
    void onSpringEndStateChange(com.facebook.rebound.Spring) -> onSpringEndStateChange
com.facebook.rebound.SpringLooper -> com.facebook.rebound.SpringLooper:
    com.facebook.rebound.BaseSpringSystem mSpringSystem -> mSpringSystem
    void setSpringSystem(com.facebook.rebound.BaseSpringSystem) -> setSpringSystem
    void start() -> start
    void stop() -> stop
com.facebook.rebound.SpringSystem -> com.facebook.rebound.SpringSystem:
    com.facebook.rebound.SpringSystem create() -> create
com.facebook.rebound.SpringSystemListener -> com.facebook.rebound.SpringSystemListener:
    void onBeforeIntegrate(com.facebook.rebound.BaseSpringSystem) -> onBeforeIntegrate
    void onAfterIntegrate(com.facebook.rebound.BaseSpringSystem) -> onAfterIntegrate
com.facebook.rebound.SpringUtil -> com.facebook.rebound.SpringUtil:
    double mapValueFromRangeToRange(double,double,double,double,double) -> mapValueFromRangeToRange
    double clamp(double,double,double) -> clamp
com.facebook.rebound.SteppingLooper -> com.facebook.rebound.SteppingLooper:
    boolean mStarted -> mStarted
    long mLastTime -> mLastTime
    void start() -> start
    boolean step(long) -> step
    void stop() -> stop
com.facebook.rebound.SynchronousLooper -> com.facebook.rebound.SynchronousLooper:
    double SIXTY_FPS -> SIXTY_FPS
    double mTimeStep -> mTimeStep
    boolean mRunning -> mRunning
    double getTimeStep() -> getTimeStep
    void setTimeStep(double) -> setTimeStep
    void start() -> start
    void stop() -> stop
com.facebook.rebound.ui.SpringConfiguratorView -> com.facebook.rebound.ui.SpringConfiguratorView:
    int MAX_SEEKBAR_VAL -> MAX_SEEKBAR_VAL
    float MIN_TENSION -> MIN_TENSION
    float MAX_TENSION -> MAX_TENSION
    float MIN_FRICTION -> MIN_FRICTION
    float MAX_FRICTION -> MAX_FRICTION
    java.text.DecimalFormat DECIMAL_FORMAT -> DECIMAL_FORMAT
    com.facebook.rebound.ui.SpringConfiguratorView$SpinnerAdapter spinnerAdapter -> spinnerAdapter
    java.util.List mSpringConfigs -> mSpringConfigs
    com.facebook.rebound.Spring mRevealerSpring -> mRevealerSpring
    float mStashPx -> mStashPx
    float mRevealPx -> mRevealPx
    com.facebook.rebound.SpringConfigRegistry springConfigRegistry -> springConfigRegistry
    int mTextColor -> mTextColor
    android.widget.SeekBar mTensionSeekBar -> mTensionSeekBar
    android.widget.SeekBar mFrictionSeekBar -> mFrictionSeekBar
    android.widget.Spinner mSpringSelectorSpinner -> mSpringSelectorSpinner
    android.widget.TextView mFrictionLabel -> mFrictionLabel
    android.widget.TextView mTensionLabel -> mTensionLabel
    com.facebook.rebound.SpringConfig mSelectedSpringConfig -> mSelectedSpringConfig
    android.view.View generateHierarchy(android.content.Context) -> generateHierarchy
    void destroy() -> destroy
    void refreshSpringConfigurations() -> refreshSpringConfigurations
    void updateSeekBarsForSpringConfig(com.facebook.rebound.SpringConfig) -> updateSeekBarsForSpringConfig
    void togglePosition() -> togglePosition
    java.util.List access$0(com.facebook.rebound.ui.SpringConfiguratorView) -> access$0
    void access$1(com.facebook.rebound.ui.SpringConfiguratorView,com.facebook.rebound.SpringConfig) -> access$1
    com.facebook.rebound.SpringConfig access$2(com.facebook.rebound.ui.SpringConfiguratorView) -> access$2
    void access$3(com.facebook.rebound.ui.SpringConfiguratorView,com.facebook.rebound.SpringConfig) -> access$3
    android.widget.SeekBar access$4(com.facebook.rebound.ui.SpringConfiguratorView) -> access$4
    java.text.DecimalFormat access$5() -> access$5
    android.widget.TextView access$6(com.facebook.rebound.ui.SpringConfiguratorView) -> access$6
    android.widget.SeekBar access$7(com.facebook.rebound.ui.SpringConfiguratorView) -> access$7
    android.widget.TextView access$8(com.facebook.rebound.ui.SpringConfiguratorView) -> access$8
    void access$9(com.facebook.rebound.ui.SpringConfiguratorView) -> access$9
    float access$10(com.facebook.rebound.ui.SpringConfiguratorView) -> access$10
    float access$11(com.facebook.rebound.ui.SpringConfiguratorView) -> access$11
    int access$12(com.facebook.rebound.ui.SpringConfiguratorView) -> access$12
com.facebook.rebound.ui.SpringConfiguratorView$OnNubTouchListener -> com.facebook.rebound.ui.SpringConfiguratorView$OnNubTouchListener:
    com.facebook.rebound.ui.SpringConfiguratorView this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.facebook.rebound.ui.SpringConfiguratorView$RevealerSpringListener -> com.facebook.rebound.ui.SpringConfiguratorView$RevealerSpringListener:
    com.facebook.rebound.ui.SpringConfiguratorView this$0 -> this$0
    void onSpringUpdate(com.facebook.rebound.Spring) -> onSpringUpdate
    void onSpringAtRest(com.facebook.rebound.Spring) -> onSpringAtRest
    void onSpringActivate(com.facebook.rebound.Spring) -> onSpringActivate
    void onSpringEndStateChange(com.facebook.rebound.Spring) -> onSpringEndStateChange
com.facebook.rebound.ui.SpringConfiguratorView$SeekbarListener -> com.facebook.rebound.ui.SpringConfiguratorView$SeekbarListener:
    com.facebook.rebound.ui.SpringConfiguratorView this$0 -> this$0
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.facebook.rebound.ui.SpringConfiguratorView$SpinnerAdapter -> com.facebook.rebound.ui.SpringConfiguratorView$SpinnerAdapter:
    android.content.Context mContext -> mContext
    java.util.List mStrings -> mStrings
    com.facebook.rebound.ui.SpringConfiguratorView this$0 -> this$0
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void add(java.lang.String) -> add
    void clear() -> clear
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.facebook.rebound.ui.SpringConfiguratorView$SpringSelectedListener -> com.facebook.rebound.ui.SpringConfiguratorView$SpringSelectedListener:
    com.facebook.rebound.ui.SpringConfiguratorView this$0 -> this$0
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.facebook.rebound.ui.Util -> com.facebook.rebound.ui.Util:
    int dpToPx(float,android.content.res.Resources) -> dpToPx
    android.widget.FrameLayout$LayoutParams createLayoutParams(int,int) -> createLayoutParams
    android.widget.FrameLayout$LayoutParams createMatchParams() -> createMatchParams
    android.widget.FrameLayout$LayoutParams createWrapParams() -> createWrapParams
    android.widget.FrameLayout$LayoutParams createWrapMatchParams() -> createWrapMatchParams
    android.widget.FrameLayout$LayoutParams createMatchWrapParams() -> createMatchWrapParams
com.google.android.gms.appstate.AppState -> com.google.android.gms.appstate.AppState:
    int getKey() -> getKey
    java.lang.String getLocalVersion() -> getLocalVersion
    byte[] getLocalData() -> getLocalData
    boolean hasConflict() -> hasConflict
    java.lang.String getConflictVersion() -> getConflictVersion
    byte[] getConflictData() -> getConflictData
com.google.android.gms.appstate.AppStateBuffer -> com.google.android.gms.appstate.AppStateBuffer:
    com.google.android.gms.appstate.AppState get(int) -> get
    java.lang.Object get(int) -> get
com.google.android.gms.appstate.AppStateClient -> com.google.android.gms.appstate.AppStateClient:
    int STATUS_OK -> STATUS_OK
    int STATUS_INTERNAL_ERROR -> STATUS_INTERNAL_ERROR
    int STATUS_CLIENT_RECONNECT_REQUIRED -> STATUS_CLIENT_RECONNECT_REQUIRED
    int STATUS_NETWORK_ERROR_STALE_DATA -> STATUS_NETWORK_ERROR_STALE_DATA
    int STATUS_NETWORK_ERROR_NO_DATA -> STATUS_NETWORK_ERROR_NO_DATA
    int STATUS_NETWORK_ERROR_OPERATION_DEFERRED -> STATUS_NETWORK_ERROR_OPERATION_DEFERRED
    int STATUS_NETWORK_ERROR_OPERATION_FAILED -> STATUS_NETWORK_ERROR_OPERATION_FAILED
    int STATUS_DEVELOPER_ERROR -> STATUS_DEVELOPER_ERROR
    int STATUS_WRITE_OUT_OF_DATE_VERSION -> STATUS_WRITE_OUT_OF_DATE_VERSION
    int STATUS_WRITE_SIZE_EXCEEDED -> STATUS_WRITE_SIZE_EXCEEDED
    int STATUS_STATE_KEY_NOT_FOUND -> STATUS_STATE_KEY_NOT_FOUND
    int STATUS_STATE_KEY_LIMIT_EXCEEDED -> STATUS_STATE_KEY_LIMIT_EXCEEDED
    com.google.android.gms.internal.e b -> b
    void connect() -> connect
    boolean isConnected() -> isConnected
    boolean isConnecting() -> isConnecting
    void registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> registerConnectionCallbacks
    boolean isConnectionCallbacksRegistered(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> isConnectionCallbacksRegistered
    void unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> unregisterConnectionCallbacks
    void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> registerConnectionFailedListener
    boolean isConnectionFailedListenerRegistered(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> isConnectionFailedListenerRegistered
    void unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> unregisterConnectionFailedListener
    void disconnect() -> disconnect
    void reconnect() -> reconnect
    int getMaxStateSize() -> getMaxStateSize
    int getMaxNumKeys() -> getMaxNumKeys
    void updateState(int,byte[]) -> updateState
    void updateStateImmediate(com.google.android.gms.appstate.OnStateLoadedListener,int,byte[]) -> updateStateImmediate
    void deleteState(com.google.android.gms.appstate.OnStateDeletedListener,int) -> deleteState
    void loadState(com.google.android.gms.appstate.OnStateLoadedListener,int) -> loadState
    void listStates(com.google.android.gms.appstate.OnStateListLoadedListener) -> listStates
    void resolveState(com.google.android.gms.appstate.OnStateLoadedListener,int,java.lang.String,byte[]) -> resolveState
    void signOut() -> signOut
    void signOut(com.google.android.gms.appstate.OnSignOutCompleteListener) -> signOut
com.google.android.gms.appstate.AppStateClient$1 -> com.google.android.gms.appstate.AppStateClient$1:
com.google.android.gms.appstate.AppStateClient$Builder -> com.google.android.gms.appstate.AppStateClient$Builder:
    java.lang.String[] c -> c
    android.content.Context mContext -> mContext
    com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks d -> d
    com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener e -> e
    java.lang.String[] f -> f
    java.lang.String g -> g
    com.google.android.gms.appstate.AppStateClient$Builder setScopes(java.lang.String[]) -> setScopes
    com.google.android.gms.appstate.AppStateClient$Builder setAccountName(java.lang.String) -> setAccountName
    com.google.android.gms.appstate.AppStateClient create() -> create
com.google.android.gms.appstate.OnSignOutCompleteListener -> com.google.android.gms.appstate.OnSignOutCompleteListener:
    void onSignOutComplete() -> onSignOutComplete
com.google.android.gms.appstate.OnStateDeletedListener -> com.google.android.gms.appstate.OnStateDeletedListener:
    void onStateDeleted(int,int) -> onStateDeleted
com.google.android.gms.appstate.OnStateListLoadedListener -> com.google.android.gms.appstate.OnStateListLoadedListener:
    void onStateListLoaded(int,com.google.android.gms.appstate.AppStateBuffer) -> onStateListLoaded
com.google.android.gms.appstate.OnStateLoadedListener -> com.google.android.gms.appstate.OnStateLoadedListener:
    void onStateLoaded(int,int,byte[]) -> onStateLoaded
    void onStateConflict(int,java.lang.String,byte[],byte[]) -> onStateConflict
com.google.android.gms.auth.GoogleAuthException -> com.google.android.gms.auth.GoogleAuthException:
com.google.android.gms.auth.GoogleAuthUtil -> com.google.android.gms.auth.GoogleAuthUtil:
    java.lang.String GOOGLE_ACCOUNT_TYPE -> GOOGLE_ACCOUNT_TYPE
    java.lang.String KEY_HANDLE_NOTIFICATION -> KEY_HANDLE_NOTIFICATION
    java.lang.String KEY_REQUEST_VISIBLE_ACTIVITIES -> KEY_REQUEST_VISIBLE_ACTIVITIES
    android.content.ComponentName w -> w
    android.content.ComponentName x -> x
    android.content.Intent y -> y
    android.content.Intent z -> z
    java.lang.String getToken(android.content.Context,java.lang.String,java.lang.String) -> getToken
    java.lang.String getToken(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle) -> getToken
    java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle) -> getTokenWithNotification
    java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,android.content.Intent) -> getTokenWithNotification
    java.lang.String getTokenWithNotification(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.os.Bundle) -> getTokenWithNotification
    void invalidateToken(android.content.Context,java.lang.String) -> invalidateToken
    void a(android.content.Intent) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
com.google.android.gms.auth.GooglePlayServicesAvailabilityException -> com.google.android.gms.auth.GooglePlayServicesAvailabilityException:
    int A -> A
    int getConnectionStatusCode() -> getConnectionStatusCode
com.google.android.gms.auth.UserRecoverableAuthException -> com.google.android.gms.auth.UserRecoverableAuthException:
    android.content.Intent mIntent -> mIntent
    android.content.Intent getIntent() -> getIntent
com.google.android.gms.auth.UserRecoverableNotifiedException -> com.google.android.gms.auth.UserRecoverableNotifiedException:
com.google.android.gms.common.AccountPicker -> com.google.android.gms.common.AccountPicker:
    android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle) -> newChooseAccountIntent
    android.content.Intent a(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,boolean) -> a
com.google.android.gms.common.ConnectionResult -> com.google.android.gms.common.ConnectionResult:
    int SUCCESS -> SUCCESS
    int SERVICE_MISSING -> SERVICE_MISSING
    int SERVICE_VERSION_UPDATE_REQUIRED -> SERVICE_VERSION_UPDATE_REQUIRED
    int SERVICE_DISABLED -> SERVICE_DISABLED
    int SIGN_IN_REQUIRED -> SIGN_IN_REQUIRED
    int INVALID_ACCOUNT -> INVALID_ACCOUNT
    int RESOLUTION_REQUIRED -> RESOLUTION_REQUIRED
    int NETWORK_ERROR -> NETWORK_ERROR
    int INTERNAL_ERROR -> INTERNAL_ERROR
    int SERVICE_INVALID -> SERVICE_INVALID
    int DEVELOPER_ERROR -> DEVELOPER_ERROR
    int LICENSE_CHECK_FAILED -> LICENSE_CHECK_FAILED
    com.google.android.gms.common.ConnectionResult B -> B
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    int p -> p
    void startResolutionForResult(android.app.Activity,int) -> startResolutionForResult
    boolean hasResolution() -> hasResolution
    boolean isSuccess() -> isSuccess
    int getErrorCode() -> getErrorCode
    android.app.PendingIntent getResolution() -> getResolution
    java.lang.String e() -> e
    java.lang.String toString() -> toString
com.google.android.gms.common.GooglePlayServicesClient -> com.google.android.gms.common.GooglePlayServicesClient:
    void connect() -> connect
    void disconnect() -> disconnect
    boolean isConnected() -> isConnected
    boolean isConnecting() -> isConnecting
    void registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> registerConnectionCallbacks
    boolean isConnectionCallbacksRegistered(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> isConnectionCallbacksRegistered
    void unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> unregisterConnectionCallbacks
    void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> registerConnectionFailedListener
    boolean isConnectionFailedListenerRegistered(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> isConnectionFailedListenerRegistered
    void unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> unregisterConnectionFailedListener
com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks -> com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks:
    void onConnected(android.os.Bundle) -> onConnected
    void onDisconnected() -> onDisconnected
com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener -> com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener:
    void onConnectionFailed(com.google.android.gms.common.ConnectionResult) -> onConnectionFailed
com.google.android.gms.common.GooglePlayServicesNotAvailableException -> com.google.android.gms.common.GooglePlayServicesNotAvailableException:
    int errorCode -> errorCode
com.google.android.gms.common.GooglePlayServicesUtil -> com.google.android.gms.common.GooglePlayServicesUtil:
    int GOOGLE_PLAY_SERVICES_VERSION_CODE -> GOOGLE_PLAY_SERVICES_VERSION_CODE
    java.lang.String GOOGLE_PLAY_SERVICES_PACKAGE -> GOOGLE_PLAY_SERVICES_PACKAGE
    java.lang.String GOOGLE_PLAY_STORE_PACKAGE -> GOOGLE_PLAY_STORE_PACKAGE
    byte[][] C -> C
    byte[][] D -> D
    byte[][] E -> E
    byte[][] F -> F
    byte[][] G -> G
    boolean H -> H
    boolean I -> I
    boolean J -> J
    java.lang.String getErrorString(int) -> getErrorString
    int isGooglePlayServicesAvailable(android.content.Context) -> isGooglePlayServicesAvailable
    byte[] a(android.content.pm.PackageInfo,byte[][]) -> a
    android.content.Intent a(android.content.Context,int,int) -> a
    boolean b(int) -> b
    int c(int) -> c
    boolean f() -> f
    boolean c(android.content.Context) -> c
    java.lang.String b(android.content.Context,int,int) -> b
    java.lang.String a(android.content.Context,int) -> a
    android.app.Dialog getErrorDialog(int,android.app.Activity,int) -> getErrorDialog
    android.app.PendingIntent getErrorPendingIntent(int,android.content.Context,int) -> getErrorPendingIntent
    android.app.Dialog getErrorDialog(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener) -> getErrorDialog
    android.app.Dialog a(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener,int) -> a
    boolean isUserRecoverableError(int) -> isUserRecoverableError
    java.lang.String getOpenSourceSoftwareLicenseInfo(android.content.Context) -> getOpenSourceSoftwareLicenseInfo
    boolean a(android.content.res.Resources) -> a
    boolean b(android.content.res.Resources) -> b
    android.content.res.Resources getRemoteResource(android.content.Context) -> getRemoteResource
    android.content.Context getRemoteContext(android.content.Context) -> getRemoteContext
    byte[][] a(byte[][][]) -> a
com.google.android.gms.common.Scopes -> com.google.android.gms.common.Scopes:
    java.lang.String PLUS_PROFILE -> PLUS_PROFILE
    java.lang.String PLUS_LOGIN -> PLUS_LOGIN
    java.lang.String GAMES -> GAMES
    java.lang.String APP_STATE -> APP_STATE
com.google.android.gms.common.SignInButton -> com.google.android.gms.common.SignInButton:
    int SIZE_STANDARD -> SIZE_STANDARD
    int SIZE_WIDE -> SIZE_WIDE
    int SIZE_ICON_ONLY -> SIZE_ICON_ONLY
    int COLOR_DARK -> COLOR_DARK
    int COLOR_LIGHT -> COLOR_LIGHT
    int K -> K
    int L -> L
    android.view.View M -> M
    android.view.View$OnClickListener N -> N
    void setSize(int) -> setSize
    void setColorScheme(int) -> setColorScheme
    void setStyle(int,int) -> setStyle
    void d(android.content.Context) -> d
    android.widget.Button c(android.content.Context,int,int) -> c
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setEnabled(boolean) -> setEnabled
    void onClick(android.view.View) -> onClick
com.google.android.gms.common.data.DataBuffer -> com.google.android.gms.common.data.DataBuffer:
    com.google.android.gms.internal.k O -> O
    int getCount() -> getCount
    java.lang.Object get(int) -> get
    void close() -> close
    boolean isClosed() -> isClosed
    int describeContents() -> describeContents
    java.util.Iterator iterator() -> iterator
com.google.android.gms.common.data.DataBufferUtils -> com.google.android.gms.common.data.DataBufferUtils:
    java.util.ArrayList freezeAndClose(com.google.android.gms.common.data.DataBuffer) -> freezeAndClose
com.google.android.gms.common.data.Freezable -> com.google.android.gms.common.data.Freezable:
    java.lang.Object freeze() -> freeze
com.google.android.gms.common.images.ImageManager -> com.google.android.gms.common.images.ImageManager:
    com.google.android.gms.common.images.ImageManager ai -> ai
    android.content.Context mContext -> mContext
    com.google.android.gms.internal.af aj -> aj
    java.util.Map ak -> ak
    java.util.Map al -> al
    com.google.android.gms.common.images.ImageManager create(android.content.Context) -> create
    void loadImage(android.widget.ImageView,android.net.Uri) -> loadImage
    void loadImage(android.widget.ImageView,int) -> loadImage
    void loadImage(android.widget.ImageView,android.net.Uri,int) -> loadImage
    void loadImage(com.google.android.gms.common.images.ImageManager$OnImageLoadedListener,android.net.Uri) -> loadImage
    void loadImage(com.google.android.gms.common.images.ImageManager$OnImageLoadedListener,android.net.Uri,int) -> loadImage
    void a(com.google.android.gms.common.images.ImageManager$ListenerHolder,android.net.Uri) -> a
    android.content.Context a(com.google.android.gms.common.images.ImageManager) -> a
    com.google.android.gms.internal.af b(com.google.android.gms.common.images.ImageManager) -> b
    java.util.Map c(com.google.android.gms.common.images.ImageManager) -> c
    java.util.Map d(com.google.android.gms.common.images.ImageManager) -> d
com.google.android.gms.common.images.ImageManager$1 -> com.google.android.gms.common.images.ImageManager$1:
com.google.android.gms.common.images.ImageManager$ImageReceiver -> com.google.android.gms.common.images.ImageManager$ImageReceiver:
    android.net.Uri mUri -> mUri
    java.util.ArrayList ao -> ao
    com.google.android.gms.common.images.ImageManager an -> an
    void addOnImageLoadedListenerHolder(com.google.android.gms.common.images.ImageManager$ListenerHolder) -> addOnImageLoadedListenerHolder
    void removeOnImageLoadedListenerHolder(com.google.android.gms.common.images.ImageManager$ListenerHolder) -> removeOnImageLoadedListenerHolder
    android.net.Uri getUri() -> getUri
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
com.google.android.gms.common.images.ImageManager$ListenerHolder -> com.google.android.gms.common.images.ImageManager$ListenerHolder:
    int mHashCode -> mHashCode
    int mDefaultResId -> mDefaultResId
    com.google.android.gms.common.images.ImageManager an -> an
    void handleCachedDrawable(android.net.Uri,android.graphics.drawable.Drawable) -> handleCachedDrawable
    boolean shouldLoadImage(android.net.Uri) -> shouldLoadImage
    void onImageLoaded(android.net.Uri,android.graphics.drawable.Drawable) -> onImageLoaded
    int hashCode() -> hashCode
com.google.android.gms.common.images.ImageManager$OnImageLoadedListener -> com.google.android.gms.common.images.ImageManager$OnImageLoadedListener:
    void onImageLoaded(android.net.Uri,android.graphics.drawable.Drawable) -> onImageLoaded
com.google.android.gms.common.images.ImageManager$a -> com.google.android.gms.common.images.ImageManager$a:
    java.lang.ref.WeakReference am -> am
    com.google.android.gms.common.images.ImageManager an -> an
    void handleCachedDrawable(android.net.Uri,android.graphics.drawable.Drawable) -> handleCachedDrawable
    boolean shouldLoadImage(android.net.Uri) -> shouldLoadImage
    void onImageLoaded(android.net.Uri,android.graphics.drawable.Drawable) -> onImageLoaded
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.common.images.ImageManager$b -> com.google.android.gms.common.images.ImageManager$b:
    java.lang.ref.WeakReference ap -> ap
    com.google.android.gms.common.images.ImageManager an -> an
    void handleCachedDrawable(android.net.Uri,android.graphics.drawable.Drawable) -> handleCachedDrawable
    boolean shouldLoadImage(android.net.Uri) -> shouldLoadImage
    void onImageLoaded(android.net.Uri,android.graphics.drawable.Drawable) -> onImageLoaded
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.common.images.ImageManager$c -> com.google.android.gms.common.images.ImageManager$c:
    com.google.android.gms.internal.af aq -> aq
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onLowMemory() -> onLowMemory
    void onTrimMemory(int) -> onTrimMemory
com.google.android.gms.dynamic.LifecycleDelegate -> com.google.android.gms.dynamic.LifecycleDelegate:
    void onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.google.android.gms.games.Game -> com.google.android.gms.games.Game:
    java.lang.String getApplicationId() -> getApplicationId
    java.lang.String getDisplayName() -> getDisplayName
    void getDisplayName(android.database.CharArrayBuffer) -> getDisplayName
    java.lang.String getPrimaryCategory() -> getPrimaryCategory
    java.lang.String getSecondaryCategory() -> getSecondaryCategory
    java.lang.String getDescription() -> getDescription
    void getDescription(android.database.CharArrayBuffer) -> getDescription
    java.lang.String getDeveloperName() -> getDeveloperName
    void getDeveloperName(android.database.CharArrayBuffer) -> getDeveloperName
    android.net.Uri getIconImageUri() -> getIconImageUri
    android.net.Uri getHiResImageUri() -> getHiResImageUri
    android.net.Uri getFeaturedImageUri() -> getFeaturedImageUri
    boolean isPlayEnabledGame() -> isPlayEnabledGame
    boolean isInstanceInstalled() -> isInstanceInstalled
    java.lang.String getInstancePackageName() -> getInstancePackageName
    int getGameplayAclStatus() -> getGameplayAclStatus
    int getAchievementTotalCount() -> getAchievementTotalCount
    int getLeaderboardCount() -> getLeaderboardCount
com.google.android.gms.games.GameBuffer -> com.google.android.gms.games.GameBuffer:
    com.google.android.gms.games.Game get(int) -> get
    java.lang.Object get(int) -> get
com.google.android.gms.games.GameEntity -> com.google.android.gms.games.GameEntity:
    java.lang.String ce -> ce
    java.lang.String bm -> bm
    java.lang.String cf -> cf
    java.lang.String cg -> cg
    java.lang.String ch -> ch
    java.lang.String ci -> ci
    android.net.Uri cj -> cj
    android.net.Uri ck -> ck
    android.net.Uri cl -> cl
    boolean cm -> cm
    boolean cn -> cn
    java.lang.String co -> co
    int cp -> cp
    int cq -> cq
    int cr -> cr
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getApplicationId() -> getApplicationId
    java.lang.String getDisplayName() -> getDisplayName
    void getDisplayName(android.database.CharArrayBuffer) -> getDisplayName
    java.lang.String getPrimaryCategory() -> getPrimaryCategory
    java.lang.String getSecondaryCategory() -> getSecondaryCategory
    java.lang.String getDescription() -> getDescription
    void getDescription(android.database.CharArrayBuffer) -> getDescription
    java.lang.String getDeveloperName() -> getDeveloperName
    void getDeveloperName(android.database.CharArrayBuffer) -> getDeveloperName
    android.net.Uri getIconImageUri() -> getIconImageUri
    android.net.Uri getHiResImageUri() -> getHiResImageUri
    android.net.Uri getFeaturedImageUri() -> getFeaturedImageUri
    boolean isPlayEnabledGame() -> isPlayEnabledGame
    boolean isInstanceInstalled() -> isInstanceInstalled
    java.lang.String getInstancePackageName() -> getInstancePackageName
    int getGameplayAclStatus() -> getGameplayAclStatus
    int getAchievementTotalCount() -> getAchievementTotalCount
    int getLeaderboardCount() -> getLeaderboardCount
    com.google.android.gms.games.Game freeze() -> freeze
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.Game) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.Game,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.Game) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> freeze
com.google.android.gms.games.GameEntity$1 -> com.google.android.gms.games.GameEntity$1:
    com.google.android.gms.games.GameEntity n(android.os.Parcel) -> n
    com.google.android.gms.games.GameEntity[] v(int) -> v
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.GamesActivityResultCodes -> com.google.android.gms.games.GamesActivityResultCodes:
    int RESULT_RECONNECT_REQUIRED -> RESULT_RECONNECT_REQUIRED
    int RESULT_SIGN_IN_FAILED -> RESULT_SIGN_IN_FAILED
    int RESULT_LICENSE_FAILED -> RESULT_LICENSE_FAILED
    int RESULT_APP_MISCONFIGURED -> RESULT_APP_MISCONFIGURED
    int RESULT_LEFT_ROOM -> RESULT_LEFT_ROOM
com.google.android.gms.games.GamesClient -> com.google.android.gms.games.GamesClient:
    int NOTIFICATION_TYPE_INVITATION -> NOTIFICATION_TYPE_INVITATION
    int NOTIFICATION_TYPES_ALL -> NOTIFICATION_TYPES_ALL
    int NOTIFICATION_TYPES_MULTIPLAYER -> NOTIFICATION_TYPES_MULTIPLAYER
    java.lang.String EXTRA_PLAYERS -> EXTRA_PLAYERS
    java.lang.String EXTRA_MIN_AUTOMATCH_PLAYERS -> EXTRA_MIN_AUTOMATCH_PLAYERS
    java.lang.String EXTRA_MAX_AUTOMATCH_PLAYERS -> EXTRA_MAX_AUTOMATCH_PLAYERS
    java.lang.String EXTRA_ROOM -> EXTRA_ROOM
    java.lang.String EXTRA_EXCLUSIVE_BIT_MASK -> EXTRA_EXCLUSIVE_BIT_MASK
    java.lang.String EXTRA_INVITATION -> EXTRA_INVITATION
    int MAX_UNRELIABLE_MESSAGE_LEN -> MAX_UNRELIABLE_MESSAGE_LEN
    int MAX_RELIABLE_MESSAGE_LEN -> MAX_RELIABLE_MESSAGE_LEN
    int STATUS_OK -> STATUS_OK
    int STATUS_INTERNAL_ERROR -> STATUS_INTERNAL_ERROR
    int STATUS_CLIENT_RECONNECT_REQUIRED -> STATUS_CLIENT_RECONNECT_REQUIRED
    int STATUS_NETWORK_ERROR_STALE_DATA -> STATUS_NETWORK_ERROR_STALE_DATA
    int STATUS_NETWORK_ERROR_NO_DATA -> STATUS_NETWORK_ERROR_NO_DATA
    int STATUS_NETWORK_ERROR_OPERATION_DEFERRED -> STATUS_NETWORK_ERROR_OPERATION_DEFERRED
    int STATUS_NETWORK_ERROR_OPERATION_FAILED -> STATUS_NETWORK_ERROR_OPERATION_FAILED
    int STATUS_LICENSE_CHECK_FAILED -> STATUS_LICENSE_CHECK_FAILED
    int STATUS_ACHIEVEMENT_UNLOCK_FAILURE -> STATUS_ACHIEVEMENT_UNLOCK_FAILURE
    int STATUS_ACHIEVEMENT_UNKNOWN -> STATUS_ACHIEVEMENT_UNKNOWN
    int STATUS_ACHIEVEMENT_NOT_INCREMENTAL -> STATUS_ACHIEVEMENT_NOT_INCREMENTAL
    int STATUS_ACHIEVEMENT_UNLOCKED -> STATUS_ACHIEVEMENT_UNLOCKED
    int STATUS_MULTIPLAYER_ERROR_CREATION_NOT_ALLOWED -> STATUS_MULTIPLAYER_ERROR_CREATION_NOT_ALLOWED
    int STATUS_MULTIPLAYER_ERROR_NOT_TRUSTED_TESTER -> STATUS_MULTIPLAYER_ERROR_NOT_TRUSTED_TESTER
    int STATUS_REAL_TIME_CONNECTION_FAILED -> STATUS_REAL_TIME_CONNECTION_FAILED
    int STATUS_REAL_TIME_MESSAGE_SEND_FAILED -> STATUS_REAL_TIME_MESSAGE_SEND_FAILED
    int STATUS_INVALID_REAL_TIME_ROOM_ID -> STATUS_INVALID_REAL_TIME_ROOM_ID
    int STATUS_PARTICIPANT_NOT_CONNECTED -> STATUS_PARTICIPANT_NOT_CONNECTED
    int STATUS_REAL_TIME_ROOM_NOT_JOINED -> STATUS_REAL_TIME_ROOM_NOT_JOINED
    int STATUS_REAL_TIME_INACTIVE_ROOM -> STATUS_REAL_TIME_INACTIVE_ROOM
    int STATUS_REAL_TIME_MESSAGE_FAILED -> STATUS_REAL_TIME_MESSAGE_FAILED
    com.google.android.gms.internal.bj cs -> cs
    void setGravityForPopups(int) -> setGravityForPopups
    void setViewForPopups(android.view.View) -> setViewForPopups
    void connect() -> connect
    boolean isConnected() -> isConnected
    boolean isConnecting() -> isConnecting
    void registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> registerConnectionCallbacks
    boolean isConnectionCallbacksRegistered(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> isConnectionCallbacksRegistered
    void unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> unregisterConnectionCallbacks
    void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> registerConnectionFailedListener
    boolean isConnectionFailedListenerRegistered(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> isConnectionFailedListenerRegistered
    void unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> unregisterConnectionFailedListener
    void disconnect() -> disconnect
    void reconnect() -> reconnect
    java.lang.String getCurrentAccountName() -> getCurrentAccountName
    java.lang.String getCurrentPlayerId() -> getCurrentPlayerId
    com.google.android.gms.games.Player getCurrentPlayer() -> getCurrentPlayer
    void loadPlayer(com.google.android.gms.games.OnPlayersLoadedListener,java.lang.String) -> loadPlayer
    void loadInvitablePlayers(com.google.android.gms.games.OnPlayersLoadedListener,int,boolean) -> loadInvitablePlayers
    void loadMoreInvitablePlayers(com.google.android.gms.games.OnPlayersLoadedListener,int) -> loadMoreInvitablePlayers
    android.content.Intent getAllLeaderboardsIntent() -> getAllLeaderboardsIntent
    android.content.Intent getLeaderboardIntent(java.lang.String) -> getLeaderboardIntent
    void loadLeaderboardMetadata(com.google.android.gms.games.leaderboard.OnLeaderboardMetadataLoadedListener) -> loadLeaderboardMetadata
    void loadLeaderboardMetadata(com.google.android.gms.games.leaderboard.OnLeaderboardMetadataLoadedListener,java.lang.String) -> loadLeaderboardMetadata
    void loadTopScores(com.google.android.gms.games.leaderboard.OnLeaderboardScoresLoadedListener,java.lang.String,int,int,int) -> loadTopScores
    void loadTopScores(com.google.android.gms.games.leaderboard.OnLeaderboardScoresLoadedListener,java.lang.String,int,int,int,boolean) -> loadTopScores
    void loadPlayerCenteredScores(com.google.android.gms.games.leaderboard.OnLeaderboardScoresLoadedListener,java.lang.String,int,int,int) -> loadPlayerCenteredScores
    void loadPlayerCenteredScores(com.google.android.gms.games.leaderboard.OnLeaderboardScoresLoadedListener,java.lang.String,int,int,int,boolean) -> loadPlayerCenteredScores
    void loadMoreScores(com.google.android.gms.games.leaderboard.OnLeaderboardScoresLoadedListener,com.google.android.gms.games.leaderboard.LeaderboardScoreBuffer,int,int) -> loadMoreScores
    void submitScore(java.lang.String,long) -> submitScore
    void submitScoreImmediate(com.google.android.gms.games.leaderboard.OnScoreSubmittedListener,java.lang.String,long) -> submitScoreImmediate
    android.content.Intent getAchievementsIntent() -> getAchievementsIntent
    void loadAchievements(com.google.android.gms.games.achievement.OnAchievementsLoadedListener) -> loadAchievements
    void revealAchievement(java.lang.String) -> revealAchievement
    void revealAchievementImmediate(com.google.android.gms.games.achievement.OnAchievementUpdatedListener,java.lang.String) -> revealAchievementImmediate
    void unlockAchievement(java.lang.String) -> unlockAchievement
    void unlockAchievementImmediate(com.google.android.gms.games.achievement.OnAchievementUpdatedListener,java.lang.String) -> unlockAchievementImmediate
    void incrementAchievement(java.lang.String,int) -> incrementAchievement
    void incrementAchievementImmediate(com.google.android.gms.games.achievement.OnAchievementUpdatedListener,java.lang.String,int) -> incrementAchievementImmediate
    android.content.Intent getInvitationInboxIntent() -> getInvitationInboxIntent
    void registerInvitationListener(com.google.android.gms.games.multiplayer.OnInvitationReceivedListener) -> registerInvitationListener
    void unregisterInvitationListener() -> unregisterInvitationListener
    android.content.Intent getSelectPlayersIntent(int,int) -> getSelectPlayersIntent
    android.content.Intent getRealTimeWaitingRoomIntent(com.google.android.gms.games.multiplayer.realtime.Room,int) -> getRealTimeWaitingRoomIntent
    android.content.Intent getSettingsIntent() -> getSettingsIntent
    void loadGame(com.google.android.gms.games.OnGamesLoadedListener) -> loadGame
    void signOut() -> signOut
    void signOut(com.google.android.gms.games.OnSignOutCompleteListener) -> signOut
    java.lang.String getAppId() -> getAppId
    void createRoom(com.google.android.gms.games.multiplayer.realtime.RoomConfig) -> createRoom
    void joinRoom(com.google.android.gms.games.multiplayer.realtime.RoomConfig) -> joinRoom
    void leaveRoom(com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener,java.lang.String) -> leaveRoom
    int sendReliableRealTimeMessage(com.google.android.gms.games.multiplayer.realtime.RealTimeReliableMessageSentListener,byte[],java.lang.String,java.lang.String) -> sendReliableRealTimeMessage
    int sendUnreliableRealTimeMessage(byte[],java.lang.String,java.lang.String) -> sendUnreliableRealTimeMessage
    int sendUnreliableRealTimeMessage(byte[],java.lang.String,java.util.List) -> sendUnreliableRealTimeMessage
    int sendUnreliableRealTimeMessageToAll(byte[],java.lang.String) -> sendUnreliableRealTimeMessageToAll
    com.google.android.gms.games.RealTimeSocket getRealTimeSocketForParticipant(java.lang.String,java.lang.String) -> getRealTimeSocketForParticipant
    void declineRoomInvitation(java.lang.String) -> declineRoomInvitation
    void dismissRoomInvitation(java.lang.String) -> dismissRoomInvitation
    void loadInvitations(com.google.android.gms.games.multiplayer.OnInvitationsLoadedListener) -> loadInvitations
    void clearAllNotifications() -> clearAllNotifications
    void clearNotifications(int) -> clearNotifications
    void setUseNewPlayerNotificationsFirstParty(boolean) -> setUseNewPlayerNotificationsFirstParty
com.google.android.gms.games.GamesClient$1 -> com.google.android.gms.games.GamesClient$1:
com.google.android.gms.games.GamesClient$Builder -> com.google.android.gms.games.GamesClient$Builder:
    android.content.Context mContext -> mContext
    java.lang.String ct -> ct
    java.lang.String g -> g
    com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks d -> d
    com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener e -> e
    java.lang.String[] f -> f
    int cu -> cu
    android.view.View cv -> cv
    com.google.android.gms.games.GamesClient$Builder setScopes(java.lang.String[]) -> setScopes
    com.google.android.gms.games.GamesClient$Builder setAccountName(java.lang.String) -> setAccountName
    com.google.android.gms.games.GamesClient$Builder setGravityForPopups(int) -> setGravityForPopups
    com.google.android.gms.games.GamesClient$Builder setViewForPopups(android.view.View) -> setViewForPopups
    com.google.android.gms.games.GamesClient create() -> create
com.google.android.gms.games.GamesClientSettings -> com.google.android.gms.games.GamesClientSettings:
    int POPUP_POSITION_TOP -> POPUP_POSITION_TOP
    int POPUP_POSITION_BOTTOM -> POPUP_POSITION_BOTTOM
com.google.android.gms.games.OnGamesLoadedListener -> com.google.android.gms.games.OnGamesLoadedListener:
    void onGamesLoaded(int,com.google.android.gms.games.GameBuffer) -> onGamesLoaded
com.google.android.gms.games.OnPlayersLoadedListener -> com.google.android.gms.games.OnPlayersLoadedListener:
    void onPlayersLoaded(int,com.google.android.gms.games.PlayerBuffer) -> onPlayersLoaded
com.google.android.gms.games.OnSignOutCompleteListener -> com.google.android.gms.games.OnSignOutCompleteListener:
    void onSignOutComplete() -> onSignOutComplete
com.google.android.gms.games.PageDirection -> com.google.android.gms.games.PageDirection:
    int NONE -> NONE
    int NEXT -> NEXT
    int PREV -> PREV
com.google.android.gms.games.Player -> com.google.android.gms.games.Player:
    java.lang.String getPlayerId() -> getPlayerId
    java.lang.String getDisplayName() -> getDisplayName
    void getDisplayName(android.database.CharArrayBuffer) -> getDisplayName
    boolean hasIconImage() -> hasIconImage
    android.net.Uri getIconImageUri() -> getIconImageUri
    boolean hasHiResImage() -> hasHiResImage
    android.net.Uri getHiResImageUri() -> getHiResImageUri
    long getRetrievedTimestamp() -> getRetrievedTimestamp
com.google.android.gms.games.PlayerBuffer -> com.google.android.gms.games.PlayerBuffer:
    com.google.android.gms.games.Player get(int) -> get
    java.lang.Object get(int) -> get
com.google.android.gms.games.PlayerEntity -> com.google.android.gms.games.PlayerEntity:
    java.lang.String cw -> cw
    java.lang.String bm -> bm
    android.net.Uri cj -> cj
    android.net.Uri ck -> ck
    long cx -> cx
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getPlayerId() -> getPlayerId
    java.lang.String getDisplayName() -> getDisplayName
    void getDisplayName(android.database.CharArrayBuffer) -> getDisplayName
    boolean hasIconImage() -> hasIconImage
    android.net.Uri getIconImageUri() -> getIconImageUri
    boolean hasHiResImage() -> hasHiResImage
    android.net.Uri getHiResImageUri() -> getHiResImageUri
    long getRetrievedTimestamp() -> getRetrievedTimestamp
    com.google.android.gms.games.Player freeze() -> freeze
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.Player) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.Player,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.Player) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> freeze
com.google.android.gms.games.PlayerEntity$1 -> com.google.android.gms.games.PlayerEntity$1:
    com.google.android.gms.games.PlayerEntity o(android.os.Parcel) -> o
    com.google.android.gms.games.PlayerEntity[] w(int) -> w
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.RealTimeSocket -> com.google.android.gms.games.RealTimeSocket:
    android.os.ParcelFileDescriptor getParcelFileDescriptor() -> getParcelFileDescriptor
    void close() -> close
    boolean isClosed() -> isClosed
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
com.google.android.gms.games.achievement.Achievement -> com.google.android.gms.games.achievement.Achievement:
    int STATE_UNLOCKED -> STATE_UNLOCKED
    int STATE_REVEALED -> STATE_REVEALED
    int STATE_HIDDEN -> STATE_HIDDEN
    int TYPE_STANDARD -> TYPE_STANDARD
    int TYPE_INCREMENTAL -> TYPE_INCREMENTAL
    java.lang.String getAchievementId() -> getAchievementId
    int getType() -> getType
    java.lang.String getName() -> getName
    void getName(android.database.CharArrayBuffer) -> getName
    java.lang.String getDescription() -> getDescription
    void getDescription(android.database.CharArrayBuffer) -> getDescription
    android.net.Uri getUnlockedImageUri() -> getUnlockedImageUri
    android.net.Uri getRevealedImageUri() -> getRevealedImageUri
    int getTotalSteps() -> getTotalSteps
    java.lang.String getFormattedTotalSteps() -> getFormattedTotalSteps
    void getFormattedTotalSteps(android.database.CharArrayBuffer) -> getFormattedTotalSteps
    com.google.android.gms.games.Player getPlayer() -> getPlayer
    int getState() -> getState
    int getCurrentSteps() -> getCurrentSteps
    java.lang.String getFormattedCurrentSteps() -> getFormattedCurrentSteps
    void getFormattedCurrentSteps(android.database.CharArrayBuffer) -> getFormattedCurrentSteps
    long getLastUpdatedTimestamp() -> getLastUpdatedTimestamp
com.google.android.gms.games.achievement.AchievementBuffer -> com.google.android.gms.games.achievement.AchievementBuffer:
    com.google.android.gms.games.achievement.Achievement get(int) -> get
    java.lang.Object get(int) -> get
com.google.android.gms.games.achievement.OnAchievementUpdatedListener -> com.google.android.gms.games.achievement.OnAchievementUpdatedListener:
    void onAchievementUpdated(int,java.lang.String) -> onAchievementUpdated
com.google.android.gms.games.achievement.OnAchievementsLoadedListener -> com.google.android.gms.games.achievement.OnAchievementsLoadedListener:
    void onAchievementsLoaded(int,com.google.android.gms.games.achievement.AchievementBuffer) -> onAchievementsLoaded
com.google.android.gms.games.leaderboard.Leaderboard -> com.google.android.gms.games.leaderboard.Leaderboard:
    int SCORE_ORDER_SMALLER_IS_BETTER -> SCORE_ORDER_SMALLER_IS_BETTER
    int SCORE_ORDER_LARGER_IS_BETTER -> SCORE_ORDER_LARGER_IS_BETTER
    java.lang.String getLeaderboardId() -> getLeaderboardId
    java.lang.String getDisplayName() -> getDisplayName
    void getDisplayName(android.database.CharArrayBuffer) -> getDisplayName
    android.net.Uri getIconImageUri() -> getIconImageUri
    int getScoreOrder() -> getScoreOrder
    java.util.ArrayList getVariants() -> getVariants
com.google.android.gms.games.leaderboard.LeaderboardBuffer -> com.google.android.gms.games.leaderboard.LeaderboardBuffer:
    java.lang.String getPrimaryDataMarkerColumn() -> getPrimaryDataMarkerColumn
    com.google.android.gms.games.leaderboard.Leaderboard getEntry(int,int) -> getEntry
    java.lang.Object a(int,int) -> a
com.google.android.gms.games.leaderboard.LeaderboardScore -> com.google.android.gms.games.leaderboard.LeaderboardScore:
    long getRank() -> getRank
    java.lang.String getDisplayRank() -> getDisplayRank
    void getDisplayRank(android.database.CharArrayBuffer) -> getDisplayRank
    java.lang.String getDisplayScore() -> getDisplayScore
    void getDisplayScore(android.database.CharArrayBuffer) -> getDisplayScore
    long getRawScore() -> getRawScore
    long getTimestampMillis() -> getTimestampMillis
    java.lang.String getScoreHolderDisplayName() -> getScoreHolderDisplayName
    void getScoreHolderDisplayName(android.database.CharArrayBuffer) -> getScoreHolderDisplayName
    android.net.Uri getScoreHolderIconImageUri() -> getScoreHolderIconImageUri
    android.net.Uri getScoreHolderHiResImageUri() -> getScoreHolderHiResImageUri
    com.google.android.gms.games.Player getScoreHolder() -> getScoreHolder
com.google.android.gms.games.leaderboard.LeaderboardScoreBuffer -> com.google.android.gms.games.leaderboard.LeaderboardScoreBuffer:
    com.google.android.gms.internal.bs dp -> dp
    com.google.android.gms.games.leaderboard.LeaderboardScore get(int) -> get
    com.google.android.gms.internal.bs aq() -> aq
    java.lang.Object get(int) -> get
com.google.android.gms.games.leaderboard.LeaderboardVariant -> com.google.android.gms.games.leaderboard.LeaderboardVariant:
    int COLLECTION_PUBLIC -> COLLECTION_PUBLIC
    int COLLECTION_SOCIAL -> COLLECTION_SOCIAL
    int TIME_SPAN_DAILY -> TIME_SPAN_DAILY
    int TIME_SPAN_WEEKLY -> TIME_SPAN_WEEKLY
    int TIME_SPAN_ALL_TIME -> TIME_SPAN_ALL_TIME
    int NUM_TIME_SPANS -> NUM_TIME_SPANS
    int PLAYER_SCORE_UNKNOWN -> PLAYER_SCORE_UNKNOWN
    int PLAYER_RANK_UNKNOWN -> PLAYER_RANK_UNKNOWN
    int NUM_SCORES_UNKNOWN -> NUM_SCORES_UNKNOWN
    int getTimeSpan() -> getTimeSpan
    int getCollection() -> getCollection
    boolean hasPlayerInfo() -> hasPlayerInfo
    long getRawPlayerScore() -> getRawPlayerScore
    java.lang.String getDisplayPlayerScore() -> getDisplayPlayerScore
    long getPlayerRank() -> getPlayerRank
    java.lang.String getDisplayPlayerRank() -> getDisplayPlayerRank
    long getNumScores() -> getNumScores
com.google.android.gms.games.leaderboard.OnLeaderboardMetadataLoadedListener -> com.google.android.gms.games.leaderboard.OnLeaderboardMetadataLoadedListener:
    void onLeaderboardMetadataLoaded(int,com.google.android.gms.games.leaderboard.LeaderboardBuffer) -> onLeaderboardMetadataLoaded
com.google.android.gms.games.leaderboard.OnLeaderboardScoresLoadedListener -> com.google.android.gms.games.leaderboard.OnLeaderboardScoresLoadedListener:
    void onLeaderboardScoresLoaded(int,com.google.android.gms.games.leaderboard.LeaderboardBuffer,com.google.android.gms.games.leaderboard.LeaderboardScoreBuffer) -> onLeaderboardScoresLoaded
com.google.android.gms.games.leaderboard.OnScoreSubmittedListener -> com.google.android.gms.games.leaderboard.OnScoreSubmittedListener:
    void onScoreSubmitted(int,com.google.android.gms.games.leaderboard.SubmitScoreResult) -> onScoreSubmitted
com.google.android.gms.games.leaderboard.SubmitScoreResult -> com.google.android.gms.games.leaderboard.SubmitScoreResult:
    java.lang.String[] dB -> dB
    java.lang.String dC -> dC
    java.lang.String cw -> cw
    int p -> p
    java.util.HashMap dD -> dD
    java.lang.String getLeaderboardId() -> getLeaderboardId
    java.lang.String getPlayerId() -> getPlayerId
    int getStatusCode() -> getStatusCode
    com.google.android.gms.games.leaderboard.SubmitScoreResult$Result getScoreResult(int) -> getScoreResult
    void a(com.google.android.gms.games.leaderboard.SubmitScoreResult$Result,int) -> a
    java.lang.String toString() -> toString
com.google.android.gms.games.leaderboard.SubmitScoreResult$Result -> com.google.android.gms.games.leaderboard.SubmitScoreResult$Result:
    long rawScore -> rawScore
    java.lang.String formattedScore -> formattedScore
    boolean newBest -> newBest
    java.lang.String toString() -> toString
com.google.android.gms.games.multiplayer.Invitation -> com.google.android.gms.games.multiplayer.Invitation:
    com.google.android.gms.games.Game getGame() -> getGame
    java.lang.String getInvitationId() -> getInvitationId
    com.google.android.gms.games.multiplayer.Participant getInviter() -> getInviter
    long getCreationTimestamp() -> getCreationTimestamp
    int getInvitationType() -> getInvitationType
com.google.android.gms.games.multiplayer.InvitationBuffer -> com.google.android.gms.games.multiplayer.InvitationBuffer:
    java.lang.String getPrimaryDataMarkerColumn() -> getPrimaryDataMarkerColumn
    com.google.android.gms.games.multiplayer.Invitation getEntry(int,int) -> getEntry
    java.lang.Object a(int,int) -> a
com.google.android.gms.games.multiplayer.InvitationEntity -> com.google.android.gms.games.multiplayer.InvitationEntity:
    com.google.android.gms.games.GameEntity dE -> dE
    java.lang.String dF -> dF
    long dG -> dG
    int dH -> dH
    com.google.android.gms.games.multiplayer.Participant dI -> dI
    java.util.ArrayList dJ -> dJ
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.games.Game getGame() -> getGame
    java.lang.String getInvitationId() -> getInvitationId
    com.google.android.gms.games.multiplayer.Participant getInviter() -> getInviter
    long getCreationTimestamp() -> getCreationTimestamp
    java.util.ArrayList getParticipants() -> getParticipants
    int getInvitationType() -> getInvitationType
    com.google.android.gms.games.multiplayer.Invitation freeze() -> freeze
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.multiplayer.Invitation) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.multiplayer.Invitation,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.multiplayer.Invitation) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> freeze
com.google.android.gms.games.multiplayer.InvitationEntity$1 -> com.google.android.gms.games.multiplayer.InvitationEntity$1:
    com.google.android.gms.games.multiplayer.InvitationEntity p(android.os.Parcel) -> p
    com.google.android.gms.games.multiplayer.InvitationEntity[] C(int) -> C
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.OnInvitationReceivedListener -> com.google.android.gms.games.multiplayer.OnInvitationReceivedListener:
    void onInvitationReceived(com.google.android.gms.games.multiplayer.Invitation) -> onInvitationReceived
com.google.android.gms.games.multiplayer.OnInvitationsLoadedListener -> com.google.android.gms.games.multiplayer.OnInvitationsLoadedListener:
    void onInvitationsLoaded(int,com.google.android.gms.games.multiplayer.InvitationBuffer) -> onInvitationsLoaded
com.google.android.gms.games.multiplayer.Participant -> com.google.android.gms.games.multiplayer.Participant:
    int STATUS_INVITED -> STATUS_INVITED
    int STATUS_JOINED -> STATUS_JOINED
    int STATUS_DECLINED -> STATUS_DECLINED
    int STATUS_LEFT -> STATUS_LEFT
    int getStatus() -> getStatus
    java.lang.String getClientAddress() -> getClientAddress
    boolean isConnectedToRoom() -> isConnectedToRoom
    java.lang.String getDisplayName() -> getDisplayName
    void getDisplayName(android.database.CharArrayBuffer) -> getDisplayName
    android.net.Uri getIconImageUri() -> getIconImageUri
    android.net.Uri getHiResImageUri() -> getHiResImageUri
    java.lang.String getParticipantId() -> getParticipantId
    com.google.android.gms.games.Player getPlayer() -> getPlayer
com.google.android.gms.games.multiplayer.ParticipantBuffer -> com.google.android.gms.games.multiplayer.ParticipantBuffer:
    com.google.android.gms.games.multiplayer.Participant get(int) -> get
    java.lang.Object get(int) -> get
com.google.android.gms.games.multiplayer.ParticipantEntity -> com.google.android.gms.games.multiplayer.ParticipantEntity:
    com.google.android.gms.games.PlayerEntity dM -> dM
    java.lang.String dm -> dm
    java.lang.String bm -> bm
    android.net.Uri cj -> cj
    android.net.Uri ck -> ck
    int dN -> dN
    java.lang.String dO -> dO
    boolean dP -> dP
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getStatus() -> getStatus
    java.lang.String getClientAddress() -> getClientAddress
    boolean isConnectedToRoom() -> isConnectedToRoom
    java.lang.String getDisplayName() -> getDisplayName
    void getDisplayName(android.database.CharArrayBuffer) -> getDisplayName
    android.net.Uri getIconImageUri() -> getIconImageUri
    android.net.Uri getHiResImageUri() -> getHiResImageUri
    java.lang.String getParticipantId() -> getParticipantId
    com.google.android.gms.games.Player getPlayer() -> getPlayer
    com.google.android.gms.games.multiplayer.Participant freeze() -> freeze
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.multiplayer.Participant) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.multiplayer.Participant,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.multiplayer.Participant) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> freeze
com.google.android.gms.games.multiplayer.ParticipantEntity$1 -> com.google.android.gms.games.multiplayer.ParticipantEntity$1:
    com.google.android.gms.games.multiplayer.ParticipantEntity q(android.os.Parcel) -> q
    com.google.android.gms.games.multiplayer.ParticipantEntity[] D(int) -> D
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.ParticipantUtils -> com.google.android.gms.games.multiplayer.ParticipantUtils:
    boolean v(java.lang.String) -> v
    java.lang.String getParticipantId(java.util.ArrayList,java.lang.String) -> getParticipantId
com.google.android.gms.games.multiplayer.Participatable -> com.google.android.gms.games.multiplayer.Participatable:
    java.util.ArrayList getParticipants() -> getParticipants
com.google.android.gms.games.multiplayer.realtime.RealTimeMessage -> com.google.android.gms.games.multiplayer.realtime.RealTimeMessage:
    java.lang.String dR -> dR
    byte[] dS -> dS
    int dT -> dT
    int UNRELIABLE -> UNRELIABLE
    int RELIABLE -> RELIABLE
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getSenderParticipantId() -> getSenderParticipantId
    byte[] getMessageData() -> getMessageData
    boolean isReliable() -> isReliable
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.games.multiplayer.realtime.RealTimeMessage$1 -> com.google.android.gms.games.multiplayer.realtime.RealTimeMessage$1:
    com.google.android.gms.games.multiplayer.realtime.RealTimeMessage r(android.os.Parcel) -> r
    com.google.android.gms.games.multiplayer.realtime.RealTimeMessage[] E(int) -> E
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.realtime.RealTimeMessageReceivedListener -> com.google.android.gms.games.multiplayer.realtime.RealTimeMessageReceivedListener:
    void onRealTimeMessageReceived(com.google.android.gms.games.multiplayer.realtime.RealTimeMessage) -> onRealTimeMessageReceived
com.google.android.gms.games.multiplayer.realtime.RealTimeReliableMessageSentListener -> com.google.android.gms.games.multiplayer.realtime.RealTimeReliableMessageSentListener:
    void onRealTimeMessageSent(int,int,java.lang.String) -> onRealTimeMessageSent
com.google.android.gms.games.multiplayer.realtime.Room -> com.google.android.gms.games.multiplayer.realtime.Room:
    int ROOM_VARIANT_ANY -> ROOM_VARIANT_ANY
    int ROOM_STATUS_INVITING -> ROOM_STATUS_INVITING
    int ROOM_STATUS_AUTO_MATCHING -> ROOM_STATUS_AUTO_MATCHING
    int ROOM_STATUS_CONNECTING -> ROOM_STATUS_CONNECTING
    int ROOM_STATUS_ACTIVE -> ROOM_STATUS_ACTIVE
    java.lang.String getRoomId() -> getRoomId
    java.lang.String getCreatorId() -> getCreatorId
    long getCreationTimestamp() -> getCreationTimestamp
    int getStatus() -> getStatus
    java.lang.String getDescription() -> getDescription
    void getDescription(android.database.CharArrayBuffer) -> getDescription
    int getVariant() -> getVariant
    android.os.Bundle getAutoMatchCriteria() -> getAutoMatchCriteria
    int getParticipantStatus(java.lang.String) -> getParticipantStatus
    java.util.ArrayList getParticipantIds() -> getParticipantIds
    java.lang.String getParticipantId(java.lang.String) -> getParticipantId
com.google.android.gms.games.multiplayer.realtime.RoomConfig -> com.google.android.gms.games.multiplayer.realtime.RoomConfig:
    com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener dU -> dU
    com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener dV -> dV
    com.google.android.gms.games.multiplayer.realtime.RealTimeMessageReceivedListener dW -> dW
    java.lang.String dF -> dF
    int dX -> dX
    java.lang.String[] dY -> dY
    android.os.Bundle dZ -> dZ
    boolean ea -> ea
    com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener getRoomUpdateListener() -> getRoomUpdateListener
    java.lang.String getInvitationId() -> getInvitationId
    com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener getRoomStatusUpdateListener() -> getRoomStatusUpdateListener
    com.google.android.gms.games.multiplayer.realtime.RealTimeMessageReceivedListener getMessageReceivedListener() -> getMessageReceivedListener
    int getVariant() -> getVariant
    java.lang.String[] getInvitedPlayerIds() -> getInvitedPlayerIds
    android.os.Bundle getAutoMatchCriteria() -> getAutoMatchCriteria
    boolean isSocketEnabled() -> isSocketEnabled
    com.google.android.gms.games.multiplayer.realtime.RoomConfig$Builder builder(com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener) -> builder
    android.os.Bundle createAutoMatchCriteria(int,int,long) -> createAutoMatchCriteria
com.google.android.gms.games.multiplayer.realtime.RoomConfig$1 -> com.google.android.gms.games.multiplayer.realtime.RoomConfig$1:
com.google.android.gms.games.multiplayer.realtime.RoomConfig$Builder -> com.google.android.gms.games.multiplayer.realtime.RoomConfig$Builder:
    com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener dU -> dU
    com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener dV -> dV
    com.google.android.gms.games.multiplayer.realtime.RealTimeMessageReceivedListener dW -> dW
    java.lang.String eb -> eb
    int dX -> dX
    java.util.ArrayList ec -> ec
    android.os.Bundle dZ -> dZ
    boolean ea -> ea
    com.google.android.gms.games.multiplayer.realtime.RoomConfig$Builder setInvitationIdToAccept(java.lang.String) -> setInvitationIdToAccept
    com.google.android.gms.games.multiplayer.realtime.RoomConfig$Builder setRoomStatusUpdateListener(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener) -> setRoomStatusUpdateListener
    com.google.android.gms.games.multiplayer.realtime.RoomConfig$Builder setMessageReceivedListener(com.google.android.gms.games.multiplayer.realtime.RealTimeMessageReceivedListener) -> setMessageReceivedListener
    com.google.android.gms.games.multiplayer.realtime.RoomConfig$Builder addPlayersToInvite(java.lang.String[]) -> addPlayersToInvite
    com.google.android.gms.games.multiplayer.realtime.RoomConfig$Builder addPlayersToInvite(java.util.ArrayList) -> addPlayersToInvite
    com.google.android.gms.games.multiplayer.realtime.RoomConfig$Builder setVariant(int) -> setVariant
    com.google.android.gms.games.multiplayer.realtime.RoomConfig$Builder setSocketCommunicationEnabled(boolean) -> setSocketCommunicationEnabled
    com.google.android.gms.games.multiplayer.realtime.RoomConfig$Builder setAutoMatchCriteria(android.os.Bundle) -> setAutoMatchCriteria
    com.google.android.gms.games.multiplayer.realtime.RoomConfig build() -> build
com.google.android.gms.games.multiplayer.realtime.RoomEntity -> com.google.android.gms.games.multiplayer.realtime.RoomEntity:
    java.lang.String cU -> cU
    java.lang.String ed -> ed
    long dG -> dG
    int ee -> ee
    java.lang.String ch -> ch
    int dX -> dX
    android.os.Bundle dZ -> dZ
    java.util.ArrayList dJ -> dJ
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getRoomId() -> getRoomId
    java.lang.String getCreatorId() -> getCreatorId
    long getCreationTimestamp() -> getCreationTimestamp
    int getStatus() -> getStatus
    int getParticipantStatus(java.lang.String) -> getParticipantStatus
    java.lang.String getDescription() -> getDescription
    void getDescription(android.database.CharArrayBuffer) -> getDescription
    int getVariant() -> getVariant
    android.os.Bundle getAutoMatchCriteria() -> getAutoMatchCriteria
    java.util.ArrayList getParticipants() -> getParticipants
    java.util.ArrayList getParticipantIds() -> getParticipantIds
    java.lang.String getParticipantId(java.lang.String) -> getParticipantId
    com.google.android.gms.games.multiplayer.realtime.Room freeze() -> freeze
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.multiplayer.realtime.Room) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.multiplayer.realtime.Room,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.multiplayer.realtime.Room) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> freeze
com.google.android.gms.games.multiplayer.realtime.RoomEntity$1 -> com.google.android.gms.games.multiplayer.realtime.RoomEntity$1:
    com.google.android.gms.games.multiplayer.realtime.RoomEntity s(android.os.Parcel) -> s
    com.google.android.gms.games.multiplayer.realtime.RoomEntity[] F(int) -> F
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener -> com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener:
    void onRoomConnecting(com.google.android.gms.games.multiplayer.realtime.Room) -> onRoomConnecting
    void onRoomAutoMatching(com.google.android.gms.games.multiplayer.realtime.Room) -> onRoomAutoMatching
    void onPeerInvitedToRoom(com.google.android.gms.games.multiplayer.realtime.Room,java.util.List) -> onPeerInvitedToRoom
    void onPeerDeclined(com.google.android.gms.games.multiplayer.realtime.Room,java.util.List) -> onPeerDeclined
    void onPeerJoined(com.google.android.gms.games.multiplayer.realtime.Room,java.util.List) -> onPeerJoined
    void onPeerLeft(com.google.android.gms.games.multiplayer.realtime.Room,java.util.List) -> onPeerLeft
    void onConnectedToRoom(com.google.android.gms.games.multiplayer.realtime.Room) -> onConnectedToRoom
    void onDisconnectedFromRoom(com.google.android.gms.games.multiplayer.realtime.Room) -> onDisconnectedFromRoom
    void onPeersConnected(com.google.android.gms.games.multiplayer.realtime.Room,java.util.List) -> onPeersConnected
    void onPeersDisconnected(com.google.android.gms.games.multiplayer.realtime.Room,java.util.List) -> onPeersDisconnected
com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener -> com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener:
    void onRoomCreated(int,com.google.android.gms.games.multiplayer.realtime.Room) -> onRoomCreated
    void onJoinedRoom(int,com.google.android.gms.games.multiplayer.realtime.Room) -> onJoinedRoom
    void onLeftRoom(int,java.lang.String) -> onLeftRoom
    void onRoomConnected(int,com.google.android.gms.games.multiplayer.realtime.Room) -> onRoomConnected
com.google.android.gms.gcm.GoogleCloudMessaging -> com.google.android.gms.gcm.GoogleCloudMessaging:
    java.lang.String ERROR_SERVICE_NOT_AVAILABLE -> ERROR_SERVICE_NOT_AVAILABLE
    java.lang.String ERROR_MAIN_THREAD -> ERROR_MAIN_THREAD
    java.lang.String MESSAGE_TYPE_DELETED -> MESSAGE_TYPE_DELETED
    java.lang.String MESSAGE_TYPE_MESSAGE -> MESSAGE_TYPE_MESSAGE
    java.lang.String MESSAGE_TYPE_SEND_ERROR -> MESSAGE_TYPE_SEND_ERROR
    com.google.android.gms.gcm.GoogleCloudMessaging ef -> ef
    android.content.Context eg -> eg
    android.app.PendingIntent eh -> eh
    java.util.concurrent.BlockingQueue ei -> ei
    android.os.Handler ej -> ej
    android.os.Messenger ek -> ek
    com.google.android.gms.gcm.GoogleCloudMessaging getInstance(android.content.Context) -> getInstance
    void close() -> close
    void send(java.lang.String,java.lang.String,android.os.Bundle) -> send
    void send(java.lang.String,java.lang.String,long,android.os.Bundle) -> send
    void unregister() -> unregister
    void b(java.lang.String[]) -> b
    java.lang.String register(java.lang.String[]) -> register
    void aw() -> aw
    java.lang.String c(java.lang.String[]) -> c
    java.lang.String getMessageType(android.content.Intent) -> getMessageType
    void b(android.content.Intent) -> b
    void ax() -> ax
com.google.android.gms.gcm.GoogleCloudMessaging$1 -> com.google.android.gms.gcm.GoogleCloudMessaging$1:
    com.google.android.gms.gcm.GoogleCloudMessaging el -> el
    void handleMessage(android.os.Message) -> handleMessage
com.google.android.gms.internal.a -> com.google.android.gms.internal.a:
    android.os.Bundle a(java.lang.String,java.lang.String,android.os.Bundle) -> a
com.google.android.gms.internal.a$a -> com.google.android.gms.internal.a$a:
    com.google.android.gms.internal.a a(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.a$a$a -> com.google.android.gms.internal.a$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    android.os.Bundle a(java.lang.String,java.lang.String,android.os.Bundle) -> a
com.google.android.gms.internal.aa -> com.google.android.gms.internal.aa:
    void a(android.content.res.Resources,int,int) -> a
    void c(android.content.res.Resources) -> c
    void b(android.content.res.Resources,int,int) -> b
    void c(android.content.res.Resources,int,int) -> c
    int a(int,int,int) -> a
com.google.android.gms.internal.ab -> com.google.android.gms.internal.ab:
    java.lang.String a(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String) -> a
com.google.android.gms.internal.ac -> com.google.android.gms.internal.ac:
    int b(android.os.Parcel) -> b
    int j(int) -> j
    int a(android.os.Parcel,int) -> a
    void b(android.os.Parcel,int) -> b
    void a(android.os.Parcel,int,int) -> a
    int c(android.os.Parcel) -> c
    boolean c(android.os.Parcel,int) -> c
    byte d(android.os.Parcel,int) -> d
    short e(android.os.Parcel,int) -> e
    int f(android.os.Parcel,int) -> f
    long g(android.os.Parcel,int) -> g
    java.math.BigInteger h(android.os.Parcel,int) -> h
    float i(android.os.Parcel,int) -> i
    double j(android.os.Parcel,int) -> j
    java.math.BigDecimal k(android.os.Parcel,int) -> k
    java.lang.String l(android.os.Parcel,int) -> l
    android.os.IBinder m(android.os.Parcel,int) -> m
    android.os.Parcelable a(android.os.Parcel,int,android.os.Parcelable$Creator) -> a
    android.os.Bundle n(android.os.Parcel,int) -> n
    byte[] o(android.os.Parcel,int) -> o
    boolean[] p(android.os.Parcel,int) -> p
    int[] q(android.os.Parcel,int) -> q
    long[] r(android.os.Parcel,int) -> r
    java.math.BigInteger[] s(android.os.Parcel,int) -> s
    float[] t(android.os.Parcel,int) -> t
    double[] u(android.os.Parcel,int) -> u
    java.math.BigDecimal[] v(android.os.Parcel,int) -> v
    java.lang.String[] w(android.os.Parcel,int) -> w
    java.util.ArrayList x(android.os.Parcel,int) -> x
    java.lang.Object[] b(android.os.Parcel,int,android.os.Parcelable$Creator) -> b
    java.util.ArrayList c(android.os.Parcel,int,android.os.Parcelable$Creator) -> c
    android.os.Parcel y(android.os.Parcel,int) -> y
    android.os.Parcel[] z(android.os.Parcel,int) -> z
    void a(android.os.Parcel,int,java.util.List,java.lang.ClassLoader) -> a
com.google.android.gms.internal.ac$a -> com.google.android.gms.internal.ac$a:
com.google.android.gms.internal.ad -> com.google.android.gms.internal.ad:
    void b(android.os.Parcel,int,int) -> b
    int A(android.os.Parcel,int) -> A
    void B(android.os.Parcel,int) -> B
    int d(android.os.Parcel) -> d
    void C(android.os.Parcel,int) -> C
    void a(android.os.Parcel,int,boolean) -> a
    void a(android.os.Parcel,int,byte) -> a
    void a(android.os.Parcel,int,short) -> a
    void c(android.os.Parcel,int,int) -> c
    void a(android.os.Parcel,int,long) -> a
    void a(android.os.Parcel,int,float) -> a
    void a(android.os.Parcel,int,double) -> a
    void a(android.os.Parcel,int,java.lang.String,boolean) -> a
    void a(android.os.Parcel,int,android.os.IBinder,boolean) -> a
    void a(android.os.Parcel,int,android.os.Parcelable,int,boolean) -> a
    void a(android.os.Parcel,int,android.os.Bundle,boolean) -> a
    void a(android.os.Parcel,int,byte[],boolean) -> a
    void a(android.os.Parcel,int,java.lang.String[],boolean) -> a
    void a(android.os.Parcel,int,java.util.List,boolean) -> a
    void a(android.os.Parcel,int,android.os.Parcelable[],int,boolean) -> a
    void b(android.os.Parcel,int,java.util.List,boolean) -> b
    void a(android.os.Parcel,android.os.Parcelable,int) -> a
    void a(android.os.Parcel,int,android.os.Parcel,boolean) -> a
    void c(android.os.Parcel,int,java.util.List,boolean) -> c
com.google.android.gms.internal.ae -> com.google.android.gms.internal.ae:
com.google.android.gms.internal.af -> com.google.android.gms.internal.af:
    java.util.LinkedHashMap bb -> bb
    int size -> size
    int bc -> bc
    int bd -> bd
    int be -> be
    int bf -> bf
    int bg -> bg
    int bh -> bh
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int c(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    java.lang.String toString() -> toString
com.google.android.gms.internal.ag -> com.google.android.gms.internal.ag:
    com.google.android.gms.internal.ah CREATOR -> CREATOR
    int T -> T
    int bi -> bi
    int bj -> bj
    java.lang.String bk -> bk
    java.lang.String bl -> bl
    java.lang.String bm -> bm
    java.lang.String bn -> bn
    int u() -> u
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getType() -> getType
    int v() -> v
    java.lang.String w() -> w
    java.lang.String x() -> x
    java.lang.String getDisplayName() -> getDisplayName
    java.lang.String y() -> y
    boolean z() -> z
    boolean A() -> A
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.internal.ah -> com.google.android.gms.internal.ah:
    com.google.android.gms.internal.ag e(android.os.Parcel) -> e
    com.google.android.gms.internal.ag[] k(int) -> k
    void a(com.google.android.gms.internal.ag,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ai -> com.google.android.gms.internal.ai:
    com.google.android.gms.internal.aj CREATOR -> CREATOR
    int T -> T
    com.google.android.gms.internal.ak bo -> bo
    int u() -> u
    com.google.android.gms.internal.ak B() -> B
    com.google.android.gms.internal.ai a(com.google.android.gms.internal.an$b) -> a
    com.google.android.gms.internal.an$b C() -> C
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.aj -> com.google.android.gms.internal.aj:
    com.google.android.gms.internal.ai f(android.os.Parcel) -> f
    com.google.android.gms.internal.ai[] l(int) -> l
    void a(com.google.android.gms.internal.ai,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ak -> com.google.android.gms.internal.ak:
    com.google.android.gms.internal.al CREATOR -> CREATOR
    int T -> T
    java.util.HashMap bp -> bp
    java.util.HashMap bq -> bq
    java.util.ArrayList br -> br
    void a(java.util.ArrayList) -> a
    int u() -> u
    java.util.ArrayList D() -> D
    com.google.android.gms.internal.ak b(java.lang.String,int) -> b
    int E() -> E
    int F() -> F
    java.lang.String a(java.lang.Integer) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object e(java.lang.Object) -> e
com.google.android.gms.internal.ak$a -> com.google.android.gms.internal.ak$a:
    com.google.android.gms.internal.am CREATOR -> CREATOR
    int versionCode -> versionCode
    java.lang.String bs -> bs
    int bt -> bt
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.al -> com.google.android.gms.internal.al:
    com.google.android.gms.internal.ak g(android.os.Parcel) -> g
    com.google.android.gms.internal.ak[] m(int) -> m
    void a(com.google.android.gms.internal.ak,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.am -> com.google.android.gms.internal.am:
    com.google.android.gms.internal.ak$a h(android.os.Parcel) -> h
    com.google.android.gms.internal.ak$a[] n(int) -> n
    void a(com.google.android.gms.internal.ak$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.an -> com.google.android.gms.internal.an:
    java.util.HashMap G() -> G
    java.lang.Object j(java.lang.String) -> j
    boolean a(com.google.android.gms.internal.an$a) -> a
    boolean k(java.lang.String) -> k
    boolean l(java.lang.String) -> l
    boolean m(java.lang.String) -> m
    java.lang.Object a(com.google.android.gms.internal.an$a,java.lang.Object) -> a
    java.util.HashMap H() -> H
    java.util.HashMap I() -> I
    java.lang.String toString() -> toString
    java.lang.Object b(com.google.android.gms.internal.an$a) -> b
    void a(java.lang.StringBuilder,com.google.android.gms.internal.an$a,java.lang.Object) -> a
    void a(java.lang.StringBuilder,com.google.android.gms.internal.an$a,java.util.ArrayList) -> a
com.google.android.gms.internal.an$a -> com.google.android.gms.internal.an$a:
    int T -> T
    int bu -> bu
    boolean bv -> bv
    int bw -> bw
    boolean bx -> bx
    java.lang.String by -> by
    int bz -> bz
    java.lang.Class bA -> bA
    java.lang.String bB -> bB
    com.google.android.gms.internal.aq bC -> bC
    com.google.android.gms.internal.an$b bD -> bD
    com.google.android.gms.internal.ao CREATOR -> CREATOR
    com.google.android.gms.internal.an$a J() -> J
    int u() -> u
    int E() -> E
    boolean K() -> K
    int F() -> F
    boolean L() -> L
    java.lang.String M() -> M
    int N() -> N
    java.lang.Class O() -> O
    java.lang.String P() -> P
    boolean Q() -> Q
    void a(com.google.android.gms.internal.aq) -> a
    com.google.android.gms.internal.ai R() -> R
    java.util.HashMap S() -> S
    java.lang.Object e(java.lang.Object) -> e
    com.google.android.gms.internal.an$a c(java.lang.String,int) -> c
    com.google.android.gms.internal.an$a d(java.lang.String,int) -> d
    com.google.android.gms.internal.an$a e(java.lang.String,int) -> e
    com.google.android.gms.internal.an$a f(java.lang.String,int) -> f
    com.google.android.gms.internal.an$a g(java.lang.String,int) -> g
    com.google.android.gms.internal.an$a a(java.lang.String,int,java.lang.Class) -> a
    com.google.android.gms.internal.an$a b(java.lang.String,int,java.lang.Class) -> b
    com.google.android.gms.internal.an$a a(java.lang.String,int,com.google.android.gms.internal.an$b,boolean) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    com.google.android.gms.internal.an$b c(com.google.android.gms.internal.an$a) -> c
com.google.android.gms.internal.an$b -> com.google.android.gms.internal.an$b:
    int E() -> E
    int F() -> F
    java.lang.Object e(java.lang.Object) -> e
com.google.android.gms.internal.ao -> com.google.android.gms.internal.ao:
    com.google.android.gms.internal.an$a i(android.os.Parcel) -> i
    com.google.android.gms.internal.an$a[] o(int) -> o
    void a(com.google.android.gms.internal.an$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ap -> com.google.android.gms.internal.ap:
    com.google.android.gms.internal.aq$b j(android.os.Parcel) -> j
    com.google.android.gms.internal.aq$b[] p(int) -> p
    void a(com.google.android.gms.internal.aq$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.aq -> com.google.android.gms.internal.aq:
    com.google.android.gms.internal.ar CREATOR -> CREATOR
    int T -> T
    java.util.HashMap bE -> bE
    java.util.ArrayList bF -> bF
    java.lang.String bG -> bG
    void T() -> T
    java.util.HashMap b(java.util.ArrayList) -> b
    void U() -> U
    int u() -> u
    java.util.ArrayList V() -> V
    void a(java.lang.Class,java.util.HashMap) -> a
    java.util.HashMap n(java.lang.String) -> n
    boolean a(java.lang.Class) -> a
    java.lang.String W() -> W
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.aq$a -> com.google.android.gms.internal.aq$a:
    com.google.android.gms.internal.as CREATOR -> CREATOR
    int versionCode -> versionCode
    java.lang.String className -> className
    java.util.ArrayList bH -> bH
    java.util.ArrayList a(java.util.HashMap) -> a
    java.util.HashMap X() -> X
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.aq$b -> com.google.android.gms.internal.aq$b:
    com.google.android.gms.internal.ap CREATOR -> CREATOR
    int versionCode -> versionCode
    java.lang.String bI -> bI
    com.google.android.gms.internal.an$a bJ -> bJ
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.ar -> com.google.android.gms.internal.ar:
    com.google.android.gms.internal.aq k(android.os.Parcel) -> k
    com.google.android.gms.internal.aq[] q(int) -> q
    void a(com.google.android.gms.internal.aq,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.as -> com.google.android.gms.internal.as:
    com.google.android.gms.internal.aq$a l(android.os.Parcel) -> l
    com.google.android.gms.internal.aq$a[] r(int) -> r
    void a(com.google.android.gms.internal.aq$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.at -> com.google.android.gms.internal.at:
    int T -> T
    android.os.Parcel bK -> bK
    int bL -> bL
    com.google.android.gms.internal.aq bC -> bC
    java.lang.String mClassName -> mClassName
    int bM -> bM
    int bN -> bN
    com.google.android.gms.internal.au CREATOR -> CREATOR
    com.google.android.gms.internal.at a(com.google.android.gms.internal.an) -> a
    com.google.android.gms.internal.aq b(com.google.android.gms.internal.an) -> b
    void a(com.google.android.gms.internal.aq,com.google.android.gms.internal.an) -> a
    com.google.android.gms.internal.ae a(android.os.Parcelable$Creator) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int u() -> u
    android.os.Parcel Y() -> Y
    com.google.android.gms.internal.aq Z() -> Z
    java.util.HashMap G() -> G
    java.lang.Object j(java.lang.String) -> j
    boolean k(java.lang.String) -> k
    java.lang.String toString() -> toString
    void a(java.lang.StringBuilder,java.util.HashMap,android.os.Parcel) -> a
    java.util.HashMap b(java.util.HashMap) -> b
    void a(java.lang.StringBuilder,java.lang.String,com.google.android.gms.internal.an$a,android.os.Parcel,int) -> a
    void a(java.lang.StringBuilder,com.google.android.gms.internal.an$a,android.os.Parcel,int) -> a
    void b(java.lang.StringBuilder,com.google.android.gms.internal.an$a,android.os.Parcel,int) -> b
    void b(java.lang.StringBuilder,com.google.android.gms.internal.an$a,java.lang.Object) -> b
    void b(java.lang.StringBuilder,com.google.android.gms.internal.an$a,java.util.ArrayList) -> b
    void a(java.lang.StringBuilder,int,java.lang.Object) -> a
    java.util.HashMap a(android.os.Bundle) -> a
com.google.android.gms.internal.au -> com.google.android.gms.internal.au:
    com.google.android.gms.internal.at m(android.os.Parcel) -> m
    com.google.android.gms.internal.at[] s(int) -> s
    void a(com.google.android.gms.internal.at,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.av -> com.google.android.gms.internal.av:
    boolean a(java.lang.Object[],java.lang.Object) -> a
    void a(java.lang.StringBuilder,java.lang.Object[]) -> a
    void a(java.lang.StringBuilder,int[]) -> a
    void a(java.lang.StringBuilder,long[]) -> a
    void a(java.lang.StringBuilder,float[]) -> a
    void a(java.lang.StringBuilder,double[]) -> a
    void a(java.lang.StringBuilder,boolean[]) -> a
    void a(java.lang.StringBuilder,java.lang.String[]) -> a
com.google.android.gms.internal.aw -> com.google.android.gms.internal.aw:
    java.lang.String a(byte[]) -> a
    java.lang.String b(byte[]) -> b
com.google.android.gms.internal.ax -> com.google.android.gms.internal.ax:
    void b(java.lang.String,android.database.CharArrayBuffer) -> b
com.google.android.gms.internal.ay -> com.google.android.gms.internal.ay:
    java.util.regex.Pattern bO -> bO
    java.util.regex.Pattern bP -> bP
    java.lang.String o(java.lang.String) -> o
com.google.android.gms.internal.az -> com.google.android.gms.internal.az:
    void a(java.lang.StringBuilder,java.util.HashMap) -> a
com.google.android.gms.internal.b -> com.google.android.gms.internal.b:
    int h -> h
    java.lang.String i -> i
    byte[] j -> j
    boolean k -> k
    java.lang.String l -> l
    byte[] m -> m
    int getKey() -> getKey
    java.lang.String getLocalVersion() -> getLocalVersion
    byte[] getLocalData() -> getLocalData
    boolean hasConflict() -> hasConflict
    java.lang.String getConflictVersion() -> getConflictVersion
    byte[] getConflictData() -> getConflictData
    com.google.android.gms.appstate.AppState a() -> a
    int hashCode() -> hashCode
    int a(com.google.android.gms.appstate.AppState) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.appstate.AppState,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.appstate.AppState) -> b
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.ba -> com.google.android.gms.internal.ba:
    boolean aa() -> aa
    boolean ab() -> ab
    boolean ac() -> ac
    boolean ad() -> ad
    boolean ae() -> ae
    boolean af() -> af
    boolean t(int) -> t
com.google.android.gms.internal.bb -> com.google.android.gms.internal.bb:
    com.google.android.gms.dynamic.LifecycleDelegate bQ -> bQ
    android.os.Bundle bR -> bR
    java.util.LinkedList bS -> bS
    com.google.android.gms.internal.be bT -> bT
    com.google.android.gms.dynamic.LifecycleDelegate ag() -> ag
    void u(int) -> u
    void a(android.os.Bundle,com.google.android.gms.internal.bb$a) -> a
    void a(com.google.android.gms.internal.be) -> a
    void onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void a(android.widget.FrameLayout) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onLowMemory() -> onLowMemory
    com.google.android.gms.dynamic.LifecycleDelegate a(com.google.android.gms.internal.bb,com.google.android.gms.dynamic.LifecycleDelegate) -> a
    java.util.LinkedList a(com.google.android.gms.internal.bb) -> a
    com.google.android.gms.dynamic.LifecycleDelegate b(com.google.android.gms.internal.bb) -> b
    android.os.Bundle a(com.google.android.gms.internal.bb,android.os.Bundle) -> a
com.google.android.gms.internal.bb$1 -> com.google.android.gms.internal.bb$1:
    com.google.android.gms.internal.bb bU -> bU
    void a(com.google.android.gms.dynamic.LifecycleDelegate) -> a
com.google.android.gms.internal.bb$2 -> com.google.android.gms.internal.bb$2:
    android.app.Activity bV -> bV
    android.os.Bundle bW -> bW
    android.os.Bundle bX -> bX
    com.google.android.gms.internal.bb bU -> bU
    int getState() -> getState
    void b(com.google.android.gms.dynamic.LifecycleDelegate) -> b
com.google.android.gms.internal.bb$3 -> com.google.android.gms.internal.bb$3:
    android.os.Bundle bX -> bX
    com.google.android.gms.internal.bb bU -> bU
    int getState() -> getState
    void b(com.google.android.gms.dynamic.LifecycleDelegate) -> b
com.google.android.gms.internal.bb$4 -> com.google.android.gms.internal.bb$4:
    android.widget.FrameLayout bY -> bY
    android.view.LayoutInflater bZ -> bZ
    android.view.ViewGroup ca -> ca
    android.os.Bundle bX -> bX
    com.google.android.gms.internal.bb bU -> bU
    int getState() -> getState
    void b(com.google.android.gms.dynamic.LifecycleDelegate) -> b
com.google.android.gms.internal.bb$5 -> com.google.android.gms.internal.bb$5:
    android.content.Context cb -> cb
    int cc -> cc
    com.google.android.gms.internal.bb bU -> bU
    void onClick(android.view.View) -> onClick
com.google.android.gms.internal.bb$6 -> com.google.android.gms.internal.bb$6:
    com.google.android.gms.internal.bb bU -> bU
    int getState() -> getState
    void b(com.google.android.gms.dynamic.LifecycleDelegate) -> b
com.google.android.gms.internal.bb$a -> com.google.android.gms.internal.bb$a:
    int getState() -> getState
    void b(com.google.android.gms.dynamic.LifecycleDelegate) -> b
com.google.android.gms.internal.bc -> com.google.android.gms.internal.bc:
com.google.android.gms.internal.bc$a -> com.google.android.gms.internal.bc$a:
    com.google.android.gms.internal.bc j(android.os.IBinder) -> j
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.bc$a$a -> com.google.android.gms.internal.bc$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
com.google.android.gms.internal.bd -> com.google.android.gms.internal.bd:
    java.lang.Object cd -> cd
    com.google.android.gms.internal.bc f(java.lang.Object) -> f
    java.lang.Object a(com.google.android.gms.internal.bc) -> a
com.google.android.gms.internal.be -> com.google.android.gms.internal.be:
    void a(com.google.android.gms.dynamic.LifecycleDelegate) -> a
com.google.android.gms.internal.bf -> com.google.android.gms.internal.bf:
    java.lang.String getApplicationId() -> getApplicationId
    java.lang.String getDisplayName() -> getDisplayName
    void getDisplayName(android.database.CharArrayBuffer) -> getDisplayName
    java.lang.String getPrimaryCategory() -> getPrimaryCategory
    java.lang.String getSecondaryCategory() -> getSecondaryCategory
    java.lang.String getDescription() -> getDescription
    void getDescription(android.database.CharArrayBuffer) -> getDescription
    java.lang.String getDeveloperName() -> getDeveloperName
    void getDeveloperName(android.database.CharArrayBuffer) -> getDeveloperName
    android.net.Uri getIconImageUri() -> getIconImageUri
    android.net.Uri getHiResImageUri() -> getHiResImageUri
    android.net.Uri getFeaturedImageUri() -> getFeaturedImageUri
    boolean isPlayEnabledGame() -> isPlayEnabledGame
    boolean isInstanceInstalled() -> isInstanceInstalled
    java.lang.String getInstancePackageName() -> getInstancePackageName
    int getGameplayAclStatus() -> getGameplayAclStatus
    int getAchievementTotalCount() -> getAchievementTotalCount
    int getLeaderboardCount() -> getLeaderboardCount
    com.google.android.gms.games.Game freeze() -> freeze
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.bg -> com.google.android.gms.internal.bg:
    java.lang.String getPlayerId() -> getPlayerId
    java.lang.String getDisplayName() -> getDisplayName
    void getDisplayName(android.database.CharArrayBuffer) -> getDisplayName
    boolean hasIconImage() -> hasIconImage
    android.net.Uri getIconImageUri() -> getIconImageUri
    boolean hasHiResImage() -> hasHiResImage
    android.net.Uri getHiResImageUri() -> getHiResImageUri
    long getRetrievedTimestamp() -> getRetrievedTimestamp
    com.google.android.gms.games.Player freeze() -> freeze
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.bh -> com.google.android.gms.internal.bh:
    java.lang.String getAchievementId() -> getAchievementId
    int getType() -> getType
    java.lang.String getName() -> getName
    void getName(android.database.CharArrayBuffer) -> getName
    java.lang.String getDescription() -> getDescription
    void getDescription(android.database.CharArrayBuffer) -> getDescription
    android.net.Uri getUnlockedImageUri() -> getUnlockedImageUri
    android.net.Uri getRevealedImageUri() -> getRevealedImageUri
    int getTotalSteps() -> getTotalSteps
    java.lang.String getFormattedTotalSteps() -> getFormattedTotalSteps
    void getFormattedTotalSteps(android.database.CharArrayBuffer) -> getFormattedTotalSteps
    com.google.android.gms.games.Player getPlayer() -> getPlayer
    int getState() -> getState
    int getCurrentSteps() -> getCurrentSteps
    java.lang.String getFormattedCurrentSteps() -> getFormattedCurrentSteps
    void getFormattedCurrentSteps(android.database.CharArrayBuffer) -> getFormattedCurrentSteps
    long getLastUpdatedTimestamp() -> getLastUpdatedTimestamp
    java.lang.String toString() -> toString
com.google.android.gms.internal.bi -> com.google.android.gms.internal.bi:
    void a(int,java.lang.String) -> a
    void b(com.google.android.gms.internal.k) -> b
    void onAchievementUpdated(int,java.lang.String) -> onAchievementUpdated
    void c(com.google.android.gms.internal.k) -> c
    void a(com.google.android.gms.internal.k,com.google.android.gms.internal.k) -> a
    void d(com.google.android.gms.internal.k) -> d
    void e(com.google.android.gms.internal.k) -> e
    void f(com.google.android.gms.internal.k) -> f
    void g(com.google.android.gms.internal.k) -> g
    void h(com.google.android.gms.internal.k) -> h
    void i(com.google.android.gms.internal.k) -> i
    void j(com.google.android.gms.internal.k) -> j
    void k(com.google.android.gms.internal.k) -> k
    void l(com.google.android.gms.internal.k) -> l
    void x(int) -> x
    void m(com.google.android.gms.internal.k) -> m
    void y(int) -> y
    void n(com.google.android.gms.internal.k) -> n
    void o(com.google.android.gms.internal.k) -> o
    void onLeftRoom(int,java.lang.String) -> onLeftRoom
    void p(com.google.android.gms.internal.k) -> p
    void q(com.google.android.gms.internal.k) -> q
    void r(com.google.android.gms.internal.k) -> r
    void s(com.google.android.gms.internal.k) -> s
    void t(com.google.android.gms.internal.k) -> t
    void a(com.google.android.gms.internal.k,java.lang.String[]) -> a
    void b(com.google.android.gms.internal.k,java.lang.String[]) -> b
    void c(com.google.android.gms.internal.k,java.lang.String[]) -> c
    void d(com.google.android.gms.internal.k,java.lang.String[]) -> d
    void e(com.google.android.gms.internal.k,java.lang.String[]) -> e
    void f(com.google.android.gms.internal.k,java.lang.String[]) -> f
    void onRealTimeMessageReceived(com.google.android.gms.games.multiplayer.realtime.RealTimeMessage) -> onRealTimeMessageReceived
    void a(int,int,java.lang.String) -> a
    void onSignOutComplete() -> onSignOutComplete
    void a(int,java.lang.String,boolean) -> a
    void u(com.google.android.gms.internal.k) -> u
    void v(com.google.android.gms.internal.k) -> v
    void z(int) -> z
    void w(com.google.android.gms.internal.k) -> w
    void A(int) -> A
com.google.android.gms.internal.bj -> com.google.android.gms.internal.bj:
    java.lang.String cy -> cy
    java.lang.String g -> g
    java.util.Map cz -> cz
    com.google.android.gms.games.PlayerEntity cA -> cA
    com.google.android.gms.internal.bn cB -> cB
    boolean cC -> cC
    android.os.Binder cD -> cD
    long cE -> cE
    boolean cF -> cF
    void setGravityForPopups(int) -> setGravityForPopups
    void setViewForPopups(android.view.View) -> setViewForPopups
    void a(java.lang.String[]) -> a
    void connect() -> connect
    void disconnect() -> disconnect
    java.lang.String b() -> b
    java.lang.String c() -> c
    com.google.android.gms.internal.bm k(android.os.IBinder) -> k
    android.os.Bundle l() -> l
    void ah() -> ah
    void a(com.google.android.gms.internal.u,com.google.android.gms.internal.p$d) -> a
    void k() -> k
    void a(com.google.android.gms.common.ConnectionResult) -> a
    java.lang.String getCurrentAccountName() -> getCurrentAccountName
    java.lang.String getCurrentPlayerId() -> getCurrentPlayerId
    com.google.android.gms.games.Player getCurrentPlayer() -> getCurrentPlayer
    void loadPlayer(com.google.android.gms.games.OnPlayersLoadedListener,java.lang.String) -> loadPlayer
    void a(com.google.android.gms.games.OnPlayersLoadedListener,int,boolean,boolean) -> a
    android.content.Intent getAllLeaderboardsIntent() -> getAllLeaderboardsIntent
    android.content.Intent getLeaderboardIntent(java.lang.String) -> getLeaderboardIntent
    void loadLeaderboardMetadata(com.google.android.gms.games.leaderboard.OnLeaderboardMetadataLoadedListener) -> loadLeaderboardMetadata
    void loadLeaderboardMetadata(com.google.android.gms.games.leaderboard.OnLeaderboardMetadataLoadedListener,java.lang.String) -> loadLeaderboardMetadata
    void loadTopScores(com.google.android.gms.games.leaderboard.OnLeaderboardScoresLoadedListener,java.lang.String,int,int,int,boolean) -> loadTopScores
    void loadPlayerCenteredScores(com.google.android.gms.games.leaderboard.OnLeaderboardScoresLoadedListener,java.lang.String,int,int,int,boolean) -> loadPlayerCenteredScores
    void loadMoreScores(com.google.android.gms.games.leaderboard.OnLeaderboardScoresLoadedListener,com.google.android.gms.games.leaderboard.LeaderboardScoreBuffer,int,int) -> loadMoreScores
    void a(com.google.android.gms.games.leaderboard.OnScoreSubmittedListener,java.lang.String,long) -> a
    android.content.Intent getAchievementsIntent() -> getAchievementsIntent
    void loadAchievements(com.google.android.gms.games.achievement.OnAchievementsLoadedListener) -> loadAchievements
    void a(com.google.android.gms.games.achievement.OnAchievementUpdatedListener,java.lang.String) -> a
    void b(com.google.android.gms.games.achievement.OnAchievementUpdatedListener,java.lang.String) -> b
    void a(com.google.android.gms.games.achievement.OnAchievementUpdatedListener,java.lang.String,int) -> a
    android.content.Intent getInvitationInboxIntent() -> getInvitationInboxIntent
    void registerInvitationListener(com.google.android.gms.games.multiplayer.OnInvitationReceivedListener) -> registerInvitationListener
    void unregisterInvitationListener() -> unregisterInvitationListener
    android.content.Intent getSelectPlayersIntent(int,int) -> getSelectPlayersIntent
    android.content.Intent getRealTimeWaitingRoomIntent(com.google.android.gms.games.multiplayer.realtime.Room,int) -> getRealTimeWaitingRoomIntent
    android.content.Intent getSettingsIntent() -> getSettingsIntent
    void loadGame(com.google.android.gms.games.OnGamesLoadedListener) -> loadGame
    void signOut(com.google.android.gms.games.OnSignOutCompleteListener) -> signOut
    java.lang.String getAppId() -> getAppId
    void loadInvitations(com.google.android.gms.games.multiplayer.OnInvitationsLoadedListener) -> loadInvitations
    void h(java.lang.String,int) -> h
    void i(java.lang.String,int) -> i
    void createRoom(com.google.android.gms.games.multiplayer.realtime.RoomConfig) -> createRoom
    void joinRoom(com.google.android.gms.games.multiplayer.realtime.RoomConfig) -> joinRoom
    void leaveRoom(com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener,java.lang.String) -> leaveRoom
    int sendReliableRealTimeMessage(com.google.android.gms.games.multiplayer.realtime.RealTimeReliableMessageSentListener,byte[],java.lang.String,java.lang.String) -> sendReliableRealTimeMessage
    int a(byte[],java.lang.String,java.lang.String[]) -> a
    int sendUnreliableRealTimeMessageToAll(byte[],java.lang.String) -> sendUnreliableRealTimeMessageToAll
    com.google.android.gms.games.RealTimeSocket getRealTimeSocketForParticipant(java.lang.String,java.lang.String) -> getRealTimeSocketForParticipant
    com.google.android.gms.internal.bo p(java.lang.String) -> p
    void clearNotifications(int) -> clearNotifications
    void setUseNewPlayerNotificationsFirstParty(boolean) -> setUseNewPlayerNotificationsFirstParty
    void ai() -> ai
    void a(android.os.IBinder,android.os.Bundle) -> a
    void aj() -> aj
    com.google.android.gms.games.multiplayer.realtime.Room x(com.google.android.gms.internal.k) -> x
    android.os.IInterface c(android.os.IBinder) -> c
    com.google.android.gms.games.multiplayer.realtime.Room a(com.google.android.gms.internal.bj,com.google.android.gms.internal.k) -> a
    boolean a(com.google.android.gms.internal.bj,boolean) -> a
com.google.android.gms.internal.bj$a -> com.google.android.gms.internal.bj$a:
    java.util.ArrayList cG -> cG
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room) -> a
    void a(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room,java.util.ArrayList) -> a
com.google.android.gms.internal.bj$aa -> com.google.android.gms.internal.bj$aa:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room,java.util.ArrayList) -> a
com.google.android.gms.internal.bj$ab -> com.google.android.gms.internal.bj$ab:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room,java.util.ArrayList) -> a
com.google.android.gms.internal.bj$ac -> com.google.android.gms.internal.bj$ac:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room,java.util.ArrayList) -> a
com.google.android.gms.internal.bj$ad -> com.google.android.gms.internal.bj$ad:
    com.google.android.gms.games.OnPlayersLoadedListener cW -> cW
    com.google.android.gms.internal.bj cH -> cH
    void e(com.google.android.gms.internal.k) -> e
com.google.android.gms.internal.bj$ae -> com.google.android.gms.internal.bj$ae:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.OnPlayersLoadedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.bj$af -> com.google.android.gms.internal.bj$af:
    int p -> p
    java.lang.String cX -> cX
    int cY -> cY
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RealTimeReliableMessageSentListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.bj$ag -> com.google.android.gms.internal.bj$ag:
    com.google.android.gms.games.multiplayer.realtime.RealTimeReliableMessageSentListener cZ -> cZ
    com.google.android.gms.internal.bj cH -> cH
    void a(int,int,java.lang.String) -> a
com.google.android.gms.internal.bj$ah -> com.google.android.gms.internal.bj$ah:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room) -> a
com.google.android.gms.internal.bj$ai -> com.google.android.gms.internal.bj$ai:
    com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener da -> da
    com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener db -> db
    com.google.android.gms.games.multiplayer.realtime.RealTimeMessageReceivedListener dc -> dc
    com.google.android.gms.internal.bj cH -> cH
    void n(com.google.android.gms.internal.k) -> n
    void o(com.google.android.gms.internal.k) -> o
    void onLeftRoom(int,java.lang.String) -> onLeftRoom
    void r(com.google.android.gms.internal.k) -> r
    void p(com.google.android.gms.internal.k) -> p
    void q(com.google.android.gms.internal.k) -> q
    void s(com.google.android.gms.internal.k) -> s
    void t(com.google.android.gms.internal.k) -> t
    void e(com.google.android.gms.internal.k,java.lang.String[]) -> e
    void f(com.google.android.gms.internal.k,java.lang.String[]) -> f
    void a(com.google.android.gms.internal.k,java.lang.String[]) -> a
    void b(com.google.android.gms.internal.k,java.lang.String[]) -> b
    void c(com.google.android.gms.internal.k,java.lang.String[]) -> c
    void d(com.google.android.gms.internal.k,java.lang.String[]) -> d
    void onRealTimeMessageReceived(com.google.android.gms.games.multiplayer.realtime.RealTimeMessage) -> onRealTimeMessageReceived
com.google.android.gms.internal.bj$aj -> com.google.android.gms.internal.bj$aj:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room) -> a
com.google.android.gms.internal.bj$ak -> com.google.android.gms.internal.bj$ak:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room) -> a
com.google.android.gms.internal.bj$al -> com.google.android.gms.internal.bj$al:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room) -> a
com.google.android.gms.internal.bj$am -> com.google.android.gms.internal.bj$am:
    com.google.android.gms.games.OnSignOutCompleteListener dd -> dd
    com.google.android.gms.internal.bj cH -> cH
    void onSignOutComplete() -> onSignOutComplete
com.google.android.gms.internal.bj$an -> com.google.android.gms.internal.bj$an:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.OnSignOutCompleteListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.bj$ao -> com.google.android.gms.internal.bj$ao:
    com.google.android.gms.games.leaderboard.OnScoreSubmittedListener de -> de
    com.google.android.gms.internal.bj cH -> cH
    void d(com.google.android.gms.internal.k) -> d
com.google.android.gms.internal.bj$ap -> com.google.android.gms.internal.bj$ap:
    com.google.android.gms.games.leaderboard.SubmitScoreResult df -> df
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.leaderboard.OnScoreSubmittedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.bj$b -> com.google.android.gms.internal.bj$b:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener) -> a
    void a(com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.bj$c -> com.google.android.gms.internal.bj$c:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener) -> a
    void a(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.bj$d -> com.google.android.gms.internal.bj$d:
    com.google.android.gms.games.achievement.OnAchievementUpdatedListener cI -> cI
    com.google.android.gms.internal.bj cH -> cH
    void onAchievementUpdated(int,java.lang.String) -> onAchievementUpdated
com.google.android.gms.internal.bj$e -> com.google.android.gms.internal.bj$e:
    int p -> p
    java.lang.String cJ -> cJ
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.achievement.OnAchievementUpdatedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.bj$f -> com.google.android.gms.internal.bj$f:
    com.google.android.gms.games.achievement.OnAchievementsLoadedListener cK -> cK
    com.google.android.gms.internal.bj cH -> cH
    void b(com.google.android.gms.internal.k) -> b
com.google.android.gms.internal.bj$g -> com.google.android.gms.internal.bj$g:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.achievement.OnAchievementsLoadedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.bj$h -> com.google.android.gms.internal.bj$h:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room) -> a
com.google.android.gms.internal.bj$i -> com.google.android.gms.internal.bj$i:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room) -> a
com.google.android.gms.internal.bj$j -> com.google.android.gms.internal.bj$j:
    com.google.android.gms.internal.p$d cL -> cL
    com.google.android.gms.internal.bj cH -> cH
    void a(int,android.os.IBinder,android.os.Bundle) -> a
com.google.android.gms.internal.bj$k -> com.google.android.gms.internal.bj$k:
    com.google.android.gms.games.OnGamesLoadedListener cM -> cM
    com.google.android.gms.internal.bj cH -> cH
    void g(com.google.android.gms.internal.k) -> g
com.google.android.gms.internal.bj$l -> com.google.android.gms.internal.bj$l:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.OnGamesLoadedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.bj$m -> com.google.android.gms.internal.bj$m:
    com.google.android.gms.games.multiplayer.OnInvitationReceivedListener cN -> cN
    com.google.android.gms.internal.bj cH -> cH
    void k(com.google.android.gms.internal.k) -> k
com.google.android.gms.internal.bj$n -> com.google.android.gms.internal.bj$n:
    com.google.android.gms.games.multiplayer.Invitation cO -> cO
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.OnInvitationReceivedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.bj$o -> com.google.android.gms.internal.bj$o:
    com.google.android.gms.games.multiplayer.OnInvitationsLoadedListener cP -> cP
    com.google.android.gms.internal.bj cH -> cH
    void j(com.google.android.gms.internal.k) -> j
com.google.android.gms.internal.bj$p -> com.google.android.gms.internal.bj$p:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.OnInvitationsLoadedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.bj$q -> com.google.android.gms.internal.bj$q:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room) -> a
com.google.android.gms.internal.bj$r -> com.google.android.gms.internal.bj$r:
    com.google.android.gms.games.leaderboard.OnLeaderboardScoresLoadedListener cQ -> cQ
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.internal.k,com.google.android.gms.internal.k) -> a
com.google.android.gms.internal.bj$s -> com.google.android.gms.internal.bj$s:
    com.google.android.gms.internal.k cR -> cR
    com.google.android.gms.internal.k cS -> cS
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.leaderboard.OnLeaderboardScoresLoadedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.bj$t -> com.google.android.gms.internal.bj$t:
    com.google.android.gms.games.leaderboard.OnLeaderboardMetadataLoadedListener cT -> cT
    com.google.android.gms.internal.bj cH -> cH
    void c(com.google.android.gms.internal.k) -> c
com.google.android.gms.internal.bj$u -> com.google.android.gms.internal.bj$u:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.leaderboard.OnLeaderboardMetadataLoadedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.bj$v -> com.google.android.gms.internal.bj$v:
    int p -> p
    java.lang.String cU -> cU
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomUpdateListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.bj$w -> com.google.android.gms.internal.bj$w:
    com.google.android.gms.games.multiplayer.realtime.RealTimeMessage cV -> cV
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RealTimeMessageReceivedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.bj$x -> com.google.android.gms.internal.bj$x:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room,java.util.ArrayList) -> a
com.google.android.gms.internal.bj$y -> com.google.android.gms.internal.bj$y:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room,java.util.ArrayList) -> a
com.google.android.gms.internal.bj$z -> com.google.android.gms.internal.bj$z:
    com.google.android.gms.internal.bj cH -> cH
    void a(com.google.android.gms.games.multiplayer.realtime.RoomStatusUpdateListener,com.google.android.gms.games.multiplayer.realtime.Room,java.util.ArrayList) -> a
com.google.android.gms.internal.bk -> com.google.android.gms.internal.bk:
    com.google.android.gms.internal.s dg -> dg
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void d(java.lang.String,java.lang.String) -> d
com.google.android.gms.internal.bl -> com.google.android.gms.internal.bl:
    void a(int,java.lang.String) -> a
    void b(com.google.android.gms.internal.k) -> b
    void onAchievementUpdated(int,java.lang.String) -> onAchievementUpdated
    void c(com.google.android.gms.internal.k) -> c
    void a(com.google.android.gms.internal.k,com.google.android.gms.internal.k) -> a
    void d(com.google.android.gms.internal.k) -> d
    void e(com.google.android.gms.internal.k) -> e
    void f(com.google.android.gms.internal.k) -> f
    void g(com.google.android.gms.internal.k) -> g
    void h(com.google.android.gms.internal.k) -> h
    void i(com.google.android.gms.internal.k) -> i
    void l(com.google.android.gms.internal.k) -> l
    void x(int) -> x
    void m(com.google.android.gms.internal.k) -> m
    void y(int) -> y
    void onSignOutComplete() -> onSignOutComplete
    void j(com.google.android.gms.internal.k) -> j
    void k(com.google.android.gms.internal.k) -> k
    void n(com.google.android.gms.internal.k) -> n
    void o(com.google.android.gms.internal.k) -> o
    void onLeftRoom(int,java.lang.String) -> onLeftRoom
    void p(com.google.android.gms.internal.k) -> p
    void q(com.google.android.gms.internal.k) -> q
    void r(com.google.android.gms.internal.k) -> r
    void s(com.google.android.gms.internal.k) -> s
    void t(com.google.android.gms.internal.k) -> t
    void a(com.google.android.gms.internal.k,java.lang.String[]) -> a
    void b(com.google.android.gms.internal.k,java.lang.String[]) -> b
    void c(com.google.android.gms.internal.k,java.lang.String[]) -> c
    void d(com.google.android.gms.internal.k,java.lang.String[]) -> d
    void e(com.google.android.gms.internal.k,java.lang.String[]) -> e
    void f(com.google.android.gms.internal.k,java.lang.String[]) -> f
    void onRealTimeMessageReceived(com.google.android.gms.games.multiplayer.realtime.RealTimeMessage) -> onRealTimeMessageReceived
    void a(int,int,java.lang.String) -> a
    void a(int,java.lang.String,boolean) -> a
    void u(com.google.android.gms.internal.k) -> u
    void v(com.google.android.gms.internal.k) -> v
    void z(int) -> z
    void w(com.google.android.gms.internal.k) -> w
    void A(int) -> A
com.google.android.gms.internal.bl$a -> com.google.android.gms.internal.bl$a:
    com.google.android.gms.internal.bl l(android.os.IBinder) -> l
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.bl$a$a -> com.google.android.gms.internal.bl$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void a(int,java.lang.String) -> a
    void b(com.google.android.gms.internal.k) -> b
    void onAchievementUpdated(int,java.lang.String) -> onAchievementUpdated
    void c(com.google.android.gms.internal.k) -> c
    void a(com.google.android.gms.internal.k,com.google.android.gms.internal.k) -> a
    void d(com.google.android.gms.internal.k) -> d
    void e(com.google.android.gms.internal.k) -> e
    void f(com.google.android.gms.internal.k) -> f
    void g(com.google.android.gms.internal.k) -> g
    void h(com.google.android.gms.internal.k) -> h
    void i(com.google.android.gms.internal.k) -> i
    void l(com.google.android.gms.internal.k) -> l
    void x(int) -> x
    void m(com.google.android.gms.internal.k) -> m
    void y(int) -> y
    void onSignOutComplete() -> onSignOutComplete
    void j(com.google.android.gms.internal.k) -> j
    void k(com.google.android.gms.internal.k) -> k
    void n(com.google.android.gms.internal.k) -> n
    void o(com.google.android.gms.internal.k) -> o
    void onLeftRoom(int,java.lang.String) -> onLeftRoom
    void p(com.google.android.gms.internal.k) -> p
    void q(com.google.android.gms.internal.k) -> q
    void r(com.google.android.gms.internal.k) -> r
    void s(com.google.android.gms.internal.k) -> s
    void t(com.google.android.gms.internal.k) -> t
    void a(com.google.android.gms.internal.k,java.lang.String[]) -> a
    void b(com.google.android.gms.internal.k,java.lang.String[]) -> b
    void c(com.google.android.gms.internal.k,java.lang.String[]) -> c
    void d(com.google.android.gms.internal.k,java.lang.String[]) -> d
    void e(com.google.android.gms.internal.k,java.lang.String[]) -> e
    void f(com.google.android.gms.internal.k,java.lang.String[]) -> f
    void onRealTimeMessageReceived(com.google.android.gms.games.multiplayer.realtime.RealTimeMessage) -> onRealTimeMessageReceived
    void a(int,int,java.lang.String) -> a
    void a(int,java.lang.String,boolean) -> a
    void u(com.google.android.gms.internal.k) -> u
    void v(com.google.android.gms.internal.k) -> v
    void z(int) -> z
    void w(com.google.android.gms.internal.k) -> w
    void A(int) -> A
com.google.android.gms.internal.bm -> com.google.android.gms.internal.bm:
    void a(long) -> a
    void a(com.google.android.gms.internal.bl) -> a
    java.lang.String getAppId() -> getAppId
    android.os.Bundle l() -> l
    void a(android.os.IBinder,android.os.Bundle) -> a
    void aj() -> aj
    java.lang.String getCurrentAccountName() -> getCurrentAccountName
    java.lang.String q(java.lang.String) -> q
    void e(java.lang.String,java.lang.String) -> e
    void a(com.google.android.gms.internal.bl,java.lang.String) -> a
    void a(com.google.android.gms.internal.bl,java.lang.String,java.lang.String) -> a
    void b(com.google.android.gms.internal.bl,java.lang.String) -> b
    void a(com.google.android.gms.internal.bl,java.lang.String,boolean,long[]) -> a
    java.lang.String getCurrentPlayerId() -> getCurrentPlayerId
    com.google.android.gms.internal.k ak() -> ak
    void c(com.google.android.gms.internal.bl,java.lang.String) -> c
    void a(com.google.android.gms.internal.bl,int,boolean,boolean) -> a
    void a(com.google.android.gms.internal.bl,java.lang.String,long) -> a
    void b(com.google.android.gms.internal.bl) -> b
    void d(com.google.android.gms.internal.bl,java.lang.String) -> d
    void a(com.google.android.gms.internal.bl,java.lang.String,int,int,int,boolean) -> a
    void b(com.google.android.gms.internal.bl,java.lang.String,int,int,int,boolean) -> b
    void a(com.google.android.gms.internal.bl,android.os.Bundle,int,int) -> a
    void c(com.google.android.gms.internal.bl) -> c
    void a(com.google.android.gms.internal.bl,java.lang.String,android.os.IBinder,android.os.Bundle) -> a
    void b(com.google.android.gms.internal.bl,java.lang.String,android.os.IBinder,android.os.Bundle) -> b
    void a(com.google.android.gms.internal.bl,java.lang.String,int,android.os.IBinder,android.os.Bundle) -> a
    void d(com.google.android.gms.internal.bl) -> d
    void e(com.google.android.gms.internal.bl) -> e
    void i(java.lang.String,int) -> i
    void h(java.lang.String,int) -> h
    void a(com.google.android.gms.internal.bl,long) -> a
    void b(long) -> b
    void a(com.google.android.gms.internal.bl,android.os.IBinder,int,java.lang.String[],android.os.Bundle,boolean,long) -> a
    void a(com.google.android.gms.internal.bl,android.os.IBinder,java.lang.String,boolean,long) -> a
    void e(com.google.android.gms.internal.bl,java.lang.String) -> e
    int a(com.google.android.gms.internal.bl,byte[],java.lang.String,java.lang.String) -> a
    int b(byte[],java.lang.String,java.lang.String[]) -> b
    java.lang.String r(java.lang.String) -> r
    void clearNotifications(int) -> clearNotifications
    void f(com.google.android.gms.internal.bl,java.lang.String) -> f
    void b(com.google.android.gms.internal.bl,java.lang.String,java.lang.String) -> b
    void a(com.google.android.gms.internal.bl,java.lang.String,java.lang.String,int,int,int,boolean) -> a
    void b(com.google.android.gms.internal.bl,java.lang.String,java.lang.String,int,int,int,boolean) -> b
    void c(com.google.android.gms.internal.bl,java.lang.String,java.lang.String) -> c
    void g(com.google.android.gms.internal.bl,java.lang.String) -> g
    void h(com.google.android.gms.internal.bl,java.lang.String) -> h
    void a(com.google.android.gms.internal.bl,int,int,boolean,boolean) -> a
    void a(com.google.android.gms.internal.bl,java.lang.String,int,boolean,boolean) -> a
    void b(com.google.android.gms.internal.bl,int,boolean,boolean) -> b
    void f(com.google.android.gms.internal.bl) -> f
    void c(com.google.android.gms.internal.bl,int,boolean,boolean) -> c
    void g(com.google.android.gms.internal.bl) -> g
    void s(java.lang.String) -> s
    void a(java.lang.String,java.lang.String,int) -> a
    void i(com.google.android.gms.internal.bl,java.lang.String) -> i
    int j(com.google.android.gms.internal.bl,java.lang.String) -> j
    int t(java.lang.String) -> t
    void a(com.google.android.gms.internal.bl,java.lang.String,boolean) -> a
    void k(com.google.android.gms.internal.bl,java.lang.String) -> k
    void j(java.lang.String,int) -> j
    boolean al() -> al
    void setUseNewPlayerNotificationsFirstParty(boolean) -> setUseNewPlayerNotificationsFirstParty
    void h(com.google.android.gms.internal.bl) -> h
    void l(com.google.android.gms.internal.bl,java.lang.String) -> l
    void i(com.google.android.gms.internal.bl) -> i
    void a(com.google.android.gms.internal.bl,boolean) -> a
    android.net.Uri u(java.lang.String) -> u
com.google.android.gms.internal.bm$a -> com.google.android.gms.internal.bm$a:
    com.google.android.gms.internal.bm m(android.os.IBinder) -> m
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.bm$a$a -> com.google.android.gms.internal.bm$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void a(long) -> a
    void a(com.google.android.gms.internal.bl) -> a
    java.lang.String getAppId() -> getAppId
    android.os.Bundle l() -> l
    void a(android.os.IBinder,android.os.Bundle) -> a
    void aj() -> aj
    java.lang.String getCurrentAccountName() -> getCurrentAccountName
    java.lang.String q(java.lang.String) -> q
    void e(java.lang.String,java.lang.String) -> e
    void a(com.google.android.gms.internal.bl,java.lang.String) -> a
    void a(com.google.android.gms.internal.bl,java.lang.String,java.lang.String) -> a
    void b(com.google.android.gms.internal.bl,java.lang.String) -> b
    void a(com.google.android.gms.internal.bl,java.lang.String,boolean,long[]) -> a
    java.lang.String getCurrentPlayerId() -> getCurrentPlayerId
    com.google.android.gms.internal.k ak() -> ak
    void c(com.google.android.gms.internal.bl,java.lang.String) -> c
    void a(com.google.android.gms.internal.bl,int,boolean,boolean) -> a
    void a(com.google.android.gms.internal.bl,java.lang.String,long) -> a
    void b(com.google.android.gms.internal.bl) -> b
    void d(com.google.android.gms.internal.bl,java.lang.String) -> d
    void a(com.google.android.gms.internal.bl,java.lang.String,int,int,int,boolean) -> a
    void b(com.google.android.gms.internal.bl,java.lang.String,int,int,int,boolean) -> b
    void a(com.google.android.gms.internal.bl,android.os.Bundle,int,int) -> a
    void c(com.google.android.gms.internal.bl) -> c
    void a(com.google.android.gms.internal.bl,java.lang.String,android.os.IBinder,android.os.Bundle) -> a
    void b(com.google.android.gms.internal.bl,java.lang.String,android.os.IBinder,android.os.Bundle) -> b
    void a(com.google.android.gms.internal.bl,java.lang.String,int,android.os.IBinder,android.os.Bundle) -> a
    void d(com.google.android.gms.internal.bl) -> d
    void e(com.google.android.gms.internal.bl) -> e
    void i(java.lang.String,int) -> i
    void h(java.lang.String,int) -> h
    void a(com.google.android.gms.internal.bl,long) -> a
    void b(long) -> b
    void a(com.google.android.gms.internal.bl,android.os.IBinder,int,java.lang.String[],android.os.Bundle,boolean,long) -> a
    void a(com.google.android.gms.internal.bl,android.os.IBinder,java.lang.String,boolean,long) -> a
    void e(com.google.android.gms.internal.bl,java.lang.String) -> e
    int a(com.google.android.gms.internal.bl,byte[],java.lang.String,java.lang.String) -> a
    int b(byte[],java.lang.String,java.lang.String[]) -> b
    java.lang.String r(java.lang.String) -> r
    void clearNotifications(int) -> clearNotifications
    void f(com.google.android.gms.internal.bl,java.lang.String) -> f
    void b(com.google.android.gms.internal.bl,java.lang.String,java.lang.String) -> b
    void a(com.google.android.gms.internal.bl,java.lang.String,java.lang.String,int,int,int,boolean) -> a
    void b(com.google.android.gms.internal.bl,java.lang.String,java.lang.String,int,int,int,boolean) -> b
    void c(com.google.android.gms.internal.bl,java.lang.String,java.lang.String) -> c
    void g(com.google.android.gms.internal.bl,java.lang.String) -> g
    void h(com.google.android.gms.internal.bl,java.lang.String) -> h
    void a(com.google.android.gms.internal.bl,int,int,boolean,boolean) -> a
    void a(com.google.android.gms.internal.bl,java.lang.String,int,boolean,boolean) -> a
    void b(com.google.android.gms.internal.bl,int,boolean,boolean) -> b
    void f(com.google.android.gms.internal.bl) -> f
    void c(com.google.android.gms.internal.bl,int,boolean,boolean) -> c
    void g(com.google.android.gms.internal.bl) -> g
    void s(java.lang.String) -> s
    void a(java.lang.String,java.lang.String,int) -> a
    void i(com.google.android.gms.internal.bl,java.lang.String) -> i
    int j(com.google.android.gms.internal.bl,java.lang.String) -> j
    int t(java.lang.String) -> t
    void a(com.google.android.gms.internal.bl,java.lang.String,boolean) -> a
    void k(com.google.android.gms.internal.bl,java.lang.String) -> k
    void j(java.lang.String,int) -> j
    boolean al() -> al
    void setUseNewPlayerNotificationsFirstParty(boolean) -> setUseNewPlayerNotificationsFirstParty
    void h(com.google.android.gms.internal.bl) -> h
    void l(com.google.android.gms.internal.bl,java.lang.String) -> l
    void i(com.google.android.gms.internal.bl) -> i
    void a(com.google.android.gms.internal.bl,boolean) -> a
    android.net.Uri u(java.lang.String) -> u
com.google.android.gms.internal.bn -> com.google.android.gms.internal.bn:
    com.google.android.gms.internal.bj cs -> cs
    com.google.android.gms.internal.bn$a dh -> dh
    com.google.android.gms.internal.bn a(com.google.android.gms.internal.bj,int) -> a
    void setGravity(int) -> setGravity
    void a(android.view.View) -> a
    void am() -> am
    android.os.Bundle an() -> an
    android.os.IBinder ao() -> ao
com.google.android.gms.internal.bn$1 -> com.google.android.gms.internal.bn$1:
com.google.android.gms.internal.bn$a -> com.google.android.gms.internal.bn$a:
    android.os.IBinder di -> di
    int gravity -> gravity
    int dj -> dj
    int left -> left
    int top -> top
    int right -> right
    int bottom -> bottom
    android.os.Bundle ap() -> ap
com.google.android.gms.internal.bn$b -> com.google.android.gms.internal.bn$b:
    java.lang.ref.WeakReference dk -> dk
    boolean cC -> cC
    void a(android.view.View) -> a
    void am() -> am
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    void onGlobalLayout() -> onGlobalLayout
    void b(android.view.View) -> b
com.google.android.gms.internal.bo -> com.google.android.gms.internal.bo:
    android.net.LocalSocket dl -> dl
    java.lang.String dm -> dm
    android.os.ParcelFileDescriptor dn -> dn
    android.os.ParcelFileDescriptor getParcelFileDescriptor() -> getParcelFileDescriptor
    void close() -> close
    boolean isClosed() -> isClosed
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
com.google.android.gms.internal.bp -> com.google.android.gms.internal.bp:
    java.lang.String B(int) -> B
com.google.android.gms.internal.bq -> com.google.android.gms.internal.bq:
    java.lang.String B(int) -> B
com.google.android.gms.internal.br -> com.google.android.gms.internal.br:
    int do -> do
    java.lang.String getLeaderboardId() -> getLeaderboardId
    java.lang.String getDisplayName() -> getDisplayName
    void getDisplayName(android.database.CharArrayBuffer) -> getDisplayName
    android.net.Uri getIconImageUri() -> getIconImageUri
    int getScoreOrder() -> getScoreOrder
    java.util.ArrayList getVariants() -> getVariants
    java.lang.String toString() -> toString
com.google.android.gms.internal.bs -> com.google.android.gms.internal.bs:
    android.os.Bundle dq -> dq
    android.os.Bundle ar() -> ar
com.google.android.gms.internal.bt -> com.google.android.gms.internal.bt:
    long dr -> dr
    java.lang.String ds -> ds
    java.lang.String dt -> dt
    long du -> du
    long dv -> dv
    java.lang.String dw -> dw
    android.net.Uri dx -> dx
    android.net.Uri dy -> dy
    com.google.android.gms.games.PlayerEntity dz -> dz
    long getRank() -> getRank
    java.lang.String getDisplayRank() -> getDisplayRank
    void getDisplayRank(android.database.CharArrayBuffer) -> getDisplayRank
    java.lang.String getDisplayScore() -> getDisplayScore
    void getDisplayScore(android.database.CharArrayBuffer) -> getDisplayScore
    long getRawScore() -> getRawScore
    long getTimestampMillis() -> getTimestampMillis
    java.lang.String getScoreHolderDisplayName() -> getScoreHolderDisplayName
    void getScoreHolderDisplayName(android.database.CharArrayBuffer) -> getScoreHolderDisplayName
    android.net.Uri getScoreHolderIconImageUri() -> getScoreHolderIconImageUri
    android.net.Uri getScoreHolderHiResImageUri() -> getScoreHolderHiResImageUri
    com.google.android.gms.games.Player getScoreHolder() -> getScoreHolder
    com.google.android.gms.games.leaderboard.LeaderboardScore as() -> as
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.leaderboard.LeaderboardScore) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.leaderboard.LeaderboardScore,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.leaderboard.LeaderboardScore) -> b
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.bu -> com.google.android.gms.internal.bu:
    com.google.android.gms.internal.bg dA -> dA
    long getRank() -> getRank
    java.lang.String getDisplayRank() -> getDisplayRank
    void getDisplayRank(android.database.CharArrayBuffer) -> getDisplayRank
    java.lang.String getDisplayScore() -> getDisplayScore
    void getDisplayScore(android.database.CharArrayBuffer) -> getDisplayScore
    long getRawScore() -> getRawScore
    long getTimestampMillis() -> getTimestampMillis
    java.lang.String getScoreHolderDisplayName() -> getScoreHolderDisplayName
    void getScoreHolderDisplayName(android.database.CharArrayBuffer) -> getScoreHolderDisplayName
    android.net.Uri getScoreHolderIconImageUri() -> getScoreHolderIconImageUri
    android.net.Uri getScoreHolderHiResImageUri() -> getScoreHolderHiResImageUri
    com.google.android.gms.games.Player getScoreHolder() -> getScoreHolder
    com.google.android.gms.games.leaderboard.LeaderboardScore as() -> as
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.bv -> com.google.android.gms.internal.bv:
    int getTimeSpan() -> getTimeSpan
    int getCollection() -> getCollection
    boolean hasPlayerInfo() -> hasPlayerInfo
    long getRawPlayerScore() -> getRawPlayerScore
    java.lang.String getDisplayPlayerScore() -> getDisplayPlayerScore
    long getPlayerRank() -> getPlayerRank
    java.lang.String getDisplayPlayerRank() -> getDisplayPlayerRank
    long getNumScores() -> getNumScores
    java.lang.String at() -> at
    java.lang.String au() -> au
    java.lang.String av() -> av
    java.lang.String toString() -> toString
com.google.android.gms.internal.bw -> com.google.android.gms.internal.bw:
    com.google.android.gms.games.Game dK -> dK
    com.google.android.gms.internal.bx dL -> dL
    java.util.ArrayList dJ -> dJ
    com.google.android.gms.games.Game getGame() -> getGame
    java.lang.String getInvitationId() -> getInvitationId
    com.google.android.gms.games.multiplayer.Participant getInviter() -> getInviter
    long getCreationTimestamp() -> getCreationTimestamp
    java.util.ArrayList getParticipants() -> getParticipants
    int getInvitationType() -> getInvitationType
    com.google.android.gms.games.multiplayer.Invitation freeze() -> freeze
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.bx -> com.google.android.gms.internal.bx:
    com.google.android.gms.internal.bg dQ -> dQ
    com.google.android.gms.games.multiplayer.Participant freeze() -> freeze
    int getStatus() -> getStatus
    java.lang.String getClientAddress() -> getClientAddress
    boolean isConnectedToRoom() -> isConnectedToRoom
    java.lang.String getDisplayName() -> getDisplayName
    void getDisplayName(android.database.CharArrayBuffer) -> getDisplayName
    android.net.Uri getIconImageUri() -> getIconImageUri
    android.net.Uri getHiResImageUri() -> getHiResImageUri
    java.lang.String getParticipantId() -> getParticipantId
    com.google.android.gms.games.Player getPlayer() -> getPlayer
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.by -> com.google.android.gms.internal.by:
    java.lang.String getPrimaryDataMarkerColumn() -> getPrimaryDataMarkerColumn
    com.google.android.gms.games.multiplayer.realtime.Room b(int,int) -> b
    java.lang.Object a(int,int) -> a
com.google.android.gms.internal.bz -> com.google.android.gms.internal.bz:
    int do -> do
    java.lang.String getRoomId() -> getRoomId
    java.lang.String getCreatorId() -> getCreatorId
    long getCreationTimestamp() -> getCreationTimestamp
    int getStatus() -> getStatus
    int getParticipantStatus(java.lang.String) -> getParticipantStatus
    java.lang.String getDescription() -> getDescription
    void getDescription(android.database.CharArrayBuffer) -> getDescription
    int getVariant() -> getVariant
    android.os.Bundle getAutoMatchCriteria() -> getAutoMatchCriteria
    java.util.ArrayList getParticipants() -> getParticipants
    java.util.ArrayList getParticipantIds() -> getParticipantIds
    java.lang.String getParticipantId(java.lang.String) -> getParticipantId
    com.google.android.gms.games.multiplayer.realtime.Room freeze() -> freeze
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.c -> com.google.android.gms.internal.c:
    int getKey() -> getKey
    java.lang.String getLocalVersion() -> getLocalVersion
    byte[] getLocalData() -> getLocalData
    boolean hasConflict() -> hasConflict
    java.lang.String getConflictVersion() -> getConflictVersion
    byte[] getConflictData() -> getConflictData
    com.google.android.gms.appstate.AppState a() -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.ca -> com.google.android.gms.internal.ca:
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.google.android.gms.internal.ca$a -> com.google.android.gms.internal.ca$a:
    com.google.android.gms.internal.ca n(android.os.IBinder) -> n
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.ca$a$a -> com.google.android.gms.internal.ca$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.google.android.gms.internal.cb -> com.google.android.gms.internal.cb:
    void onAddGeofencesResult(int,java.lang.String[]) -> onAddGeofencesResult
    void onRemoveGeofencesByRequestIdsResult(int,java.lang.String[]) -> onRemoveGeofencesByRequestIdsResult
    void onRemoveGeofencesByPendingIntentResult(int,android.app.PendingIntent) -> onRemoveGeofencesByPendingIntentResult
com.google.android.gms.internal.cb$a -> com.google.android.gms.internal.cb$a:
    com.google.android.gms.internal.cb o(android.os.IBinder) -> o
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cb$a$a -> com.google.android.gms.internal.cb$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void onAddGeofencesResult(int,java.lang.String[]) -> onAddGeofencesResult
    void onRemoveGeofencesByRequestIdsResult(int,java.lang.String[]) -> onRemoveGeofencesByRequestIdsResult
    void onRemoveGeofencesByPendingIntentResult(int,android.app.PendingIntent) -> onRemoveGeofencesByPendingIntentResult
com.google.android.gms.internal.cc -> com.google.android.gms.internal.cc:
    void a(java.util.List,android.app.PendingIntent,com.google.android.gms.internal.cb,java.lang.String) -> a
    void a(android.app.PendingIntent,com.google.android.gms.internal.cb,java.lang.String) -> a
    void a(java.lang.String[],com.google.android.gms.internal.cb,java.lang.String) -> a
    void a(com.google.android.gms.internal.cb,java.lang.String) -> a
    void a(long,boolean,android.app.PendingIntent) -> a
    void removeActivityUpdates(android.app.PendingIntent) -> removeActivityUpdates
    android.location.Location ay() -> ay
    void a(com.google.android.gms.location.LocationRequest,com.google.android.gms.internal.ca) -> a
    void a(com.google.android.gms.location.LocationRequest,android.app.PendingIntent) -> a
    void a(com.google.android.gms.internal.ca) -> a
    void a(android.app.PendingIntent) -> a
com.google.android.gms.internal.cc$a -> com.google.android.gms.internal.cc$a:
    com.google.android.gms.internal.cc p(android.os.IBinder) -> p
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cc$a$a -> com.google.android.gms.internal.cc$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void a(java.util.List,android.app.PendingIntent,com.google.android.gms.internal.cb,java.lang.String) -> a
    void a(android.app.PendingIntent,com.google.android.gms.internal.cb,java.lang.String) -> a
    void a(java.lang.String[],com.google.android.gms.internal.cb,java.lang.String) -> a
    void a(com.google.android.gms.internal.cb,java.lang.String) -> a
    void a(long,boolean,android.app.PendingIntent) -> a
    void removeActivityUpdates(android.app.PendingIntent) -> removeActivityUpdates
    android.location.Location ay() -> ay
    void a(com.google.android.gms.location.LocationRequest,com.google.android.gms.internal.ca) -> a
    void a(com.google.android.gms.location.LocationRequest,android.app.PendingIntent) -> a
    void a(com.google.android.gms.internal.ca) -> a
    void a(android.app.PendingIntent) -> a
com.google.android.gms.internal.cd -> com.google.android.gms.internal.cd:
    com.google.android.gms.internal.ch eE -> eE
    android.content.ContentResolver mContentResolver -> mContentResolver
    android.content.ContentProviderClient eF -> eF
    java.util.HashMap eG -> eG
    android.location.Location getLastLocation() -> getLastLocation
    void requestLocationUpdates(com.google.android.gms.location.LocationRequest,com.google.android.gms.location.LocationListener,android.os.Looper) -> requestLocationUpdates
    void requestLocationUpdates(com.google.android.gms.location.LocationRequest,android.app.PendingIntent) -> requestLocationUpdates
    void removeLocationUpdates(com.google.android.gms.location.LocationListener) -> removeLocationUpdates
    void removeLocationUpdates(android.app.PendingIntent) -> removeLocationUpdates
    void removeAllListeners() -> removeAllListeners
com.google.android.gms.internal.cd$a -> com.google.android.gms.internal.cd$a:
    com.google.android.gms.location.LocationListener eH -> eH
    void handleMessage(android.os.Message) -> handleMessage
com.google.android.gms.internal.cd$b -> com.google.android.gms.internal.cd$b:
    android.os.Handler eI -> eI
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.google.android.gms.internal.ce -> com.google.android.gms.internal.ce:
    com.google.android.gms.internal.ch eE -> eE
    com.google.android.gms.internal.cd eJ -> eJ
    java.lang.String eK -> eK
    void disconnect() -> disconnect
    java.lang.String b() -> b
    java.lang.String c() -> c
    void requestActivityUpdates(long,android.app.PendingIntent) -> requestActivityUpdates
    void removeActivityUpdates(android.app.PendingIntent) -> removeActivityUpdates
    void addGeofences(java.util.List,android.app.PendingIntent,com.google.android.gms.location.LocationClient$OnAddGeofencesResultListener) -> addGeofences
    void removeGeofences(android.app.PendingIntent,com.google.android.gms.location.LocationClient$OnRemoveGeofencesResultListener) -> removeGeofences
    void removeGeofences(java.util.List,com.google.android.gms.location.LocationClient$OnRemoveGeofencesResultListener) -> removeGeofences
    android.location.Location getLastLocation() -> getLastLocation
    void requestLocationUpdates(com.google.android.gms.location.LocationRequest,com.google.android.gms.location.LocationListener) -> requestLocationUpdates
    void requestLocationUpdates(com.google.android.gms.location.LocationRequest,com.google.android.gms.location.LocationListener,android.os.Looper) -> requestLocationUpdates
    void requestLocationUpdates(com.google.android.gms.location.LocationRequest,android.app.PendingIntent) -> requestLocationUpdates
    void removeLocationUpdates(com.google.android.gms.location.LocationListener) -> removeLocationUpdates
    void removeLocationUpdates(android.app.PendingIntent) -> removeLocationUpdates
    com.google.android.gms.internal.cc q(android.os.IBinder) -> q
    void a(com.google.android.gms.internal.u,com.google.android.gms.internal.p$d) -> a
    android.os.IInterface c(android.os.IBinder) -> c
    void a(com.google.android.gms.internal.ce) -> a
    android.os.IInterface b(com.google.android.gms.internal.ce) -> b
com.google.android.gms.internal.ce$1 -> com.google.android.gms.internal.ce$1:
com.google.android.gms.internal.ce$a -> com.google.android.gms.internal.ce$a:
    int p -> p
    java.lang.String[] eL -> eL
    com.google.android.gms.internal.ce eM -> eM
    void a(com.google.android.gms.location.LocationClient$OnAddGeofencesResultListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.ce$b -> com.google.android.gms.internal.ce$b:
    com.google.android.gms.location.LocationClient$OnAddGeofencesResultListener eN -> eN
    com.google.android.gms.location.LocationClient$OnRemoveGeofencesResultListener eO -> eO
    com.google.android.gms.internal.ce eM -> eM
    void onAddGeofencesResult(int,java.lang.String[]) -> onAddGeofencesResult
    void onRemoveGeofencesByRequestIdsResult(int,java.lang.String[]) -> onRemoveGeofencesByRequestIdsResult
    void onRemoveGeofencesByPendingIntentResult(int,android.app.PendingIntent) -> onRemoveGeofencesByPendingIntentResult
com.google.android.gms.internal.ce$c -> com.google.android.gms.internal.ce$c:
    com.google.android.gms.internal.ce eM -> eM
    void n() -> n
    com.google.android.gms.internal.cc az() -> az
    android.os.IInterface o() -> o
com.google.android.gms.internal.ce$d -> com.google.android.gms.internal.ce$d:
    int p -> p
    java.lang.String[] eL -> eL
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    int eP -> eP
    com.google.android.gms.internal.ce eM -> eM
    void a(com.google.android.gms.location.LocationClient$OnRemoveGeofencesResultListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.cf -> com.google.android.gms.internal.cf:
    int T -> T
    java.lang.String es -> es
    long eQ -> eQ
    short ev -> ev
    double ew -> ew
    double ex -> ex
    float ey -> ey
    int et -> et
    com.google.android.gms.internal.cg CREATOR -> CREATOR
    int u() -> u
    short aA() -> aA
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    float aB() -> aB
    java.lang.String getRequestId() -> getRequestId
    long getExpirationTime() -> getExpirationTime
    int aC() -> aC
    void w(java.lang.String) -> w
    void b(float) -> b
    void a(double,double) -> a
    int K(int) -> K
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String L(int) -> L
    com.google.android.gms.internal.cf c(byte[]) -> c
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.internal.cg -> com.google.android.gms.internal.cg:
    com.google.android.gms.internal.cf t(android.os.Parcel) -> t
    com.google.android.gms.internal.cf[] M(int) -> M
    void a(com.google.android.gms.internal.cf,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ch -> com.google.android.gms.internal.ch:
    android.os.IInterface o() -> o
    void n() -> n
com.google.android.gms.internal.ci -> com.google.android.gms.internal.ci:
    void a(com.google.android.gms.maps.GoogleMapOptions,android.os.Parcel,int) -> a
com.google.android.gms.internal.cj -> com.google.android.gms.internal.cj:
    java.lang.Boolean a(byte) -> a
    byte b(java.lang.Boolean) -> b
com.google.android.gms.internal.ck -> com.google.android.gms.internal.ck:
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.google.android.gms.internal.ck$a -> com.google.android.gms.internal.ck$a:
    com.google.android.gms.internal.ck s(android.os.IBinder) -> s
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.ck$a$a -> com.google.android.gms.internal.ck$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.google.android.gms.internal.cl -> com.google.android.gms.internal.cl:
    void c(com.google.android.gms.internal.bc) -> c
    com.google.android.gms.maps.internal.IMapFragmentDelegate d(com.google.android.gms.internal.bc) -> d
    com.google.android.gms.maps.internal.IMapViewDelegate a(com.google.android.gms.internal.bc,com.google.android.gms.maps.GoogleMapOptions) -> a
    com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate aR() -> aR
    com.google.android.gms.internal.dj aS() -> aS
    void a(com.google.android.gms.internal.bc,int) -> a
com.google.android.gms.internal.cl$a -> com.google.android.gms.internal.cl$a:
    com.google.android.gms.internal.cl t(android.os.IBinder) -> t
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cl$a$a -> com.google.android.gms.internal.cl$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void c(com.google.android.gms.internal.bc) -> c
    com.google.android.gms.maps.internal.IMapFragmentDelegate d(com.google.android.gms.internal.bc) -> d
    com.google.android.gms.maps.internal.IMapViewDelegate a(com.google.android.gms.internal.bc,com.google.android.gms.maps.GoogleMapOptions) -> a
    com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate aR() -> aR
    com.google.android.gms.internal.dj aS() -> aS
    void a(com.google.android.gms.internal.bc,int) -> a
com.google.android.gms.internal.cm -> com.google.android.gms.internal.cm:
    com.google.android.gms.internal.bc f(com.google.android.gms.internal.dm) -> f
    com.google.android.gms.internal.bc g(com.google.android.gms.internal.dm) -> g
com.google.android.gms.internal.cm$a -> com.google.android.gms.internal.cm$a:
    com.google.android.gms.internal.cm v(android.os.IBinder) -> v
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cm$a$a -> com.google.android.gms.internal.cm$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.internal.bc f(com.google.android.gms.internal.dm) -> f
    com.google.android.gms.internal.bc g(com.google.android.gms.internal.dm) -> g
com.google.android.gms.internal.cn -> com.google.android.gms.internal.cn:
    void onCameraChange(com.google.android.gms.maps.model.CameraPosition) -> onCameraChange
com.google.android.gms.internal.cn$a -> com.google.android.gms.internal.cn$a:
    com.google.android.gms.internal.cn z(android.os.IBinder) -> z
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cn$a$a -> com.google.android.gms.internal.cn$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void onCameraChange(com.google.android.gms.maps.model.CameraPosition) -> onCameraChange
com.google.android.gms.internal.co -> com.google.android.gms.internal.co:
    void e(com.google.android.gms.internal.dm) -> e
com.google.android.gms.internal.co$a -> com.google.android.gms.internal.co$a:
    com.google.android.gms.internal.co A(android.os.IBinder) -> A
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.co$a$a -> com.google.android.gms.internal.co$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void e(com.google.android.gms.internal.dm) -> e
com.google.android.gms.internal.cp -> com.google.android.gms.internal.cp:
    void e(com.google.android.gms.internal.bc) -> e
com.google.android.gms.internal.cp$a -> com.google.android.gms.internal.cp$a:
    com.google.android.gms.internal.cp B(android.os.IBinder) -> B
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cp$a$a -> com.google.android.gms.internal.cp$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void e(com.google.android.gms.internal.bc) -> e
com.google.android.gms.internal.cq -> com.google.android.gms.internal.cq:
    void onMapClick(com.google.android.gms.maps.model.LatLng) -> onMapClick
com.google.android.gms.internal.cq$a -> com.google.android.gms.internal.cq$a:
    com.google.android.gms.internal.cq C(android.os.IBinder) -> C
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cq$a$a -> com.google.android.gms.internal.cq$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void onMapClick(com.google.android.gms.maps.model.LatLng) -> onMapClick
com.google.android.gms.internal.cr -> com.google.android.gms.internal.cr:
    void onMapLongClick(com.google.android.gms.maps.model.LatLng) -> onMapLongClick
com.google.android.gms.internal.cr$a -> com.google.android.gms.internal.cr$a:
    com.google.android.gms.internal.cr D(android.os.IBinder) -> D
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cr$a$a -> com.google.android.gms.internal.cr$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void onMapLongClick(com.google.android.gms.maps.model.LatLng) -> onMapLongClick
com.google.android.gms.internal.cs -> com.google.android.gms.internal.cs:
    boolean a(com.google.android.gms.internal.dm) -> a
com.google.android.gms.internal.cs$a -> com.google.android.gms.internal.cs$a:
    com.google.android.gms.internal.cs E(android.os.IBinder) -> E
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cs$a$a -> com.google.android.gms.internal.cs$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    boolean a(com.google.android.gms.internal.dm) -> a
com.google.android.gms.internal.ct -> com.google.android.gms.internal.ct:
    void b(com.google.android.gms.internal.dm) -> b
    void d(com.google.android.gms.internal.dm) -> d
    void c(com.google.android.gms.internal.dm) -> c
com.google.android.gms.internal.ct$a -> com.google.android.gms.internal.ct$a:
    com.google.android.gms.internal.ct F(android.os.IBinder) -> F
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.ct$a$a -> com.google.android.gms.internal.ct$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void b(com.google.android.gms.internal.dm) -> b
    void d(com.google.android.gms.internal.dm) -> d
    void c(com.google.android.gms.internal.dm) -> c
com.google.android.gms.internal.cu -> com.google.android.gms.internal.cu:
    void b(com.google.android.gms.internal.bc) -> b
com.google.android.gms.internal.cu$a -> com.google.android.gms.internal.cu$a:
    com.google.android.gms.internal.cu G(android.os.IBinder) -> G
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cu$a$a -> com.google.android.gms.internal.cu$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void b(com.google.android.gms.internal.bc) -> b
com.google.android.gms.internal.cv -> com.google.android.gms.internal.cv:
    void a(android.os.Bundle,java.lang.String,android.os.Parcelable) -> a
com.google.android.gms.internal.cw -> com.google.android.gms.internal.cw:
    android.content.Context aZ -> aZ
    com.google.android.gms.internal.cl fH -> fH
    com.google.android.gms.internal.cl g(android.content.Context) -> g
    void h(android.content.Context) -> h
    void i(android.content.Context) -> i
    boolean aT() -> aT
    void j(android.content.Context) -> j
    java.lang.Class aU() -> aU
    android.content.Context getRemoteContext(android.content.Context) -> getRemoteContext
    java.lang.Object a(java.lang.ClassLoader,java.lang.String) -> a
    java.lang.Object b(java.lang.Class) -> b
com.google.android.gms.internal.cx -> com.google.android.gms.internal.cx:
    boolean fI -> fI
    boolean aV() -> aV
com.google.android.gms.internal.cy -> com.google.android.gms.internal.cy:
    void a(com.google.android.gms.maps.model.CameraPosition,android.os.Parcel,int) -> a
com.google.android.gms.internal.cz -> com.google.android.gms.internal.cz:
    void a(com.google.android.gms.maps.model.CircleOptions,android.os.Parcel,int) -> a
com.google.android.gms.internal.d -> com.google.android.gms.internal.d:
    void a(int,com.google.android.gms.internal.k) -> a
    void a(com.google.android.gms.internal.k) -> a
    void onStateDeleted(int,int) -> onStateDeleted
    void onSignOutComplete() -> onSignOutComplete
    void a(int) -> a
com.google.android.gms.internal.da -> com.google.android.gms.internal.da:
    void a(com.google.android.gms.maps.model.GroundOverlayOptions,android.os.Parcel,int) -> a
com.google.android.gms.internal.db -> com.google.android.gms.internal.db:
    void a(com.google.android.gms.maps.model.LatLngBounds,android.os.Parcel,int) -> a
com.google.android.gms.internal.dc -> com.google.android.gms.internal.dc:
    void a(com.google.android.gms.maps.model.LatLng,android.os.Parcel,int) -> a
com.google.android.gms.internal.dd -> com.google.android.gms.internal.dd:
    void a(com.google.android.gms.maps.model.MarkerOptions,android.os.Parcel,int) -> a
com.google.android.gms.internal.de -> com.google.android.gms.internal.de:
    void a(com.google.android.gms.maps.model.PolygonOptions,android.os.Parcel,int) -> a
com.google.android.gms.internal.df -> com.google.android.gms.internal.df:
    void a(com.google.android.gms.maps.model.PolylineOptions,android.os.Parcel,int) -> a
com.google.android.gms.internal.dg -> com.google.android.gms.internal.dg:
    void a(com.google.android.gms.maps.model.Tile,android.os.Parcel,int) -> a
com.google.android.gms.internal.dh -> com.google.android.gms.internal.dh:
    void a(com.google.android.gms.maps.model.TileOverlayOptions,android.os.Parcel,int) -> a
com.google.android.gms.internal.di -> com.google.android.gms.internal.di:
    void a(com.google.android.gms.maps.model.VisibleRegion,android.os.Parcel,int) -> a
com.google.android.gms.internal.dj -> com.google.android.gms.internal.dj:
    com.google.android.gms.internal.bc N(int) -> N
    com.google.android.gms.internal.bc x(java.lang.String) -> x
    com.google.android.gms.internal.bc y(java.lang.String) -> y
    com.google.android.gms.internal.bc bb() -> bb
    com.google.android.gms.internal.bc c(float) -> c
    com.google.android.gms.internal.bc a(android.graphics.Bitmap) -> a
    com.google.android.gms.internal.bc z(java.lang.String) -> z
com.google.android.gms.internal.dj$a -> com.google.android.gms.internal.dj$a:
    com.google.android.gms.internal.dj J(android.os.IBinder) -> J
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.dj$a$a -> com.google.android.gms.internal.dj$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.internal.bc N(int) -> N
    com.google.android.gms.internal.bc x(java.lang.String) -> x
    com.google.android.gms.internal.bc y(java.lang.String) -> y
    com.google.android.gms.internal.bc bb() -> bb
    com.google.android.gms.internal.bc c(float) -> c
    com.google.android.gms.internal.bc a(android.graphics.Bitmap) -> a
    com.google.android.gms.internal.bc z(java.lang.String) -> z
com.google.android.gms.internal.dk -> com.google.android.gms.internal.dk:
    void remove() -> remove
    java.lang.String getId() -> getId
    void setCenter(com.google.android.gms.maps.model.LatLng) -> setCenter
    com.google.android.gms.maps.model.LatLng getCenter() -> getCenter
    void setRadius(double) -> setRadius
    double getRadius() -> getRadius
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean a(com.google.android.gms.internal.dk) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.dk$a -> com.google.android.gms.internal.dk$a:
    com.google.android.gms.internal.dk K(android.os.IBinder) -> K
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.dk$a$a -> com.google.android.gms.internal.dk$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void remove() -> remove
    java.lang.String getId() -> getId
    void setCenter(com.google.android.gms.maps.model.LatLng) -> setCenter
    com.google.android.gms.maps.model.LatLng getCenter() -> getCenter
    void setRadius(double) -> setRadius
    double getRadius() -> getRadius
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean a(com.google.android.gms.internal.dk) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.dl -> com.google.android.gms.internal.dl:
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.google.android.gms.maps.model.LatLng) -> setPosition
    com.google.android.gms.maps.model.LatLng getPosition() -> getPosition
    void setDimensions(float) -> setDimensions
    void a(float,float) -> a
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setPositionFromBounds(com.google.android.gms.maps.model.LatLngBounds) -> setPositionFromBounds
    com.google.android.gms.maps.model.LatLngBounds getBounds() -> getBounds
    void setBearing(float) -> setBearing
    float getBearing() -> getBearing
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    boolean a(com.google.android.gms.internal.dl) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.dl$a -> com.google.android.gms.internal.dl$a:
    com.google.android.gms.internal.dl L(android.os.IBinder) -> L
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.dl$a$a -> com.google.android.gms.internal.dl$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.google.android.gms.maps.model.LatLng) -> setPosition
    com.google.android.gms.maps.model.LatLng getPosition() -> getPosition
    void setDimensions(float) -> setDimensions
    void a(float,float) -> a
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setPositionFromBounds(com.google.android.gms.maps.model.LatLngBounds) -> setPositionFromBounds
    com.google.android.gms.maps.model.LatLngBounds getBounds() -> getBounds
    void setBearing(float) -> setBearing
    float getBearing() -> getBearing
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    boolean a(com.google.android.gms.internal.dl) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.dm -> com.google.android.gms.internal.dm:
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.google.android.gms.maps.model.LatLng) -> setPosition
    com.google.android.gms.maps.model.LatLng getPosition() -> getPosition
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setSnippet(java.lang.String) -> setSnippet
    java.lang.String getSnippet() -> getSnippet
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    void showInfoWindow() -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    boolean isInfoWindowShown() -> isInfoWindowShown
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean h(com.google.android.gms.internal.dm) -> h
    int hashCodeRemote() -> hashCodeRemote
    void f(com.google.android.gms.internal.bc) -> f
    void setAnchor(float,float) -> setAnchor
com.google.android.gms.internal.dm$a -> com.google.android.gms.internal.dm$a:
    com.google.android.gms.internal.dm M(android.os.IBinder) -> M
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.dm$a$a -> com.google.android.gms.internal.dm$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.google.android.gms.maps.model.LatLng) -> setPosition
    com.google.android.gms.maps.model.LatLng getPosition() -> getPosition
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setSnippet(java.lang.String) -> setSnippet
    java.lang.String getSnippet() -> getSnippet
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    void showInfoWindow() -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    boolean isInfoWindowShown() -> isInfoWindowShown
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean h(com.google.android.gms.internal.dm) -> h
    int hashCodeRemote() -> hashCodeRemote
    void f(com.google.android.gms.internal.bc) -> f
    void setAnchor(float,float) -> setAnchor
com.google.android.gms.internal.dn -> com.google.android.gms.internal.dn:
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setHoles(java.util.List) -> setHoles
    java.util.List getHoles() -> getHoles
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    boolean a(com.google.android.gms.internal.dn) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.dn$a -> com.google.android.gms.internal.dn$a:
    com.google.android.gms.internal.dn N(android.os.IBinder) -> N
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.dn$a$a -> com.google.android.gms.internal.dn$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setHoles(java.util.List) -> setHoles
    java.util.List getHoles() -> getHoles
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    boolean a(com.google.android.gms.internal.dn) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.do -> com.google.android.gms.internal.do:
    void remove() -> remove
    void clearTileCache() -> clearTileCache
    java.lang.String getId() -> getId
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean a(com.google.android.gms.internal.do) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.do$a -> com.google.android.gms.internal.do$a:
    com.google.android.gms.internal.do P(android.os.IBinder) -> P
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.do$a$a -> com.google.android.gms.internal.do$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void remove() -> remove
    void clearTileCache() -> clearTileCache
    java.lang.String getId() -> getId
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean a(com.google.android.gms.internal.do) -> a
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.internal.dp -> com.google.android.gms.internal.dp:
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> getTile
com.google.android.gms.internal.dp$a -> com.google.android.gms.internal.dp$a:
    com.google.android.gms.internal.dp Q(android.os.IBinder) -> Q
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.dp$a$a -> com.google.android.gms.internal.dp$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> getTile
com.google.android.gms.internal.dq -> com.google.android.gms.internal.dq:
    void a(int,android.os.Bundle,int,android.content.Intent) -> a
com.google.android.gms.internal.dq$a -> com.google.android.gms.internal.dq$a:
    com.google.android.gms.internal.dq R(android.os.IBinder) -> R
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.dq$a$a -> com.google.android.gms.internal.dq$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void a(int,android.os.Bundle,int,android.content.Intent) -> a
com.google.android.gms.internal.dr -> com.google.android.gms.internal.dr:
    void a(com.google.android.gms.internal.dq,android.net.Uri,android.os.Bundle,boolean) -> a
com.google.android.gms.internal.dr$a -> com.google.android.gms.internal.dr$a:
    com.google.android.gms.internal.dr S(android.os.IBinder) -> S
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.dr$a$a -> com.google.android.gms.internal.dr$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void a(com.google.android.gms.internal.dq,android.net.Uri,android.os.Bundle,boolean) -> a
com.google.android.gms.internal.ds -> com.google.android.gms.internal.ds:
    void a(com.google.android.gms.panorama.PanoramaClient$OnPanoramaInfoLoadedListener,android.net.Uri,boolean) -> a
    void a(com.google.android.gms.internal.ds$b,android.net.Uri,android.os.Bundle,boolean) -> a
    com.google.android.gms.internal.dr T(android.os.IBinder) -> T
    java.lang.String c() -> c
    java.lang.String b() -> b
    void a(com.google.android.gms.internal.u,com.google.android.gms.internal.p$d) -> a
    android.os.IInterface c(android.os.IBinder) -> c
com.google.android.gms.internal.ds$a -> com.google.android.gms.internal.ds$a:
    com.google.android.gms.common.ConnectionResult gD -> gD
    int type -> type
    android.content.Intent gE -> gE
    com.google.android.gms.internal.ds gF -> gF
    void a(com.google.android.gms.panorama.PanoramaClient$a) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.ds$b -> com.google.android.gms.internal.ds$b:
    com.google.android.gms.panorama.PanoramaClient$a gG -> gG
    com.google.android.gms.panorama.PanoramaClient$OnPanoramaInfoLoadedListener gH -> gH
    android.net.Uri gI -> gI
    com.google.android.gms.internal.ds gF -> gF
    void a(int,android.os.Bundle,int,android.content.Intent) -> a
com.google.android.gms.internal.ds$c -> com.google.android.gms.internal.ds$c:
    com.google.android.gms.common.ConnectionResult gD -> gD
    android.content.Intent gE -> gE
    com.google.android.gms.internal.ds gF -> gF
    void a(com.google.android.gms.panorama.PanoramaClient$OnPanoramaInfoLoadedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.dt -> com.google.android.gms.internal.dt:
    int gU -> gU
    android.net.Uri mUri -> mUri
    boolean gV -> gV
    boolean gW -> gW
    android.graphics.Bitmap gX -> gX
    com.google.android.gms.plus.PlusClient gY -> gY
    void a(com.google.android.gms.common.ConnectionResult,android.os.ParcelFileDescriptor) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int) -> a
    void a(com.google.android.gms.plus.PlusClient) -> a
    void a(android.net.Uri,int) -> a
    void onConnected(android.os.Bundle) -> onConnected
    void onDisconnected() -> onDisconnected
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void bc() -> bc
    android.graphics.Bitmap b(android.graphics.Bitmap,int) -> b
    android.graphics.Bitmap a(com.google.android.gms.internal.dt,android.graphics.Bitmap) -> a
    boolean a(com.google.android.gms.internal.dt) -> a
    android.graphics.Bitmap b(com.google.android.gms.internal.dt) -> b
com.google.android.gms.internal.dt$a -> com.google.android.gms.internal.dt$a:
    int gU -> gU
    com.google.android.gms.internal.dt gZ -> gZ
    android.graphics.Bitmap a(android.os.ParcelFileDescriptor[]) -> a
    void b(android.graphics.Bitmap) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.google.android.gms.internal.du -> com.google.android.gms.internal.du:
    android.os.Bundle dq -> dq
    boolean bd() -> bd
    java.lang.String be() -> be
    java.lang.String[] bf() -> bf
    android.net.Uri[] bg() -> bg
    android.content.Intent getIntent() -> getIntent
com.google.android.gms.internal.dv -> com.google.android.gms.internal.dv:
    void a(int,android.os.Bundle,android.os.Bundle) -> a
    void a(int,android.os.Bundle,android.os.ParcelFileDescriptor) -> a
    void B(java.lang.String) -> B
    void a(com.google.android.gms.internal.k,java.lang.String) -> a
    void a(int,android.os.Bundle,com.google.android.gms.internal.at) -> a
    void a(com.google.android.gms.internal.k,java.lang.String,java.lang.String) -> a
    void b(int,android.os.Bundle) -> b
    void b(com.google.android.gms.internal.k,java.lang.String) -> b
    void b(int,android.os.Bundle,android.os.Bundle) -> b
    void a(int,android.os.Bundle,java.lang.String,java.util.List,java.util.List,java.util.List) -> a
    void a(int,android.os.Bundle,java.lang.String,com.google.android.gms.internal.eb) -> a
    void c(int,android.os.Bundle) -> c
com.google.android.gms.internal.dw -> com.google.android.gms.internal.dw:
    void a(int,android.os.Bundle,android.os.Bundle) -> a
    void a(int,android.os.Bundle,android.os.ParcelFileDescriptor) -> a
    void B(java.lang.String) -> B
    void a(com.google.android.gms.internal.k,java.lang.String) -> a
    void a(int,android.os.Bundle,com.google.android.gms.internal.at) -> a
    void a(com.google.android.gms.internal.k,java.lang.String,java.lang.String) -> a
    void b(int,android.os.Bundle) -> b
    void b(com.google.android.gms.internal.k,java.lang.String) -> b
    void b(int,android.os.Bundle,android.os.Bundle) -> b
    void a(int,android.os.Bundle,java.lang.String,java.util.List,java.util.List,java.util.List) -> a
    void a(int,android.os.Bundle,java.lang.String,com.google.android.gms.internal.eb) -> a
    void c(int,android.os.Bundle) -> c
com.google.android.gms.internal.dw$a -> com.google.android.gms.internal.dw$a:
    com.google.android.gms.internal.dw U(android.os.IBinder) -> U
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.dw$a$a -> com.google.android.gms.internal.dw$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void a(int,android.os.Bundle,android.os.Bundle) -> a
    void a(int,android.os.Bundle,android.os.ParcelFileDescriptor) -> a
    void B(java.lang.String) -> B
    void a(com.google.android.gms.internal.k,java.lang.String) -> a
    void a(int,android.os.Bundle,com.google.android.gms.internal.at) -> a
    void a(com.google.android.gms.internal.k,java.lang.String,java.lang.String) -> a
    void b(int,android.os.Bundle) -> b
    void b(com.google.android.gms.internal.k,java.lang.String) -> b
    void b(int,android.os.Bundle,android.os.Bundle) -> b
    void a(int,android.os.Bundle,java.lang.String,java.util.List,java.util.List,java.util.List) -> a
    void a(int,android.os.Bundle,java.lang.String,com.google.android.gms.internal.eb) -> a
    void c(int,android.os.Bundle) -> c
com.google.android.gms.internal.dx -> com.google.android.gms.internal.dx:
    void a(com.google.android.gms.internal.dw,java.lang.String) -> a
    void a(com.google.android.gms.internal.dw,java.lang.String,java.lang.String) -> a
    void b(com.google.android.gms.internal.dw,java.lang.String) -> b
    void a(com.google.android.gms.internal.at) -> a
    java.lang.String getAccountName() -> getAccountName
    void clearDefaultAccount() -> clearDefaultAccount
    void c(com.google.android.gms.internal.dw,java.lang.String) -> c
    void a(com.google.android.gms.internal.dw) -> a
    void a(com.google.android.gms.internal.dw,android.net.Uri,android.os.Bundle) -> a
    void d(com.google.android.gms.internal.dw,java.lang.String) -> d
    void f(java.lang.String,java.lang.String) -> f
    void a(com.google.android.gms.internal.dw,java.lang.String,java.lang.String,int,java.lang.String) -> a
    void b(com.google.android.gms.internal.dw) -> b
    void a(com.google.android.gms.internal.dw,int,java.lang.String,android.net.Uri,java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.dw,int,int,int,java.lang.String) -> a
    void removeMoment(java.lang.String) -> removeMoment
    void e(com.google.android.gms.internal.dw,java.lang.String) -> e
    void c(com.google.android.gms.internal.dw) -> c
    void a(com.google.android.gms.internal.dw,int,java.lang.String) -> a
    void a(com.google.android.gms.internal.dw,java.lang.String,boolean) -> a
    void a(com.google.android.gms.internal.dw,boolean,boolean) -> a
    void a(com.google.android.gms.internal.dw,java.lang.String,java.util.List,java.util.List,java.util.List) -> a
    void f(com.google.android.gms.internal.dw,java.lang.String) -> f
    void a(com.google.android.gms.internal.dw,java.lang.String,com.google.android.gms.internal.eb) -> a
    void g(com.google.android.gms.internal.dw,java.lang.String) -> g
com.google.android.gms.internal.dx$a -> com.google.android.gms.internal.dx$a:
    com.google.android.gms.internal.dx V(android.os.IBinder) -> V
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.dx$a$a -> com.google.android.gms.internal.dx$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void a(com.google.android.gms.internal.dw,java.lang.String) -> a
    void a(com.google.android.gms.internal.dw,java.lang.String,java.lang.String) -> a
    void b(com.google.android.gms.internal.dw,java.lang.String) -> b
    void a(com.google.android.gms.internal.at) -> a
    java.lang.String getAccountName() -> getAccountName
    void clearDefaultAccount() -> clearDefaultAccount
    void c(com.google.android.gms.internal.dw,java.lang.String) -> c
    void a(com.google.android.gms.internal.dw) -> a
    void a(com.google.android.gms.internal.dw,android.net.Uri,android.os.Bundle) -> a
    void d(com.google.android.gms.internal.dw,java.lang.String) -> d
    void f(java.lang.String,java.lang.String) -> f
    void a(com.google.android.gms.internal.dw,java.lang.String,java.lang.String,int,java.lang.String) -> a
    void b(com.google.android.gms.internal.dw) -> b
    void a(com.google.android.gms.internal.dw,int,java.lang.String,android.net.Uri,java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.dw,int,int,int,java.lang.String) -> a
    void removeMoment(java.lang.String) -> removeMoment
    void e(com.google.android.gms.internal.dw,java.lang.String) -> e
    void c(com.google.android.gms.internal.dw) -> c
    void a(com.google.android.gms.internal.dw,int,java.lang.String) -> a
    void a(com.google.android.gms.internal.dw,java.lang.String,boolean) -> a
    void a(com.google.android.gms.internal.dw,boolean,boolean) -> a
    void a(com.google.android.gms.internal.dw,java.lang.String,java.util.List,java.util.List,java.util.List) -> a
    void f(com.google.android.gms.internal.dw,java.lang.String) -> f
    void a(com.google.android.gms.internal.dw,java.lang.String,com.google.android.gms.internal.eb) -> a
    void g(com.google.android.gms.internal.dw,java.lang.String) -> g
com.google.android.gms.internal.dy -> com.google.android.gms.internal.dy:
    java.lang.String ha -> ha
    java.lang.String hb -> hb
    java.lang.String g -> g
    com.google.android.gms.plus.model.people.Person hc -> hc
    java.lang.String[] hd -> hd
    java.lang.String[] gN -> gN
    java.lang.String getAccountName() -> getAccountName
    void a(com.google.android.gms.plus.PlusClient$b,java.lang.String) -> a
    void writeMoment(com.google.android.gms.plus.model.moments.Moment) -> writeMoment
    void loadMoments(com.google.android.gms.plus.PlusClient$OnMomentsLoadedListener,int,java.lang.String,android.net.Uri,java.lang.String,java.lang.String) -> loadMoments
    void removeMoment(java.lang.String) -> removeMoment
    void loadPeople(com.google.android.gms.plus.PlusClient$OnPeopleLoadedListener,int,int,int,java.lang.String) -> loadPeople
    void loadPerson(com.google.android.gms.plus.PlusClient$OnPersonLoadedListener,java.lang.String) -> loadPerson
    com.google.android.gms.plus.model.people.Person getCurrentPerson() -> getCurrentPerson
    void clearDefaultAccount() -> clearDefaultAccount
    void revokeAccessAndDisconnect(com.google.android.gms.plus.PlusClient$OnAccessRevokedListener) -> revokeAccessAndDisconnect
    void a(com.google.android.gms.plus.PlusClient$a,android.net.Uri,int) -> a
    com.google.android.gms.internal.dx W(android.os.IBinder) -> W
    java.lang.String c() -> c
    java.lang.String b() -> b
    void a(com.google.android.gms.internal.u,com.google.android.gms.internal.p$d) -> a
    android.os.IInterface c(android.os.IBinder) -> c
    com.google.android.gms.plus.model.people.Person a(com.google.android.gms.internal.dy,com.google.android.gms.plus.model.people.Person) -> a
com.google.android.gms.internal.dy$a -> com.google.android.gms.internal.dy$a:
    com.google.android.gms.plus.PlusClient$OnMomentsLoadedListener he -> he
    com.google.android.gms.internal.dy hf -> hf
    void a(com.google.android.gms.internal.k,java.lang.String,java.lang.String) -> a
com.google.android.gms.internal.dy$b -> com.google.android.gms.internal.dy$b:
    com.google.android.gms.common.ConnectionResult hg -> hg
    java.lang.String hh -> hh
    java.lang.String hi -> hi
    com.google.android.gms.internal.dy hf -> hf
    void a(com.google.android.gms.plus.PlusClient$OnMomentsLoadedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.dy$c -> com.google.android.gms.internal.dy$c:
    com.google.android.gms.plus.PlusClient$a hj -> hj
    com.google.android.gms.internal.dy hf -> hf
    void a(int,android.os.Bundle,android.os.ParcelFileDescriptor) -> a
com.google.android.gms.internal.dy$d -> com.google.android.gms.internal.dy$d:
    com.google.android.gms.common.ConnectionResult hg -> hg
    android.os.ParcelFileDescriptor hk -> hk
    com.google.android.gms.internal.dy hf -> hf
    void a(com.google.android.gms.plus.PlusClient$a) -> a
    void q() -> q
    void a(java.lang.Object) -> a
com.google.android.gms.internal.dy$e -> com.google.android.gms.internal.dy$e:
    com.google.android.gms.plus.PlusClient$OnPeopleLoadedListener hl -> hl
    com.google.android.gms.internal.dy hf -> hf
    void a(com.google.android.gms.internal.k,java.lang.String) -> a
com.google.android.gms.internal.dy$f -> com.google.android.gms.internal.dy$f:
    com.google.android.gms.common.ConnectionResult hg -> hg
    java.lang.String hh -> hh
    com.google.android.gms.internal.dy hf -> hf
    void a(com.google.android.gms.plus.PlusClient$OnPeopleLoadedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.dy$g -> com.google.android.gms.internal.dy$g:
    com.google.android.gms.plus.PlusClient$OnPersonLoadedListener hm -> hm
    com.google.android.gms.internal.dy hf -> hf
    void a(int,android.os.Bundle,com.google.android.gms.internal.at) -> a
com.google.android.gms.internal.dy$h -> com.google.android.gms.internal.dy$h:
    com.google.android.gms.common.ConnectionResult hg -> hg
    com.google.android.gms.plus.model.people.Person hn -> hn
    com.google.android.gms.internal.dy hf -> hf
    void a(com.google.android.gms.plus.PlusClient$OnPersonLoadedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.dy$i -> com.google.android.gms.internal.dy$i:
    com.google.android.gms.internal.p$d cL -> cL
    com.google.android.gms.internal.dy hf -> hf
    void a(int,android.os.IBinder,android.os.Bundle) -> a
com.google.android.gms.internal.dy$j -> com.google.android.gms.internal.dy$j:
    com.google.android.gms.plus.PlusClient$b ho -> ho
    com.google.android.gms.internal.dy hf -> hf
    void a(int,android.os.Bundle,android.os.Bundle) -> a
com.google.android.gms.internal.dy$k -> com.google.android.gms.internal.dy$k:
    com.google.android.gms.common.ConnectionResult gD -> gD
    com.google.android.gms.internal.du hp -> hp
    com.google.android.gms.internal.dy hf -> hf
    void a(com.google.android.gms.plus.PlusClient$b) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.dy$l -> com.google.android.gms.internal.dy$l:
    com.google.android.gms.plus.PlusClient$OnAccessRevokedListener hq -> hq
    com.google.android.gms.internal.dy hf -> hf
    void b(int,android.os.Bundle) -> b
com.google.android.gms.internal.dy$m -> com.google.android.gms.internal.dy$m:
    com.google.android.gms.common.ConnectionResult hg -> hg
    com.google.android.gms.internal.dy hf -> hf
    void a(com.google.android.gms.plus.PlusClient$OnAccessRevokedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.dz -> com.google.android.gms.internal.dz:
    int hr -> hr
    boolean hs -> hs
    int ht -> ht
    android.widget.LinearLayout hu -> hu
    android.widget.FrameLayout hv -> hv
    android.widget.CompoundButton hw -> hw
    android.widget.ProgressBar hx -> hx
    com.google.android.gms.internal.ea hy -> hy
    com.google.android.gms.internal.dt[] hz -> hz
    int bi -> bi
    int hA -> hA
    int K -> K
    android.net.Uri[] hB -> hB
    java.lang.String[] hC -> hC
    java.lang.String[] hD -> hD
    java.lang.String hE -> hE
    com.google.android.gms.plus.PlusClient gY -> gY
    com.google.android.gms.internal.du hF -> hF
    android.content.res.Resources hG -> hG
    android.view.LayoutInflater hH -> hH
    com.google.android.gms.internal.dz$b hI -> hI
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    int a(android.content.Context,android.util.AttributeSet) -> a
    int b(android.content.Context,android.util.AttributeSet) -> b
    android.content.Context k(android.content.Context) -> k
    void initialize(com.google.android.gms.plus.PlusClient,java.lang.String,int) -> initialize
    void onConnected(android.os.Bundle) -> onConnected
    void onConnectionFailed(com.google.android.gms.common.ConnectionResult) -> onConnectionFailed
    void onDisconnected() -> onDisconnected
    void setOnPlusOneClickListener(com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener) -> setOnPlusOneClickListener
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    boolean performClick() -> performClick
    void a(android.net.Uri[]) -> a
    void d(java.lang.String[]) -> d
    void e(java.lang.String[]) -> e
    void setAnnotation(int) -> setAnnotation
    void c(android.view.View) -> c
    void bh() -> bh
    void setSize(int) -> setSize
    void setType(int) -> setType
    void c(int,int) -> c
    void bi() -> bi
    android.widget.FrameLayout l(android.content.Context) -> l
    android.widget.ProgressBar m(android.content.Context) -> m
    com.google.android.gms.internal.ea n(android.content.Context) -> n
    com.google.android.gms.internal.dt o(android.content.Context) -> o
    int d(int,int) -> d
    android.widget.LinearLayout$LayoutParams bj() -> bj
    void bk() -> bk
    void bl() -> bl
    void bm() -> bm
    void bn() -> bn
    void bc() -> bc
    void bo() -> bo
    void bp() -> bp
    void bq() -> bq
    void a(android.graphics.Point) -> a
    void b(android.graphics.Point) -> b
    android.graphics.drawable.Drawable br() -> br
    java.lang.String bs() -> bs
    android.net.Uri bt() -> bt
    java.lang.String bu() -> bu
com.google.android.gms.internal.dz$a -> com.google.android.gms.internal.dz$a:
    com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener hJ -> hJ
    com.google.android.gms.internal.dz hK -> hK
    void onClick(android.view.View) -> onClick
    void onPlusOneClick(android.content.Intent) -> onPlusOneClick
com.google.android.gms.internal.dz$b -> com.google.android.gms.internal.dz$b:
    com.google.android.gms.internal.dz hK -> hK
    void a(com.google.android.gms.common.ConnectionResult,com.google.android.gms.internal.du) -> a
com.google.android.gms.internal.dz$c -> com.google.android.gms.internal.dz$c:
    com.google.android.gms.internal.dz hK -> hK
    void toggle() -> toggle
com.google.android.gms.internal.e -> com.google.android.gms.internal.e:
    java.lang.String g -> g
    void a(java.lang.String[]) -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    com.google.android.gms.internal.g b(android.os.IBinder) -> b
    void a(com.google.android.gms.internal.u,com.google.android.gms.internal.p$d) -> a
    int getMaxStateSize() -> getMaxStateSize
    int getMaxNumKeys() -> getMaxNumKeys
    void a(com.google.android.gms.appstate.OnStateLoadedListener,int,byte[]) -> a
    void deleteState(com.google.android.gms.appstate.OnStateDeletedListener,int) -> deleteState
    void loadState(com.google.android.gms.appstate.OnStateLoadedListener,int) -> loadState
    void listStates(com.google.android.gms.appstate.OnStateListLoadedListener) -> listStates
    void resolveState(com.google.android.gms.appstate.OnStateLoadedListener,int,java.lang.String,byte[]) -> resolveState
    void signOut(com.google.android.gms.appstate.OnSignOutCompleteListener) -> signOut
    android.os.IInterface c(android.os.IBinder) -> c
com.google.android.gms.internal.e$a -> com.google.android.gms.internal.e$a:
    com.google.android.gms.appstate.OnStateDeletedListener n -> n
    com.google.android.gms.internal.e o -> o
    void onStateDeleted(int,int) -> onStateDeleted
com.google.android.gms.internal.e$b -> com.google.android.gms.internal.e$b:
    int p -> p
    int q -> q
    com.google.android.gms.internal.e o -> o
    void a(com.google.android.gms.appstate.OnStateDeletedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.e$c -> com.google.android.gms.internal.e$c:
    com.google.android.gms.appstate.OnStateListLoadedListener r -> r
    com.google.android.gms.internal.e o -> o
    void a(com.google.android.gms.internal.k) -> a
com.google.android.gms.internal.e$d -> com.google.android.gms.internal.e$d:
    com.google.android.gms.internal.e o -> o
    void a(com.google.android.gms.appstate.OnStateListLoadedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.e$e -> com.google.android.gms.internal.e$e:
    com.google.android.gms.appstate.OnStateLoadedListener s -> s
    com.google.android.gms.internal.e o -> o
    void a(int,com.google.android.gms.internal.k) -> a
com.google.android.gms.internal.e$f -> com.google.android.gms.internal.e$f:
    int q -> q
    com.google.android.gms.internal.e o -> o
    void a(com.google.android.gms.appstate.OnStateLoadedListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.e$g -> com.google.android.gms.internal.e$g:
    com.google.android.gms.appstate.OnSignOutCompleteListener t -> t
    com.google.android.gms.internal.e o -> o
    void onSignOutComplete() -> onSignOutComplete
com.google.android.gms.internal.e$h -> com.google.android.gms.internal.e$h:
    com.google.android.gms.internal.e o -> o
    void a(com.google.android.gms.appstate.OnSignOutCompleteListener) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.ea -> com.google.android.gms.internal.ea:
    java.lang.String[] hL -> hL
    android.widget.ImageView hM -> hM
    android.widget.TextView hN -> hN
    void a(android.net.Uri) -> a
    void setTextSize(int,float) -> setTextSize
    void setSingleLine() -> setSingleLine
    void setGravity(int) -> setGravity
    void setTextColor(int) -> setTextColor
    void f(java.lang.String[]) -> f
    void onMeasure(int,int) -> onMeasure
com.google.android.gms.internal.eb -> com.google.android.gms.internal.eb:
    com.google.android.gms.internal.ec CREATOR -> CREATOR
    int T -> T
    java.lang.String ch -> ch
    java.util.ArrayList hO -> hO
    java.util.ArrayList hP -> hP
    boolean hQ -> hQ
    int u() -> u
    java.lang.String getDescription() -> getDescription
    java.util.ArrayList bv() -> bv
    java.util.ArrayList bw() -> bw
    boolean bx() -> bx
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.ec -> com.google.android.gms.internal.ec:
    com.google.android.gms.internal.eb u(android.os.Parcel) -> u
    com.google.android.gms.internal.eb[] O(int) -> O
    void a(com.google.android.gms.internal.eb,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ed -> com.google.android.gms.internal.ed:
    com.google.android.gms.internal.ee CREATOR -> CREATOR
    java.util.HashMap hR -> hR
    java.util.Set hS -> hS
    int T -> T
    com.google.android.gms.internal.ed hT -> hT
    java.util.List hU -> hU
    com.google.android.gms.internal.ed hV -> hV
    java.lang.String hW -> hW
    java.lang.String hX -> hX
    java.lang.String hY -> hY
    java.util.List hZ -> hZ
    int ia -> ia
    java.util.List ib -> ib
    com.google.android.gms.internal.ed ic -> ic
    java.util.List id -> id
    java.lang.String ie -> ie
    java.lang.String if -> if
    com.google.android.gms.internal.ed ig -> ig
    java.lang.String ih -> ih
    java.lang.String ii -> ii
    java.lang.String ij -> ij
    java.util.List ik -> ik
    java.lang.String il -> il
    java.lang.String im -> im
    java.lang.String in -> in
    java.lang.String ch -> ch
    java.lang.String io -> io
    java.lang.String ip -> ip
    java.lang.String iq -> iq
    java.lang.String ir -> ir
    java.lang.String is -> is
    com.google.android.gms.internal.ed it -> it
    java.lang.String iu -> iu
    java.lang.String iv -> iv
    java.lang.String iw -> iw
    java.lang.String ix -> ix
    com.google.android.gms.internal.ed iy -> iy
    double ew -> ew
    com.google.android.gms.internal.ed iz -> iz
    double ex -> ex
    java.lang.String mName -> mName
    com.google.android.gms.internal.ed iA -> iA
    java.util.List iB -> iB
    java.lang.String iC -> iC
    java.lang.String iD -> iD
    java.lang.String iE -> iE
    java.lang.String iF -> iF
    com.google.android.gms.internal.ed iG -> iG
    java.lang.String iH -> iH
    java.lang.String iI -> iI
    java.lang.String iJ -> iJ
    com.google.android.gms.internal.ed iK -> iK
    java.lang.String iL -> iL
    java.lang.String iM -> iM
    java.lang.String iN -> iN
    java.lang.String hE -> hE
    java.lang.String iO -> iO
    java.lang.String iP -> iP
    java.util.HashMap G() -> G
    java.util.Set by() -> by
    int u() -> u
    com.google.android.gms.plus.model.moments.ItemScope getAbout() -> getAbout
    com.google.android.gms.internal.ed bz() -> bz
    boolean hasAbout() -> hasAbout
    java.util.List getAdditionalName() -> getAdditionalName
    boolean hasAdditionalName() -> hasAdditionalName
    com.google.android.gms.plus.model.moments.ItemScope getAddress() -> getAddress
    com.google.android.gms.internal.ed bA() -> bA
    boolean hasAddress() -> hasAddress
    java.lang.String getAddressCountry() -> getAddressCountry
    boolean hasAddressCountry() -> hasAddressCountry
    java.lang.String getAddressLocality() -> getAddressLocality
    boolean hasAddressLocality() -> hasAddressLocality
    java.lang.String getAddressRegion() -> getAddressRegion
    boolean hasAddressRegion() -> hasAddressRegion
    java.util.List getAssociated_media() -> getAssociated_media
    java.util.List bB() -> bB
    boolean hasAssociated_media() -> hasAssociated_media
    int getAttendeeCount() -> getAttendeeCount
    boolean hasAttendeeCount() -> hasAttendeeCount
    java.util.List getAttendees() -> getAttendees
    java.util.List bC() -> bC
    boolean hasAttendees() -> hasAttendees
    com.google.android.gms.plus.model.moments.ItemScope getAudio() -> getAudio
    com.google.android.gms.internal.ed bD() -> bD
    boolean hasAudio() -> hasAudio
    java.util.List getAuthor() -> getAuthor
    java.util.List bE() -> bE
    boolean hasAuthor() -> hasAuthor
    java.lang.String getBestRating() -> getBestRating
    boolean hasBestRating() -> hasBestRating
    java.lang.String getBirthDate() -> getBirthDate
    boolean hasBirthDate() -> hasBirthDate
    com.google.android.gms.plus.model.moments.ItemScope getByArtist() -> getByArtist
    com.google.android.gms.internal.ed bF() -> bF
    boolean hasByArtist() -> hasByArtist
    java.lang.String getCaption() -> getCaption
    boolean hasCaption() -> hasCaption
    java.lang.String getContentSize() -> getContentSize
    boolean hasContentSize() -> hasContentSize
    java.lang.String getContentUrl() -> getContentUrl
    boolean hasContentUrl() -> hasContentUrl
    java.util.List getContributor() -> getContributor
    java.util.List bG() -> bG
    boolean hasContributor() -> hasContributor
    java.lang.String getDateCreated() -> getDateCreated
    boolean hasDateCreated() -> hasDateCreated
    java.lang.String getDateModified() -> getDateModified
    boolean hasDateModified() -> hasDateModified
    java.lang.String getDatePublished() -> getDatePublished
    boolean hasDatePublished() -> hasDatePublished
    java.lang.String getDescription() -> getDescription
    boolean hasDescription() -> hasDescription
    java.lang.String getDuration() -> getDuration
    boolean hasDuration() -> hasDuration
    java.lang.String getEmbedUrl() -> getEmbedUrl
    boolean hasEmbedUrl() -> hasEmbedUrl
    java.lang.String getEndDate() -> getEndDate
    boolean hasEndDate() -> hasEndDate
    java.lang.String getFamilyName() -> getFamilyName
    boolean hasFamilyName() -> hasFamilyName
    java.lang.String getGender() -> getGender
    boolean hasGender() -> hasGender
    com.google.android.gms.plus.model.moments.ItemScope getGeo() -> getGeo
    com.google.android.gms.internal.ed bH() -> bH
    boolean hasGeo() -> hasGeo
    java.lang.String getGivenName() -> getGivenName
    boolean hasGivenName() -> hasGivenName
    java.lang.String getHeight() -> getHeight
    boolean hasHeight() -> hasHeight
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    java.lang.String getImage() -> getImage
    boolean hasImage() -> hasImage
    com.google.android.gms.plus.model.moments.ItemScope getInAlbum() -> getInAlbum
    com.google.android.gms.internal.ed bI() -> bI
    boolean hasInAlbum() -> hasInAlbum
    double getLatitude() -> getLatitude
    boolean hasLatitude() -> hasLatitude
    com.google.android.gms.plus.model.moments.ItemScope getLocation() -> getLocation
    com.google.android.gms.internal.ed bJ() -> bJ
    boolean hasLocation() -> hasLocation
    double getLongitude() -> getLongitude
    boolean hasLongitude() -> hasLongitude
    java.lang.String getName() -> getName
    boolean hasName() -> hasName
    com.google.android.gms.plus.model.moments.ItemScope getPartOfTVSeries() -> getPartOfTVSeries
    com.google.android.gms.internal.ed bK() -> bK
    boolean hasPartOfTVSeries() -> hasPartOfTVSeries
    java.util.List getPerformers() -> getPerformers
    java.util.List bL() -> bL
    boolean hasPerformers() -> hasPerformers
    java.lang.String getPlayerType() -> getPlayerType
    boolean hasPlayerType() -> hasPlayerType
    java.lang.String getPostOfficeBoxNumber() -> getPostOfficeBoxNumber
    boolean hasPostOfficeBoxNumber() -> hasPostOfficeBoxNumber
    java.lang.String getPostalCode() -> getPostalCode
    boolean hasPostalCode() -> hasPostalCode
    java.lang.String getRatingValue() -> getRatingValue
    boolean hasRatingValue() -> hasRatingValue
    com.google.android.gms.plus.model.moments.ItemScope getReviewRating() -> getReviewRating
    com.google.android.gms.internal.ed bM() -> bM
    boolean hasReviewRating() -> hasReviewRating
    java.lang.String getStartDate() -> getStartDate
    boolean hasStartDate() -> hasStartDate
    java.lang.String getStreetAddress() -> getStreetAddress
    boolean hasStreetAddress() -> hasStreetAddress
    java.lang.String getText() -> getText
    boolean hasText() -> hasText
    com.google.android.gms.plus.model.moments.ItemScope getThumbnail() -> getThumbnail
    com.google.android.gms.internal.ed bN() -> bN
    boolean hasThumbnail() -> hasThumbnail
    java.lang.String getThumbnailUrl() -> getThumbnailUrl
    boolean hasThumbnailUrl() -> hasThumbnailUrl
    java.lang.String getTickerSymbol() -> getTickerSymbol
    boolean hasTickerSymbol() -> hasTickerSymbol
    java.lang.String getType() -> getType
    boolean hasType() -> hasType
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    java.lang.String getWidth() -> getWidth
    boolean hasWidth() -> hasWidth
    java.lang.String getWorstRating() -> getWorstRating
    boolean hasWorstRating() -> hasWorstRating
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object j(java.lang.String) -> j
    boolean k(java.lang.String) -> k
    boolean a(com.google.android.gms.internal.an$a) -> a
    java.lang.Object b(com.google.android.gms.internal.an$a) -> b
    com.google.android.gms.internal.ed bO() -> bO
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.ee -> com.google.android.gms.internal.ee:
    com.google.android.gms.internal.ed v(android.os.Parcel) -> v
    com.google.android.gms.internal.ed[] P(int) -> P
    void a(com.google.android.gms.internal.ed,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ef -> com.google.android.gms.internal.ef:
    com.google.android.gms.internal.eg CREATOR -> CREATOR
    java.util.HashMap hR -> hR
    java.util.Set hS -> hS
    int T -> T
    java.lang.String iw -> iw
    com.google.android.gms.internal.ed iQ -> iQ
    java.lang.String iH -> iH
    com.google.android.gms.internal.ed iR -> iR
    java.lang.String iN -> iN
    java.util.HashMap G() -> G
    java.util.Set by() -> by
    int u() -> u
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    com.google.android.gms.plus.model.moments.ItemScope getResult() -> getResult
    com.google.android.gms.internal.ed bP() -> bP
    boolean hasResult() -> hasResult
    java.lang.String getStartDate() -> getStartDate
    boolean hasStartDate() -> hasStartDate
    com.google.android.gms.plus.model.moments.ItemScope getTarget() -> getTarget
    com.google.android.gms.internal.ed bQ() -> bQ
    boolean hasTarget() -> hasTarget
    java.lang.String getType() -> getType
    boolean hasType() -> hasType
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object j(java.lang.String) -> j
    boolean k(java.lang.String) -> k
    boolean a(com.google.android.gms.internal.an$a) -> a
    java.lang.Object b(com.google.android.gms.internal.an$a) -> b
    com.google.android.gms.internal.ef bR() -> bR
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.eg -> com.google.android.gms.internal.eg:
    com.google.android.gms.internal.ef w(android.os.Parcel) -> w
    com.google.android.gms.internal.ef[] Q(int) -> Q
    void a(com.google.android.gms.internal.ef,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.eh -> com.google.android.gms.internal.eh:
    com.google.android.gms.internal.ef iS -> iS
    com.google.android.gms.internal.ef bS() -> bS
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    com.google.android.gms.plus.model.moments.ItemScope getResult() -> getResult
    boolean hasResult() -> hasResult
    java.lang.String getStartDate() -> getStartDate
    boolean hasStartDate() -> hasStartDate
    com.google.android.gms.plus.model.moments.ItemScope getTarget() -> getTarget
    boolean hasTarget() -> hasTarget
    java.lang.String getType() -> getType
    boolean hasType() -> hasType
    com.google.android.gms.internal.ef bR() -> bR
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.ei -> com.google.android.gms.internal.ei:
    com.google.android.gms.internal.eq$a x(android.os.Parcel) -> x
    com.google.android.gms.internal.eq$a[] R(int) -> R
    void a(com.google.android.gms.internal.eq$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ej -> com.google.android.gms.internal.ej:
    com.google.android.gms.internal.eq$b y(android.os.Parcel) -> y
    com.google.android.gms.internal.eq$b[] S(int) -> S
    void a(com.google.android.gms.internal.eq$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ek -> com.google.android.gms.internal.ek:
    com.google.android.gms.internal.eq$b$a z(android.os.Parcel) -> z
    com.google.android.gms.internal.eq$b$a[] T(int) -> T
    void a(com.google.android.gms.internal.eq$b$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.el -> com.google.android.gms.internal.el:
    com.google.android.gms.internal.eq$b$b A(android.os.Parcel) -> A
    com.google.android.gms.internal.eq$b$b[] U(int) -> U
    void a(com.google.android.gms.internal.eq$b$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.em -> com.google.android.gms.internal.em:
    com.google.android.gms.internal.eq$c B(android.os.Parcel) -> B
    com.google.android.gms.internal.eq$c[] V(int) -> V
    void a(com.google.android.gms.internal.eq$c,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.en -> com.google.android.gms.internal.en:
    com.google.android.gms.internal.eq$d C(android.os.Parcel) -> C
    com.google.android.gms.internal.eq$d[] W(int) -> W
    void a(com.google.android.gms.internal.eq$d,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.eo -> com.google.android.gms.internal.eo:
    com.google.android.gms.internal.eq$e D(android.os.Parcel) -> D
    com.google.android.gms.internal.eq$e[] X(int) -> X
    void a(com.google.android.gms.internal.eq$e,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ep -> com.google.android.gms.internal.ep:
    com.google.android.gms.internal.eq$g E(android.os.Parcel) -> E
    com.google.android.gms.internal.eq$g[] Y(int) -> Y
    void a(com.google.android.gms.internal.eq$g,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.eq -> com.google.android.gms.internal.eq:
    com.google.android.gms.internal.er CREATOR -> CREATOR
    java.util.HashMap hR -> hR
    java.util.Set hS -> hS
    int T -> T
    java.lang.String iT -> iT
    com.google.android.gms.internal.eq$a iU -> iU
    java.lang.String iV -> iV
    java.lang.String iW -> iW
    int iX -> iX
    com.google.android.gms.internal.eq$b iY -> iY
    java.lang.String iZ -> iZ
    java.lang.String bm -> bm
    java.util.List ja -> ja
    java.lang.String jb -> jb
    int jc -> jc
    boolean jd -> jd
    java.lang.String iw -> iw
    com.google.android.gms.internal.eq$d je -> je
    boolean jf -> jf
    java.lang.String jg -> jg
    com.google.android.gms.internal.eq$e jh -> jh
    java.lang.String ji -> ji
    int jj -> jj
    java.util.List jk -> jk
    java.util.List jl -> jl
    int jm -> jm
    int jn -> jn
    java.lang.String jo -> jo
    java.lang.String hE -> hE
    java.util.List jp -> jp
    boolean jq -> jq
    java.util.HashMap G() -> G
    java.util.Set by() -> by
    int u() -> u
    java.lang.String getAboutMe() -> getAboutMe
    boolean hasAboutMe() -> hasAboutMe
    com.google.android.gms.plus.model.people.Person$AgeRange getAgeRange() -> getAgeRange
    com.google.android.gms.internal.eq$a bT() -> bT
    boolean hasAgeRange() -> hasAgeRange
    java.lang.String getBirthday() -> getBirthday
    boolean hasBirthday() -> hasBirthday
    java.lang.String getBraggingRights() -> getBraggingRights
    boolean hasBraggingRights() -> hasBraggingRights
    int getCircledByCount() -> getCircledByCount
    boolean hasCircledByCount() -> hasCircledByCount
    com.google.android.gms.plus.model.people.Person$Cover getCover() -> getCover
    com.google.android.gms.internal.eq$b bU() -> bU
    boolean hasCover() -> hasCover
    java.lang.String getCurrentLocation() -> getCurrentLocation
    boolean hasCurrentLocation() -> hasCurrentLocation
    java.lang.String getDisplayName() -> getDisplayName
    boolean hasDisplayName() -> hasDisplayName
    java.util.List getEmails() -> getEmails
    java.util.List bV() -> bV
    boolean hasEmails() -> hasEmails
    java.lang.String bW() -> bW
    int getGender() -> getGender
    boolean hasGender() -> hasGender
    boolean isHasApp() -> isHasApp
    boolean hasHasApp() -> hasHasApp
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    com.google.android.gms.plus.model.people.Person$Image getImage() -> getImage
    com.google.android.gms.internal.eq$d bX() -> bX
    boolean hasImage() -> hasImage
    boolean isPlusUser() -> isPlusUser
    boolean hasIsPlusUser() -> hasIsPlusUser
    java.lang.String getLanguage() -> getLanguage
    boolean hasLanguage() -> hasLanguage
    com.google.android.gms.plus.model.people.Person$Name getName() -> getName
    com.google.android.gms.internal.eq$e bY() -> bY
    boolean hasName() -> hasName
    java.lang.String getNickname() -> getNickname
    boolean hasNickname() -> hasNickname
    int getObjectType() -> getObjectType
    boolean hasObjectType() -> hasObjectType
    java.util.List getOrganizations() -> getOrganizations
    java.util.List bZ() -> bZ
    boolean hasOrganizations() -> hasOrganizations
    java.util.List getPlacesLived() -> getPlacesLived
    java.util.List ca() -> ca
    boolean hasPlacesLived() -> hasPlacesLived
    int getPlusOneCount() -> getPlusOneCount
    boolean hasPlusOneCount() -> hasPlusOneCount
    int getRelationshipStatus() -> getRelationshipStatus
    boolean hasRelationshipStatus() -> hasRelationshipStatus
    java.lang.String getTagline() -> getTagline
    boolean hasTagline() -> hasTagline
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    java.util.List getUrls() -> getUrls
    java.util.List cb() -> cb
    boolean hasUrls() -> hasUrls
    boolean isVerified() -> isVerified
    boolean hasVerified() -> hasVerified
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object j(java.lang.String) -> j
    boolean k(java.lang.String) -> k
    boolean a(com.google.android.gms.internal.an$a) -> a
    java.lang.Object b(com.google.android.gms.internal.an$a) -> b
    com.google.android.gms.internal.eq d(byte[]) -> d
    com.google.android.gms.internal.eq cc() -> cc
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.eq$a -> com.google.android.gms.internal.eq$a:
    com.google.android.gms.internal.ei CREATOR -> CREATOR
    java.util.HashMap hR -> hR
    java.util.Set hS -> hS
    int T -> T
    int jr -> jr
    int js -> js
    java.util.HashMap G() -> G
    java.util.Set by() -> by
    int u() -> u
    int getMax() -> getMax
    boolean hasMax() -> hasMax
    int getMin() -> getMin
    boolean hasMin() -> hasMin
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object j(java.lang.String) -> j
    boolean k(java.lang.String) -> k
    boolean a(com.google.android.gms.internal.an$a) -> a
    java.lang.Object b(com.google.android.gms.internal.an$a) -> b
    com.google.android.gms.internal.eq$a cd() -> cd
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.eq$b -> com.google.android.gms.internal.eq$b:
    com.google.android.gms.internal.ej CREATOR -> CREATOR
    java.util.HashMap hR -> hR
    java.util.Set hS -> hS
    int T -> T
    com.google.android.gms.internal.eq$b$a jt -> jt
    com.google.android.gms.internal.eq$b$b ju -> ju
    int jv -> jv
    java.util.HashMap G() -> G
    java.util.Set by() -> by
    int u() -> u
    com.google.android.gms.plus.model.people.Person$Cover$CoverInfo getCoverInfo() -> getCoverInfo
    com.google.android.gms.internal.eq$b$a ce() -> ce
    boolean hasCoverInfo() -> hasCoverInfo
    com.google.android.gms.plus.model.people.Person$Cover$CoverPhoto getCoverPhoto() -> getCoverPhoto
    com.google.android.gms.internal.eq$b$b cf() -> cf
    boolean hasCoverPhoto() -> hasCoverPhoto
    int getLayout() -> getLayout
    boolean hasLayout() -> hasLayout
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object j(java.lang.String) -> j
    boolean k(java.lang.String) -> k
    boolean a(com.google.android.gms.internal.an$a) -> a
    java.lang.Object b(com.google.android.gms.internal.an$a) -> b
    com.google.android.gms.internal.eq$b cg() -> cg
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.eq$b$a -> com.google.android.gms.internal.eq$b$a:
    com.google.android.gms.internal.ek CREATOR -> CREATOR
    java.util.HashMap hR -> hR
    java.util.Set hS -> hS
    int T -> T
    int jw -> jw
    int jx -> jx
    java.util.HashMap G() -> G
    java.util.Set by() -> by
    int u() -> u
    int getLeftImageOffset() -> getLeftImageOffset
    boolean hasLeftImageOffset() -> hasLeftImageOffset
    int getTopImageOffset() -> getTopImageOffset
    boolean hasTopImageOffset() -> hasTopImageOffset
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object j(java.lang.String) -> j
    boolean k(java.lang.String) -> k
    boolean a(com.google.android.gms.internal.an$a) -> a
    java.lang.Object b(com.google.android.gms.internal.an$a) -> b
    com.google.android.gms.internal.eq$b$a ch() -> ch
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.eq$b$b -> com.google.android.gms.internal.eq$b$b:
    com.google.android.gms.internal.el CREATOR -> CREATOR
    java.util.HashMap hR -> hR
    java.util.Set hS -> hS
    int T -> T
    int gB -> gB
    java.lang.String hE -> hE
    int gA -> gA
    java.util.HashMap G() -> G
    java.util.Set by() -> by
    int u() -> u
    int getHeight() -> getHeight
    boolean hasHeight() -> hasHeight
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    int getWidth() -> getWidth
    boolean hasWidth() -> hasWidth
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object j(java.lang.String) -> j
    boolean k(java.lang.String) -> k
    boolean a(com.google.android.gms.internal.an$a) -> a
    java.lang.Object b(com.google.android.gms.internal.an$a) -> b
    com.google.android.gms.internal.eq$b$b ci() -> ci
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.eq$c -> com.google.android.gms.internal.eq$c:
    com.google.android.gms.internal.em CREATOR -> CREATOR
    java.util.HashMap hR -> hR
    java.util.Set hS -> hS
    int T -> T
    boolean jy -> jy
    int bi -> bi
    java.lang.String mValue -> mValue
    java.util.HashMap G() -> G
    java.util.Set by() -> by
    int u() -> u
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    int getType() -> getType
    boolean hasType() -> hasType
    java.lang.String getValue() -> getValue
    boolean hasValue() -> hasValue
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object j(java.lang.String) -> j
    boolean k(java.lang.String) -> k
    boolean a(com.google.android.gms.internal.an$a) -> a
    java.lang.Object b(com.google.android.gms.internal.an$a) -> b
    com.google.android.gms.internal.eq$c cj() -> cj
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.eq$d -> com.google.android.gms.internal.eq$d:
    com.google.android.gms.internal.en CREATOR -> CREATOR
    java.util.HashMap hR -> hR
    java.util.Set hS -> hS
    int T -> T
    java.lang.String hE -> hE
    java.util.HashMap G() -> G
    java.util.Set by() -> by
    int u() -> u
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object j(java.lang.String) -> j
    boolean k(java.lang.String) -> k
    boolean a(com.google.android.gms.internal.an$a) -> a
    java.lang.Object b(com.google.android.gms.internal.an$a) -> b
    com.google.android.gms.internal.eq$d ck() -> ck
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.eq$e -> com.google.android.gms.internal.eq$e:
    com.google.android.gms.internal.eo CREATOR -> CREATOR
    java.util.HashMap hR -> hR
    java.util.Set hS -> hS
    int T -> T
    java.lang.String ir -> ir
    java.lang.String jz -> jz
    java.lang.String iu -> iu
    java.lang.String jA -> jA
    java.lang.String jB -> jB
    java.lang.String jC -> jC
    java.util.HashMap G() -> G
    java.util.Set by() -> by
    int u() -> u
    java.lang.String getFamilyName() -> getFamilyName
    boolean hasFamilyName() -> hasFamilyName
    java.lang.String getFormatted() -> getFormatted
    boolean hasFormatted() -> hasFormatted
    java.lang.String getGivenName() -> getGivenName
    boolean hasGivenName() -> hasGivenName
    java.lang.String getHonorificPrefix() -> getHonorificPrefix
    boolean hasHonorificPrefix() -> hasHonorificPrefix
    java.lang.String getHonorificSuffix() -> getHonorificSuffix
    boolean hasHonorificSuffix() -> hasHonorificSuffix
    java.lang.String getMiddleName() -> getMiddleName
    boolean hasMiddleName() -> hasMiddleName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object j(java.lang.String) -> j
    boolean k(java.lang.String) -> k
    boolean a(com.google.android.gms.internal.an$a) -> a
    java.lang.Object b(com.google.android.gms.internal.an$a) -> b
    com.google.android.gms.internal.eq$e cl() -> cl
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.eq$f -> com.google.android.gms.internal.eq$f:
    int C(java.lang.String) -> C
com.google.android.gms.internal.eq$g -> com.google.android.gms.internal.eq$g:
    com.google.android.gms.internal.ep CREATOR -> CREATOR
    java.util.HashMap hR -> hR
    java.util.Set hS -> hS
    int T -> T
    java.lang.String jD -> jD
    java.lang.String ch -> ch
    java.lang.String iq -> iq
    java.lang.String jE -> jE
    java.lang.String mName -> mName
    boolean jy -> jy
    java.lang.String iH -> iH
    java.lang.String gl -> gl
    int bi -> bi
    java.util.HashMap G() -> G
    java.util.Set by() -> by
    int u() -> u
    java.lang.String getDepartment() -> getDepartment
    boolean hasDepartment() -> hasDepartment
    java.lang.String getDescription() -> getDescription
    boolean hasDescription() -> hasDescription
    java.lang.String getEndDate() -> getEndDate
    boolean hasEndDate() -> hasEndDate
    java.lang.String getLocation() -> getLocation
    boolean hasLocation() -> hasLocation
    java.lang.String getName() -> getName
    boolean hasName() -> hasName
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    java.lang.String getStartDate() -> getStartDate
    boolean hasStartDate() -> hasStartDate
    java.lang.String getTitle() -> getTitle
    boolean hasTitle() -> hasTitle
    int getType() -> getType
    boolean hasType() -> hasType
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object j(java.lang.String) -> j
    boolean k(java.lang.String) -> k
    boolean a(com.google.android.gms.internal.an$a) -> a
    java.lang.Object b(com.google.android.gms.internal.an$a) -> b
    com.google.android.gms.internal.eq$g cm() -> cm
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.eq$h -> com.google.android.gms.internal.eq$h:
    com.google.android.gms.internal.et CREATOR -> CREATOR
    java.util.HashMap hR -> hR
    java.util.Set hS -> hS
    int T -> T
    boolean jy -> jy
    java.lang.String mValue -> mValue
    java.util.HashMap G() -> G
    java.util.Set by() -> by
    int u() -> u
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    java.lang.String getValue() -> getValue
    boolean hasValue() -> hasValue
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object j(java.lang.String) -> j
    boolean k(java.lang.String) -> k
    boolean a(com.google.android.gms.internal.an$a) -> a
    java.lang.Object b(com.google.android.gms.internal.an$a) -> b
    com.google.android.gms.internal.eq$h cn() -> cn
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.eq$i -> com.google.android.gms.internal.eq$i:
    com.google.android.gms.internal.eu CREATOR -> CREATOR
    java.util.HashMap hR -> hR
    java.util.Set hS -> hS
    int T -> T
    boolean jy -> jy
    int bi -> bi
    java.lang.String mValue -> mValue
    java.util.HashMap G() -> G
    java.util.Set by() -> by
    int u() -> u
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    int getType() -> getType
    boolean hasType() -> hasType
    java.lang.String getValue() -> getValue
    boolean hasValue() -> hasValue
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object j(java.lang.String) -> j
    boolean k(java.lang.String) -> k
    boolean a(com.google.android.gms.internal.an$a) -> a
    java.lang.Object b(com.google.android.gms.internal.an$a) -> b
    com.google.android.gms.internal.eq$i co() -> co
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.er -> com.google.android.gms.internal.er:
    com.google.android.gms.internal.eq F(android.os.Parcel) -> F
    com.google.android.gms.internal.eq[] Z(int) -> Z
    void a(com.google.android.gms.internal.eq,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.es -> com.google.android.gms.internal.es:
    java.lang.String getDisplayName() -> getDisplayName
    boolean hasDisplayName() -> hasDisplayName
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    com.google.android.gms.plus.model.people.Person$Image getImage() -> getImage
    boolean hasImage() -> hasImage
    int getObjectType() -> getObjectType
    boolean hasObjectType() -> hasObjectType
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    java.lang.String getAboutMe() -> getAboutMe
    boolean hasAboutMe() -> hasAboutMe
    com.google.android.gms.plus.model.people.Person$AgeRange getAgeRange() -> getAgeRange
    boolean hasAgeRange() -> hasAgeRange
    java.lang.String getBirthday() -> getBirthday
    boolean hasBirthday() -> hasBirthday
    java.lang.String getBraggingRights() -> getBraggingRights
    boolean hasBraggingRights() -> hasBraggingRights
    int getCircledByCount() -> getCircledByCount
    boolean hasCircledByCount() -> hasCircledByCount
    com.google.android.gms.plus.model.people.Person$Cover getCover() -> getCover
    boolean hasCover() -> hasCover
    java.lang.String getCurrentLocation() -> getCurrentLocation
    boolean hasCurrentLocation() -> hasCurrentLocation
    java.util.ArrayList cp() -> cp
    boolean hasEmails() -> hasEmails
    int getGender() -> getGender
    boolean hasGender() -> hasGender
    boolean isHasApp() -> isHasApp
    boolean hasHasApp() -> hasHasApp
    com.google.android.gms.plus.model.people.Person$Name getName() -> getName
    boolean hasName() -> hasName
    java.lang.String getNickname() -> getNickname
    boolean hasNickname() -> hasNickname
    boolean isPlusUser() -> isPlusUser
    boolean hasIsPlusUser() -> hasIsPlusUser
    java.lang.String getLanguage() -> getLanguage
    boolean hasLanguage() -> hasLanguage
    java.util.ArrayList cq() -> cq
    boolean hasOrganizations() -> hasOrganizations
    java.util.ArrayList cr() -> cr
    boolean hasPlacesLived() -> hasPlacesLived
    int getPlusOneCount() -> getPlusOneCount
    boolean hasPlusOneCount() -> hasPlusOneCount
    int getRelationshipStatus() -> getRelationshipStatus
    boolean hasRelationshipStatus() -> hasRelationshipStatus
    java.lang.String getTagline() -> getTagline
    boolean hasTagline() -> hasTagline
    java.util.ArrayList cs() -> cs
    boolean hasUrls() -> hasUrls
    boolean isVerified() -> isVerified
    boolean hasVerified() -> hasVerified
    com.google.android.gms.plus.model.people.Person ct() -> ct
    java.util.List getUrls() -> getUrls
    java.util.List getPlacesLived() -> getPlacesLived
    java.util.List getOrganizations() -> getOrganizations
    java.util.List getEmails() -> getEmails
    java.lang.Object freeze() -> freeze
com.google.android.gms.internal.et -> com.google.android.gms.internal.et:
    com.google.android.gms.internal.eq$h G(android.os.Parcel) -> G
    com.google.android.gms.internal.eq$h[] aa(int) -> aa
    void a(com.google.android.gms.internal.eq$h,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.eu -> com.google.android.gms.internal.eu:
    com.google.android.gms.internal.eq$i H(android.os.Parcel) -> H
    com.google.android.gms.internal.eq$i[] ab(int) -> ab
    void a(com.google.android.gms.internal.eq$i,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.f -> com.google.android.gms.internal.f:
    void a(int,com.google.android.gms.internal.k) -> a
    void a(com.google.android.gms.internal.k) -> a
    void onStateDeleted(int,int) -> onStateDeleted
    void onSignOutComplete() -> onSignOutComplete
    void a(int) -> a
com.google.android.gms.internal.f$a -> com.google.android.gms.internal.f$a:
    com.google.android.gms.internal.f d(android.os.IBinder) -> d
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.f$a$a -> com.google.android.gms.internal.f$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void a(int,com.google.android.gms.internal.k) -> a
    void a(com.google.android.gms.internal.k) -> a
    void onStateDeleted(int,int) -> onStateDeleted
    void onSignOutComplete() -> onSignOutComplete
    void a(int) -> a
com.google.android.gms.internal.g -> com.google.android.gms.internal.g:
    int getMaxStateSize() -> getMaxStateSize
    int getMaxNumKeys() -> getMaxNumKeys
    void a(com.google.android.gms.internal.f,int,byte[]) -> a
    void a(com.google.android.gms.internal.f,int) -> a
    void a(com.google.android.gms.internal.f) -> a
    void a(com.google.android.gms.internal.f,int,java.lang.String,byte[]) -> a
    void b(com.google.android.gms.internal.f,int) -> b
    void b(com.google.android.gms.internal.f) -> b
    void c(com.google.android.gms.internal.f) -> c
com.google.android.gms.internal.g$a -> com.google.android.gms.internal.g$a:
    com.google.android.gms.internal.g e(android.os.IBinder) -> e
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.g$a$a -> com.google.android.gms.internal.g$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    int getMaxStateSize() -> getMaxStateSize
    int getMaxNumKeys() -> getMaxNumKeys
    void a(com.google.android.gms.internal.f,int,byte[]) -> a
    void a(com.google.android.gms.internal.f,int) -> a
    void a(com.google.android.gms.internal.f) -> a
    void a(com.google.android.gms.internal.f,int,java.lang.String,byte[]) -> a
    void b(com.google.android.gms.internal.f,int) -> b
    void b(com.google.android.gms.internal.f) -> b
    void c(com.google.android.gms.internal.f) -> c
com.google.android.gms.internal.h -> com.google.android.gms.internal.h:
    boolean u -> u
    java.util.concurrent.BlockingQueue v -> v
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    android.os.IBinder d() -> d
com.google.android.gms.internal.i -> com.google.android.gms.internal.i:
    com.google.android.gms.common.data.DataBuffer P -> P
    int Q -> Q
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.android.gms.internal.j -> com.google.android.gms.internal.j:
    com.google.android.gms.internal.k O -> O
    int R -> R
    int S -> S
    long getLong(java.lang.String) -> getLong
    int getInteger(java.lang.String) -> getInteger
    boolean getBoolean(java.lang.String) -> getBoolean
    java.lang.String getString(java.lang.String) -> getString
    byte[] getByteArray(java.lang.String) -> getByteArray
    android.net.Uri c(java.lang.String) -> c
    void a(java.lang.String,android.database.CharArrayBuffer) -> a
    boolean d(java.lang.String) -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.internal.k -> com.google.android.gms.internal.k:
    com.google.android.gms.internal.l CREATOR -> CREATOR
    int T -> T
    java.lang.String[] U -> U
    android.os.Bundle V -> V
    android.database.CursorWindow[] W -> W
    int p -> p
    android.os.Bundle X -> X
    int[] Y -> Y
    int Z -> Z
    boolean mClosed -> mClosed
    com.google.android.gms.internal.k$a aa -> aa
    void g() -> g
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getStatusCode() -> getStatusCode
    android.os.Bundle h() -> h
    android.database.CursorWindow[] a(com.google.android.gms.internal.k$a) -> a
    void a(java.lang.String,int) -> a
    long a(java.lang.String,int,int) -> a
    int b(java.lang.String,int,int) -> b
    java.lang.String c(java.lang.String,int,int) -> c
    boolean d(java.lang.String,int,int) -> d
    byte[] e(java.lang.String,int,int) -> e
    android.net.Uri f(java.lang.String,int,int) -> f
    void a(java.lang.String,int,int,android.database.CharArrayBuffer) -> a
    boolean g(java.lang.String,int,int) -> g
    int getCount() -> getCount
    int d(int) -> d
    boolean isClosed() -> isClosed
    void close() -> close
    com.google.android.gms.internal.k e(int) -> e
    com.google.android.gms.internal.k a(int,android.os.Bundle) -> a
com.google.android.gms.internal.k$1 -> com.google.android.gms.internal.k$1:
com.google.android.gms.internal.k$a -> com.google.android.gms.internal.k$a:
    java.lang.String[] U -> U
    java.util.ArrayList ab -> ab
    java.lang.String ac -> ac
    java.util.HashMap ad -> ad
    boolean ae -> ae
    java.lang.String af -> af
    java.lang.String[] b(com.google.android.gms.internal.k$a) -> b
    java.util.ArrayList c(com.google.android.gms.internal.k$a) -> c
com.google.android.gms.internal.l -> com.google.android.gms.internal.l:
    com.google.android.gms.internal.k a(android.os.Parcel) -> a
    com.google.android.gms.internal.k[] f(int) -> f
    void a(com.google.android.gms.internal.k,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.m -> com.google.android.gms.internal.m:
    boolean ag -> ag
    java.util.ArrayList ah -> ah
    java.lang.Object get(int) -> get
    int getCount() -> getCount
    java.lang.Object a(int,int) -> a
    java.lang.String getPrimaryDataMarkerColumn() -> getPrimaryDataMarkerColumn
    void i() -> i
    int g(int) -> g
    int h(int) -> h
com.google.android.gms.internal.n -> com.google.android.gms.internal.n:
    void b(java.lang.Object) -> b
    void a(boolean) -> a
    void a(boolean,java.lang.Object) -> a
com.google.android.gms.internal.o -> com.google.android.gms.internal.o:
    android.app.Activity ar -> ar
    android.content.Intent mIntent -> mIntent
    int as -> as
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.p -> com.google.android.gms.internal.p:
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    android.os.IInterface at -> at
    java.util.ArrayList au -> au
    java.util.ArrayList av -> av
    boolean aw -> aw
    java.util.ArrayList ax -> ax
    boolean ay -> ay
    java.util.ArrayList az -> az
    com.google.android.gms.internal.p$e aA -> aA
    java.lang.String[] f -> f
    boolean aB -> aB
    boolean aC -> aC
    java.lang.Object aD -> aD
    java.lang.String[] aE -> aE
    void a(java.lang.String[]) -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    android.os.IInterface c(android.os.IBinder) -> c
    void connect() -> connect
    boolean isConnected() -> isConnected
    boolean isConnecting() -> isConnecting
    void disconnect() -> disconnect
    android.content.Context getContext() -> getContext
    java.lang.String[] j() -> j
    void f(android.os.IBinder) -> f
    void a(com.google.android.gms.internal.u,com.google.android.gms.internal.p$d) -> a
    void k() -> k
    android.os.Bundle l() -> l
    void m() -> m
    void a(com.google.android.gms.common.ConnectionResult) -> a
    void registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> registerConnectionCallbacks
    boolean isConnectionCallbacksRegistered(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> isConnectionCallbacksRegistered
    void unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> unregisterConnectionCallbacks
    void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> registerConnectionFailedListener
    boolean isConnectionFailedListenerRegistered(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> isConnectionFailedListenerRegistered
    void unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> unregisterConnectionFailedListener
    void n() -> n
    android.os.IInterface o() -> o
    void a(com.google.android.gms.internal.p$b) -> a
    android.os.IInterface a(com.google.android.gms.internal.p,android.os.IInterface) -> a
    java.lang.Object a(com.google.android.gms.internal.p) -> a
    java.util.ArrayList b(com.google.android.gms.internal.p) -> b
    java.util.ArrayList c(com.google.android.gms.internal.p) -> c
    android.os.IInterface d(com.google.android.gms.internal.p) -> d
    com.google.android.gms.internal.p$e e(com.google.android.gms.internal.p) -> e
    android.content.Context f(com.google.android.gms.internal.p) -> f
    com.google.android.gms.internal.p$e a(com.google.android.gms.internal.p,com.google.android.gms.internal.p$e) -> a
com.google.android.gms.internal.p$a -> com.google.android.gms.internal.p$a:
    com.google.android.gms.internal.p aF -> aF
    void handleMessage(android.os.Message) -> handleMessage
com.google.android.gms.internal.p$b -> com.google.android.gms.internal.p$b:
    java.lang.Object mListener -> mListener
    com.google.android.gms.internal.p aF -> aF
    void a(java.lang.Object) -> a
    void p() -> p
    void q() -> q
com.google.android.gms.internal.p$c -> com.google.android.gms.internal.p$c:
    com.google.android.gms.internal.k O -> O
    com.google.android.gms.internal.p aF -> aF
    void a(java.lang.Object) -> a
    void q() -> q
    void p() -> p
com.google.android.gms.internal.p$d -> com.google.android.gms.internal.p$d:
    com.google.android.gms.internal.p aF -> aF
    void a(int,android.os.IBinder,android.os.Bundle) -> a
com.google.android.gms.internal.p$e -> com.google.android.gms.internal.p$e:
    com.google.android.gms.internal.p aF -> aF
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.android.gms.internal.p$f -> com.google.android.gms.internal.p$f:
    int statusCode -> statusCode
    android.os.Bundle aG -> aG
    android.os.IBinder aH -> aH
    com.google.android.gms.internal.p aF -> aF
    void a(java.lang.Boolean) -> a
    void a(java.lang.Object) -> a
com.google.android.gms.internal.q -> com.google.android.gms.internal.q:
    com.google.android.gms.internal.q aI -> aI
    android.content.Context aJ -> aJ
    java.util.HashMap aK -> aK
    android.os.Handler mHandler -> mHandler
    com.google.android.gms.internal.q e(android.content.Context) -> e
    boolean a(java.lang.String,com.google.android.gms.internal.p$e) -> a
    void b(java.lang.String,com.google.android.gms.internal.p$e) -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    java.util.HashMap a(com.google.android.gms.internal.q) -> a
com.google.android.gms.internal.q$a -> com.google.android.gms.internal.q$a:
    java.lang.String aL -> aL
    com.google.android.gms.internal.q$a$a aM -> aM
    java.util.HashSet aN -> aN
    int mState -> mState
    boolean aO -> aO
    android.os.IBinder aP -> aP
    android.content.ComponentName aQ -> aQ
    com.google.android.gms.internal.q aR -> aR
    void a(com.google.android.gms.internal.p$e) -> a
    void b(com.google.android.gms.internal.p$e) -> b
    com.google.android.gms.internal.q$a$a r() -> r
    java.lang.String s() -> s
    void b(boolean) -> b
    boolean isBound() -> isBound
    int getState() -> getState
    boolean c(com.google.android.gms.internal.p$e) -> c
    boolean t() -> t
    android.os.IBinder getBinder() -> getBinder
    android.content.ComponentName getComponentName() -> getComponentName
    android.os.IBinder a(com.google.android.gms.internal.q$a,android.os.IBinder) -> a
    android.content.ComponentName a(com.google.android.gms.internal.q$a,android.content.ComponentName) -> a
    java.util.HashSet a(com.google.android.gms.internal.q$a) -> a
    int a(com.google.android.gms.internal.q$a,int) -> a
com.google.android.gms.internal.q$a$a -> com.google.android.gms.internal.q$a$a:
    com.google.android.gms.internal.q$a aS -> aS
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.android.gms.internal.r -> com.google.android.gms.internal.r:
    android.net.Uri aT -> aT
    android.net.Uri aU -> aU
    android.content.Intent e(java.lang.String) -> e
    android.net.Uri f(java.lang.String) -> f
    android.content.Intent g(java.lang.String) -> g
    android.content.Intent h(java.lang.String) -> h
com.google.android.gms.internal.s -> com.google.android.gms.internal.s:
    java.lang.String aV -> aV
    boolean i(int) -> i
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void d(java.lang.String,java.lang.String) -> d
com.google.android.gms.internal.t -> com.google.android.gms.internal.t:
    void a(int,android.os.IBinder,android.os.Bundle) -> a
com.google.android.gms.internal.t$a -> com.google.android.gms.internal.t$a:
    com.google.android.gms.internal.t g(android.os.IBinder) -> g
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.t$a$a -> com.google.android.gms.internal.t$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void a(int,android.os.IBinder,android.os.Bundle) -> a
com.google.android.gms.internal.u -> com.google.android.gms.internal.u:
    void a(com.google.android.gms.internal.t,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.t,int,java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.t,int,java.lang.String) -> a
    void a(com.google.android.gms.internal.t,int) -> a
    void b(com.google.android.gms.internal.t,int,java.lang.String,android.os.Bundle) -> b
    void c(com.google.android.gms.internal.t,int,java.lang.String,android.os.Bundle) -> c
    void d(com.google.android.gms.internal.t,int,java.lang.String,android.os.Bundle) -> d
    void e(com.google.android.gms.internal.t,int,java.lang.String,android.os.Bundle) -> e
    void a(com.google.android.gms.internal.t,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,android.os.IBinder,java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.t,int,java.lang.String,java.lang.String,java.lang.String[]) -> a
    void f(com.google.android.gms.internal.t,int,java.lang.String,android.os.Bundle) -> f
com.google.android.gms.internal.u$a -> com.google.android.gms.internal.u$a:
    com.google.android.gms.internal.u h(android.os.IBinder) -> h
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.u$a$a -> com.google.android.gms.internal.u$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void a(com.google.android.gms.internal.t,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.t,int,java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.t,int,java.lang.String) -> a
    void a(com.google.android.gms.internal.t,int) -> a
    void b(com.google.android.gms.internal.t,int,java.lang.String,android.os.Bundle) -> b
    void c(com.google.android.gms.internal.t,int,java.lang.String,android.os.Bundle) -> c
    void d(com.google.android.gms.internal.t,int,java.lang.String,android.os.Bundle) -> d
    void e(com.google.android.gms.internal.t,int,java.lang.String,android.os.Bundle) -> e
    void a(com.google.android.gms.internal.t,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,android.os.IBinder,java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.t,int,java.lang.String,java.lang.String,java.lang.String[]) -> a
    void f(com.google.android.gms.internal.t,int,java.lang.String,android.os.Bundle) -> f
com.google.android.gms.internal.v -> com.google.android.gms.internal.v:
    com.google.android.gms.internal.bc a(com.google.android.gms.internal.bc,int,int) -> a
com.google.android.gms.internal.v$a -> com.google.android.gms.internal.v$a:
    com.google.android.gms.internal.v i(android.os.IBinder) -> i
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.v$a$a -> com.google.android.gms.internal.v$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.internal.bc a(com.google.android.gms.internal.bc,int,int) -> a
com.google.android.gms.internal.w -> com.google.android.gms.internal.w:
    boolean a(java.lang.Object,java.lang.Object) -> a
    int hashCode(java.lang.Object[]) -> hashCode
    com.google.android.gms.internal.w$a c(java.lang.Object) -> c
com.google.android.gms.internal.w$1 -> com.google.android.gms.internal.w$1:
com.google.android.gms.internal.w$a -> com.google.android.gms.internal.w$a:
    java.util.List aW -> aW
    java.lang.Object aX -> aX
    com.google.android.gms.internal.w$a a(java.lang.String,java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.android.gms.internal.x -> com.google.android.gms.internal.x:
    java.lang.Object d(java.lang.Object) -> d
    java.lang.Object b(java.lang.Object,java.lang.Object) -> b
    void a(boolean) -> a
    void a(boolean,java.lang.Object) -> a
    void b(boolean,java.lang.Object) -> b
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
    void c(boolean) -> c
com.google.android.gms.internal.y -> com.google.android.gms.internal.y:
    android.net.Uri aY -> aY
    android.net.Uri i(java.lang.String) -> i
com.google.android.gms.internal.z -> com.google.android.gms.internal.z:
    android.content.Context aZ -> aZ
    com.google.android.gms.internal.v ba -> ba
    com.google.android.gms.internal.v f(android.content.Context) -> f
    android.view.View d(android.content.Context,int,int) -> d
com.google.android.gms.internal.z$a -> com.google.android.gms.internal.z$a:
com.google.android.gms.location.ActivityRecognitionClient -> com.google.android.gms.location.ActivityRecognitionClient:
    com.google.android.gms.internal.ce em -> em
    void requestActivityUpdates(long,android.app.PendingIntent) -> requestActivityUpdates
    void removeActivityUpdates(android.app.PendingIntent) -> removeActivityUpdates
    void connect() -> connect
    boolean isConnected() -> isConnected
    boolean isConnecting() -> isConnecting
    void registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> registerConnectionCallbacks
    boolean isConnectionCallbacksRegistered(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> isConnectionCallbacksRegistered
    void unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> unregisterConnectionCallbacks
    void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> registerConnectionFailedListener
    boolean isConnectionFailedListenerRegistered(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> isConnectionFailedListenerRegistered
    void unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> unregisterConnectionFailedListener
    void disconnect() -> disconnect
com.google.android.gms.location.ActivityRecognitionResult -> com.google.android.gms.location.ActivityRecognitionResult:
    java.lang.String EXTRA_ACTIVITY_RESULT -> EXTRA_ACTIVITY_RESULT
    com.google.android.gms.location.ActivityRecognitionResultCreator CREATOR -> CREATOR
    int T -> T
    java.util.List en -> en
    long eo -> eo
    long ep -> ep
    boolean hasResult(android.content.Intent) -> hasResult
    com.google.android.gms.location.ActivityRecognitionResult extractResult(android.content.Intent) -> extractResult
    com.google.android.gms.location.DetectedActivity getMostProbableActivity() -> getMostProbableActivity
    int getActivityConfidence(int) -> getActivityConfidence
    java.util.List getProbableActivities() -> getProbableActivities
    long getTime() -> getTime
    long getElapsedRealtimeMillis() -> getElapsedRealtimeMillis
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.location.ActivityRecognitionResultCreator -> com.google.android.gms.location.ActivityRecognitionResultCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.location.ActivityRecognitionResult createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.location.ActivityRecognitionResult[] newArray(int) -> newArray
    void a(com.google.android.gms.location.ActivityRecognitionResult,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.location.DetectedActivity -> com.google.android.gms.location.DetectedActivity:
    int IN_VEHICLE -> IN_VEHICLE
    int ON_BICYCLE -> ON_BICYCLE
    int ON_FOOT -> ON_FOOT
    int STILL -> STILL
    int UNKNOWN -> UNKNOWN
    int TILTING -> TILTING
    com.google.android.gms.location.DetectedActivityCreator CREATOR -> CREATOR
    int T -> T
    int eq -> eq
    int er -> er
    int getType() -> getType
    int getConfidence() -> getConfidence
    int G(int) -> G
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.google.android.gms.location.DetectedActivityCreator -> com.google.android.gms.location.DetectedActivityCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.location.DetectedActivity createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.location.DetectedActivity[] newArray(int) -> newArray
    void a(com.google.android.gms.location.DetectedActivity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.location.Geofence -> com.google.android.gms.location.Geofence:
    int GEOFENCE_TRANSITION_ENTER -> GEOFENCE_TRANSITION_ENTER
    int GEOFENCE_TRANSITION_EXIT -> GEOFENCE_TRANSITION_EXIT
    long NEVER_EXPIRE -> NEVER_EXPIRE
    java.lang.String getRequestId() -> getRequestId
com.google.android.gms.location.Geofence$Builder -> com.google.android.gms.location.Geofence$Builder:
    java.lang.String es -> es
    int et -> et
    long eu -> eu
    short ev -> ev
    double ew -> ew
    double ex -> ex
    float ey -> ey
    com.google.android.gms.location.Geofence$Builder setRequestId(java.lang.String) -> setRequestId
    com.google.android.gms.location.Geofence$Builder setTransitionTypes(int) -> setTransitionTypes
    com.google.android.gms.location.Geofence$Builder setExpirationDuration(long) -> setExpirationDuration
    com.google.android.gms.location.Geofence$Builder setCircularRegion(double,double,float) -> setCircularRegion
    com.google.android.gms.location.Geofence build() -> build
com.google.android.gms.location.LocationClient -> com.google.android.gms.location.LocationClient:
    java.lang.String KEY_LOCATION_CHANGED -> KEY_LOCATION_CHANGED
    com.google.android.gms.internal.ce em -> em
    void addGeofences(java.util.List,android.app.PendingIntent,com.google.android.gms.location.LocationClient$OnAddGeofencesResultListener) -> addGeofences
    void removeGeofences(android.app.PendingIntent,com.google.android.gms.location.LocationClient$OnRemoveGeofencesResultListener) -> removeGeofences
    void removeGeofences(java.util.List,com.google.android.gms.location.LocationClient$OnRemoveGeofencesResultListener) -> removeGeofences
    boolean hasError(android.content.Intent) -> hasError
    int getErrorCode(android.content.Intent) -> getErrorCode
    int getGeofenceTransition(android.content.Intent) -> getGeofenceTransition
    java.util.List getTriggeringGeofences(android.content.Intent) -> getTriggeringGeofences
    android.location.Location getLastLocation() -> getLastLocation
    void requestLocationUpdates(com.google.android.gms.location.LocationRequest,com.google.android.gms.location.LocationListener) -> requestLocationUpdates
    void requestLocationUpdates(com.google.android.gms.location.LocationRequest,com.google.android.gms.location.LocationListener,android.os.Looper) -> requestLocationUpdates
    void requestLocationUpdates(com.google.android.gms.location.LocationRequest,android.app.PendingIntent) -> requestLocationUpdates
    void removeLocationUpdates(com.google.android.gms.location.LocationListener) -> removeLocationUpdates
    void removeLocationUpdates(android.app.PendingIntent) -> removeLocationUpdates
    void connect() -> connect
    void disconnect() -> disconnect
    boolean isConnected() -> isConnected
    boolean isConnecting() -> isConnecting
    void registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> registerConnectionCallbacks
    boolean isConnectionCallbacksRegistered(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> isConnectionCallbacksRegistered
    void unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> unregisterConnectionCallbacks
    void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> registerConnectionFailedListener
    boolean isConnectionFailedListenerRegistered(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> isConnectionFailedListenerRegistered
    void unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> unregisterConnectionFailedListener
com.google.android.gms.location.LocationClient$OnAddGeofencesResultListener -> com.google.android.gms.location.LocationClient$OnAddGeofencesResultListener:
    void onAddGeofencesResult(int,java.lang.String[]) -> onAddGeofencesResult
com.google.android.gms.location.LocationClient$OnRemoveGeofencesResultListener -> com.google.android.gms.location.LocationClient$OnRemoveGeofencesResultListener:
    void onRemoveGeofencesByRequestIdsResult(int,java.lang.String[]) -> onRemoveGeofencesByRequestIdsResult
    void onRemoveGeofencesByPendingIntentResult(int,android.app.PendingIntent) -> onRemoveGeofencesByPendingIntentResult
com.google.android.gms.location.LocationListener -> com.google.android.gms.location.LocationListener:
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.google.android.gms.location.LocationRequest -> com.google.android.gms.location.LocationRequest:
    int PRIORITY_HIGH_ACCURACY -> PRIORITY_HIGH_ACCURACY
    int PRIORITY_BALANCED_POWER_ACCURACY -> PRIORITY_BALANCED_POWER_ACCURACY
    int PRIORITY_NO_POWER -> PRIORITY_NO_POWER
    int T -> T
    int mPriority -> mPriority
    long ez -> ez
    long eA -> eA
    boolean eB -> eB
    long eu -> eu
    int eC -> eC
    float eD -> eD
    com.google.android.gms.location.LocationRequestCreator CREATOR -> CREATOR
    com.google.android.gms.location.LocationRequest create() -> create
    com.google.android.gms.location.LocationRequest setPriority(int) -> setPriority
    int getPriority() -> getPriority
    com.google.android.gms.location.LocationRequest setInterval(long) -> setInterval
    long getInterval() -> getInterval
    com.google.android.gms.location.LocationRequest setFastestInterval(long) -> setFastestInterval
    long getFastestInterval() -> getFastestInterval
    com.google.android.gms.location.LocationRequest setExpirationDuration(long) -> setExpirationDuration
    com.google.android.gms.location.LocationRequest setExpirationTime(long) -> setExpirationTime
    long getExpirationTime() -> getExpirationTime
    com.google.android.gms.location.LocationRequest setNumUpdates(int) -> setNumUpdates
    int getNumUpdates() -> getNumUpdates
    com.google.android.gms.location.LocationRequest setSmallestDisplacement(float) -> setSmallestDisplacement
    float getSmallestDisplacement() -> getSmallestDisplacement
    void c(long) -> c
    void H(int) -> H
    void a(float) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String I(int) -> I
    java.lang.String toString() -> toString
com.google.android.gms.location.LocationRequestCreator -> com.google.android.gms.location.LocationRequestCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.location.LocationRequest createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.location.LocationRequest[] newArray(int) -> newArray
    void a(com.google.android.gms.location.LocationRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.location.LocationStatusCodes -> com.google.android.gms.location.LocationStatusCodes:
    int SUCCESS -> SUCCESS
    int ERROR -> ERROR
    int GEOFENCE_NOT_AVAILABLE -> GEOFENCE_NOT_AVAILABLE
    int GEOFENCE_TOO_MANY_GEOFENCES -> GEOFENCE_TOO_MANY_GEOFENCES
    int GEOFENCE_TOO_MANY_PENDING_INTENTS -> GEOFENCE_TOO_MANY_PENDING_INTENTS
    int J(int) -> J
com.google.android.gms.maps.CameraUpdate -> com.google.android.gms.maps.CameraUpdate:
    com.google.android.gms.internal.bc eR -> eR
    com.google.android.gms.internal.bc aD() -> aD
com.google.android.gms.maps.CameraUpdateFactory -> com.google.android.gms.maps.CameraUpdateFactory:
    com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate eS -> eS
    com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate aE() -> aE
    void a(com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate) -> a
    com.google.android.gms.maps.CameraUpdate zoomIn() -> zoomIn
    com.google.android.gms.maps.CameraUpdate zoomOut() -> zoomOut
    com.google.android.gms.maps.CameraUpdate scrollBy(float,float) -> scrollBy
    com.google.android.gms.maps.CameraUpdate zoomTo(float) -> zoomTo
    com.google.android.gms.maps.CameraUpdate zoomBy(float) -> zoomBy
    com.google.android.gms.maps.CameraUpdate zoomBy(float,android.graphics.Point) -> zoomBy
    com.google.android.gms.maps.CameraUpdate newCameraPosition(com.google.android.gms.maps.model.CameraPosition) -> newCameraPosition
    com.google.android.gms.maps.CameraUpdate newLatLng(com.google.android.gms.maps.model.LatLng) -> newLatLng
    com.google.android.gms.maps.CameraUpdate newLatLngZoom(com.google.android.gms.maps.model.LatLng,float) -> newLatLngZoom
    com.google.android.gms.maps.CameraUpdate newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int) -> newLatLngBounds
    com.google.android.gms.maps.CameraUpdate newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int,int,int) -> newLatLngBounds
com.google.android.gms.maps.GoogleMap -> com.google.android.gms.maps.GoogleMap:
    int MAP_TYPE_NONE -> MAP_TYPE_NONE
    int MAP_TYPE_NORMAL -> MAP_TYPE_NORMAL
    int MAP_TYPE_SATELLITE -> MAP_TYPE_SATELLITE
    int MAP_TYPE_TERRAIN -> MAP_TYPE_TERRAIN
    int MAP_TYPE_HYBRID -> MAP_TYPE_HYBRID
    com.google.android.gms.maps.internal.IGoogleMapDelegate eT -> eT
    com.google.android.gms.maps.UiSettings eU -> eU
    com.google.android.gms.maps.internal.IGoogleMapDelegate aF() -> aF
    com.google.android.gms.maps.model.CameraPosition getCameraPosition() -> getCameraPosition
    float getMaxZoomLevel() -> getMaxZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    void moveCamera(com.google.android.gms.maps.CameraUpdate) -> moveCamera
    void animateCamera(com.google.android.gms.maps.CameraUpdate) -> animateCamera
    void animateCamera(com.google.android.gms.maps.CameraUpdate,com.google.android.gms.maps.GoogleMap$CancelableCallback) -> animateCamera
    void animateCamera(com.google.android.gms.maps.CameraUpdate,int,com.google.android.gms.maps.GoogleMap$CancelableCallback) -> animateCamera
    void stopAnimation() -> stopAnimation
    com.google.android.gms.maps.model.Polyline addPolyline(com.google.android.gms.maps.model.PolylineOptions) -> addPolyline
    com.google.android.gms.maps.model.Polygon addPolygon(com.google.android.gms.maps.model.PolygonOptions) -> addPolygon
    com.google.android.gms.maps.model.Circle addCircle(com.google.android.gms.maps.model.CircleOptions) -> addCircle
    com.google.android.gms.maps.model.Marker addMarker(com.google.android.gms.maps.model.MarkerOptions) -> addMarker
    com.google.android.gms.maps.model.GroundOverlay addGroundOverlay(com.google.android.gms.maps.model.GroundOverlayOptions) -> addGroundOverlay
    com.google.android.gms.maps.model.TileOverlay addTileOverlay(com.google.android.gms.maps.model.TileOverlayOptions) -> addTileOverlay
    void clear() -> clear
    int getMapType() -> getMapType
    void setMapType(int) -> setMapType
    boolean isTrafficEnabled() -> isTrafficEnabled
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    boolean isIndoorEnabled() -> isIndoorEnabled
    boolean setIndoorEnabled(boolean) -> setIndoorEnabled
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    android.location.Location getMyLocation() -> getMyLocation
    void setLocationSource(com.google.android.gms.maps.LocationSource) -> setLocationSource
    com.google.android.gms.maps.UiSettings getUiSettings() -> getUiSettings
    com.google.android.gms.maps.Projection getProjection() -> getProjection
    void setOnCameraChangeListener(com.google.android.gms.maps.GoogleMap$OnCameraChangeListener) -> setOnCameraChangeListener
    void setOnMapClickListener(com.google.android.gms.maps.GoogleMap$OnMapClickListener) -> setOnMapClickListener
    void setOnMapLongClickListener(com.google.android.gms.maps.GoogleMap$OnMapLongClickListener) -> setOnMapLongClickListener
    void setOnMarkerClickListener(com.google.android.gms.maps.GoogleMap$OnMarkerClickListener) -> setOnMarkerClickListener
    void setOnMarkerDragListener(com.google.android.gms.maps.GoogleMap$OnMarkerDragListener) -> setOnMarkerDragListener
    void setOnInfoWindowClickListener(com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener) -> setOnInfoWindowClickListener
    void setInfoWindowAdapter(com.google.android.gms.maps.GoogleMap$InfoWindowAdapter) -> setInfoWindowAdapter
    void setOnMyLocationChangeListener(com.google.android.gms.maps.GoogleMap$OnMyLocationChangeListener) -> setOnMyLocationChangeListener
com.google.android.gms.maps.GoogleMap$1 -> com.google.android.gms.maps.GoogleMap$1:
    com.google.android.gms.maps.LocationSource eV -> eV
    com.google.android.gms.maps.GoogleMap eW -> eW
    void activate(com.google.android.gms.internal.cp) -> activate
    void deactivate() -> deactivate
com.google.android.gms.maps.GoogleMap$1$1 -> com.google.android.gms.maps.GoogleMap$1$1:
    com.google.android.gms.internal.cp eX -> eX
    com.google.android.gms.maps.GoogleMap$1 eY -> eY
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.google.android.gms.maps.GoogleMap$2 -> com.google.android.gms.maps.GoogleMap$2:
    com.google.android.gms.maps.GoogleMap$OnCameraChangeListener eZ -> eZ
    com.google.android.gms.maps.GoogleMap eW -> eW
    void onCameraChange(com.google.android.gms.maps.model.CameraPosition) -> onCameraChange
com.google.android.gms.maps.GoogleMap$3 -> com.google.android.gms.maps.GoogleMap$3:
    com.google.android.gms.maps.GoogleMap$OnMapClickListener fa -> fa
    com.google.android.gms.maps.GoogleMap eW -> eW
    void onMapClick(com.google.android.gms.maps.model.LatLng) -> onMapClick
com.google.android.gms.maps.GoogleMap$4 -> com.google.android.gms.maps.GoogleMap$4:
    com.google.android.gms.maps.GoogleMap$OnMapLongClickListener fb -> fb
    com.google.android.gms.maps.GoogleMap eW -> eW
    void onMapLongClick(com.google.android.gms.maps.model.LatLng) -> onMapLongClick
com.google.android.gms.maps.GoogleMap$5 -> com.google.android.gms.maps.GoogleMap$5:
    com.google.android.gms.maps.GoogleMap$OnMarkerClickListener fc -> fc
    com.google.android.gms.maps.GoogleMap eW -> eW
    boolean a(com.google.android.gms.internal.dm) -> a
com.google.android.gms.maps.GoogleMap$6 -> com.google.android.gms.maps.GoogleMap$6:
    com.google.android.gms.maps.GoogleMap$OnMarkerDragListener fd -> fd
    com.google.android.gms.maps.GoogleMap eW -> eW
    void b(com.google.android.gms.internal.dm) -> b
    void c(com.google.android.gms.internal.dm) -> c
    void d(com.google.android.gms.internal.dm) -> d
com.google.android.gms.maps.GoogleMap$7 -> com.google.android.gms.maps.GoogleMap$7:
    com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener fe -> fe
    com.google.android.gms.maps.GoogleMap eW -> eW
    void e(com.google.android.gms.internal.dm) -> e
com.google.android.gms.maps.GoogleMap$8 -> com.google.android.gms.maps.GoogleMap$8:
    com.google.android.gms.maps.GoogleMap$InfoWindowAdapter ff -> ff
    com.google.android.gms.maps.GoogleMap eW -> eW
    com.google.android.gms.internal.bc f(com.google.android.gms.internal.dm) -> f
    com.google.android.gms.internal.bc g(com.google.android.gms.internal.dm) -> g
com.google.android.gms.maps.GoogleMap$9 -> com.google.android.gms.maps.GoogleMap$9:
    com.google.android.gms.maps.GoogleMap$OnMyLocationChangeListener fg -> fg
    com.google.android.gms.maps.GoogleMap eW -> eW
    void b(com.google.android.gms.internal.bc) -> b
com.google.android.gms.maps.GoogleMap$CancelableCallback -> com.google.android.gms.maps.GoogleMap$CancelableCallback:
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.google.android.gms.maps.GoogleMap$InfoWindowAdapter -> com.google.android.gms.maps.GoogleMap$InfoWindowAdapter:
    android.view.View getInfoWindow(com.google.android.gms.maps.model.Marker) -> getInfoWindow
    android.view.View getInfoContents(com.google.android.gms.maps.model.Marker) -> getInfoContents
com.google.android.gms.maps.GoogleMap$OnCameraChangeListener -> com.google.android.gms.maps.GoogleMap$OnCameraChangeListener:
    void onCameraChange(com.google.android.gms.maps.model.CameraPosition) -> onCameraChange
com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener -> com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener:
    void onInfoWindowClick(com.google.android.gms.maps.model.Marker) -> onInfoWindowClick
com.google.android.gms.maps.GoogleMap$OnMapClickListener -> com.google.android.gms.maps.GoogleMap$OnMapClickListener:
    void onMapClick(com.google.android.gms.maps.model.LatLng) -> onMapClick
com.google.android.gms.maps.GoogleMap$OnMapLongClickListener -> com.google.android.gms.maps.GoogleMap$OnMapLongClickListener:
    void onMapLongClick(com.google.android.gms.maps.model.LatLng) -> onMapLongClick
com.google.android.gms.maps.GoogleMap$OnMarkerClickListener -> com.google.android.gms.maps.GoogleMap$OnMarkerClickListener:
    boolean onMarkerClick(com.google.android.gms.maps.model.Marker) -> onMarkerClick
com.google.android.gms.maps.GoogleMap$OnMarkerDragListener -> com.google.android.gms.maps.GoogleMap$OnMarkerDragListener:
    void onMarkerDragStart(com.google.android.gms.maps.model.Marker) -> onMarkerDragStart
    void onMarkerDrag(com.google.android.gms.maps.model.Marker) -> onMarkerDrag
    void onMarkerDragEnd(com.google.android.gms.maps.model.Marker) -> onMarkerDragEnd
com.google.android.gms.maps.GoogleMap$OnMyLocationChangeListener -> com.google.android.gms.maps.GoogleMap$OnMyLocationChangeListener:
    void onMyLocationChange(android.location.Location) -> onMyLocationChange
com.google.android.gms.maps.GoogleMap$a -> com.google.android.gms.maps.GoogleMap$a:
    com.google.android.gms.maps.GoogleMap$CancelableCallback fh -> fh
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.google.android.gms.maps.GoogleMapOptions -> com.google.android.gms.maps.GoogleMapOptions:
    com.google.android.gms.maps.GoogleMapOptionsCreator CREATOR -> CREATOR
    int T -> T
    java.lang.Boolean fi -> fi
    java.lang.Boolean fj -> fj
    int fk -> fk
    com.google.android.gms.maps.model.CameraPosition fl -> fl
    java.lang.Boolean fm -> fm
    java.lang.Boolean fn -> fn
    java.lang.Boolean fo -> fo
    java.lang.Boolean fp -> fp
    java.lang.Boolean fq -> fq
    java.lang.Boolean fr -> fr
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int u() -> u
    byte aG() -> aG
    byte aH() -> aH
    byte aI() -> aI
    byte aJ() -> aJ
    byte aK() -> aK
    byte aL() -> aL
    byte aM() -> aM
    byte aN() -> aN
    com.google.android.gms.maps.GoogleMapOptions zOrderOnTop(boolean) -> zOrderOnTop
    com.google.android.gms.maps.GoogleMapOptions useViewLifecycleInFragment(boolean) -> useViewLifecycleInFragment
    com.google.android.gms.maps.GoogleMapOptions mapType(int) -> mapType
    com.google.android.gms.maps.GoogleMapOptions camera(com.google.android.gms.maps.model.CameraPosition) -> camera
    com.google.android.gms.maps.GoogleMapOptions zoomControlsEnabled(boolean) -> zoomControlsEnabled
    com.google.android.gms.maps.GoogleMapOptions compassEnabled(boolean) -> compassEnabled
    com.google.android.gms.maps.GoogleMapOptions scrollGesturesEnabled(boolean) -> scrollGesturesEnabled
    com.google.android.gms.maps.GoogleMapOptions zoomGesturesEnabled(boolean) -> zoomGesturesEnabled
    com.google.android.gms.maps.GoogleMapOptions tiltGesturesEnabled(boolean) -> tiltGesturesEnabled
    com.google.android.gms.maps.GoogleMapOptions rotateGesturesEnabled(boolean) -> rotateGesturesEnabled
    java.lang.Boolean getZOrderOnTop() -> getZOrderOnTop
    java.lang.Boolean getUseViewLifecycleInFragment() -> getUseViewLifecycleInFragment
    int getMapType() -> getMapType
    com.google.android.gms.maps.model.CameraPosition getCamera() -> getCamera
    java.lang.Boolean getZoomControlsEnabled() -> getZoomControlsEnabled
    java.lang.Boolean getCompassEnabled() -> getCompassEnabled
    java.lang.Boolean getScrollGesturesEnabled() -> getScrollGesturesEnabled
    java.lang.Boolean getZoomGesturesEnabled() -> getZoomGesturesEnabled
    java.lang.Boolean getTiltGesturesEnabled() -> getTiltGesturesEnabled
    java.lang.Boolean getRotateGesturesEnabled() -> getRotateGesturesEnabled
    com.google.android.gms.maps.GoogleMapOptions createFromAttributes(android.content.Context,android.util.AttributeSet) -> createFromAttributes
com.google.android.gms.maps.GoogleMapOptionsCreator -> com.google.android.gms.maps.GoogleMapOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.GoogleMapOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.GoogleMapOptions[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.GoogleMapOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.LocationSource -> com.google.android.gms.maps.LocationSource:
    void activate(com.google.android.gms.maps.LocationSource$OnLocationChangedListener) -> activate
    void deactivate() -> deactivate
com.google.android.gms.maps.LocationSource$OnLocationChangedListener -> com.google.android.gms.maps.LocationSource$OnLocationChangedListener:
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.google.android.gms.maps.MapFragment -> com.google.android.gms.maps.MapFragment:
    com.google.android.gms.maps.MapFragment$b fs -> fs
    com.google.android.gms.maps.GoogleMap ft -> ft
    com.google.android.gms.maps.MapFragment newInstance() -> newInstance
    com.google.android.gms.maps.MapFragment newInstance(com.google.android.gms.maps.GoogleMapOptions) -> newInstance
    com.google.android.gms.maps.internal.IMapFragmentDelegate aO() -> aO
    com.google.android.gms.maps.GoogleMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
com.google.android.gms.maps.MapFragment$a -> com.google.android.gms.maps.MapFragment$a:
    android.app.Fragment fu -> fu
    com.google.android.gms.maps.internal.IMapFragmentDelegate fv -> fv
    void onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    com.google.android.gms.maps.internal.IMapFragmentDelegate aO() -> aO
com.google.android.gms.maps.MapFragment$b -> com.google.android.gms.maps.MapFragment$b:
    android.app.Fragment fu -> fu
    com.google.android.gms.internal.be fw -> fw
    android.app.Activity ar -> ar
    void a(com.google.android.gms.internal.be) -> a
    void aP() -> aP
    void setActivity(android.app.Activity) -> setActivity
    void a(com.google.android.gms.maps.MapFragment$b,android.app.Activity) -> a
com.google.android.gms.maps.MapView -> com.google.android.gms.maps.MapView:
    com.google.android.gms.maps.MapView$b fx -> fx
    com.google.android.gms.maps.GoogleMap ft -> ft
    com.google.android.gms.maps.GoogleMap getMap() -> getMap
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.google.android.gms.maps.MapView$a -> com.google.android.gms.maps.MapView$a:
    android.view.ViewGroup fy -> fy
    com.google.android.gms.maps.internal.IMapViewDelegate fz -> fz
    android.view.View fA -> fA
    void onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    com.google.android.gms.maps.internal.IMapViewDelegate aQ() -> aQ
com.google.android.gms.maps.MapView$b -> com.google.android.gms.maps.MapView$b:
    android.view.ViewGroup fB -> fB
    android.content.Context mContext -> mContext
    com.google.android.gms.internal.be fw -> fw
    com.google.android.gms.maps.GoogleMapOptions fC -> fC
    void a(com.google.android.gms.internal.be) -> a
    void aP() -> aP
com.google.android.gms.maps.MapsInitializer -> com.google.android.gms.maps.MapsInitializer:
    void initialize(android.content.Context) -> initialize
com.google.android.gms.maps.Projection -> com.google.android.gms.maps.Projection:
    com.google.android.gms.maps.internal.IProjectionDelegate fD -> fD
    com.google.android.gms.maps.model.LatLng fromScreenLocation(android.graphics.Point) -> fromScreenLocation
    android.graphics.Point toScreenLocation(com.google.android.gms.maps.model.LatLng) -> toScreenLocation
    com.google.android.gms.maps.model.VisibleRegion getVisibleRegion() -> getVisibleRegion
com.google.android.gms.maps.SupportMapFragment -> com.google.android.gms.maps.SupportMapFragment:
    com.google.android.gms.maps.SupportMapFragment$b fE -> fE
    com.google.android.gms.maps.GoogleMap ft -> ft
    com.google.android.gms.maps.SupportMapFragment newInstance() -> newInstance
    com.google.android.gms.maps.SupportMapFragment newInstance(com.google.android.gms.maps.GoogleMapOptions) -> newInstance
    com.google.android.gms.maps.internal.IMapFragmentDelegate aO() -> aO
    com.google.android.gms.maps.GoogleMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
com.google.android.gms.maps.SupportMapFragment$a -> com.google.android.gms.maps.SupportMapFragment$a:
    android.support.v4.app.Fragment fF -> fF
    com.google.android.gms.maps.internal.IMapFragmentDelegate fv -> fv
    void onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    com.google.android.gms.maps.internal.IMapFragmentDelegate aO() -> aO
com.google.android.gms.maps.SupportMapFragment$b -> com.google.android.gms.maps.SupportMapFragment$b:
    android.support.v4.app.Fragment fF -> fF
    com.google.android.gms.internal.be fw -> fw
    android.app.Activity ar -> ar
    void a(com.google.android.gms.internal.be) -> a
    void aP() -> aP
    void setActivity(android.app.Activity) -> setActivity
    void a(com.google.android.gms.maps.SupportMapFragment$b,android.app.Activity) -> a
com.google.android.gms.maps.UiSettings -> com.google.android.gms.maps.UiSettings:
    com.google.android.gms.maps.internal.IUiSettingsDelegate fG -> fG
    void setZoomControlsEnabled(boolean) -> setZoomControlsEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setMyLocationButtonEnabled(boolean) -> setMyLocationButtonEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
    void setTiltGesturesEnabled(boolean) -> setTiltGesturesEnabled
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    boolean isZoomControlsEnabled() -> isZoomControlsEnabled
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isMyLocationButtonEnabled() -> isMyLocationButtonEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    boolean isTiltGesturesEnabled() -> isTiltGesturesEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate -> com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate:
    com.google.android.gms.internal.bc zoomIn() -> zoomIn
    com.google.android.gms.internal.bc zoomOut() -> zoomOut
    com.google.android.gms.internal.bc scrollBy(float,float) -> scrollBy
    com.google.android.gms.internal.bc zoomTo(float) -> zoomTo
    com.google.android.gms.internal.bc zoomBy(float) -> zoomBy
    com.google.android.gms.internal.bc zoomByWithFocus(float,int,int) -> zoomByWithFocus
    com.google.android.gms.internal.bc newCameraPosition(com.google.android.gms.maps.model.CameraPosition) -> newCameraPosition
    com.google.android.gms.internal.bc newLatLng(com.google.android.gms.maps.model.LatLng) -> newLatLng
    com.google.android.gms.internal.bc newLatLngZoom(com.google.android.gms.maps.model.LatLng,float) -> newLatLngZoom
    com.google.android.gms.internal.bc newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int) -> newLatLngBounds
    com.google.android.gms.internal.bc newLatLngBoundsWithSize(com.google.android.gms.maps.model.LatLngBounds,int,int,int) -> newLatLngBoundsWithSize
com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate$a -> com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate$a:
    com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate r(android.os.IBinder) -> r
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate$a$a -> com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.internal.bc zoomIn() -> zoomIn
    com.google.android.gms.internal.bc zoomOut() -> zoomOut
    com.google.android.gms.internal.bc scrollBy(float,float) -> scrollBy
    com.google.android.gms.internal.bc zoomTo(float) -> zoomTo
    com.google.android.gms.internal.bc zoomBy(float) -> zoomBy
    com.google.android.gms.internal.bc zoomByWithFocus(float,int,int) -> zoomByWithFocus
    com.google.android.gms.internal.bc newCameraPosition(com.google.android.gms.maps.model.CameraPosition) -> newCameraPosition
    com.google.android.gms.internal.bc newLatLng(com.google.android.gms.maps.model.LatLng) -> newLatLng
    com.google.android.gms.internal.bc newLatLngZoom(com.google.android.gms.maps.model.LatLng,float) -> newLatLngZoom
    com.google.android.gms.internal.bc newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int) -> newLatLngBounds
    com.google.android.gms.internal.bc newLatLngBoundsWithSize(com.google.android.gms.maps.model.LatLngBounds,int,int,int) -> newLatLngBoundsWithSize
com.google.android.gms.maps.internal.IGoogleMapDelegate -> com.google.android.gms.maps.internal.IGoogleMapDelegate:
    com.google.android.gms.maps.model.CameraPosition getCameraPosition() -> getCameraPosition
    float getMaxZoomLevel() -> getMaxZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    void moveCamera(com.google.android.gms.internal.bc) -> moveCamera
    void animateCamera(com.google.android.gms.internal.bc) -> animateCamera
    void animateCameraWithCallback(com.google.android.gms.internal.bc,com.google.android.gms.internal.ck) -> animateCameraWithCallback
    void animateCameraWithDurationAndCallback(com.google.android.gms.internal.bc,int,com.google.android.gms.internal.ck) -> animateCameraWithDurationAndCallback
    void stopAnimation() -> stopAnimation
    com.google.android.gms.maps.model.internal.IPolylineDelegate addPolyline(com.google.android.gms.maps.model.PolylineOptions) -> addPolyline
    com.google.android.gms.internal.dn addPolygon(com.google.android.gms.maps.model.PolygonOptions) -> addPolygon
    com.google.android.gms.internal.dm addMarker(com.google.android.gms.maps.model.MarkerOptions) -> addMarker
    com.google.android.gms.internal.dl addGroundOverlay(com.google.android.gms.maps.model.GroundOverlayOptions) -> addGroundOverlay
    com.google.android.gms.internal.do addTileOverlay(com.google.android.gms.maps.model.TileOverlayOptions) -> addTileOverlay
    void clear() -> clear
    int getMapType() -> getMapType
    void setMapType(int) -> setMapType
    boolean isTrafficEnabled() -> isTrafficEnabled
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    boolean isIndoorEnabled() -> isIndoorEnabled
    boolean setIndoorEnabled(boolean) -> setIndoorEnabled
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    android.location.Location getMyLocation() -> getMyLocation
    void setLocationSource(com.google.android.gms.maps.internal.ILocationSourceDelegate) -> setLocationSource
    com.google.android.gms.maps.internal.IUiSettingsDelegate getUiSettings() -> getUiSettings
    com.google.android.gms.maps.internal.IProjectionDelegate getProjection() -> getProjection
    void setOnCameraChangeListener(com.google.android.gms.internal.cn) -> setOnCameraChangeListener
    void setOnMapClickListener(com.google.android.gms.internal.cq) -> setOnMapClickListener
    void setOnMapLongClickListener(com.google.android.gms.internal.cr) -> setOnMapLongClickListener
    void setOnMarkerClickListener(com.google.android.gms.internal.cs) -> setOnMarkerClickListener
    void setOnMarkerDragListener(com.google.android.gms.internal.ct) -> setOnMarkerDragListener
    void setOnInfoWindowClickListener(com.google.android.gms.internal.co) -> setOnInfoWindowClickListener
    void setInfoWindowAdapter(com.google.android.gms.internal.cm) -> setInfoWindowAdapter
    com.google.android.gms.internal.bc getTestingHelper() -> getTestingHelper
    com.google.android.gms.internal.dk addCircle(com.google.android.gms.maps.model.CircleOptions) -> addCircle
    void setOnMyLocationChangeListener(com.google.android.gms.internal.cu) -> setOnMyLocationChangeListener
com.google.android.gms.maps.internal.IGoogleMapDelegate$a -> com.google.android.gms.maps.internal.IGoogleMapDelegate$a:
    com.google.android.gms.maps.internal.IGoogleMapDelegate u(android.os.IBinder) -> u
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.IGoogleMapDelegate$a$a -> com.google.android.gms.maps.internal.IGoogleMapDelegate$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.model.CameraPosition getCameraPosition() -> getCameraPosition
    float getMaxZoomLevel() -> getMaxZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    void moveCamera(com.google.android.gms.internal.bc) -> moveCamera
    void animateCamera(com.google.android.gms.internal.bc) -> animateCamera
    void animateCameraWithCallback(com.google.android.gms.internal.bc,com.google.android.gms.internal.ck) -> animateCameraWithCallback
    void animateCameraWithDurationAndCallback(com.google.android.gms.internal.bc,int,com.google.android.gms.internal.ck) -> animateCameraWithDurationAndCallback
    void stopAnimation() -> stopAnimation
    com.google.android.gms.maps.model.internal.IPolylineDelegate addPolyline(com.google.android.gms.maps.model.PolylineOptions) -> addPolyline
    com.google.android.gms.internal.dn addPolygon(com.google.android.gms.maps.model.PolygonOptions) -> addPolygon
    com.google.android.gms.internal.dm addMarker(com.google.android.gms.maps.model.MarkerOptions) -> addMarker
    com.google.android.gms.internal.dl addGroundOverlay(com.google.android.gms.maps.model.GroundOverlayOptions) -> addGroundOverlay
    com.google.android.gms.internal.do addTileOverlay(com.google.android.gms.maps.model.TileOverlayOptions) -> addTileOverlay
    void clear() -> clear
    int getMapType() -> getMapType
    void setMapType(int) -> setMapType
    boolean isTrafficEnabled() -> isTrafficEnabled
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    boolean isIndoorEnabled() -> isIndoorEnabled
    boolean setIndoorEnabled(boolean) -> setIndoorEnabled
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    android.location.Location getMyLocation() -> getMyLocation
    void setLocationSource(com.google.android.gms.maps.internal.ILocationSourceDelegate) -> setLocationSource
    com.google.android.gms.maps.internal.IUiSettingsDelegate getUiSettings() -> getUiSettings
    com.google.android.gms.maps.internal.IProjectionDelegate getProjection() -> getProjection
    void setOnCameraChangeListener(com.google.android.gms.internal.cn) -> setOnCameraChangeListener
    void setOnMapClickListener(com.google.android.gms.internal.cq) -> setOnMapClickListener
    void setOnMapLongClickListener(com.google.android.gms.internal.cr) -> setOnMapLongClickListener
    void setOnMarkerClickListener(com.google.android.gms.internal.cs) -> setOnMarkerClickListener
    void setOnMarkerDragListener(com.google.android.gms.internal.ct) -> setOnMarkerDragListener
    void setOnInfoWindowClickListener(com.google.android.gms.internal.co) -> setOnInfoWindowClickListener
    void setInfoWindowAdapter(com.google.android.gms.internal.cm) -> setInfoWindowAdapter
    com.google.android.gms.internal.bc getTestingHelper() -> getTestingHelper
    com.google.android.gms.internal.dk addCircle(com.google.android.gms.maps.model.CircleOptions) -> addCircle
    void setOnMyLocationChangeListener(com.google.android.gms.internal.cu) -> setOnMyLocationChangeListener
com.google.android.gms.maps.internal.ILocationSourceDelegate -> com.google.android.gms.maps.internal.ILocationSourceDelegate:
    void activate(com.google.android.gms.internal.cp) -> activate
    void deactivate() -> deactivate
com.google.android.gms.maps.internal.ILocationSourceDelegate$a -> com.google.android.gms.maps.internal.ILocationSourceDelegate$a:
    com.google.android.gms.maps.internal.ILocationSourceDelegate w(android.os.IBinder) -> w
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.ILocationSourceDelegate$a$a -> com.google.android.gms.maps.internal.ILocationSourceDelegate$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void activate(com.google.android.gms.internal.cp) -> activate
    void deactivate() -> deactivate
com.google.android.gms.maps.internal.IMapFragmentDelegate -> com.google.android.gms.maps.internal.IMapFragmentDelegate:
    com.google.android.gms.maps.internal.IGoogleMapDelegate getMap() -> getMap
    void onInflate(com.google.android.gms.internal.bc,com.google.android.gms.maps.GoogleMapOptions,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    com.google.android.gms.internal.bc onCreateView(com.google.android.gms.internal.bc,com.google.android.gms.internal.bc,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean isReady() -> isReady
com.google.android.gms.maps.internal.IMapFragmentDelegate$a -> com.google.android.gms.maps.internal.IMapFragmentDelegate$a:
    com.google.android.gms.maps.internal.IMapFragmentDelegate x(android.os.IBinder) -> x
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.IMapFragmentDelegate$a$a -> com.google.android.gms.maps.internal.IMapFragmentDelegate$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.internal.IGoogleMapDelegate getMap() -> getMap
    void onInflate(com.google.android.gms.internal.bc,com.google.android.gms.maps.GoogleMapOptions,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    com.google.android.gms.internal.bc onCreateView(com.google.android.gms.internal.bc,com.google.android.gms.internal.bc,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean isReady() -> isReady
com.google.android.gms.maps.internal.IMapViewDelegate -> com.google.android.gms.maps.internal.IMapViewDelegate:
    com.google.android.gms.maps.internal.IGoogleMapDelegate getMap() -> getMap
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    com.google.android.gms.internal.bc getView() -> getView
com.google.android.gms.maps.internal.IMapViewDelegate$a -> com.google.android.gms.maps.internal.IMapViewDelegate$a:
    com.google.android.gms.maps.internal.IMapViewDelegate y(android.os.IBinder) -> y
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.IMapViewDelegate$a$a -> com.google.android.gms.maps.internal.IMapViewDelegate$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.internal.IGoogleMapDelegate getMap() -> getMap
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    com.google.android.gms.internal.bc getView() -> getView
com.google.android.gms.maps.internal.IProjectionDelegate -> com.google.android.gms.maps.internal.IProjectionDelegate:
    com.google.android.gms.maps.model.LatLng fromScreenLocation(com.google.android.gms.internal.bc) -> fromScreenLocation
    com.google.android.gms.internal.bc toScreenLocation(com.google.android.gms.maps.model.LatLng) -> toScreenLocation
    com.google.android.gms.maps.model.VisibleRegion getVisibleRegion() -> getVisibleRegion
com.google.android.gms.maps.internal.IProjectionDelegate$a -> com.google.android.gms.maps.internal.IProjectionDelegate$a:
    com.google.android.gms.maps.internal.IProjectionDelegate H(android.os.IBinder) -> H
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.IProjectionDelegate$a$a -> com.google.android.gms.maps.internal.IProjectionDelegate$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.model.LatLng fromScreenLocation(com.google.android.gms.internal.bc) -> fromScreenLocation
    com.google.android.gms.internal.bc toScreenLocation(com.google.android.gms.maps.model.LatLng) -> toScreenLocation
    com.google.android.gms.maps.model.VisibleRegion getVisibleRegion() -> getVisibleRegion
com.google.android.gms.maps.internal.IUiSettingsDelegate -> com.google.android.gms.maps.internal.IUiSettingsDelegate:
    void setZoomControlsEnabled(boolean) -> setZoomControlsEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setMyLocationButtonEnabled(boolean) -> setMyLocationButtonEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
    void setTiltGesturesEnabled(boolean) -> setTiltGesturesEnabled
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    boolean isZoomControlsEnabled() -> isZoomControlsEnabled
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isMyLocationButtonEnabled() -> isMyLocationButtonEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    boolean isTiltGesturesEnabled() -> isTiltGesturesEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
com.google.android.gms.maps.internal.IUiSettingsDelegate$a -> com.google.android.gms.maps.internal.IUiSettingsDelegate$a:
    com.google.android.gms.maps.internal.IUiSettingsDelegate I(android.os.IBinder) -> I
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.internal.IUiSettingsDelegate$a$a -> com.google.android.gms.maps.internal.IUiSettingsDelegate$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void setZoomControlsEnabled(boolean) -> setZoomControlsEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setMyLocationButtonEnabled(boolean) -> setMyLocationButtonEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
    void setTiltGesturesEnabled(boolean) -> setTiltGesturesEnabled
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    boolean isZoomControlsEnabled() -> isZoomControlsEnabled
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isMyLocationButtonEnabled() -> isMyLocationButtonEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    boolean isTiltGesturesEnabled() -> isTiltGesturesEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
com.google.android.gms.maps.model.BitmapDescriptor -> com.google.android.gms.maps.model.BitmapDescriptor:
    com.google.android.gms.internal.bc eR -> eR
    com.google.android.gms.internal.bc aD() -> aD
com.google.android.gms.maps.model.BitmapDescriptorFactory -> com.google.android.gms.maps.model.BitmapDescriptorFactory:
    float HUE_RED -> HUE_RED
    float HUE_ORANGE -> HUE_ORANGE
    float HUE_YELLOW -> HUE_YELLOW
    float HUE_GREEN -> HUE_GREEN
    float HUE_CYAN -> HUE_CYAN
    float HUE_AZURE -> HUE_AZURE
    float HUE_BLUE -> HUE_BLUE
    float HUE_VIOLET -> HUE_VIOLET
    float HUE_MAGENTA -> HUE_MAGENTA
    float HUE_ROSE -> HUE_ROSE
    com.google.android.gms.internal.dj fJ -> fJ
    com.google.android.gms.internal.dj aW() -> aW
    void a(com.google.android.gms.internal.dj) -> a
    com.google.android.gms.maps.model.BitmapDescriptor fromResource(int) -> fromResource
    com.google.android.gms.maps.model.BitmapDescriptor fromAsset(java.lang.String) -> fromAsset
    com.google.android.gms.maps.model.BitmapDescriptor fromFile(java.lang.String) -> fromFile
    com.google.android.gms.maps.model.BitmapDescriptor fromPath(java.lang.String) -> fromPath
    com.google.android.gms.maps.model.BitmapDescriptor defaultMarker() -> defaultMarker
    com.google.android.gms.maps.model.BitmapDescriptor defaultMarker(float) -> defaultMarker
    com.google.android.gms.maps.model.BitmapDescriptor fromBitmap(android.graphics.Bitmap) -> fromBitmap
com.google.android.gms.maps.model.CameraPosition -> com.google.android.gms.maps.model.CameraPosition:
    com.google.android.gms.maps.model.CameraPositionCreator CREATOR -> CREATOR
    int T -> T
    com.google.android.gms.maps.model.LatLng target -> target
    float zoom -> zoom
    float tilt -> tilt
    float bearing -> bearing
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int u() -> u
    com.google.android.gms.maps.model.CameraPosition fromLatLngZoom(com.google.android.gms.maps.model.LatLng,float) -> fromLatLngZoom
    com.google.android.gms.maps.model.CameraPosition$Builder builder() -> builder
    com.google.android.gms.maps.model.CameraPosition$Builder builder(com.google.android.gms.maps.model.CameraPosition) -> builder
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.android.gms.maps.model.CameraPosition createFromAttributes(android.content.Context,android.util.AttributeSet) -> createFromAttributes
com.google.android.gms.maps.model.CameraPosition$Builder -> com.google.android.gms.maps.model.CameraPosition$Builder:
    com.google.android.gms.maps.model.LatLng fK -> fK
    float fL -> fL
    float fM -> fM
    float fN -> fN
    com.google.android.gms.maps.model.CameraPosition$Builder target(com.google.android.gms.maps.model.LatLng) -> target
    com.google.android.gms.maps.model.CameraPosition$Builder zoom(float) -> zoom
    com.google.android.gms.maps.model.CameraPosition$Builder tilt(float) -> tilt
    com.google.android.gms.maps.model.CameraPosition$Builder bearing(float) -> bearing
    com.google.android.gms.maps.model.CameraPosition build() -> build
com.google.android.gms.maps.model.CameraPositionCreator -> com.google.android.gms.maps.model.CameraPositionCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.CameraPosition createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.CameraPosition[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.CameraPosition,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.Circle -> com.google.android.gms.maps.model.Circle:
    com.google.android.gms.internal.dk fO -> fO
    void remove() -> remove
    java.lang.String getId() -> getId
    void setCenter(com.google.android.gms.maps.model.LatLng) -> setCenter
    com.google.android.gms.maps.model.LatLng getCenter() -> getCenter
    void setRadius(double) -> setRadius
    double getRadius() -> getRadius
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.maps.model.CircleOptions -> com.google.android.gms.maps.model.CircleOptions:
    com.google.android.gms.maps.model.CircleOptionsCreator CREATOR -> CREATOR
    int T -> T
    com.google.android.gms.maps.model.LatLng fP -> fP
    double fQ -> fQ
    float fR -> fR
    int fS -> fS
    int fT -> fT
    float fU -> fU
    boolean fV -> fV
    int u() -> u
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.google.android.gms.maps.model.CircleOptions center(com.google.android.gms.maps.model.LatLng) -> center
    com.google.android.gms.maps.model.CircleOptions radius(double) -> radius
    com.google.android.gms.maps.model.CircleOptions strokeWidth(float) -> strokeWidth
    com.google.android.gms.maps.model.CircleOptions strokeColor(int) -> strokeColor
    com.google.android.gms.maps.model.CircleOptions fillColor(int) -> fillColor
    com.google.android.gms.maps.model.CircleOptions zIndex(float) -> zIndex
    com.google.android.gms.maps.model.CircleOptions visible(boolean) -> visible
    com.google.android.gms.maps.model.LatLng getCenter() -> getCenter
    double getRadius() -> getRadius
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    int getFillColor() -> getFillColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
com.google.android.gms.maps.model.CircleOptionsCreator -> com.google.android.gms.maps.model.CircleOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.CircleOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.CircleOptions[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.CircleOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.GroundOverlay -> com.google.android.gms.maps.model.GroundOverlay:
    com.google.android.gms.internal.dl fW -> fW
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.google.android.gms.maps.model.LatLng) -> setPosition
    com.google.android.gms.maps.model.LatLng getPosition() -> getPosition
    void setDimensions(float) -> setDimensions
    void setDimensions(float,float) -> setDimensions
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setPositionFromBounds(com.google.android.gms.maps.model.LatLngBounds) -> setPositionFromBounds
    com.google.android.gms.maps.model.LatLngBounds getBounds() -> getBounds
    void setBearing(float) -> setBearing
    float getBearing() -> getBearing
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.maps.model.GroundOverlayOptions -> com.google.android.gms.maps.model.GroundOverlayOptions:
    com.google.android.gms.maps.model.GroundOverlayOptionsCreator CREATOR -> CREATOR
    float NO_DIMENSION -> NO_DIMENSION
    int T -> T
    com.google.android.gms.maps.model.BitmapDescriptor fX -> fX
    com.google.android.gms.maps.model.LatLng fY -> fY
    float fZ -> fZ
    float ga -> ga
    com.google.android.gms.maps.model.LatLngBounds gb -> gb
    float fN -> fN
    float fU -> fU
    boolean fV -> fV
    float gc -> gc
    float gd -> gd
    float ge -> ge
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    android.os.IBinder aX() -> aX
    com.google.android.gms.maps.model.GroundOverlayOptions image(com.google.android.gms.maps.model.BitmapDescriptor) -> image
    com.google.android.gms.maps.model.GroundOverlayOptions anchor(float,float) -> anchor
    com.google.android.gms.maps.model.GroundOverlayOptions position(com.google.android.gms.maps.model.LatLng,float) -> position
    com.google.android.gms.maps.model.GroundOverlayOptions position(com.google.android.gms.maps.model.LatLng,float,float) -> position
    com.google.android.gms.maps.model.GroundOverlayOptions a(com.google.android.gms.maps.model.LatLng,float,float) -> a
    com.google.android.gms.maps.model.GroundOverlayOptions positionFromBounds(com.google.android.gms.maps.model.LatLngBounds) -> positionFromBounds
    com.google.android.gms.maps.model.GroundOverlayOptions bearing(float) -> bearing
    com.google.android.gms.maps.model.GroundOverlayOptions zIndex(float) -> zIndex
    com.google.android.gms.maps.model.GroundOverlayOptions visible(boolean) -> visible
    com.google.android.gms.maps.model.GroundOverlayOptions transparency(float) -> transparency
    int u() -> u
    com.google.android.gms.maps.model.BitmapDescriptor getImage() -> getImage
    com.google.android.gms.maps.model.LatLng getLocation() -> getLocation
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    com.google.android.gms.maps.model.LatLngBounds getBounds() -> getBounds
    float getBearing() -> getBearing
    float getZIndex() -> getZIndex
    float getTransparency() -> getTransparency
    float getAnchorU() -> getAnchorU
    float getAnchorV() -> getAnchorV
    boolean isVisible() -> isVisible
com.google.android.gms.maps.model.GroundOverlayOptionsCreator -> com.google.android.gms.maps.model.GroundOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.GroundOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.GroundOverlayOptions[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.GroundOverlayOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.LatLng -> com.google.android.gms.maps.model.LatLng:
    com.google.android.gms.maps.model.LatLngCreator CREATOR -> CREATOR
    int T -> T
    double latitude -> latitude
    double longitude -> longitude
    int u() -> u
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.LatLngBounds -> com.google.android.gms.maps.model.LatLngBounds:
    com.google.android.gms.maps.model.LatLngBoundsCreator CREATOR -> CREATOR
    int T -> T
    com.google.android.gms.maps.model.LatLng southwest -> southwest
    com.google.android.gms.maps.model.LatLng northeast -> northeast
    int u() -> u
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.google.android.gms.maps.model.LatLngBounds$Builder builder() -> builder
    boolean contains(com.google.android.gms.maps.model.LatLng) -> contains
    com.google.android.gms.maps.model.LatLngBounds including(com.google.android.gms.maps.model.LatLng) -> including
    double b(double,double) -> b
    double c(double,double) -> c
    boolean a(double) -> a
    boolean b(double) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    double d(double,double) -> d
    double e(double,double) -> e
com.google.android.gms.maps.model.LatLngBounds$Builder -> com.google.android.gms.maps.model.LatLngBounds$Builder:
    double gf -> gf
    double gg -> gg
    double gh -> gh
    double gi -> gi
    com.google.android.gms.maps.model.LatLngBounds$Builder include(com.google.android.gms.maps.model.LatLng) -> include
    boolean b(double) -> b
    com.google.android.gms.maps.model.LatLngBounds build() -> build
com.google.android.gms.maps.model.LatLngBoundsCreator -> com.google.android.gms.maps.model.LatLngBoundsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.LatLngBounds createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.LatLngBounds[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.LatLngBounds,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.LatLngCreator -> com.google.android.gms.maps.model.LatLngCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.LatLng createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.LatLng[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.LatLng,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.Marker -> com.google.android.gms.maps.model.Marker:
    com.google.android.gms.internal.dm gj -> gj
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.google.android.gms.maps.model.LatLng) -> setPosition
    com.google.android.gms.maps.model.LatLng getPosition() -> getPosition
    void setIcon(com.google.android.gms.maps.model.BitmapDescriptor) -> setIcon
    void setAnchor(float,float) -> setAnchor
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setSnippet(java.lang.String) -> setSnippet
    java.lang.String getSnippet() -> getSnippet
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    void showInfoWindow() -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    boolean isInfoWindowShown() -> isInfoWindowShown
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.maps.model.MarkerOptions -> com.google.android.gms.maps.model.MarkerOptions:
    com.google.android.gms.maps.model.MarkerOptionsCreator CREATOR -> CREATOR
    int T -> T
    com.google.android.gms.maps.model.LatLng gk -> gk
    java.lang.String gl -> gl
    java.lang.String gm -> gm
    com.google.android.gms.maps.model.BitmapDescriptor gn -> gn
    float gd -> gd
    float ge -> ge
    boolean go -> go
    boolean fV -> fV
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int u() -> u
    android.os.IBinder aY() -> aY
    com.google.android.gms.maps.model.MarkerOptions position(com.google.android.gms.maps.model.LatLng) -> position
    com.google.android.gms.maps.model.MarkerOptions icon(com.google.android.gms.maps.model.BitmapDescriptor) -> icon
    com.google.android.gms.maps.model.MarkerOptions anchor(float,float) -> anchor
    com.google.android.gms.maps.model.MarkerOptions title(java.lang.String) -> title
    com.google.android.gms.maps.model.MarkerOptions snippet(java.lang.String) -> snippet
    com.google.android.gms.maps.model.MarkerOptions draggable(boolean) -> draggable
    com.google.android.gms.maps.model.MarkerOptions visible(boolean) -> visible
    com.google.android.gms.maps.model.LatLng getPosition() -> getPosition
    java.lang.String getTitle() -> getTitle
    java.lang.String getSnippet() -> getSnippet
    com.google.android.gms.maps.model.BitmapDescriptor getIcon() -> getIcon
    float getAnchorU() -> getAnchorU
    float getAnchorV() -> getAnchorV
    boolean isDraggable() -> isDraggable
    boolean isVisible() -> isVisible
com.google.android.gms.maps.model.MarkerOptionsCreator -> com.google.android.gms.maps.model.MarkerOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.MarkerOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.MarkerOptions[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.MarkerOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.Polygon -> com.google.android.gms.maps.model.Polygon:
    com.google.android.gms.internal.dn gp -> gp
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setHoles(java.util.List) -> setHoles
    java.util.List getHoles() -> getHoles
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.maps.model.PolygonOptions -> com.google.android.gms.maps.model.PolygonOptions:
    com.google.android.gms.maps.model.PolygonOptionsCreator CREATOR -> CREATOR
    int T -> T
    java.util.List gq -> gq
    java.util.List gr -> gr
    float fR -> fR
    int fS -> fS
    int fT -> fT
    float fU -> fU
    boolean fV -> fV
    boolean gs -> gs
    int u() -> u
    java.util.List aZ() -> aZ
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.google.android.gms.maps.model.PolygonOptions add(com.google.android.gms.maps.model.LatLng) -> add
    com.google.android.gms.maps.model.PolygonOptions add(com.google.android.gms.maps.model.LatLng[]) -> add
    com.google.android.gms.maps.model.PolygonOptions addAll(java.lang.Iterable) -> addAll
    com.google.android.gms.maps.model.PolygonOptions addHole(java.lang.Iterable) -> addHole
    com.google.android.gms.maps.model.PolygonOptions strokeWidth(float) -> strokeWidth
    com.google.android.gms.maps.model.PolygonOptions strokeColor(int) -> strokeColor
    com.google.android.gms.maps.model.PolygonOptions fillColor(int) -> fillColor
    com.google.android.gms.maps.model.PolygonOptions zIndex(float) -> zIndex
    com.google.android.gms.maps.model.PolygonOptions visible(boolean) -> visible
    com.google.android.gms.maps.model.PolygonOptions geodesic(boolean) -> geodesic
    java.util.List getPoints() -> getPoints
    java.util.List getHoles() -> getHoles
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    int getFillColor() -> getFillColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    boolean isGeodesic() -> isGeodesic
com.google.android.gms.maps.model.PolygonOptionsCreator -> com.google.android.gms.maps.model.PolygonOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.PolygonOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.PolygonOptions[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.PolygonOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.Polyline -> com.google.android.gms.maps.model.Polyline:
    com.google.android.gms.maps.model.internal.IPolylineDelegate gt -> gt
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.maps.model.PolylineOptions -> com.google.android.gms.maps.model.PolylineOptions:
    com.google.android.gms.maps.model.PolylineOptionsCreator CREATOR -> CREATOR
    int T -> T
    java.util.List gq -> gq
    float fZ -> fZ
    int L -> L
    float fU -> fU
    boolean fV -> fV
    boolean gs -> gs
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int u() -> u
    com.google.android.gms.maps.model.PolylineOptions add(com.google.android.gms.maps.model.LatLng) -> add
    com.google.android.gms.maps.model.PolylineOptions add(com.google.android.gms.maps.model.LatLng[]) -> add
    com.google.android.gms.maps.model.PolylineOptions addAll(java.lang.Iterable) -> addAll
    com.google.android.gms.maps.model.PolylineOptions width(float) -> width
    com.google.android.gms.maps.model.PolylineOptions color(int) -> color
    com.google.android.gms.maps.model.PolylineOptions zIndex(float) -> zIndex
    com.google.android.gms.maps.model.PolylineOptions visible(boolean) -> visible
    com.google.android.gms.maps.model.PolylineOptions geodesic(boolean) -> geodesic
    java.util.List getPoints() -> getPoints
    float getWidth() -> getWidth
    int getColor() -> getColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    boolean isGeodesic() -> isGeodesic
com.google.android.gms.maps.model.PolylineOptionsCreator -> com.google.android.gms.maps.model.PolylineOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.PolylineOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.PolylineOptions[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.PolylineOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.RuntimeRemoteException -> com.google.android.gms.maps.model.RuntimeRemoteException:
com.google.android.gms.maps.model.Tile -> com.google.android.gms.maps.model.Tile:
    com.google.android.gms.maps.model.TileCreator CREATOR -> CREATOR
    int T -> T
    int width -> width
    int height -> height
    byte[] data -> data
    int u() -> u
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.google.android.gms.maps.model.TileCreator -> com.google.android.gms.maps.model.TileCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.Tile createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.Tile[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.Tile,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.TileOverlay -> com.google.android.gms.maps.model.TileOverlay:
    com.google.android.gms.internal.do gu -> gu
    void remove() -> remove
    void clearTileCache() -> clearTileCache
    java.lang.String getId() -> getId
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.maps.model.TileOverlayOptions -> com.google.android.gms.maps.model.TileOverlayOptions:
    com.google.android.gms.maps.model.TileOverlayOptionsCreator CREATOR -> CREATOR
    int T -> T
    com.google.android.gms.internal.dp gv -> gv
    com.google.android.gms.maps.model.TileProvider gw -> gw
    boolean fV -> fV
    float fU -> fU
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int u() -> u
    android.os.IBinder ba() -> ba
    com.google.android.gms.maps.model.TileOverlayOptions tileProvider(com.google.android.gms.maps.model.TileProvider) -> tileProvider
    com.google.android.gms.maps.model.TileOverlayOptions zIndex(float) -> zIndex
    com.google.android.gms.maps.model.TileOverlayOptions visible(boolean) -> visible
    com.google.android.gms.maps.model.TileProvider getTileProvider() -> getTileProvider
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    com.google.android.gms.internal.dp a(com.google.android.gms.maps.model.TileOverlayOptions) -> a
com.google.android.gms.maps.model.TileOverlayOptions$1 -> com.google.android.gms.maps.model.TileOverlayOptions$1:
    com.google.android.gms.internal.dp gx -> gx
    com.google.android.gms.maps.model.TileOverlayOptions gy -> gy
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> getTile
com.google.android.gms.maps.model.TileOverlayOptions$2 -> com.google.android.gms.maps.model.TileOverlayOptions$2:
    com.google.android.gms.maps.model.TileProvider gz -> gz
    com.google.android.gms.maps.model.TileOverlayOptions gy -> gy
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> getTile
com.google.android.gms.maps.model.TileOverlayOptionsCreator -> com.google.android.gms.maps.model.TileOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.TileOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.TileOverlayOptions[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.TileOverlayOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.TileProvider -> com.google.android.gms.maps.model.TileProvider:
    com.google.android.gms.maps.model.Tile NO_TILE -> NO_TILE
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> getTile
com.google.android.gms.maps.model.UrlTileProvider -> com.google.android.gms.maps.model.UrlTileProvider:
    int gA -> gA
    int gB -> gB
    java.net.URL getTileUrl(int,int,int) -> getTileUrl
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> getTile
    byte[] a(java.io.InputStream) -> a
    long a(java.io.InputStream,java.io.OutputStream) -> a
com.google.android.gms.maps.model.VisibleRegion -> com.google.android.gms.maps.model.VisibleRegion:
    com.google.android.gms.maps.model.VisibleRegionCreator CREATOR -> CREATOR
    int T -> T
    com.google.android.gms.maps.model.LatLng nearLeft -> nearLeft
    com.google.android.gms.maps.model.LatLng nearRight -> nearRight
    com.google.android.gms.maps.model.LatLng farLeft -> farLeft
    com.google.android.gms.maps.model.LatLng farRight -> farRight
    com.google.android.gms.maps.model.LatLngBounds latLngBounds -> latLngBounds
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int u() -> u
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.VisibleRegionCreator -> com.google.android.gms.maps.model.VisibleRegionCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.android.gms.maps.model.VisibleRegion createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.maps.model.VisibleRegion[] newArray(int) -> newArray
    void a(com.google.android.gms.maps.model.VisibleRegion,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.internal.IPolylineDelegate -> com.google.android.gms.maps.model.internal.IPolylineDelegate:
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    boolean equalsRemote(com.google.android.gms.maps.model.internal.IPolylineDelegate) -> equalsRemote
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.maps.model.internal.IPolylineDelegate$a -> com.google.android.gms.maps.model.internal.IPolylineDelegate$a:
    com.google.android.gms.maps.model.internal.IPolylineDelegate O(android.os.IBinder) -> O
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.model.internal.IPolylineDelegate$a$a -> com.google.android.gms.maps.model.internal.IPolylineDelegate$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    boolean equalsRemote(com.google.android.gms.maps.model.internal.IPolylineDelegate) -> equalsRemote
    int hashCodeRemote() -> hashCodeRemote
com.google.android.gms.panorama.PanoramaClient -> com.google.android.gms.panorama.PanoramaClient:
    com.google.android.gms.internal.ds gC -> gC
    void loadPanoramaInfo(com.google.android.gms.panorama.PanoramaClient$OnPanoramaInfoLoadedListener,android.net.Uri) -> loadPanoramaInfo
    void loadPanoramaInfoAndGrantAccess(com.google.android.gms.panorama.PanoramaClient$OnPanoramaInfoLoadedListener,android.net.Uri) -> loadPanoramaInfoAndGrantAccess
    void connect() -> connect
    boolean isConnected() -> isConnected
    boolean isConnecting() -> isConnecting
    void registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> registerConnectionCallbacks
    boolean isConnectionCallbacksRegistered(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> isConnectionCallbacksRegistered
    void unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> unregisterConnectionCallbacks
    void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> registerConnectionFailedListener
    boolean isConnectionFailedListenerRegistered(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> isConnectionFailedListenerRegistered
    void unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> unregisterConnectionFailedListener
    void disconnect() -> disconnect
com.google.android.gms.panorama.PanoramaClient$OnPanoramaInfoLoadedListener -> com.google.android.gms.panorama.PanoramaClient$OnPanoramaInfoLoadedListener:
    void onPanoramaInfoLoaded(com.google.android.gms.common.ConnectionResult,android.content.Intent) -> onPanoramaInfoLoaded
com.google.android.gms.panorama.PanoramaClient$a -> com.google.android.gms.panorama.PanoramaClient$a:
    void a(com.google.android.gms.common.ConnectionResult,int,android.content.Intent) -> a
com.google.android.gms.plus.GooglePlusUtil -> com.google.android.gms.plus.GooglePlusUtil:
    int SUCCESS -> SUCCESS
    int APP_MISSING -> APP_MISSING
    int APP_UPDATE_REQUIRED -> APP_UPDATE_REQUIRED
    int APP_DISABLED -> APP_DISABLED
    java.lang.String GOOGLE_PLUS_PACKAGE -> GOOGLE_PLUS_PACKAGE
    java.lang.String PLATFORM_LOGGING_TAG -> PLATFORM_LOGGING_TAG
    int checkGooglePlusApp(android.content.Context) -> checkGooglePlusApp
    int b(android.content.Context,int) -> b
    android.app.Dialog getErrorDialog(int,android.app.Activity,int) -> getErrorDialog
    android.app.Dialog a(android.app.AlertDialog$Builder,int,android.app.Activity,int) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
com.google.android.gms.plus.PlusClient -> com.google.android.gms.plus.PlusClient:
    java.lang.String KEY_REQUEST_VISIBLE_ACTIVITIES -> KEY_REQUEST_VISIBLE_ACTIVITIES
    com.google.android.gms.internal.dy gJ -> gJ
    java.lang.String getAccountName() -> getAccountName
    boolean A(java.lang.String) -> A
    void a(com.google.android.gms.plus.PlusClient$b,java.lang.String) -> a
    void writeMoment(com.google.android.gms.plus.model.moments.Moment) -> writeMoment
    void loadMoments(com.google.android.gms.plus.PlusClient$OnMomentsLoadedListener) -> loadMoments
    void loadMoments(com.google.android.gms.plus.PlusClient$OnMomentsLoadedListener,int,java.lang.String,android.net.Uri,java.lang.String,java.lang.String) -> loadMoments
    void removeMoment(java.lang.String) -> removeMoment
    void loadPeople(com.google.android.gms.plus.PlusClient$OnPeopleLoadedListener,int) -> loadPeople
    void loadPeople(com.google.android.gms.plus.PlusClient$OnPeopleLoadedListener,int,int,int,java.lang.String) -> loadPeople
    void loadPerson(com.google.android.gms.plus.PlusClient$OnPersonLoadedListener,java.lang.String) -> loadPerson
    com.google.android.gms.plus.model.people.Person getCurrentPerson() -> getCurrentPerson
    void clearDefaultAccount() -> clearDefaultAccount
    void revokeAccessAndDisconnect(com.google.android.gms.plus.PlusClient$OnAccessRevokedListener) -> revokeAccessAndDisconnect
    void a(com.google.android.gms.plus.PlusClient$a,android.net.Uri,int) -> a
    void connect() -> connect
    boolean isConnected() -> isConnected
    boolean isConnecting() -> isConnecting
    void registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> registerConnectionCallbacks
    boolean isConnectionCallbacksRegistered(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> isConnectionCallbacksRegistered
    void unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks) -> unregisterConnectionCallbacks
    void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> registerConnectionFailedListener
    boolean isConnectionFailedListenerRegistered(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> isConnectionFailedListenerRegistered
    void unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> unregisterConnectionFailedListener
    void disconnect() -> disconnect
com.google.android.gms.plus.PlusClient$Builder -> com.google.android.gms.plus.PlusClient$Builder:
    android.content.Context mContext -> mContext
    java.lang.String g -> g
    com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks gK -> gK
    com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener e -> e
    java.util.ArrayList gL -> gL
    java.lang.String[] gM -> gM
    java.lang.String[] gN -> gN
    java.lang.String gO -> gO
    java.lang.String gP -> gP
    com.google.android.gms.plus.PlusClient$Builder setAccountName(java.lang.String) -> setAccountName
    com.google.android.gms.plus.PlusClient$Builder setScopes(java.lang.String[]) -> setScopes
    com.google.android.gms.plus.PlusClient$Builder clearScopes() -> clearScopes
    com.google.android.gms.plus.PlusClient$Builder setVisibleActivities(java.lang.String[]) -> setVisibleActivities
    com.google.android.gms.plus.PlusClient build() -> build
com.google.android.gms.plus.PlusClient$OnAccessRevokedListener -> com.google.android.gms.plus.PlusClient$OnAccessRevokedListener:
    void onAccessRevoked(com.google.android.gms.common.ConnectionResult) -> onAccessRevoked
com.google.android.gms.plus.PlusClient$OnMomentsLoadedListener -> com.google.android.gms.plus.PlusClient$OnMomentsLoadedListener:
    void onMomentsLoaded(com.google.android.gms.common.ConnectionResult,com.google.android.gms.plus.model.moments.MomentBuffer,java.lang.String,java.lang.String) -> onMomentsLoaded
com.google.android.gms.plus.PlusClient$OnPeopleLoadedListener -> com.google.android.gms.plus.PlusClient$OnPeopleLoadedListener:
    void onPeopleLoaded(com.google.android.gms.common.ConnectionResult,com.google.android.gms.plus.model.people.PersonBuffer,java.lang.String) -> onPeopleLoaded
com.google.android.gms.plus.PlusClient$OnPersonLoadedListener -> com.google.android.gms.plus.PlusClient$OnPersonLoadedListener:
    void onPersonLoaded(com.google.android.gms.common.ConnectionResult,com.google.android.gms.plus.model.people.Person) -> onPersonLoaded
com.google.android.gms.plus.PlusClient$a -> com.google.android.gms.plus.PlusClient$a:
    void a(com.google.android.gms.common.ConnectionResult,android.os.ParcelFileDescriptor) -> a
com.google.android.gms.plus.PlusClient$b -> com.google.android.gms.plus.PlusClient$b:
    void a(com.google.android.gms.common.ConnectionResult,com.google.android.gms.internal.du) -> a
com.google.android.gms.plus.PlusOneButton -> com.google.android.gms.plus.PlusOneButton:
    int SIZE_SMALL -> SIZE_SMALL
    int SIZE_MEDIUM -> SIZE_MEDIUM
    int SIZE_TALL -> SIZE_TALL
    int SIZE_STANDARD -> SIZE_STANDARD
    int ANNOTATION_NONE -> ANNOTATION_NONE
    int ANNOTATION_BUBBLE -> ANNOTATION_BUBBLE
    int ANNOTATION_INLINE -> ANNOTATION_INLINE
    com.google.android.gms.internal.dz gQ -> gQ
    void initialize(com.google.android.gms.plus.PlusClient,java.lang.String,int) -> initialize
    void initialize(com.google.android.gms.plus.PlusClient,java.lang.String,com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener) -> initialize
    void setOnPlusOneClickListener(com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener) -> setOnPlusOneClickListener
    void setAnnotation(int) -> setAnnotation
    void setSize(int) -> setSize
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener -> com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener:
    void onPlusOneClick(android.content.Intent) -> onPlusOneClick
com.google.android.gms.plus.PlusShare -> com.google.android.gms.plus.PlusShare:
    java.lang.String EXTRA_CONTENT_URL -> EXTRA_CONTENT_URL
    java.lang.String EXTRA_CONTENT_DEEP_LINK_ID -> EXTRA_CONTENT_DEEP_LINK_ID
    java.lang.String EXTRA_CONTENT_DEEP_LINK_METADATA -> EXTRA_CONTENT_DEEP_LINK_METADATA
    java.lang.String KEY_CONTENT_DEEP_LINK_METADATA_TITLE -> KEY_CONTENT_DEEP_LINK_METADATA_TITLE
    java.lang.String KEY_CONTENT_DEEP_LINK_METADATA_DESCRIPTION -> KEY_CONTENT_DEEP_LINK_METADATA_DESCRIPTION
    java.lang.String KEY_CONTENT_DEEP_LINK_METADATA_THUMBNAIL_URL -> KEY_CONTENT_DEEP_LINK_METADATA_THUMBNAIL_URL
    java.lang.String EXTRA_IS_INTERACTIVE_POST -> EXTRA_IS_INTERACTIVE_POST
    java.lang.String EXTRA_SENDER_ID -> EXTRA_SENDER_ID
    java.lang.String EXTRA_CALL_TO_ACTION -> EXTRA_CALL_TO_ACTION
    java.lang.String KEY_CALL_TO_ACTION_LABEL -> KEY_CALL_TO_ACTION_LABEL
    java.lang.String KEY_CALL_TO_ACTION_URL -> KEY_CALL_TO_ACTION_URL
    java.lang.String KEY_CALL_TO_ACTION_DEEP_LINK_ID -> KEY_CALL_TO_ACTION_DEEP_LINK_ID
    java.lang.String PARAM_CONTENT_DEEP_LINK_ID -> PARAM_CONTENT_DEEP_LINK_ID
    java.lang.String getDeepLinkId(android.content.Intent) -> getDeepLinkId
    android.os.Bundle a(java.lang.String,java.lang.String,android.net.Uri) -> a
    com.google.android.gms.plus.model.people.Person createPerson(java.lang.String,java.lang.String) -> createPerson
com.google.android.gms.plus.PlusShare$Builder -> com.google.android.gms.plus.PlusShare$Builder:
    android.content.Intent mIntent -> mIntent
    boolean gR -> gR
    java.util.ArrayList gS -> gS
    boolean gT -> gT
    com.google.android.gms.plus.PlusShare$Builder setType(java.lang.String) -> setType
    com.google.android.gms.plus.PlusShare$Builder setRecipients(java.util.List) -> setRecipients
    com.google.android.gms.plus.PlusShare$Builder setText(java.lang.CharSequence) -> setText
    com.google.android.gms.plus.PlusShare$Builder setStream(android.net.Uri) -> setStream
    com.google.android.gms.plus.PlusShare$Builder addStream(android.net.Uri) -> addStream
    com.google.android.gms.plus.PlusShare$Builder setContentUrl(android.net.Uri) -> setContentUrl
    com.google.android.gms.plus.PlusShare$Builder setContentDeepLinkId(java.lang.String) -> setContentDeepLinkId
    com.google.android.gms.plus.PlusShare$Builder setContentDeepLinkId(java.lang.String,java.lang.String,java.lang.String,android.net.Uri) -> setContentDeepLinkId
    com.google.android.gms.plus.PlusShare$Builder addCallToAction(java.lang.String,android.net.Uri,java.lang.String) -> addCallToAction
    android.content.Intent getIntent() -> getIntent
com.google.android.gms.plus.model.moments.ItemScope -> com.google.android.gms.plus.model.moments.ItemScope:
    com.google.android.gms.plus.model.moments.ItemScope getAbout() -> getAbout
    boolean hasAbout() -> hasAbout
    java.util.List getAdditionalName() -> getAdditionalName
    boolean hasAdditionalName() -> hasAdditionalName
    com.google.android.gms.plus.model.moments.ItemScope getAddress() -> getAddress
    boolean hasAddress() -> hasAddress
    java.lang.String getAddressCountry() -> getAddressCountry
    boolean hasAddressCountry() -> hasAddressCountry
    java.lang.String getAddressLocality() -> getAddressLocality
    boolean hasAddressLocality() -> hasAddressLocality
    java.lang.String getAddressRegion() -> getAddressRegion
    boolean hasAddressRegion() -> hasAddressRegion
    java.util.List getAssociated_media() -> getAssociated_media
    boolean hasAssociated_media() -> hasAssociated_media
    int getAttendeeCount() -> getAttendeeCount
    boolean hasAttendeeCount() -> hasAttendeeCount
    java.util.List getAttendees() -> getAttendees
    boolean hasAttendees() -> hasAttendees
    com.google.android.gms.plus.model.moments.ItemScope getAudio() -> getAudio
    boolean hasAudio() -> hasAudio
    java.util.List getAuthor() -> getAuthor
    boolean hasAuthor() -> hasAuthor
    java.lang.String getBestRating() -> getBestRating
    boolean hasBestRating() -> hasBestRating
    java.lang.String getBirthDate() -> getBirthDate
    boolean hasBirthDate() -> hasBirthDate
    com.google.android.gms.plus.model.moments.ItemScope getByArtist() -> getByArtist
    boolean hasByArtist() -> hasByArtist
    java.lang.String getCaption() -> getCaption
    boolean hasCaption() -> hasCaption
    java.lang.String getContentSize() -> getContentSize
    boolean hasContentSize() -> hasContentSize
    java.lang.String getContentUrl() -> getContentUrl
    boolean hasContentUrl() -> hasContentUrl
    java.util.List getContributor() -> getContributor
    boolean hasContributor() -> hasContributor
    java.lang.String getDateCreated() -> getDateCreated
    boolean hasDateCreated() -> hasDateCreated
    java.lang.String getDateModified() -> getDateModified
    boolean hasDateModified() -> hasDateModified
    java.lang.String getDatePublished() -> getDatePublished
    boolean hasDatePublished() -> hasDatePublished
    java.lang.String getDescription() -> getDescription
    boolean hasDescription() -> hasDescription
    java.lang.String getDuration() -> getDuration
    boolean hasDuration() -> hasDuration
    java.lang.String getEmbedUrl() -> getEmbedUrl
    boolean hasEmbedUrl() -> hasEmbedUrl
    java.lang.String getEndDate() -> getEndDate
    boolean hasEndDate() -> hasEndDate
    java.lang.String getFamilyName() -> getFamilyName
    boolean hasFamilyName() -> hasFamilyName
    java.lang.String getGender() -> getGender
    boolean hasGender() -> hasGender
    com.google.android.gms.plus.model.moments.ItemScope getGeo() -> getGeo
    boolean hasGeo() -> hasGeo
    java.lang.String getGivenName() -> getGivenName
    boolean hasGivenName() -> hasGivenName
    java.lang.String getHeight() -> getHeight
    boolean hasHeight() -> hasHeight
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    java.lang.String getImage() -> getImage
    boolean hasImage() -> hasImage
    com.google.android.gms.plus.model.moments.ItemScope getInAlbum() -> getInAlbum
    boolean hasInAlbum() -> hasInAlbum
    double getLatitude() -> getLatitude
    boolean hasLatitude() -> hasLatitude
    com.google.android.gms.plus.model.moments.ItemScope getLocation() -> getLocation
    boolean hasLocation() -> hasLocation
    double getLongitude() -> getLongitude
    boolean hasLongitude() -> hasLongitude
    java.lang.String getName() -> getName
    boolean hasName() -> hasName
    com.google.android.gms.plus.model.moments.ItemScope getPartOfTVSeries() -> getPartOfTVSeries
    boolean hasPartOfTVSeries() -> hasPartOfTVSeries
    java.util.List getPerformers() -> getPerformers
    boolean hasPerformers() -> hasPerformers
    java.lang.String getPlayerType() -> getPlayerType
    boolean hasPlayerType() -> hasPlayerType
    java.lang.String getPostOfficeBoxNumber() -> getPostOfficeBoxNumber
    boolean hasPostOfficeBoxNumber() -> hasPostOfficeBoxNumber
    java.lang.String getPostalCode() -> getPostalCode
    boolean hasPostalCode() -> hasPostalCode
    java.lang.String getRatingValue() -> getRatingValue
    boolean hasRatingValue() -> hasRatingValue
    com.google.android.gms.plus.model.moments.ItemScope getReviewRating() -> getReviewRating
    boolean hasReviewRating() -> hasReviewRating
    java.lang.String getStartDate() -> getStartDate
    boolean hasStartDate() -> hasStartDate
    java.lang.String getStreetAddress() -> getStreetAddress
    boolean hasStreetAddress() -> hasStreetAddress
    java.lang.String getText() -> getText
    boolean hasText() -> hasText
    com.google.android.gms.plus.model.moments.ItemScope getThumbnail() -> getThumbnail
    boolean hasThumbnail() -> hasThumbnail
    java.lang.String getThumbnailUrl() -> getThumbnailUrl
    boolean hasThumbnailUrl() -> hasThumbnailUrl
    java.lang.String getTickerSymbol() -> getTickerSymbol
    boolean hasTickerSymbol() -> hasTickerSymbol
    java.lang.String getType() -> getType
    boolean hasType() -> hasType
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    java.lang.String getWidth() -> getWidth
    boolean hasWidth() -> hasWidth
    java.lang.String getWorstRating() -> getWorstRating
    boolean hasWorstRating() -> hasWorstRating
com.google.android.gms.plus.model.moments.ItemScope$Builder -> com.google.android.gms.plus.model.moments.ItemScope$Builder:
    com.google.android.gms.internal.ed hT -> hT
    java.util.List hU -> hU
    com.google.android.gms.internal.ed hV -> hV
    java.lang.String hW -> hW
    java.lang.String hX -> hX
    java.lang.String hY -> hY
    java.util.List hZ -> hZ
    int ia -> ia
    java.util.List ib -> ib
    com.google.android.gms.internal.ed ic -> ic
    java.util.List id -> id
    java.lang.String ie -> ie
    java.lang.String if -> if
    com.google.android.gms.internal.ed ig -> ig
    java.lang.String ih -> ih
    java.lang.String ii -> ii
    java.lang.String ij -> ij
    java.util.List ik -> ik
    java.lang.String il -> il
    java.lang.String im -> im
    java.lang.String in -> in
    java.lang.String ch -> ch
    java.lang.String io -> io
    java.lang.String ip -> ip
    java.lang.String iq -> iq
    java.lang.String ir -> ir
    java.lang.String is -> is
    com.google.android.gms.internal.ed it -> it
    java.lang.String iu -> iu
    java.lang.String iv -> iv
    java.lang.String iw -> iw
    java.lang.String ix -> ix
    com.google.android.gms.internal.ed iy -> iy
    double ew -> ew
    com.google.android.gms.internal.ed iz -> iz
    double ex -> ex
    java.lang.String mName -> mName
    com.google.android.gms.internal.ed iA -> iA
    java.util.List iB -> iB
    java.lang.String iC -> iC
    java.lang.String iD -> iD
    java.lang.String iE -> iE
    java.lang.String iF -> iF
    com.google.android.gms.internal.ed iG -> iG
    java.lang.String iH -> iH
    java.lang.String iI -> iI
    java.lang.String iJ -> iJ
    com.google.android.gms.internal.ed iK -> iK
    java.lang.String iL -> iL
    java.lang.String iM -> iM
    java.lang.String iN -> iN
    java.lang.String hE -> hE
    java.lang.String iO -> iO
    java.lang.String iP -> iP
    java.util.Set hS -> hS
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAbout(com.google.android.gms.plus.model.moments.ItemScope) -> setAbout
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAdditionalName(java.util.List) -> setAdditionalName
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAddress(com.google.android.gms.plus.model.moments.ItemScope) -> setAddress
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAddressCountry(java.lang.String) -> setAddressCountry
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAddressLocality(java.lang.String) -> setAddressLocality
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAddressRegion(java.lang.String) -> setAddressRegion
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAssociated_media(java.util.List) -> setAssociated_media
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAttendeeCount(int) -> setAttendeeCount
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAttendees(java.util.List) -> setAttendees
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAudio(com.google.android.gms.plus.model.moments.ItemScope) -> setAudio
    com.google.android.gms.plus.model.moments.ItemScope$Builder setAuthor(java.util.List) -> setAuthor
    com.google.android.gms.plus.model.moments.ItemScope$Builder setBestRating(java.lang.String) -> setBestRating
    com.google.android.gms.plus.model.moments.ItemScope$Builder setBirthDate(java.lang.String) -> setBirthDate
    com.google.android.gms.plus.model.moments.ItemScope$Builder setByArtist(com.google.android.gms.plus.model.moments.ItemScope) -> setByArtist
    com.google.android.gms.plus.model.moments.ItemScope$Builder setCaption(java.lang.String) -> setCaption
    com.google.android.gms.plus.model.moments.ItemScope$Builder setContentSize(java.lang.String) -> setContentSize
    com.google.android.gms.plus.model.moments.ItemScope$Builder setContentUrl(java.lang.String) -> setContentUrl
    com.google.android.gms.plus.model.moments.ItemScope$Builder setContributor(java.util.List) -> setContributor
    com.google.android.gms.plus.model.moments.ItemScope$Builder setDateCreated(java.lang.String) -> setDateCreated
    com.google.android.gms.plus.model.moments.ItemScope$Builder setDateModified(java.lang.String) -> setDateModified
    com.google.android.gms.plus.model.moments.ItemScope$Builder setDatePublished(java.lang.String) -> setDatePublished
    com.google.android.gms.plus.model.moments.ItemScope$Builder setDescription(java.lang.String) -> setDescription
    com.google.android.gms.plus.model.moments.ItemScope$Builder setDuration(java.lang.String) -> setDuration
    com.google.android.gms.plus.model.moments.ItemScope$Builder setEmbedUrl(java.lang.String) -> setEmbedUrl
    com.google.android.gms.plus.model.moments.ItemScope$Builder setEndDate(java.lang.String) -> setEndDate
    com.google.android.gms.plus.model.moments.ItemScope$Builder setFamilyName(java.lang.String) -> setFamilyName
    com.google.android.gms.plus.model.moments.ItemScope$Builder setGender(java.lang.String) -> setGender
    com.google.android.gms.plus.model.moments.ItemScope$Builder setGeo(com.google.android.gms.plus.model.moments.ItemScope) -> setGeo
    com.google.android.gms.plus.model.moments.ItemScope$Builder setGivenName(java.lang.String) -> setGivenName
    com.google.android.gms.plus.model.moments.ItemScope$Builder setHeight(java.lang.String) -> setHeight
    com.google.android.gms.plus.model.moments.ItemScope$Builder setId(java.lang.String) -> setId
    com.google.android.gms.plus.model.moments.ItemScope$Builder setImage(java.lang.String) -> setImage
    com.google.android.gms.plus.model.moments.ItemScope$Builder setInAlbum(com.google.android.gms.plus.model.moments.ItemScope) -> setInAlbum
    com.google.android.gms.plus.model.moments.ItemScope$Builder setLatitude(double) -> setLatitude
    com.google.android.gms.plus.model.moments.ItemScope$Builder setLocation(com.google.android.gms.plus.model.moments.ItemScope) -> setLocation
    com.google.android.gms.plus.model.moments.ItemScope$Builder setLongitude(double) -> setLongitude
    com.google.android.gms.plus.model.moments.ItemScope$Builder setName(java.lang.String) -> setName
    com.google.android.gms.plus.model.moments.ItemScope$Builder setPartOfTVSeries(com.google.android.gms.plus.model.moments.ItemScope) -> setPartOfTVSeries
    com.google.android.gms.plus.model.moments.ItemScope$Builder setPerformers(java.util.List) -> setPerformers
    com.google.android.gms.plus.model.moments.ItemScope$Builder setPlayerType(java.lang.String) -> setPlayerType
    com.google.android.gms.plus.model.moments.ItemScope$Builder setPostOfficeBoxNumber(java.lang.String) -> setPostOfficeBoxNumber
    com.google.android.gms.plus.model.moments.ItemScope$Builder setPostalCode(java.lang.String) -> setPostalCode
    com.google.android.gms.plus.model.moments.ItemScope$Builder setRatingValue(java.lang.String) -> setRatingValue
    com.google.android.gms.plus.model.moments.ItemScope$Builder setReviewRating(com.google.android.gms.plus.model.moments.ItemScope) -> setReviewRating
    com.google.android.gms.plus.model.moments.ItemScope$Builder setStartDate(java.lang.String) -> setStartDate
    com.google.android.gms.plus.model.moments.ItemScope$Builder setStreetAddress(java.lang.String) -> setStreetAddress
    com.google.android.gms.plus.model.moments.ItemScope$Builder setText(java.lang.String) -> setText
    com.google.android.gms.plus.model.moments.ItemScope$Builder setThumbnail(com.google.android.gms.plus.model.moments.ItemScope) -> setThumbnail
    com.google.android.gms.plus.model.moments.ItemScope$Builder setThumbnailUrl(java.lang.String) -> setThumbnailUrl
    com.google.android.gms.plus.model.moments.ItemScope$Builder setTickerSymbol(java.lang.String) -> setTickerSymbol
    com.google.android.gms.plus.model.moments.ItemScope$Builder setType(java.lang.String) -> setType
    com.google.android.gms.plus.model.moments.ItemScope$Builder setUrl(java.lang.String) -> setUrl
    com.google.android.gms.plus.model.moments.ItemScope$Builder setWidth(java.lang.String) -> setWidth
    com.google.android.gms.plus.model.moments.ItemScope$Builder setWorstRating(java.lang.String) -> setWorstRating
    com.google.android.gms.plus.model.moments.ItemScope build() -> build
com.google.android.gms.plus.model.moments.Moment -> com.google.android.gms.plus.model.moments.Moment:
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    com.google.android.gms.plus.model.moments.ItemScope getResult() -> getResult
    boolean hasResult() -> hasResult
    java.lang.String getStartDate() -> getStartDate
    boolean hasStartDate() -> hasStartDate
    com.google.android.gms.plus.model.moments.ItemScope getTarget() -> getTarget
    boolean hasTarget() -> hasTarget
    java.lang.String getType() -> getType
    boolean hasType() -> hasType
com.google.android.gms.plus.model.moments.Moment$Builder -> com.google.android.gms.plus.model.moments.Moment$Builder:
    java.lang.String iw -> iw
    com.google.android.gms.internal.ed iQ -> iQ
    java.lang.String iH -> iH
    com.google.android.gms.internal.ed iR -> iR
    java.lang.String iN -> iN
    java.util.Set hS -> hS
    com.google.android.gms.plus.model.moments.Moment$Builder setId(java.lang.String) -> setId
    com.google.android.gms.plus.model.moments.Moment$Builder setResult(com.google.android.gms.plus.model.moments.ItemScope) -> setResult
    com.google.android.gms.plus.model.moments.Moment$Builder setStartDate(java.lang.String) -> setStartDate
    com.google.android.gms.plus.model.moments.Moment$Builder setTarget(com.google.android.gms.plus.model.moments.ItemScope) -> setTarget
    com.google.android.gms.plus.model.moments.Moment$Builder setType(java.lang.String) -> setType
    com.google.android.gms.plus.model.moments.Moment build() -> build
com.google.android.gms.plus.model.moments.MomentBuffer -> com.google.android.gms.plus.model.moments.MomentBuffer:
    com.google.android.gms.plus.model.moments.Moment get(int) -> get
    java.lang.Object get(int) -> get
com.google.android.gms.plus.model.people.Person -> com.google.android.gms.plus.model.people.Person:
    java.lang.String getAboutMe() -> getAboutMe
    boolean hasAboutMe() -> hasAboutMe
    com.google.android.gms.plus.model.people.Person$AgeRange getAgeRange() -> getAgeRange
    boolean hasAgeRange() -> hasAgeRange
    java.lang.String getBirthday() -> getBirthday
    boolean hasBirthday() -> hasBirthday
    java.lang.String getBraggingRights() -> getBraggingRights
    boolean hasBraggingRights() -> hasBraggingRights
    int getCircledByCount() -> getCircledByCount
    boolean hasCircledByCount() -> hasCircledByCount
    com.google.android.gms.plus.model.people.Person$Cover getCover() -> getCover
    boolean hasCover() -> hasCover
    java.lang.String getCurrentLocation() -> getCurrentLocation
    boolean hasCurrentLocation() -> hasCurrentLocation
    java.lang.String getDisplayName() -> getDisplayName
    boolean hasDisplayName() -> hasDisplayName
    java.util.List getEmails() -> getEmails
    boolean hasEmails() -> hasEmails
    int getGender() -> getGender
    boolean hasGender() -> hasGender
    boolean isHasApp() -> isHasApp
    boolean hasHasApp() -> hasHasApp
    java.lang.String getId() -> getId
    boolean hasId() -> hasId
    com.google.android.gms.plus.model.people.Person$Image getImage() -> getImage
    boolean hasImage() -> hasImage
    boolean isPlusUser() -> isPlusUser
    boolean hasIsPlusUser() -> hasIsPlusUser
    java.lang.String getLanguage() -> getLanguage
    boolean hasLanguage() -> hasLanguage
    com.google.android.gms.plus.model.people.Person$Name getName() -> getName
    boolean hasName() -> hasName
    java.lang.String getNickname() -> getNickname
    boolean hasNickname() -> hasNickname
    int getObjectType() -> getObjectType
    boolean hasObjectType() -> hasObjectType
    java.util.List getOrganizations() -> getOrganizations
    boolean hasOrganizations() -> hasOrganizations
    java.util.List getPlacesLived() -> getPlacesLived
    boolean hasPlacesLived() -> hasPlacesLived
    int getPlusOneCount() -> getPlusOneCount
    boolean hasPlusOneCount() -> hasPlusOneCount
    int getRelationshipStatus() -> getRelationshipStatus
    boolean hasRelationshipStatus() -> hasRelationshipStatus
    java.lang.String getTagline() -> getTagline
    boolean hasTagline() -> hasTagline
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    java.util.List getUrls() -> getUrls
    boolean hasUrls() -> hasUrls
    boolean isVerified() -> isVerified
    boolean hasVerified() -> hasVerified
com.google.android.gms.plus.model.people.Person$AgeRange -> com.google.android.gms.plus.model.people.Person$AgeRange:
    int getMax() -> getMax
    boolean hasMax() -> hasMax
    int getMin() -> getMin
    boolean hasMin() -> hasMin
com.google.android.gms.plus.model.people.Person$Collection -> com.google.android.gms.plus.model.people.Person$Collection:
    int VISIBLE -> VISIBLE
com.google.android.gms.plus.model.people.Person$Cover -> com.google.android.gms.plus.model.people.Person$Cover:
    com.google.android.gms.plus.model.people.Person$Cover$CoverInfo getCoverInfo() -> getCoverInfo
    boolean hasCoverInfo() -> hasCoverInfo
    com.google.android.gms.plus.model.people.Person$Cover$CoverPhoto getCoverPhoto() -> getCoverPhoto
    boolean hasCoverPhoto() -> hasCoverPhoto
    int getLayout() -> getLayout
    boolean hasLayout() -> hasLayout
com.google.android.gms.plus.model.people.Person$Cover$CoverInfo -> com.google.android.gms.plus.model.people.Person$Cover$CoverInfo:
    int getLeftImageOffset() -> getLeftImageOffset
    boolean hasLeftImageOffset() -> hasLeftImageOffset
    int getTopImageOffset() -> getTopImageOffset
    boolean hasTopImageOffset() -> hasTopImageOffset
com.google.android.gms.plus.model.people.Person$Cover$CoverPhoto -> com.google.android.gms.plus.model.people.Person$Cover$CoverPhoto:
    int getHeight() -> getHeight
    boolean hasHeight() -> hasHeight
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
    int getWidth() -> getWidth
    boolean hasWidth() -> hasWidth
com.google.android.gms.plus.model.people.Person$Cover$Layout -> com.google.android.gms.plus.model.people.Person$Cover$Layout:
    int BANNER -> BANNER
com.google.android.gms.plus.model.people.Person$Emails -> com.google.android.gms.plus.model.people.Person$Emails:
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    int getType() -> getType
    boolean hasType() -> hasType
    java.lang.String getValue() -> getValue
    boolean hasValue() -> hasValue
com.google.android.gms.plus.model.people.Person$Emails$Type -> com.google.android.gms.plus.model.people.Person$Emails$Type:
    int HOME -> HOME
    int WORK -> WORK
    int OTHER -> OTHER
com.google.android.gms.plus.model.people.Person$Gender -> com.google.android.gms.plus.model.people.Person$Gender:
    int MALE -> MALE
    int FEMALE -> FEMALE
    int OTHER -> OTHER
com.google.android.gms.plus.model.people.Person$Image -> com.google.android.gms.plus.model.people.Person$Image:
    java.lang.String getUrl() -> getUrl
    boolean hasUrl() -> hasUrl
com.google.android.gms.plus.model.people.Person$Name -> com.google.android.gms.plus.model.people.Person$Name:
    java.lang.String getFamilyName() -> getFamilyName
    boolean hasFamilyName() -> hasFamilyName
    java.lang.String getFormatted() -> getFormatted
    boolean hasFormatted() -> hasFormatted
    java.lang.String getGivenName() -> getGivenName
    boolean hasGivenName() -> hasGivenName
    java.lang.String getHonorificPrefix() -> getHonorificPrefix
    boolean hasHonorificPrefix() -> hasHonorificPrefix
    java.lang.String getHonorificSuffix() -> getHonorificSuffix
    boolean hasHonorificSuffix() -> hasHonorificSuffix
    java.lang.String getMiddleName() -> getMiddleName
    boolean hasMiddleName() -> hasMiddleName
com.google.android.gms.plus.model.people.Person$ObjectType -> com.google.android.gms.plus.model.people.Person$ObjectType:
    int PERSON -> PERSON
    int PAGE -> PAGE
com.google.android.gms.plus.model.people.Person$OrderBy -> com.google.android.gms.plus.model.people.Person$OrderBy:
    int ALPHABETICAL -> ALPHABETICAL
    int BEST -> BEST
com.google.android.gms.plus.model.people.Person$Organizations -> com.google.android.gms.plus.model.people.Person$Organizations:
    java.lang.String getDepartment() -> getDepartment
    boolean hasDepartment() -> hasDepartment
    java.lang.String getDescription() -> getDescription
    boolean hasDescription() -> hasDescription
    java.lang.String getEndDate() -> getEndDate
    boolean hasEndDate() -> hasEndDate
    java.lang.String getLocation() -> getLocation
    boolean hasLocation() -> hasLocation
    java.lang.String getName() -> getName
    boolean hasName() -> hasName
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    java.lang.String getStartDate() -> getStartDate
    boolean hasStartDate() -> hasStartDate
    java.lang.String getTitle() -> getTitle
    boolean hasTitle() -> hasTitle
    int getType() -> getType
    boolean hasType() -> hasType
com.google.android.gms.plus.model.people.Person$Organizations$Type -> com.google.android.gms.plus.model.people.Person$Organizations$Type:
    int WORK -> WORK
    int SCHOOL -> SCHOOL
com.google.android.gms.plus.model.people.Person$PlacesLived -> com.google.android.gms.plus.model.people.Person$PlacesLived:
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    java.lang.String getValue() -> getValue
    boolean hasValue() -> hasValue
com.google.android.gms.plus.model.people.Person$RelationshipStatus -> com.google.android.gms.plus.model.people.Person$RelationshipStatus:
    int SINGLE -> SINGLE
    int IN_A_RELATIONSHIP -> IN_A_RELATIONSHIP
    int ENGAGED -> ENGAGED
    int MARRIED -> MARRIED
    int ITS_COMPLICATED -> ITS_COMPLICATED
    int OPEN_RELATIONSHIP -> OPEN_RELATIONSHIP
    int WIDOWED -> WIDOWED
    int IN_DOMESTIC_PARTNERSHIP -> IN_DOMESTIC_PARTNERSHIP
    int IN_CIVIL_UNION -> IN_CIVIL_UNION
com.google.android.gms.plus.model.people.Person$Urls -> com.google.android.gms.plus.model.people.Person$Urls:
    boolean isPrimary() -> isPrimary
    boolean hasPrimary() -> hasPrimary
    int getType() -> getType
    boolean hasType() -> hasType
    java.lang.String getValue() -> getValue
    boolean hasValue() -> hasValue
com.google.android.gms.plus.model.people.Person$Urls$Type -> com.google.android.gms.plus.model.people.Person$Urls$Type:
    int HOME -> HOME
    int WORK -> WORK
    int BLOG -> BLOG
    int PROFILE -> PROFILE
    int OTHER -> OTHER
com.google.android.gms.plus.model.people.PersonBuffer -> com.google.android.gms.plus.model.people.PersonBuffer:
    com.google.android.gms.plus.model.people.Person get(int) -> get
    java.lang.Object get(int) -> get
com.google.gson.ExclusionStrategy -> com.google.gson.a:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.FieldAttributes -> com.google.gson.b:
    java.lang.reflect.Field field -> a
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy[] $VALUES -> a
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> b
    java.lang.String upperCaseFirstLetter(java.lang.String) -> b
    java.lang.String modifyString(char,java.lang.String,int) -> a
    java.lang.String access$100(java.lang.String) -> a
    java.lang.String access$200(java.lang.String,java.lang.String) -> a
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.c:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.d:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.e:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.f:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.g:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingStrategy -> com.google.gson.h:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.Gson -> com.google.gson.i:
    java.lang.ThreadLocal calls -> c
    java.util.Map typeTokenCache -> d
    java.util.List factories -> e
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> f
    boolean serializeNulls -> g
    boolean htmlSafe -> h
    boolean generateNonExecutableJson -> i
    boolean prettyPrinting -> j
    com.google.gson.JsonDeserializationContext deserializationContext -> a
    com.google.gson.JsonSerializationContext serializationContext -> b
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> a
    com.google.gson.TypeAdapter floatAdapter(boolean) -> b
    void checkValidFloatingPoint(double) -> a
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> a
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> a
    java.lang.String toJson(java.lang.Object) -> a
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> a
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> a
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> a
    java.lang.String toJson(com.google.gson.JsonElement) -> a
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> a
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> a
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> a
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> a
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> a
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> a
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> a
com.google.gson.Gson$1 -> com.google.gson.j:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$2 -> com.google.gson.k:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$3 -> com.google.gson.l:
    com.google.gson.Gson this$0 -> a
    java.lang.Double read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$4 -> com.google.gson.m:
    com.google.gson.Gson this$0 -> a
    java.lang.Float read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$5 -> com.google.gson.n:
    com.google.gson.Gson this$0 -> a
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.o:
    com.google.gson.TypeAdapter delegate -> a
    void setDelegate(com.google.gson.TypeAdapter) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.InstanceCreator -> com.google.gson.p:
    java.lang.Object createInstance(java.lang.reflect.Type) -> a
com.google.gson.JsonArray -> com.google.gson.q:
    java.util.List elements -> a
    void add(com.google.gson.JsonElement) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    short getAsShort() -> getAsShort
    boolean getAsBoolean() -> getAsBoolean
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonDeserializationContext -> com.google.gson.r:
com.google.gson.JsonElement -> com.google.gson.s:
    boolean isJsonArray() -> isJsonArray
    boolean isJsonObject() -> isJsonObject
    boolean isJsonPrimitive() -> isJsonPrimitive
    boolean isJsonNull() -> isJsonNull
    com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Boolean getAsBooleanWrapper() -> a
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    short getAsShort() -> getAsShort
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.t:
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.JsonObject -> com.google.gson.u:
    com.google.gson.internal.LinkedTreeMap members -> a
    void add(java.lang.String,com.google.gson.JsonElement) -> a
    java.util.Set entrySet() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonParseException -> com.google.gson.v:
com.google.gson.JsonPrimitive -> com.google.gson.w:
    java.lang.Class[] PRIMITIVE_TYPES -> a
    java.lang.Object value -> b
    void setValue(java.lang.Object) -> a
    boolean isBoolean() -> b
    java.lang.Boolean getAsBooleanWrapper() -> a
    boolean getAsBoolean() -> getAsBoolean
    boolean isNumber() -> c
    java.lang.Number getAsNumber() -> getAsNumber
    boolean isString() -> d
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    short getAsShort() -> getAsShort
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    boolean isPrimitiveOrString(java.lang.Object) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> a
com.google.gson.JsonSerializationContext -> com.google.gson.x:
com.google.gson.JsonSyntaxException -> com.google.gson.y:
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> a
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.z:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.aa:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.TypeAdapter -> com.google.gson.ab:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void toJson(java.io.Writer,java.lang.Object) -> toJson
    com.google.gson.TypeAdapter nullSafe() -> nullSafe
    java.lang.String toJson(java.lang.Object) -> toJson
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object fromJson(java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.String) -> fromJson
    java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.ac:
    com.google.gson.TypeAdapter this$0 -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.TypeAdapterFactory -> com.google.gson.ad:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.annotations.Expose -> com.google.gson.a.a:
    boolean serialize() -> a
    boolean deserialize() -> b
com.google.gson.annotations.SerializedName -> com.google.gson.a.b:
    java.lang.String value() -> a
com.google.gson.annotations.Since -> com.google.gson.a.c:
    double value() -> a
com.google.gson.annotations.Until -> com.google.gson.a.d:
    double value() -> a
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.a:
    java.lang.Object checkNotNull(java.lang.Object) -> a
    void checkArgument(boolean) -> a
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.b:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> a
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> a
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> a
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> b
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> c
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> d
    java.lang.Class getRawType(java.lang.reflect.Type) -> e
    boolean equal(java.lang.Object,java.lang.Object) -> a
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    int hashCodeOrZero(java.lang.Object) -> b
    java.lang.String typeToString(java.lang.reflect.Type) -> f
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> a
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> b
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> g
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> a
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> a
    int indexOf(java.lang.Object[],java.lang.Object) -> a
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> a
    void checkNotPrimitive(java.lang.reflect.Type) -> i
    void access$000(java.lang.reflect.Type) -> h
    int access$100(java.lang.Object) -> a
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.c:
    java.lang.reflect.Type componentType -> a
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.d:
    java.lang.reflect.Type ownerType -> a
    java.lang.reflect.Type rawType -> b
    java.lang.reflect.Type[] typeArguments -> c
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.e:
    java.lang.reflect.Type upperBound -> a
    java.lang.reflect.Type lowerBound -> b
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.f:
    java.util.Map instanceCreators -> a
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> a
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> a
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.g:
    com.google.gson.InstanceCreator val$typeCreator -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.h:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.i:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.j:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> d
    java.lang.Class val$rawType -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.k:
    com.google.gson.InstanceCreator val$rawTypeCreator -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.l:
    java.lang.reflect.Constructor val$constructor -> a
    com.google.gson.internal.ConstructorConstructor this$0 -> b
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.m:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.n:
    java.lang.reflect.Type val$type -> a
    com.google.gson.internal.ConstructorConstructor this$0 -> b
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.o:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.p:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.q:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.r:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> a
    int modifiers -> b
    boolean serializeInnerClasses -> c
    boolean requireExpose -> d
    java.util.List serializationStrategies -> e
    java.util.List deserializationStrategies -> f
    com.google.gson.internal.Excluder clone() -> a
    com.google.gson.internal.Excluder withVersion(double) -> withVersion
    com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    boolean isAnonymousOrLocal(java.lang.Class) -> a
    boolean isInnerClass(java.lang.Class) -> b
    boolean isStatic(java.lang.Class) -> c
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> a
    boolean isValidSince(com.google.gson.annotations.Since) -> a
    boolean isValidUntil(com.google.gson.annotations.Until) -> a
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.s:
    com.google.gson.TypeAdapter delegate -> f
    boolean val$skipDeserialize -> a
    boolean val$skipSerialize -> b
    com.google.gson.Gson val$gson -> c
    com.google.gson.reflect.TypeToken val$type -> d
    com.google.gson.internal.Excluder this$0 -> e
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> a
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.t:
    java.lang.String value -> a
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.u:
    java.util.Comparator NATURAL_ORDER -> g
    java.util.Comparator comparator -> a
    com.google.gson.internal.LinkedTreeMap$Node root -> b
    int size -> c
    int modCount -> d
    com.google.gson.internal.LinkedTreeMap$Node header -> e
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> h
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> i
    boolean $assertionsDisabled -> f
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> a
    com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> a
    com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> a
    boolean equal(java.lang.Object,java.lang.Object) -> a
    void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> a
    com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> b
    void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> a
    void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> b
    void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> a
    void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> b
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.v:
    int compare(java.lang.Comparable,java.lang.Comparable) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.w:
    com.google.gson.internal.LinkedTreeMap this$0 -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.x:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> a
    java.util.Map$Entry next() -> a
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.y:
    com.google.gson.internal.LinkedTreeMap this$0 -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.z:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> a
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.aa:
    com.google.gson.internal.LinkedTreeMap$Node next -> b
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> c
    int expectedModCount -> d
    com.google.gson.internal.LinkedTreeMap this$0 -> e
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedTreeMap$Node nextNode() -> b
    void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.ab:
    com.google.gson.internal.LinkedTreeMap$Node parent -> a
    com.google.gson.internal.LinkedTreeMap$Node left -> b
    com.google.gson.internal.LinkedTreeMap$Node right -> c
    com.google.gson.internal.LinkedTreeMap$Node next -> d
    com.google.gson.internal.LinkedTreeMap$Node prev -> e
    java.lang.Object key -> f
    java.lang.Object value -> g
    int height -> h
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedTreeMap$Node first() -> a
    com.google.gson.internal.LinkedTreeMap$Node last() -> b
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ac:
    java.lang.Object construct() -> a
com.google.gson.internal.Primitives -> com.google.gson.internal.ad:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> a
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> b
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    boolean isPrimitive(java.lang.reflect.Type) -> a
com.google.gson.internal.Streams -> com.google.gson.internal.ae:
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
    java.io.Writer writerForAppendable(java.lang.Appendable) -> a
com.google.gson.internal.Streams$1 -> com.google.gson.internal.af:
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.ag:
    java.lang.Appendable appendable -> a
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> b
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.ah:
    char[] chars -> a
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.ai:
    java.lang.Object newInstance(java.lang.Class) -> a
    com.google.gson.internal.UnsafeAllocator create() -> a
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.aj:
    java.lang.reflect.Method val$allocateInstance -> a
    java.lang.Object val$unsafe -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.ak:
    java.lang.reflect.Method val$newInstance -> a
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.al:
    java.lang.reflect.Method val$newInstance -> a
    int val$constructorId -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.am:
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> a
    com.google.gson.TypeAdapter componentTypeAdapter -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.a:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.b:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.c:
    com.google.gson.TypeAdapter elementTypeAdapter -> a
    com.google.gson.internal.ObjectConstructor constructor -> b
    java.util.Collection read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat enUsFormat -> a
    java.text.DateFormat localFormat -> b
    java.text.DateFormat iso8601Format -> c
    java.text.DateFormat buildIso8601Format() -> a
    java.util.Date read(com.google.gson.stream.JsonReader) -> read
    java.util.Date deserializeToDate(java.lang.String) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.d:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.e:
    java.io.Reader UNREADABLE_READER -> a
    java.lang.Object SENTINEL_CLOSED -> b
    java.util.List stack -> c
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    java.lang.Object peekStack() -> q
    java.lang.Object popStack() -> r
    void expect(com.google.gson.stream.JsonToken) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    java.lang.String toString() -> toString
    void promoteNameToValue() -> o
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.f:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.g:
    java.io.Writer UNWRITABLE_WRITER -> a
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> b
    java.util.List stack -> c
    java.lang.String pendingName -> d
    com.google.gson.JsonElement product -> e
    com.google.gson.JsonElement get() -> a
    com.google.gson.JsonElement peek() -> j
    void put(com.google.gson.JsonElement) -> a
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.h:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.i:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    boolean complexMapKeySerialization -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> a
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> a
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.j:
    com.google.gson.TypeAdapter keyTypeAdapter -> b
    com.google.gson.TypeAdapter valueTypeAdapter -> c
    com.google.gson.internal.ObjectConstructor constructor -> d
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> a
    java.util.Map read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> a
    java.lang.String keyToString(com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.google.gson.Gson gson -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.k:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.l:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.m:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> b
    com.google.gson.internal.Excluder excluder -> c
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    java.lang.String getFieldName(java.lang.reflect.Field) -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> a
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.n:
    com.google.gson.TypeAdapter typeAdapter -> a
    com.google.gson.Gson val$context -> b
    com.google.gson.reflect.TypeToken val$fieldType -> c
    java.lang.reflect.Field val$field -> d
    boolean val$isPrimitive -> e
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> f
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.o:
    com.google.gson.internal.ObjectConstructor constructor -> a
    java.util.Map boundFields -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.p:
    java.lang.String name -> g
    boolean serialized -> h
    boolean deserialized -> i
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.bind.SqlDateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> a
    java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.bind.q:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.bind.TimeTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> a
    java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.bind.r:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.s:
    com.google.gson.Gson context -> a
    com.google.gson.TypeAdapter delegate -> b
    java.lang.reflect.Type type -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapter NUMBER -> NUMBER
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> NUMBER_FACTORY
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> newEnumTypeHierarchyFactory
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.t:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> a
    java.lang.Class read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.u:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.v:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.w:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.x:
    java.lang.String read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.y:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.z:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.aa:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.ab:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.ac:
    java.net.URL read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.ad:
    java.net.URI read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.ae:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.af:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.ag:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.ah:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.google.gson.internal.bind.ai:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> a
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> b
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.aj:
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.ak:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.al:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.am:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.an:
    com.google.gson.reflect.TypeToken val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.ao:
    java.lang.Class val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.ap:
    java.lang.Class val$unboxed -> a
    java.lang.Class val$boxed -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.aq:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.ar:
    java.lang.Class val$base -> a
    java.lang.Class val$sub -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.as:
    java.lang.Class val$clazz -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.at:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.au:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.av:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.aw:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.ax:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.ay:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.az:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.ba:
    java.util.Map nameToConstant -> a
    java.util.Map constantToName -> b
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.jpush.a -> com.google.gson.jpush.a:
    java.text.DateFormat a -> a
    java.text.DateFormat b -> b
    java.text.DateFormat c -> c
    java.lang.String[] z -> z
    com.google.gson.jpush.w a(java.util.Date) -> a
    java.util.Date a(com.google.gson.jpush.w) -> a
    java.lang.String toString() -> toString
    java.lang.Object a(com.google.gson.jpush.w,java.lang.reflect.Type,com.google.gson.jpush.u) -> a
    com.google.gson.jpush.w a(java.lang.Object,java.lang.reflect.Type,com.google.gson.jpush.ad) -> a
com.google.gson.jpush.aa -> com.google.gson.jpush.aa:
com.google.gson.jpush.ab -> com.google.gson.jpush.ab:
    java.lang.String[] z -> z
    com.google.gson.jpush.w a(java.lang.String) -> a
    com.google.gson.jpush.w a(java.io.Reader) -> a
    com.google.gson.jpush.w a(com.google.gson.jpush.stream.a) -> a
com.google.gson.jpush.ac -> com.google.gson.jpush.ac:
    java.lang.Class[] a -> a
    java.lang.Object b -> b
    void a(java.lang.Object) -> a
    boolean a() -> a
    boolean g() -> g
    boolean k() -> k
    java.lang.Number b() -> b
    boolean l() -> l
    java.lang.String c() -> c
    double d() -> d
    long e() -> e
    int f() -> f
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.gson.jpush.ac) -> a
com.google.gson.jpush.ad -> com.google.gson.jpush.ad:
com.google.gson.jpush.ae -> com.google.gson.jpush.ae:
    com.google.gson.jpush.w a(java.lang.Object,java.lang.reflect.Type,com.google.gson.jpush.ad) -> a
com.google.gson.jpush.af -> com.google.gson.jpush.af:
com.google.gson.jpush.ag -> com.google.gson.jpush.ag:
    com.google.gson.jpush.ag a -> a
    com.google.gson.jpush.ag b -> b
    com.google.gson.jpush.ag[] c -> c
    java.lang.String[] z -> z
    com.google.gson.jpush.ag[] values() -> values
    com.google.gson.jpush.ag valueOf(java.lang.String) -> valueOf
com.google.gson.jpush.ah -> com.google.gson.jpush.ah:
com.google.gson.jpush.ai -> com.google.gson.jpush.ai:
com.google.gson.jpush.aj -> com.google.gson.jpush.aj:
    com.google.gson.jpush.ae a -> a
    com.google.gson.jpush.v b -> b
    com.google.gson.jpush.k c -> c
    com.google.gson.jpush.reflect.a d -> d
    com.google.gson.jpush.am e -> e
    com.google.gson.jpush.al f -> f
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
    com.google.gson.jpush.al a() -> a
    com.google.gson.jpush.am a(com.google.gson.jpush.reflect.a,java.lang.Object) -> a
com.google.gson.jpush.ak -> com.google.gson.jpush.ak:
    com.google.gson.jpush.reflect.a a -> a
    boolean b -> b
    java.lang.Class c -> c
    com.google.gson.jpush.ae d -> d
    com.google.gson.jpush.v e -> e
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
com.google.gson.jpush.al -> com.google.gson.jpush.al:
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
    com.google.gson.jpush.w a(java.lang.Object) -> a
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
com.google.gson.jpush.am -> com.google.gson.jpush.am:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
com.google.gson.jpush.annotations.a -> com.google.gson.jpush.annotations.a:
    boolean a() -> a
    boolean b() -> b
com.google.gson.jpush.annotations.b -> com.google.gson.jpush.annotations.b:
    java.lang.Class a() -> a
com.google.gson.jpush.annotations.c -> com.google.gson.jpush.annotations.c:
    java.lang.String a() -> a
com.google.gson.jpush.annotations.d -> com.google.gson.jpush.annotations.d:
    double a() -> a
com.google.gson.jpush.annotations.e -> com.google.gson.jpush.annotations.e:
    double a() -> a
com.google.gson.jpush.b -> com.google.gson.jpush.b:
    boolean a() -> a
    boolean b() -> b
com.google.gson.jpush.c -> com.google.gson.jpush.c:
    java.lang.reflect.Field a -> a
com.google.gson.jpush.d -> com.google.gson.jpush.d:
    com.google.gson.jpush.d a -> a
    com.google.gson.jpush.d b -> b
    com.google.gson.jpush.d c -> c
    com.google.gson.jpush.d d -> d
    com.google.gson.jpush.d e -> e
    com.google.gson.jpush.d[] f -> f
    java.lang.String[] z -> z
    com.google.gson.jpush.d[] values() -> values
    com.google.gson.jpush.d valueOf(java.lang.String) -> valueOf
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
com.google.gson.jpush.e -> com.google.gson.jpush.e:
    java.lang.String a(java.lang.reflect.Field) -> a
com.google.gson.jpush.f -> com.google.gson.jpush.f:
    java.lang.String a(java.lang.reflect.Field) -> a
com.google.gson.jpush.g -> com.google.gson.jpush.g:
    java.lang.String a(java.lang.reflect.Field) -> a
com.google.gson.jpush.h -> com.google.gson.jpush.h:
    java.lang.String a(java.lang.reflect.Field) -> a
com.google.gson.jpush.i -> com.google.gson.jpush.i:
    java.lang.String a(java.lang.reflect.Field) -> a
com.google.gson.jpush.internal.a -> com.google.gson.jpush.internal.a:
    java.lang.Object a(java.lang.Object) -> a
    void a(boolean) -> a
com.google.gson.jpush.internal.aa -> com.google.gson.jpush.internal.aa:
    com.google.gson.jpush.internal.w a -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.jpush.internal.ab -> com.google.gson.jpush.internal.ab:
    com.google.gson.jpush.internal.aa a -> a
    java.lang.Object next() -> next
com.google.gson.jpush.internal.ac -> com.google.gson.jpush.internal.ac:
    com.google.gson.jpush.internal.ad b -> b
    com.google.gson.jpush.internal.ad c -> c
    int d -> d
    com.google.gson.jpush.internal.w e -> e
    boolean hasNext() -> hasNext
    com.google.gson.jpush.internal.ad a() -> a
    void remove() -> remove
com.google.gson.jpush.internal.ad -> com.google.gson.jpush.internal.ad:
    com.google.gson.jpush.internal.ad a -> a
    com.google.gson.jpush.internal.ad b -> b
    com.google.gson.jpush.internal.ad c -> c
    com.google.gson.jpush.internal.ad d -> d
    com.google.gson.jpush.internal.ad e -> e
    java.lang.Object f -> f
    java.lang.Object g -> g
    int h -> h
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.jpush.internal.ae -> com.google.gson.jpush.internal.ae:
    java.lang.Object a() -> a
com.google.gson.jpush.internal.af -> com.google.gson.jpush.internal.af:
    java.util.Map a -> a
    java.util.Map b -> b
    void a(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    boolean a(java.lang.reflect.Type) -> a
    java.lang.Class a(java.lang.Class) -> a
com.google.gson.jpush.internal.ag -> com.google.gson.jpush.internal.ag:
    com.google.gson.jpush.w a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.w,com.google.gson.jpush.stream.d) -> a
    java.io.Writer a(java.lang.Appendable) -> a
com.google.gson.jpush.internal.ah -> com.google.gson.jpush.internal.ah:
    java.lang.Appendable a -> a
    com.google.gson.jpush.internal.ai b -> b
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.jpush.internal.ai -> com.google.gson.jpush.internal.ai:
    char[] a -> a
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.jpush.internal.aj -> com.google.gson.jpush.internal.aj:
    java.lang.String[] z -> z
    java.lang.Object a(java.lang.Class) -> a
    com.google.gson.jpush.internal.aj a() -> a
com.google.gson.jpush.internal.ak -> com.google.gson.jpush.internal.ak:
    java.lang.reflect.Method a -> a
    java.lang.Object b -> b
    java.lang.Object a(java.lang.Class) -> a
com.google.gson.jpush.internal.al -> com.google.gson.jpush.internal.al:
    java.lang.reflect.Method a -> a
    int b -> b
    java.lang.Object a(java.lang.Class) -> a
com.google.gson.jpush.internal.am -> com.google.gson.jpush.internal.am:
    java.lang.reflect.Method a -> a
    java.lang.Object a(java.lang.Class) -> a
com.google.gson.jpush.internal.an -> com.google.gson.jpush.internal.an:
    java.lang.String z -> z
    java.lang.Object a(java.lang.Class) -> a
com.google.gson.jpush.internal.b -> com.google.gson.jpush.internal.b:
    java.lang.reflect.Type[] a -> a
    java.lang.String[] z -> z
    java.lang.reflect.GenericArrayType f(java.lang.reflect.Type) -> f
    java.lang.reflect.Type a(java.lang.reflect.Type) -> a
    java.lang.Class b(java.lang.reflect.Type) -> b
    boolean a(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    java.lang.String c(java.lang.reflect.Type) -> c
    java.lang.reflect.Type a(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> a
    java.lang.reflect.Type b(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> b
    java.lang.reflect.Type d(java.lang.reflect.Type) -> d
    java.lang.reflect.Type a(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.reflect.Type[] b(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.reflect.Type a(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> a
    void e(java.lang.reflect.Type) -> e
    int a(java.lang.Object) -> a
com.google.gson.jpush.internal.bind.a -> com.google.gson.jpush.internal.bind.a:
    com.google.gson.jpush.am a -> a
    java.lang.Class b -> b
    com.google.gson.jpush.al c -> c
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.aa -> com.google.gson.jpush.internal.bind.aa:
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.ab -> com.google.gson.jpush.internal.bind.ab:
    int[] a -> a
    java.lang.String z -> z
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
    int[] a() -> a
com.google.gson.jpush.internal.bind.ac -> com.google.gson.jpush.internal.bind.ac:
    java.lang.String z -> z
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.ad -> com.google.gson.jpush.internal.bind.ad:
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.ae -> com.google.gson.jpush.internal.bind.ae:
    java.math.BigDecimal b(com.google.gson.jpush.stream.a) -> b
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.af -> com.google.gson.jpush.internal.bind.af:
    java.math.BigInteger b(com.google.gson.jpush.stream.a) -> b
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.ag -> com.google.gson.jpush.internal.bind.ag:
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.ah -> com.google.gson.jpush.internal.bind.ah:
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.ai -> com.google.gson.jpush.internal.bind.ai:
    java.lang.String z -> z
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.aj -> com.google.gson.jpush.internal.bind.aj:
    java.lang.String z -> z
    java.net.URI b(com.google.gson.jpush.stream.a) -> b
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.ak -> com.google.gson.jpush.internal.bind.ak:
    int[] a -> a
    java.lang.String[] z -> z
    java.util.BitSet b(com.google.gson.jpush.stream.a) -> b
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
    int[] a() -> a
com.google.gson.jpush.internal.bind.al -> com.google.gson.jpush.internal.bind.al:
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.am -> com.google.gson.jpush.internal.bind.am:
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.an -> com.google.gson.jpush.internal.bind.an:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
com.google.gson.jpush.internal.bind.ao -> com.google.gson.jpush.internal.bind.ao:
    com.google.gson.jpush.internal.bind.an a -> a
    com.google.gson.jpush.al b -> b
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.ap -> com.google.gson.jpush.internal.bind.ap:
    java.lang.String[] z -> z
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.aq -> com.google.gson.jpush.internal.bind.aq:
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.ar -> com.google.gson.jpush.internal.bind.ar:
    int[] a -> a
    java.lang.String z -> z
    com.google.gson.jpush.w b(com.google.gson.jpush.stream.a) -> b
    void a(com.google.gson.jpush.stream.d,com.google.gson.jpush.w) -> a
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
    int[] a() -> a
com.google.gson.jpush.internal.bind.as -> com.google.gson.jpush.internal.bind.as:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
com.google.gson.jpush.internal.bind.at -> com.google.gson.jpush.internal.bind.at:
    java.lang.Class a -> a
    com.google.gson.jpush.al b -> b
    java.lang.String[] z -> z
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
    java.lang.String toString() -> toString
com.google.gson.jpush.internal.bind.au -> com.google.gson.jpush.internal.bind.au:
    java.lang.Class a -> a
    java.lang.Class b -> b
    com.google.gson.jpush.al c -> c
    java.lang.String[] z -> z
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
    java.lang.String toString() -> toString
com.google.gson.jpush.internal.bind.av -> com.google.gson.jpush.internal.bind.av:
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.aw -> com.google.gson.jpush.internal.bind.aw:
    java.lang.Class a -> a
    java.lang.Class b -> b
    com.google.gson.jpush.al c -> c
    java.lang.String[] z -> z
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
    java.lang.String toString() -> toString
com.google.gson.jpush.internal.bind.ax -> com.google.gson.jpush.internal.bind.ax:
    java.lang.Class a -> a
    com.google.gson.jpush.al b -> b
    java.lang.String[] z -> z
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
    java.lang.String toString() -> toString
com.google.gson.jpush.internal.bind.ay -> com.google.gson.jpush.internal.bind.ay:
    java.lang.String z -> z
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.az -> com.google.gson.jpush.internal.bind.az:
    java.lang.Number b(com.google.gson.jpush.stream.a) -> b
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.b -> com.google.gson.jpush.internal.bind.b:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
com.google.gson.jpush.internal.bind.ba -> com.google.gson.jpush.internal.bind.ba:
    java.lang.Number b(com.google.gson.jpush.stream.a) -> b
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.bb -> com.google.gson.jpush.internal.bind.bb:
    java.lang.Number b(com.google.gson.jpush.stream.a) -> b
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.bc -> com.google.gson.jpush.internal.bind.bc:
    java.lang.Number b(com.google.gson.jpush.stream.a) -> b
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.bd -> com.google.gson.jpush.internal.bind.bd:
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.be -> com.google.gson.jpush.internal.bind.be:
    java.util.Map a -> a
    java.util.Map b -> b
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.c -> com.google.gson.jpush.internal.bind.c:
    com.google.gson.jpush.internal.f a -> a
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
com.google.gson.jpush.internal.bind.d -> com.google.gson.jpush.internal.bind.d:
    com.google.gson.jpush.al a -> a
    com.google.gson.jpush.internal.ae b -> b
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.e -> com.google.gson.jpush.internal.bind.e:
    com.google.gson.jpush.am a -> a
    java.text.DateFormat b -> b
    java.text.DateFormat c -> c
    java.text.DateFormat d -> d
    java.lang.String[] z -> z
    java.util.Date a(java.lang.String) -> a
    void a(com.google.gson.jpush.stream.d,java.util.Date) -> a
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.f -> com.google.gson.jpush.internal.bind.f:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
com.google.gson.jpush.internal.bind.g -> com.google.gson.jpush.internal.bind.g:
    com.google.gson.jpush.internal.f a -> a
    java.lang.String z -> z
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
    com.google.gson.jpush.al a(com.google.gson.jpush.internal.f,com.google.gson.jpush.k,com.google.gson.jpush.reflect.a,com.google.gson.jpush.annotations.b) -> a
com.google.gson.jpush.internal.bind.h -> com.google.gson.jpush.internal.bind.h:
    java.io.Reader a -> a
    java.lang.Object b -> b
    java.util.List c -> c
    java.lang.String[] z -> z
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    boolean e() -> e
    com.google.gson.jpush.stream.c f() -> f
    java.lang.Object r() -> r
    java.lang.Object s() -> s
    void a(com.google.gson.jpush.stream.c) -> a
    java.lang.String g() -> g
    java.lang.String h() -> h
    boolean i() -> i
    void j() -> j
    double k() -> k
    long l() -> l
    int m() -> m
    void close() -> close
    void n() -> n
    java.lang.String toString() -> toString
    void o() -> o
com.google.gson.jpush.internal.bind.i -> com.google.gson.jpush.internal.bind.i:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.jpush.internal.bind.j -> com.google.gson.jpush.internal.bind.j:
    java.io.Writer a -> a
    com.google.gson.jpush.ac b -> b
    java.util.List c -> c
    java.lang.String d -> d
    com.google.gson.jpush.w e -> e
    java.lang.String[] z -> z
    com.google.gson.jpush.w a() -> a
    com.google.gson.jpush.w j() -> j
    void a(com.google.gson.jpush.w) -> a
    com.google.gson.jpush.stream.d b() -> b
    com.google.gson.jpush.stream.d c() -> c
    com.google.gson.jpush.stream.d d() -> d
    com.google.gson.jpush.stream.d e() -> e
    com.google.gson.jpush.stream.d a(java.lang.String) -> a
    com.google.gson.jpush.stream.d b(java.lang.String) -> b
    com.google.gson.jpush.stream.d f() -> f
    com.google.gson.jpush.stream.d a(boolean) -> a
    com.google.gson.jpush.stream.d a(long) -> a
    com.google.gson.jpush.stream.d a(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
com.google.gson.jpush.internal.bind.k -> com.google.gson.jpush.internal.bind.k:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.jpush.internal.bind.l -> com.google.gson.jpush.internal.bind.l:
    com.google.gson.jpush.internal.f a -> a
    boolean b -> b
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
    boolean a(com.google.gson.jpush.internal.bind.l) -> a
com.google.gson.jpush.internal.bind.m -> com.google.gson.jpush.internal.bind.m:
    com.google.gson.jpush.al b -> b
    com.google.gson.jpush.al c -> c
    com.google.gson.jpush.internal.ae d -> d
    com.google.gson.jpush.internal.bind.l a -> a
    java.lang.String[] z -> z
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.n -> com.google.gson.jpush.internal.bind.n:
    com.google.gson.jpush.am a -> a
    com.google.gson.jpush.k b -> b
    int[] c -> c
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
    int[] a() -> a
com.google.gson.jpush.internal.bind.o -> com.google.gson.jpush.internal.bind.o:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
com.google.gson.jpush.internal.bind.p -> com.google.gson.jpush.internal.bind.p:
    com.google.gson.jpush.internal.f a -> a
    com.google.gson.jpush.j b -> b
    com.google.gson.jpush.internal.s c -> c
    java.lang.String z -> z
    boolean a(java.lang.reflect.Field,boolean) -> a
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
    java.util.Map a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a,java.lang.Class) -> a
    com.google.gson.jpush.al a(com.google.gson.jpush.internal.bind.p,com.google.gson.jpush.k,java.lang.reflect.Field,com.google.gson.jpush.reflect.a) -> a
com.google.gson.jpush.internal.bind.q -> com.google.gson.jpush.internal.bind.q:
    com.google.gson.jpush.al a -> a
    com.google.gson.jpush.internal.bind.p b -> b
    java.lang.reflect.Field f -> f
    com.google.gson.jpush.k g -> g
    com.google.gson.jpush.reflect.a h -> h
    boolean i -> i
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
    void a(com.google.gson.jpush.stream.a,java.lang.Object) -> a
    boolean a(java.lang.Object) -> a
com.google.gson.jpush.internal.bind.r -> com.google.gson.jpush.internal.bind.r:
    com.google.gson.jpush.internal.ae a -> a
    java.util.Map b -> b
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.s -> com.google.gson.jpush.internal.bind.s:
    java.lang.String c -> c
    boolean d -> d
    boolean e -> e
    boolean a(java.lang.Object) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
    void a(com.google.gson.jpush.stream.a,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.t -> com.google.gson.jpush.internal.bind.t:
    com.google.gson.jpush.am a -> a
    java.text.DateFormat b -> b
    java.lang.String z -> z
    java.sql.Date b(com.google.gson.jpush.stream.a) -> b
    void a(com.google.gson.jpush.stream.d,java.sql.Date) -> a
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.u -> com.google.gson.jpush.internal.bind.u:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
com.google.gson.jpush.internal.bind.v -> com.google.gson.jpush.internal.bind.v:
    com.google.gson.jpush.am a -> a
    java.text.DateFormat b -> b
    java.lang.String z -> z
    java.sql.Time b(com.google.gson.jpush.stream.a) -> b
    void a(com.google.gson.jpush.stream.d,java.sql.Time) -> a
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.w -> com.google.gson.jpush.internal.bind.w:
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
com.google.gson.jpush.internal.bind.x -> com.google.gson.jpush.internal.bind.x:
    com.google.gson.jpush.k a -> a
    com.google.gson.jpush.al b -> b
    java.lang.reflect.Type c -> c
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.bind.y -> com.google.gson.jpush.internal.bind.y:
    com.google.gson.jpush.al a -> a
    com.google.gson.jpush.am b -> b
    com.google.gson.jpush.al c -> c
    com.google.gson.jpush.am d -> d
    com.google.gson.jpush.al e -> e
    com.google.gson.jpush.al f -> f
    com.google.gson.jpush.am g -> g
    com.google.gson.jpush.al h -> h
    com.google.gson.jpush.am i -> i
    com.google.gson.jpush.al j -> j
    com.google.gson.jpush.am k -> k
    com.google.gson.jpush.al l -> l
    com.google.gson.jpush.am m -> m
    com.google.gson.jpush.al n -> n
    com.google.gson.jpush.al o -> o
    com.google.gson.jpush.al p -> p
    com.google.gson.jpush.al q -> q
    com.google.gson.jpush.am r -> r
    com.google.gson.jpush.al s -> s
    com.google.gson.jpush.am t -> t
    com.google.gson.jpush.al u -> u
    com.google.gson.jpush.al v -> v
    com.google.gson.jpush.al w -> w
    com.google.gson.jpush.am x -> x
    com.google.gson.jpush.al y -> y
    com.google.gson.jpush.am z -> z
    com.google.gson.jpush.al A -> A
    com.google.gson.jpush.am B -> B
    com.google.gson.jpush.al C -> C
    com.google.gson.jpush.am D -> D
    com.google.gson.jpush.al E -> E
    com.google.gson.jpush.am F -> F
    com.google.gson.jpush.al G -> G
    com.google.gson.jpush.am H -> H
    com.google.gson.jpush.al I -> I
    com.google.gson.jpush.am J -> J
    com.google.gson.jpush.am K -> K
    com.google.gson.jpush.al L -> L
    com.google.gson.jpush.am M -> M
    com.google.gson.jpush.al N -> N
    com.google.gson.jpush.am O -> O
    com.google.gson.jpush.al P -> P
    com.google.gson.jpush.am Q -> Q
    com.google.gson.jpush.am R -> R
    com.google.gson.jpush.am a(java.lang.Class,com.google.gson.jpush.al) -> a
    com.google.gson.jpush.am a(java.lang.Class,java.lang.Class,com.google.gson.jpush.al) -> a
    com.google.gson.jpush.am b(java.lang.Class,com.google.gson.jpush.al) -> b
com.google.gson.jpush.internal.bind.z -> com.google.gson.jpush.internal.bind.z:
    java.lang.String[] z -> z
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.internal.c -> com.google.gson.jpush.internal.c:
    java.lang.reflect.Type a -> a
    java.lang.String z -> z
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.jpush.internal.d -> com.google.gson.jpush.internal.d:
    java.lang.reflect.Type a -> a
    java.lang.reflect.Type b -> b
    java.lang.reflect.Type[] c -> c
    java.lang.String z -> z
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.jpush.internal.e -> com.google.gson.jpush.internal.e:
    java.lang.reflect.Type a -> a
    java.lang.reflect.Type b -> b
    java.lang.String[] z -> z
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.jpush.internal.f -> com.google.gson.jpush.internal.f:
    java.util.Map a -> a
    com.google.gson.jpush.internal.ae a(com.google.gson.jpush.reflect.a) -> a
    com.google.gson.jpush.internal.ae a(java.lang.Class) -> a
    java.lang.String toString() -> toString
com.google.gson.jpush.internal.g -> com.google.gson.jpush.internal.g:
    com.google.gson.jpush.internal.f a -> a
    com.google.gson.jpush.s b -> b
    java.lang.reflect.Type c -> c
    java.lang.Object a() -> a
com.google.gson.jpush.internal.h -> com.google.gson.jpush.internal.h:
    com.google.gson.jpush.internal.f a -> a
    java.lang.Object a() -> a
com.google.gson.jpush.internal.i -> com.google.gson.jpush.internal.i:
    com.google.gson.jpush.internal.f a -> a
    java.lang.Object a() -> a
com.google.gson.jpush.internal.j -> com.google.gson.jpush.internal.j:
    com.google.gson.jpush.internal.aj b -> b
    com.google.gson.jpush.internal.f a -> a
    java.lang.Class c -> c
    java.lang.reflect.Type d -> d
    java.lang.String[] z -> z
    java.lang.Object a() -> a
com.google.gson.jpush.internal.k -> com.google.gson.jpush.internal.k:
    com.google.gson.jpush.internal.f a -> a
    com.google.gson.jpush.s b -> b
    java.lang.reflect.Type c -> c
    java.lang.Object a() -> a
com.google.gson.jpush.internal.l -> com.google.gson.jpush.internal.l:
    com.google.gson.jpush.internal.f a -> a
    java.lang.reflect.Constructor b -> b
    java.lang.String[] z -> z
    java.lang.Object a() -> a
com.google.gson.jpush.internal.m -> com.google.gson.jpush.internal.m:
    com.google.gson.jpush.internal.f a -> a
    java.lang.Object a() -> a
com.google.gson.jpush.internal.n -> com.google.gson.jpush.internal.n:
    com.google.gson.jpush.internal.f a -> a
    java.lang.reflect.Type b -> b
    java.lang.String z -> z
    java.lang.Object a() -> a
com.google.gson.jpush.internal.o -> com.google.gson.jpush.internal.o:
    com.google.gson.jpush.internal.f a -> a
    java.lang.Object a() -> a
com.google.gson.jpush.internal.p -> com.google.gson.jpush.internal.p:
    com.google.gson.jpush.internal.f a -> a
    java.lang.Object a() -> a
com.google.gson.jpush.internal.q -> com.google.gson.jpush.internal.q:
    com.google.gson.jpush.internal.f a -> a
    java.lang.Object a() -> a
com.google.gson.jpush.internal.r -> com.google.gson.jpush.internal.r:
    com.google.gson.jpush.internal.f a -> a
    java.lang.Object a() -> a
com.google.gson.jpush.internal.s -> com.google.gson.jpush.internal.s:
    com.google.gson.jpush.internal.s a -> a
    double b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    java.util.List f -> f
    java.util.List g -> g
    com.google.gson.jpush.internal.s b() -> b
    com.google.gson.jpush.internal.s a() -> a
    com.google.gson.jpush.al a(com.google.gson.jpush.k,com.google.gson.jpush.reflect.a) -> a
    boolean a(java.lang.reflect.Field,boolean) -> a
    boolean a(java.lang.Class,boolean) -> a
    boolean a(java.lang.Class) -> a
    boolean b(java.lang.Class) -> b
    boolean a(com.google.gson.jpush.annotations.d,com.google.gson.jpush.annotations.e) -> a
    java.lang.Object clone() -> clone
com.google.gson.jpush.internal.t -> com.google.gson.jpush.internal.t:
    com.google.gson.jpush.al b -> b
    com.google.gson.jpush.internal.s a -> a
    boolean c -> c
    boolean d -> d
    com.google.gson.jpush.k e -> e
    com.google.gson.jpush.reflect.a f -> f
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
    com.google.gson.jpush.al a() -> a
com.google.gson.jpush.internal.u -> com.google.gson.jpush.internal.u:
    com.google.gson.jpush.internal.u a -> a
    void a(com.google.gson.jpush.stream.a) -> a
com.google.gson.jpush.internal.v -> com.google.gson.jpush.internal.v:
    java.lang.String a -> a
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
com.google.gson.jpush.internal.w -> com.google.gson.jpush.internal.w:
    java.util.Comparator g -> g
    java.util.Comparator a -> a
    com.google.gson.jpush.internal.ad b -> b
    int c -> c
    int d -> d
    com.google.gson.jpush.internal.ad e -> e
    com.google.gson.jpush.internal.y h -> h
    com.google.gson.jpush.internal.aa i -> i
    boolean f -> f
    java.lang.String[] z -> z
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.jpush.internal.ad a(java.lang.Object,boolean) -> a
    com.google.gson.jpush.internal.ad b(java.lang.Object) -> b
    com.google.gson.jpush.internal.ad a(java.util.Map$Entry) -> a
    void a(com.google.gson.jpush.internal.ad,boolean) -> a
    com.google.gson.jpush.internal.ad a(java.lang.Object) -> a
    void a(com.google.gson.jpush.internal.ad,com.google.gson.jpush.internal.ad) -> a
    void b(com.google.gson.jpush.internal.ad,boolean) -> b
    void a(com.google.gson.jpush.internal.ad) -> a
    void b(com.google.gson.jpush.internal.ad) -> b
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
com.google.gson.jpush.internal.x -> com.google.gson.jpush.internal.x:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.jpush.internal.y -> com.google.gson.jpush.internal.y:
    com.google.gson.jpush.internal.w a -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.jpush.internal.z -> com.google.gson.jpush.internal.z:
    com.google.gson.jpush.internal.y a -> a
    java.lang.Object next() -> next
com.google.gson.jpush.j -> com.google.gson.jpush.j:
    java.lang.String a(java.lang.reflect.Field) -> a
com.google.gson.jpush.k -> com.google.gson.jpush.k:
    java.lang.ThreadLocal c -> c
    java.util.Map d -> d
    java.util.List e -> e
    com.google.gson.jpush.internal.f f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    com.google.gson.jpush.u a -> a
    com.google.gson.jpush.ad b -> b
    java.lang.String[] z -> z
    com.google.gson.jpush.al a(com.google.gson.jpush.reflect.a) -> a
    com.google.gson.jpush.al a(com.google.gson.jpush.am,com.google.gson.jpush.reflect.a) -> a
    com.google.gson.jpush.al a(java.lang.Class) -> a
    void a(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> a
    void a(com.google.gson.jpush.w,java.lang.Appendable) -> a
    com.google.gson.jpush.stream.d a(java.io.Writer) -> a
    java.lang.Object a(java.lang.String,java.lang.Class) -> a
    void a(java.lang.Object,com.google.gson.jpush.stream.a) -> a
    java.lang.Object a(com.google.gson.jpush.stream.a,java.lang.reflect.Type) -> a
    java.lang.String toString() -> toString
    void a(com.google.gson.jpush.k,double) -> a
com.google.gson.jpush.l -> com.google.gson.jpush.l:
    com.google.gson.jpush.k a -> a
com.google.gson.jpush.m -> com.google.gson.jpush.m:
    com.google.gson.jpush.k a -> a
com.google.gson.jpush.n -> com.google.gson.jpush.n:
    com.google.gson.jpush.k a -> a
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.o -> com.google.gson.jpush.o:
    com.google.gson.jpush.k a -> a
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.p -> com.google.gson.jpush.p:
    com.google.gson.jpush.k a -> a
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.q -> com.google.gson.jpush.q:
    com.google.gson.jpush.al a -> a
    void a(com.google.gson.jpush.al) -> a
    java.lang.Object a(com.google.gson.jpush.stream.a) -> a
    void a(com.google.gson.jpush.stream.d,java.lang.Object) -> a
com.google.gson.jpush.r -> com.google.gson.jpush.r:
    com.google.gson.jpush.internal.s a -> a
    com.google.gson.jpush.ag b -> b
    com.google.gson.jpush.j c -> c
    java.util.Map d -> d
    java.util.List e -> e
    java.util.List f -> f
    boolean g -> g
    java.lang.String h -> h
    int i -> i
    int j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    boolean o -> o
    com.google.gson.jpush.r a() -> a
    com.google.gson.jpush.k b() -> b
com.google.gson.jpush.reflect.a -> com.google.gson.jpush.reflect.a:
    java.lang.Class a -> a
    java.lang.reflect.Type b -> b
    int c -> c
    java.lang.String z -> z
    java.lang.Class a() -> a
    java.lang.reflect.Type b() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.jpush.reflect.a a(java.lang.reflect.Type) -> a
    com.google.gson.jpush.reflect.a a(java.lang.Class) -> a
com.google.gson.jpush.s -> com.google.gson.jpush.s:
    java.lang.Object a() -> a
com.google.gson.jpush.stream.a -> com.google.gson.jpush.stream.a:
    char[] a -> a
    java.io.Reader b -> b
    boolean c -> c
    char[] d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    long j -> j
    int k -> k
    java.lang.String l -> l
    int[] m -> m
    int n -> n
    java.lang.String[] o -> o
    int[] p -> p
    java.lang.String[] z -> z
    void a(boolean) -> a
    boolean p() -> p
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    boolean e() -> e
    com.google.gson.jpush.stream.c f() -> f
    int o() -> o
    int r() -> r
    int s() -> s
    boolean a(char) -> a
    java.lang.String g() -> g
    java.lang.String h() -> h
    boolean i() -> i
    void j() -> j
    double k() -> k
    long l() -> l
    java.lang.String b(char) -> b
    java.lang.String t() -> t
    void c(char) -> c
    int m() -> m
    void close() -> close
    void n() -> n
    void a(int) -> a
    boolean b(int) -> b
    int u() -> u
    int b(boolean) -> b
    void v() -> v
    void w() -> w
    java.lang.String toString() -> toString
    java.lang.String q() -> q
    char x() -> x
    java.io.IOException a(java.lang.String) -> a
    int a(com.google.gson.jpush.stream.a) -> a
    int b(com.google.gson.jpush.stream.a) -> b
    void a(com.google.gson.jpush.stream.a,int) -> a
    int c(com.google.gson.jpush.stream.a) -> c
    int d(com.google.gson.jpush.stream.a) -> d
com.google.gson.jpush.stream.b -> com.google.gson.jpush.stream.b:
    java.lang.String[] z -> z
    void a(com.google.gson.jpush.stream.a) -> a
com.google.gson.jpush.stream.c -> com.google.gson.jpush.stream.c:
    com.google.gson.jpush.stream.c a -> a
    com.google.gson.jpush.stream.c b -> b
    com.google.gson.jpush.stream.c c -> c
    com.google.gson.jpush.stream.c d -> d
    com.google.gson.jpush.stream.c e -> e
    com.google.gson.jpush.stream.c f -> f
    com.google.gson.jpush.stream.c g -> g
    com.google.gson.jpush.stream.c h -> h
    com.google.gson.jpush.stream.c i -> i
    com.google.gson.jpush.stream.c j -> j
    com.google.gson.jpush.stream.c[] k -> k
    java.lang.String[] z -> z
    com.google.gson.jpush.stream.c[] values() -> values
    com.google.gson.jpush.stream.c valueOf(java.lang.String) -> valueOf
com.google.gson.jpush.stream.d -> com.google.gson.jpush.stream.d:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.io.Writer c -> c
    int[] d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    boolean h -> h
    boolean i -> i
    java.lang.String j -> j
    boolean k -> k
    java.lang.String[] z -> z
    void c(java.lang.String) -> c
    void b(boolean) -> b
    boolean g() -> g
    void c(boolean) -> c
    boolean h() -> h
    void d(boolean) -> d
    boolean i() -> i
    com.google.gson.jpush.stream.d b() -> b
    com.google.gson.jpush.stream.d c() -> c
    com.google.gson.jpush.stream.d d() -> d
    com.google.gson.jpush.stream.d e() -> e
    com.google.gson.jpush.stream.d a(int,java.lang.String) -> a
    com.google.gson.jpush.stream.d a(int,int,java.lang.String) -> a
    void a(int) -> a
    int a() -> a
    void b(int) -> b
    com.google.gson.jpush.stream.d a(java.lang.String) -> a
    void j() -> j
    com.google.gson.jpush.stream.d b(java.lang.String) -> b
    com.google.gson.jpush.stream.d f() -> f
    com.google.gson.jpush.stream.d a(boolean) -> a
    com.google.gson.jpush.stream.d a(long) -> a
    com.google.gson.jpush.stream.d a(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
    void d(java.lang.String) -> d
    void k() -> k
    void e(boolean) -> e
com.google.gson.jpush.stream.e -> com.google.gson.jpush.stream.e:
com.google.gson.jpush.t -> com.google.gson.jpush.t:
    java.util.List a -> a
    void a(com.google.gson.jpush.w) -> a
    int a() -> a
    java.util.Iterator iterator() -> iterator
    java.lang.Number b() -> b
    java.lang.String c() -> c
    double d() -> d
    long e() -> e
    int f() -> f
    boolean g() -> g
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.jpush.u -> com.google.gson.jpush.u:
com.google.gson.jpush.v -> com.google.gson.jpush.v:
    java.lang.Object a(com.google.gson.jpush.w,java.lang.reflect.Type,com.google.gson.jpush.u) -> a
com.google.gson.jpush.w -> com.google.gson.jpush.w:
    java.lang.String[] z -> z
    com.google.gson.jpush.z h() -> h
    com.google.gson.jpush.t i() -> i
    com.google.gson.jpush.ac j() -> j
    boolean g() -> g
    java.lang.Number b() -> b
    java.lang.String c() -> c
    double d() -> d
    long e() -> e
    int f() -> f
    java.lang.String toString() -> toString
com.google.gson.jpush.x -> com.google.gson.jpush.x:
com.google.gson.jpush.y -> com.google.gson.jpush.y:
    com.google.gson.jpush.y a -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.jpush.z -> com.google.gson.jpush.z:
    com.google.gson.jpush.internal.w a -> a
    void a(java.lang.String,com.google.gson.jpush.w) -> a
    java.util.Set a() -> a
    boolean a(java.lang.String) -> a
    com.google.gson.jpush.w b(java.lang.String) -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.reflect.TypeToken -> com.google.gson.b.a:
    java.lang.Class rawType -> a
    java.lang.reflect.Type type -> b
    int hashCode -> c
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> a
    java.lang.Class getRawType() -> a
    java.lang.reflect.Type getType() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> a
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> b
com.google.gson.stream.JsonReader -> com.google.gson.stream.a:
    char[] NON_EXECUTE_PREFIX -> a
    java.io.Reader in -> b
    boolean lenient -> c
    char[] buffer -> d
    int pos -> e
    int limit -> f
    int lineNumber -> g
    int lineStart -> h
    int peeked -> i
    long peekedLong -> j
    int peekedNumberLength -> k
    java.lang.String peekedString -> l
    int[] stack -> m
    int stackSize -> n
    void setLenient(boolean) -> a
    boolean isLenient() -> p
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    int doPeek() -> o
    int peekKeyword() -> q
    int peekNumber() -> r
    boolean isLiteral(char) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    java.lang.String nextQuotedValue(char) -> b
    java.lang.String nextUnquotedValue() -> s
    void skipQuotedValue(char) -> c
    void skipUnquotedValue() -> t
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    void push(int) -> a
    boolean fillBuffer(int) -> b
    int getLineNumber() -> u
    int getColumnNumber() -> v
    int nextNonWhitespace(boolean) -> b
    void checkLenient() -> w
    void skipToEndOfLine() -> x
    boolean skipTo(java.lang.String) -> a
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> y
    java.io.IOException syntaxError(java.lang.String) -> b
    void consumeNonExecutePrefix() -> z
    int access$000(com.google.gson.stream.JsonReader) -> a
    int access$100(com.google.gson.stream.JsonReader) -> b
    int access$002(com.google.gson.stream.JsonReader,int) -> a
    int access$200(com.google.gson.stream.JsonReader) -> c
    int access$300(com.google.gson.stream.JsonReader) -> d
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.b:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> a
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.gson.stream.c:
    java.lang.String[] REPLACEMENT_CHARS -> a
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> b
    java.io.Writer out -> c
    int[] stack -> d
    int stackSize -> e
    java.lang.String indent -> f
    java.lang.String separator -> g
    boolean lenient -> h
    boolean htmlSafe -> i
    java.lang.String deferredName -> j
    boolean serializeNulls -> k
    void setIndent(java.lang.String) -> c
    void setLenient(boolean) -> b
    boolean isLenient() -> g
    void setHtmlSafe(boolean) -> c
    boolean isHtmlSafe() -> h
    void setSerializeNulls(boolean) -> d
    boolean getSerializeNulls() -> i
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter open(int,java.lang.String) -> a
    com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> a
    void push(int) -> a
    int peek() -> a
    void replaceTop(int) -> b
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    void writeDeferredName() -> j
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> d
    void newline() -> k
    void beforeName() -> l
    void beforeValue(boolean) -> e
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.d:
com.google.protobuf.jpush.a -> com.google.protobuf.jpush.a:
    java.lang.String[] z -> z
    byte[] Q() -> Q
com.google.protobuf.jpush.b -> com.google.protobuf.jpush.b:
    java.lang.String z -> z
    com.google.protobuf.jpush.b d() -> d
    com.google.protobuf.jpush.b a(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.b a(byte[],int,int) -> a
    void a(java.lang.Iterable,java.util.Collection) -> a
    java.lang.Object clone() -> clone
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
com.google.protobuf.jpush.c -> com.google.protobuf.jpush.c:
    byte[] b -> b
    com.google.protobuf.jpush.c a -> a
    int c -> c
    java.lang.String[] z -> z
    int a() -> a
    com.google.protobuf.jpush.c a(byte[],int,int) -> a
    com.google.protobuf.jpush.c a(byte[]) -> a
    com.google.protobuf.jpush.c a(java.lang.String) -> a
    void a(byte[],int,int,int) -> a
    java.lang.String b() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.io.InputStream c() -> c
com.google.protobuf.jpush.d -> com.google.protobuf.jpush.d:
    byte[] a -> a
    int b -> b
    int c -> c
    int d -> d
    java.io.InputStream e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    java.lang.String[] z -> z
    com.google.protobuf.jpush.d a(byte[],int,int) -> a
    int a() -> a
    void a(int) -> a
    boolean b(int) -> b
    long b() -> b
    int c() -> c
    void a(com.google.protobuf.jpush.l,com.google.protobuf.jpush.g) -> a
    com.google.protobuf.jpush.c d() -> d
    int e() -> e
    int f() -> f
    int c(int) -> c
    void h() -> h
    void d(int) -> d
    int g() -> g
    boolean a(boolean) -> a
    byte i() -> i
    void e(int) -> e
com.google.protobuf.jpush.e -> com.google.protobuf.jpush.e:
    byte[] a -> a
    int b -> b
    int c -> c
    java.io.OutputStream d -> d
    java.lang.String[] z -> z
    com.google.protobuf.jpush.e a(byte[],int,int) -> a
    void a(int,long) -> a
    void a(int,int) -> a
    void a(int,com.google.protobuf.jpush.k) -> a
    void a(int,com.google.protobuf.jpush.c) -> a
    void b(int,int) -> b
    int b(int,long) -> b
    int c(int,int) -> c
    int b(int,com.google.protobuf.jpush.k) -> b
    int b(int,com.google.protobuf.jpush.c) -> b
    int d(int,int) -> d
    int a(long) -> a
    int a(int) -> a
    void b() -> b
    int a() -> a
    void b(int) -> b
    void e(int,int) -> e
    int c(int) -> c
    void d(int) -> d
    int e(int) -> e
    void b(long) -> b
com.google.protobuf.jpush.f -> com.google.protobuf.jpush.f:
    java.lang.String z -> z
com.google.protobuf.jpush.g -> com.google.protobuf.jpush.g:
    java.util.Map a -> a
    com.google.protobuf.jpush.g b -> b
    com.google.protobuf.jpush.g a() -> a
com.google.protobuf.jpush.h -> com.google.protobuf.jpush.h:
com.google.protobuf.jpush.i -> com.google.protobuf.jpush.i:
    java.lang.String z -> z
    com.google.protobuf.jpush.i c() -> c
    com.google.protobuf.jpush.b d() -> d
    java.lang.Object clone() -> clone
com.google.protobuf.jpush.j -> com.google.protobuf.jpush.j:
    java.lang.String[] z -> z
    com.google.protobuf.jpush.j a() -> a
    com.google.protobuf.jpush.j b() -> b
    com.google.protobuf.jpush.j c() -> c
    com.google.protobuf.jpush.j d() -> d
    com.google.protobuf.jpush.j e() -> e
    com.google.protobuf.jpush.j f() -> f
    com.google.protobuf.jpush.j g() -> g
    com.google.protobuf.jpush.j h() -> h
com.google.protobuf.jpush.k -> com.google.protobuf.jpush.k:
    void a(com.google.protobuf.jpush.e) -> a
    int c() -> c
com.google.protobuf.jpush.l -> com.google.protobuf.jpush.l:
    com.google.protobuf.jpush.l b(com.google.protobuf.jpush.d,com.google.protobuf.jpush.g) -> b
com.google.protobuf.jpush.m -> com.google.protobuf.jpush.m:
    java.util.List a -> a
    java.lang.String z -> z
com.google.protobuf.jpush.n -> com.google.protobuf.jpush.n:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int a(int) -> a
    int b(int) -> b
    int a(int,int) -> a
com.loopj.android.http.AsyncHttpClient -> com.loopj.android.http.AsyncHttpClient:
    java.lang.String VERSION -> VERSION
    int DEFAULT_MAX_CONNECTIONS -> DEFAULT_MAX_CONNECTIONS
    int DEFAULT_SOCKET_TIMEOUT -> DEFAULT_SOCKET_TIMEOUT
    int DEFAULT_MAX_RETRIES -> DEFAULT_MAX_RETRIES
    int DEFAULT_SOCKET_BUFFER_SIZE -> DEFAULT_SOCKET_BUFFER_SIZE
    java.lang.String HEADER_ACCEPT_ENCODING -> HEADER_ACCEPT_ENCODING
    java.lang.String ENCODING_GZIP -> ENCODING_GZIP
    int maxConnections -> maxConnections
    int socketTimeout -> socketTimeout
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    org.apache.http.protocol.HttpContext httpContext -> httpContext
    java.util.concurrent.ThreadPoolExecutor threadPool -> threadPool
    java.util.Map requestMap -> requestMap
    java.util.Map clientHeaderMap -> clientHeaderMap
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    org.apache.http.protocol.HttpContext getHttpContext() -> getHttpContext
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    void setThreadPool(java.util.concurrent.ThreadPoolExecutor) -> setThreadPool
    void setUserAgent(java.lang.String) -> setUserAgent
    void setTimeout(int) -> setTimeout
    void setSSLSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory) -> setSSLSocketFactory
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setBasicAuth(java.lang.String,java.lang.String) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,org.apache.http.auth.AuthScope) -> setBasicAuth
    void cancelRequests(android.content.Context,boolean) -> cancelRequests
    void get(java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> get
    void get(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> get
    void get(android.content.Context,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> get
    void get(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> get
    void get(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> get
    void post(java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> post
    void post(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> post
    void post(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> post
    void post(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> post
    void post(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> post
    void post(android.content.Context,java.lang.String,org.apache.http.Header[],org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> post
    void put(java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> put
    void put(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> put
    void put(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> put
    void put(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> put
    void put(android.content.Context,java.lang.String,org.apache.http.Header[],org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> put
    void delete(java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> delete
    void delete(android.content.Context,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> delete
    void delete(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.AsyncHttpResponseHandler) -> delete
    void sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler,android.content.Context) -> sendRequest
    java.lang.String getUrlWithQueryString(java.lang.String,com.loopj.android.http.RequestParams) -> getUrlWithQueryString
    org.apache.http.HttpEntity paramsToEntity(com.loopj.android.http.RequestParams) -> paramsToEntity
    org.apache.http.client.methods.HttpEntityEnclosingRequestBase addEntityToRequestBase(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.HttpEntity) -> addEntityToRequestBase
    java.util.Map access$000(com.loopj.android.http.AsyncHttpClient) -> access$000
com.loopj.android.http.AsyncHttpClient$1 -> com.loopj.android.http.AsyncHttpClient$1:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> com.loopj.android.http.AsyncHttpClient$2:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> com.loopj.android.http.AsyncHttpClient$InflatingEntity:
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
com.loopj.android.http.AsyncHttpRequest -> com.loopj.android.http.AsyncHttpRequest:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    org.apache.http.client.methods.HttpUriRequest request -> request
    com.loopj.android.http.AsyncHttpResponseHandler responseHandler -> responseHandler
    boolean isBinaryRequest -> isBinaryRequest
    int executionCount -> executionCount
    void run() -> run
    void makeRequest() -> makeRequest
    void makeRequestWithRetries() -> makeRequestWithRetries
com.loopj.android.http.AsyncHttpResponseHandler -> com.loopj.android.http.AsyncHttpResponseHandler:
    int SUCCESS_MESSAGE -> SUCCESS_MESSAGE
    int FAILURE_MESSAGE -> FAILURE_MESSAGE
    int START_MESSAGE -> START_MESSAGE
    int FINISH_MESSAGE -> FINISH_MESSAGE
    android.os.Handler handler -> handler
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(java.lang.String) -> onSuccess
    void onSuccess(int,java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable) -> onFailure
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
    void sendSuccessMessage(int,java.lang.String) -> sendSuccessMessage
    void sendFailureMessage(java.lang.Throwable,java.lang.String) -> sendFailureMessage
    void sendFailureMessage(java.lang.Throwable,byte[]) -> sendFailureMessage
    void sendStartMessage() -> sendStartMessage
    void sendFinishMessage() -> sendFinishMessage
    void handleSuccessMessage(int,java.lang.String) -> handleSuccessMessage
    void handleFailureMessage(java.lang.Throwable,java.lang.String) -> handleFailureMessage
    void handleMessage(android.os.Message) -> handleMessage
    void sendMessage(android.os.Message) -> sendMessage
    android.os.Message obtainMessage(int,java.lang.Object) -> obtainMessage
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
com.loopj.android.http.AsyncHttpResponseHandler$1 -> com.loopj.android.http.AsyncHttpResponseHandler$1:
    com.loopj.android.http.AsyncHttpResponseHandler this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.BinaryHttpResponseHandler -> com.loopj.android.http.BinaryHttpResponseHandler:
    java.lang.String[] mAllowedContentTypes -> mAllowedContentTypes
    void onSuccess(byte[]) -> onSuccess
    void onSuccess(int,byte[]) -> onSuccess
    void onFailure(java.lang.Throwable,byte[]) -> onFailure
    void sendSuccessMessage(int,byte[]) -> sendSuccessMessage
    void sendFailureMessage(java.lang.Throwable,byte[]) -> sendFailureMessage
    void handleSuccessMessage(int,byte[]) -> handleSuccessMessage
    void handleFailureMessage(java.lang.Throwable,byte[]) -> handleFailureMessage
    void handleMessage(android.os.Message) -> handleMessage
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
com.loopj.android.http.JsonHttpResponseHandler -> com.loopj.android.http.JsonHttpResponseHandler:
    int SUCCESS_JSON_MESSAGE -> SUCCESS_JSON_MESSAGE
    void onSuccess(org.json.JSONObject) -> onSuccess
    void onSuccess(org.json.JSONArray) -> onSuccess
    void onSuccess(int,org.json.JSONObject) -> onSuccess
    void onSuccess(int,org.json.JSONArray) -> onSuccess
    void onFailure(java.lang.Throwable,org.json.JSONObject) -> onFailure
    void onFailure(java.lang.Throwable,org.json.JSONArray) -> onFailure
    void sendSuccessMessage(int,java.lang.String) -> sendSuccessMessage
    void handleMessage(android.os.Message) -> handleMessage
    void handleSuccessJsonMessage(int,java.lang.Object) -> handleSuccessJsonMessage
    java.lang.Object parseResponse(java.lang.String) -> parseResponse
    void handleFailureMessage(java.lang.Throwable,java.lang.String) -> handleFailureMessage
com.loopj.android.http.PersistentCookieStore -> com.loopj.android.http.PersistentCookieStore:
    java.lang.String COOKIE_PREFS -> COOKIE_PREFS
    java.lang.String COOKIE_NAME_STORE -> COOKIE_NAME_STORE
    java.lang.String COOKIE_NAME_PREFIX -> COOKIE_NAME_PREFIX
    java.util.concurrent.ConcurrentHashMap cookies -> cookies
    android.content.SharedPreferences cookiePrefs -> cookiePrefs
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
    java.lang.String encodeCookie(com.loopj.android.http.SerializableCookie) -> encodeCookie
    org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> decodeCookie
    java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
com.loopj.android.http.RequestParams -> com.loopj.android.http.RequestParams:
    java.lang.String ENCODING -> ENCODING
    java.util.concurrent.ConcurrentHashMap urlParams -> urlParams
    java.util.concurrent.ConcurrentHashMap fileParams -> fileParams
    java.util.concurrent.ConcurrentHashMap urlParamsWithArray -> urlParamsWithArray
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.File) -> put
    void put(java.lang.String,java.util.ArrayList) -> put
    void put(java.lang.String,java.io.InputStream) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String) -> put
    void remove(java.lang.String) -> remove
    java.lang.String toString() -> toString
    org.apache.http.HttpEntity getEntity() -> getEntity
    void init() -> init
    java.util.List getParamsList() -> getParamsList
    java.lang.String getParamString() -> getParamString
com.loopj.android.http.RequestParams$FileWrapper -> com.loopj.android.http.RequestParams$FileWrapper:
    java.io.InputStream inputStream -> inputStream
    java.lang.String fileName -> fileName
    java.lang.String contentType -> contentType
    java.lang.String getFileName() -> getFileName
com.loopj.android.http.RetryHandler -> com.loopj.android.http.RetryHandler:
    int RETRY_SLEEP_TIME_MILLIS -> RETRY_SLEEP_TIME_MILLIS
    java.util.HashSet exceptionWhitelist -> exceptionWhitelist
    java.util.HashSet exceptionBlacklist -> exceptionBlacklist
    int maxRetries -> maxRetries
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    boolean isInList(java.util.HashSet,java.lang.Throwable) -> isInList
com.loopj.android.http.SerializableCookie -> com.loopj.android.http.SerializableCookie:
    long serialVersionUID -> serialVersionUID
    org.apache.http.cookie.Cookie cookie -> cookie
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> clientCookie
    org.apache.http.cookie.Cookie getCookie() -> getCookie
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.loopj.android.http.SimpleMultipartEntity -> com.loopj.android.http.SimpleMultipartEntity:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    java.lang.String boundary -> boundary
    java.io.ByteArrayOutputStream out -> out
    boolean isSetLast -> isSetLast
    boolean isSetFirst -> isSetFirst
    void writeFirstBoundaryIfNeeds() -> writeFirstBoundaryIfNeeds
    void writeLastBoundaryIfNeeds() -> writeLastBoundaryIfNeeds
    void addPart(java.lang.String,java.lang.String) -> addPart
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,boolean) -> addPart
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String,boolean) -> addPart
    void addPart(java.lang.String,java.io.File,boolean) -> addPart
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    boolean isChunked() -> isChunked
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
com.loopj.android.http.SyncHttpClient -> com.loopj.android.http.SyncHttpClient:
    int responseCode -> responseCode
    java.lang.String result -> result
    com.loopj.android.http.AsyncHttpResponseHandler responseHandler -> responseHandler
    int getResponseCode() -> getResponseCode
    void sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler,android.content.Context) -> sendRequest
    java.lang.String onRequestFailed(java.lang.Throwable,java.lang.String) -> onRequestFailed
    void delete(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> delete
    java.lang.String get(java.lang.String,com.loopj.android.http.RequestParams) -> get
    java.lang.String get(java.lang.String) -> get
    java.lang.String put(java.lang.String,com.loopj.android.http.RequestParams) -> put
    java.lang.String put(java.lang.String) -> put
    java.lang.String post(java.lang.String,com.loopj.android.http.RequestParams) -> post
    java.lang.String post(java.lang.String) -> post
    java.lang.String delete(java.lang.String,com.loopj.android.http.RequestParams) -> delete
    java.lang.String delete(java.lang.String) -> delete
    int access$002(com.loopj.android.http.SyncHttpClient,int) -> access$002
    java.lang.String access$102(com.loopj.android.http.SyncHttpClient,java.lang.String) -> access$102
com.loopj.android.http.SyncHttpClient$1 -> com.loopj.android.http.SyncHttpClient$1:
    com.loopj.android.http.SyncHttpClient this$0 -> this$0
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    void sendMessage(android.os.Message) -> sendMessage
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.nineoldandroids.animation.Animator -> com.nineoldandroids.animation.Animator:
    java.util.ArrayList mListeners -> mListeners
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void addListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> addListener
    void removeListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> removeListener
    java.util.ArrayList getListeners() -> getListeners
    void removeAllListeners() -> removeAllListeners
    com.nineoldandroids.animation.Animator clone() -> clone
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void setTarget(java.lang.Object) -> setTarget
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Animator$AnimatorListener -> com.nineoldandroids.animation.Animator$AnimatorListener:
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.nineoldandroids.animation.AnimatorInflater -> com.nineoldandroids.animation.AnimatorInflater:
    int[] AnimatorSet -> AnimatorSet
    int AnimatorSet_ordering -> AnimatorSet_ordering
    int[] PropertyAnimator -> PropertyAnimator
    int PropertyAnimator_propertyName -> PropertyAnimator_propertyName
    int[] Animator -> Animator
    int Animator_interpolator -> Animator_interpolator
    int Animator_duration -> Animator_duration
    int Animator_startOffset -> Animator_startOffset
    int Animator_repeatCount -> Animator_repeatCount
    int Animator_repeatMode -> Animator_repeatMode
    int Animator_valueFrom -> Animator_valueFrom
    int Animator_valueTo -> Animator_valueTo
    int Animator_valueType -> Animator_valueType
    int TOGETHER -> TOGETHER
    int VALUE_TYPE_FLOAT -> VALUE_TYPE_FLOAT
    com.nineoldandroids.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    com.nineoldandroids.animation.Animator createAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser) -> createAnimatorFromXml
    com.nineoldandroids.animation.Animator createAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.nineoldandroids.animation.AnimatorSet,int) -> createAnimatorFromXml
    com.nineoldandroids.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.util.AttributeSet) -> loadObjectAnimator
    com.nineoldandroids.animation.ValueAnimator loadAnimator(android.content.Context,android.util.AttributeSet,com.nineoldandroids.animation.ValueAnimator) -> loadAnimator
com.nineoldandroids.animation.AnimatorListenerAdapter -> com.nineoldandroids.animation.AnimatorListenerAdapter:
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
com.nineoldandroids.animation.AnimatorSet -> com.nineoldandroids.animation.AnimatorSet:
    java.util.ArrayList mPlayingSet -> mPlayingSet
    java.util.HashMap mNodeMap -> mNodeMap
    java.util.ArrayList mNodes -> mNodes
    java.util.ArrayList mSortedNodes -> mSortedNodes
    boolean mNeedsSort -> mNeedsSort
    com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> mSetListener
    boolean mTerminated -> mTerminated
    boolean mStarted -> mStarted
    long mStartDelay -> mStartDelay
    com.nineoldandroids.animation.ValueAnimator mDelayAnim -> mDelayAnim
    long mDuration -> mDuration
    void playTogether(com.nineoldandroids.animation.Animator[]) -> playTogether
    void playTogether(java.util.Collection) -> playTogether
    void playSequentially(com.nineoldandroids.animation.Animator[]) -> playSequentially
    void playSequentially(java.util.List) -> playSequentially
    java.util.ArrayList getChildAnimations() -> getChildAnimations
    void setTarget(java.lang.Object) -> setTarget
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.animation.AnimatorSet$Builder play(com.nineoldandroids.animation.Animator) -> play
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getDuration() -> getDuration
    com.nineoldandroids.animation.AnimatorSet setDuration(long) -> setDuration
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void start() -> start
    com.nineoldandroids.animation.AnimatorSet clone() -> clone
    void sortNodes() -> sortNodes
    com.nineoldandroids.animation.Animator clone() -> clone
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
    java.util.ArrayList access$000(com.nineoldandroids.animation.AnimatorSet) -> access$000
    java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet) -> access$100
    java.util.ArrayList access$200(com.nineoldandroids.animation.AnimatorSet) -> access$200
    boolean access$302(com.nineoldandroids.animation.AnimatorSet,boolean) -> access$302
    java.util.ArrayList access$400(com.nineoldandroids.animation.AnimatorSet) -> access$400
com.nineoldandroids.animation.AnimatorSet$1 -> com.nineoldandroids.animation.AnimatorSet$1:
    boolean canceled -> canceled
    java.util.ArrayList val$nodesToStart -> val$nodesToStart
    com.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
com.nineoldandroids.animation.AnimatorSet$Builder -> com.nineoldandroids.animation.AnimatorSet$Builder:
    com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> mCurrentNode
    com.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    com.nineoldandroids.animation.AnimatorSet$Builder with(com.nineoldandroids.animation.Animator) -> with
    com.nineoldandroids.animation.AnimatorSet$Builder before(com.nineoldandroids.animation.Animator) -> before
    com.nineoldandroids.animation.AnimatorSet$Builder after(com.nineoldandroids.animation.Animator) -> after
    com.nineoldandroids.animation.AnimatorSet$Builder after(long) -> after
com.nineoldandroids.animation.AnimatorSet$Dependency -> com.nineoldandroids.animation.AnimatorSet$Dependency:
    int WITH -> WITH
    int AFTER -> AFTER
    com.nineoldandroids.animation.AnimatorSet$Node node -> node
    int rule -> rule
com.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.nineoldandroids.animation.AnimatorSet$DependencyListener:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.nineoldandroids.animation.AnimatorSet$Node mNode -> mNode
    int mRule -> mRule
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void startIfReady(com.nineoldandroids.animation.Animator) -> startIfReady
com.nineoldandroids.animation.AnimatorSet$Node -> com.nineoldandroids.animation.AnimatorSet$Node:
    com.nineoldandroids.animation.Animator animation -> animation
    java.util.ArrayList dependencies -> dependencies
    java.util.ArrayList tmpDependencies -> tmpDependencies
    java.util.ArrayList nodeDependencies -> nodeDependencies
    java.util.ArrayList nodeDependents -> nodeDependents
    boolean done -> done
    void addDependency(com.nineoldandroids.animation.AnimatorSet$Dependency) -> addDependency
    com.nineoldandroids.animation.AnimatorSet$Node clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ArgbEvaluator -> com.nineoldandroids.animation.ArgbEvaluator:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.FloatEvaluator -> com.nineoldandroids.animation.FloatEvaluator:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.FloatKeyframeSet -> com.nineoldandroids.animation.FloatKeyframeSet:
    float firstValue -> firstValue
    float lastValue -> lastValue
    float deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.nineoldandroids.animation.FloatKeyframeSet clone() -> clone
    float getFloatValue(float) -> getFloatValue
    com.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.IntEvaluator -> com.nineoldandroids.animation.IntEvaluator:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.IntKeyframeSet -> com.nineoldandroids.animation.IntKeyframeSet:
    int firstValue -> firstValue
    int lastValue -> lastValue
    int deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.nineoldandroids.animation.IntKeyframeSet clone() -> clone
    int getIntValue(float) -> getIntValue
    com.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe -> com.nineoldandroids.animation.Keyframe:
    float mFraction -> mFraction
    java.lang.Class mValueType -> mValueType
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mHasValue -> mHasValue
    com.nineoldandroids.animation.Keyframe ofInt(float,int) -> ofInt
    com.nineoldandroids.animation.Keyframe ofInt(float) -> ofInt
    com.nineoldandroids.animation.Keyframe ofFloat(float,float) -> ofFloat
    com.nineoldandroids.animation.Keyframe ofFloat(float) -> ofFloat
    com.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object) -> ofObject
    com.nineoldandroids.animation.Keyframe ofObject(float) -> ofObject
    boolean hasValue() -> hasValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    float getFraction() -> getFraction
    void setFraction(float) -> setFraction
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    java.lang.Class getType() -> getType
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.nineoldandroids.animation.Keyframe$FloatKeyframe:
    float mValue -> mValue
    float getFloatValue() -> getFloatValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> clone
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$IntKeyframe -> com.nineoldandroids.animation.Keyframe$IntKeyframe:
    int mValue -> mValue
    int getIntValue() -> getIntValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.nineoldandroids.animation.Keyframe$IntKeyframe clone() -> clone
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$ObjectKeyframe -> com.nineoldandroids.animation.Keyframe$ObjectKeyframe:
    java.lang.Object mValue -> mValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.nineoldandroids.animation.Keyframe$ObjectKeyframe clone() -> clone
    com.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.KeyframeSet -> com.nineoldandroids.animation.KeyframeSet:
    int mNumKeyframes -> mNumKeyframes
    com.nineoldandroids.animation.Keyframe mFirstKeyframe -> mFirstKeyframe
    com.nineoldandroids.animation.Keyframe mLastKeyframe -> mLastKeyframe
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mKeyframes -> mKeyframes
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    com.nineoldandroids.animation.KeyframeSet ofInt(int[]) -> ofInt
    com.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> ofFloat
    com.nineoldandroids.animation.KeyframeSet ofKeyframe(com.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    com.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[]) -> ofObject
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    com.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object getValue(float) -> getValue
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ObjectAnimator -> com.nineoldandroids.animation.ObjectAnimator:
    boolean DBG -> DBG
    java.util.Map PROXY_PROPERTIES -> PROXY_PROPERTIES
    java.lang.Object mTarget -> mTarget
    java.lang.String mPropertyName -> mPropertyName
    com.nineoldandroids.util.Property mProperty -> mProperty
    void setPropertyName(java.lang.String) -> setPropertyName
    void setProperty(com.nineoldandroids.util.Property) -> setProperty
    java.lang.String getPropertyName() -> getPropertyName
    com.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]) -> ofInt
    com.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,com.nineoldandroids.util.Property,int[]) -> ofInt
    com.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> ofFloat
    com.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,com.nineoldandroids.util.Property,float[]) -> ofFloat
    com.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,com.nineoldandroids.util.Property,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void start() -> start
    void initAnimation() -> initAnimation
    com.nineoldandroids.animation.ObjectAnimator setDuration(long) -> setDuration
    java.lang.Object getTarget() -> getTarget
    void setTarget(java.lang.Object) -> setTarget
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void animateValue(float) -> animateValue
    com.nineoldandroids.animation.ObjectAnimator clone() -> clone
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.ValueAnimator clone() -> clone
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    com.nineoldandroids.animation.Animator clone() -> clone
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PreHoneycombCompat -> com.nineoldandroids.animation.PreHoneycombCompat:
    com.nineoldandroids.util.Property ALPHA -> ALPHA
    com.nineoldandroids.util.Property PIVOT_X -> PIVOT_X
    com.nineoldandroids.util.Property PIVOT_Y -> PIVOT_Y
    com.nineoldandroids.util.Property TRANSLATION_X -> TRANSLATION_X
    com.nineoldandroids.util.Property TRANSLATION_Y -> TRANSLATION_Y
    com.nineoldandroids.util.Property ROTATION -> ROTATION
    com.nineoldandroids.util.Property ROTATION_X -> ROTATION_X
    com.nineoldandroids.util.Property ROTATION_Y -> ROTATION_Y
    com.nineoldandroids.util.Property SCALE_X -> SCALE_X
    com.nineoldandroids.util.Property SCALE_Y -> SCALE_Y
    com.nineoldandroids.util.Property SCROLL_X -> SCROLL_X
    com.nineoldandroids.util.Property SCROLL_Y -> SCROLL_Y
    com.nineoldandroids.util.Property X -> X
    com.nineoldandroids.util.Property Y -> Y
com.nineoldandroids.animation.PreHoneycombCompat$1 -> com.nineoldandroids.animation.PreHoneycombCompat$1:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$10 -> com.nineoldandroids.animation.PreHoneycombCompat$10:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$11 -> com.nineoldandroids.animation.PreHoneycombCompat$11:
    void setValue(android.view.View,int) -> setValue
    java.lang.Integer get(android.view.View) -> get
    void setValue(java.lang.Object,int) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$12 -> com.nineoldandroids.animation.PreHoneycombCompat$12:
    void setValue(android.view.View,int) -> setValue
    java.lang.Integer get(android.view.View) -> get
    void setValue(java.lang.Object,int) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$13 -> com.nineoldandroids.animation.PreHoneycombCompat$13:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$14 -> com.nineoldandroids.animation.PreHoneycombCompat$14:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$2 -> com.nineoldandroids.animation.PreHoneycombCompat$2:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$3 -> com.nineoldandroids.animation.PreHoneycombCompat$3:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$4 -> com.nineoldandroids.animation.PreHoneycombCompat$4:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$5 -> com.nineoldandroids.animation.PreHoneycombCompat$5:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$6 -> com.nineoldandroids.animation.PreHoneycombCompat$6:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$7 -> com.nineoldandroids.animation.PreHoneycombCompat$7:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$8 -> com.nineoldandroids.animation.PreHoneycombCompat$8:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PreHoneycombCompat$9 -> com.nineoldandroids.animation.PreHoneycombCompat$9:
    void setValue(android.view.View,float) -> setValue
    java.lang.Float get(android.view.View) -> get
    void setValue(java.lang.Object,float) -> setValue
    java.lang.Object get(java.lang.Object) -> get
com.nineoldandroids.animation.PropertyValuesHolder -> com.nineoldandroids.animation.PropertyValuesHolder:
    java.lang.String mPropertyName -> mPropertyName
    com.nineoldandroids.util.Property mProperty -> mProperty
    java.lang.reflect.Method mSetter -> mSetter
    java.lang.reflect.Method mGetter -> mGetter
    java.lang.Class mValueType -> mValueType
    com.nineoldandroids.animation.KeyframeSet mKeyframeSet -> mKeyframeSet
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> sIntEvaluator
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> sFloatEvaluator
    java.lang.Class[] FLOAT_VARIANTS -> FLOAT_VARIANTS
    java.lang.Class[] INTEGER_VARIANTS -> INTEGER_VARIANTS
    java.lang.Class[] DOUBLE_VARIANTS -> DOUBLE_VARIANTS
    java.util.HashMap sSetterPropertyMap -> sSetterPropertyMap
    java.util.HashMap sGetterPropertyMap -> sGetterPropertyMap
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> mPropertyMapLock
    java.lang.Object[] mTmpValueArray -> mTmpValueArray
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    java.lang.Object mAnimatedValue -> mAnimatedValue
    com.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[]) -> ofInt
    com.nineoldandroids.animation.PropertyValuesHolder ofInt(com.nineoldandroids.util.Property,int[]) -> ofInt
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> ofFloat
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(com.nineoldandroids.util.Property,float[]) -> ofFloat
    com.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.PropertyValuesHolder ofObject(com.nineoldandroids.util.Property,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    com.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(com.nineoldandroids.util.Property,com.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setKeyframes(com.nineoldandroids.animation.Keyframe[]) -> setKeyframes
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> getPropertyFunction
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> setupSetterOrGetter
    void setupSetter(java.lang.Class) -> setupSetter
    void setupGetter(java.lang.Class) -> setupGetter
    void setupSetterAndGetter(java.lang.Object) -> setupSetterAndGetter
    void setupValue(java.lang.Object,com.nineoldandroids.animation.Keyframe) -> setupValue
    void setupStartValue(java.lang.Object) -> setupStartValue
    void setupEndValue(java.lang.Object) -> setupEndValue
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void init() -> init
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void calculateValue(float) -> calculateValue
    void setPropertyName(java.lang.String) -> setPropertyName
    void setProperty(com.nineoldandroids.util.Property) -> setProperty
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> getMethodName
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$1 -> com.nineoldandroids.animation.PropertyValuesHolder$1:
com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder:
    com.nineoldandroids.util.FloatProperty mFloatProperty -> mFloatProperty
    com.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> mFloatKeyframeSet
    float mFloatAnimatedValue -> mFloatAnimatedValue
    void setFloatValues(float[]) -> setFloatValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder -> com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder:
    com.nineoldandroids.util.IntProperty mIntProperty -> mIntProperty
    com.nineoldandroids.animation.IntKeyframeSet mIntKeyframeSet -> mIntKeyframeSet
    int mIntAnimatedValue -> mIntAnimatedValue
    void setIntValues(int[]) -> setIntValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.TimeAnimator -> com.nineoldandroids.animation.TimeAnimator:
    com.nineoldandroids.animation.TimeAnimator$TimeListener mListener -> mListener
    long mPreviousTime -> mPreviousTime
    boolean animationFrame(long) -> animationFrame
    void setTimeListener(com.nineoldandroids.animation.TimeAnimator$TimeListener) -> setTimeListener
    void animateValue(float) -> animateValue
    void initAnimation() -> initAnimation
com.nineoldandroids.animation.TimeAnimator$TimeListener -> com.nineoldandroids.animation.TimeAnimator$TimeListener:
    void onTimeUpdate(com.nineoldandroids.animation.TimeAnimator,long,long) -> onTimeUpdate
com.nineoldandroids.animation.TypeEvaluator -> com.nineoldandroids.animation.TypeEvaluator:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.nineoldandroids.animation.ValueAnimator -> com.nineoldandroids.animation.ValueAnimator:
    long DEFAULT_FRAME_DELAY -> DEFAULT_FRAME_DELAY
    int ANIMATION_START -> ANIMATION_START
    int ANIMATION_FRAME -> ANIMATION_FRAME
    int STOPPED -> STOPPED
    int RUNNING -> RUNNING
    int SEEKED -> SEEKED
    long mStartTime -> mStartTime
    long mSeekTime -> mSeekTime
    java.lang.ThreadLocal sAnimationHandler -> sAnimationHandler
    java.lang.ThreadLocal sAnimations -> sAnimations
    java.lang.ThreadLocal sPendingAnimations -> sPendingAnimations
    java.lang.ThreadLocal sDelayedAnims -> sDelayedAnims
    java.lang.ThreadLocal sEndingAnims -> sEndingAnims
    java.lang.ThreadLocal sReadyAnims -> sReadyAnims
    android.view.animation.Interpolator sDefaultInterpolator -> sDefaultInterpolator
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> sIntEvaluator
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> sFloatEvaluator
    boolean mPlayingBackwards -> mPlayingBackwards
    int mCurrentIteration -> mCurrentIteration
    float mCurrentFraction -> mCurrentFraction
    boolean mStartedDelay -> mStartedDelay
    long mDelayStartTime -> mDelayStartTime
    int mPlayingState -> mPlayingState
    boolean mRunning -> mRunning
    boolean mStarted -> mStarted
    boolean mInitialized -> mInitialized
    long mDuration -> mDuration
    long mStartDelay -> mStartDelay
    long sFrameDelay -> sFrameDelay
    int mRepeatCount -> mRepeatCount
    int mRepeatMode -> mRepeatMode
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mUpdateListeners -> mUpdateListeners
    com.nineoldandroids.animation.PropertyValuesHolder[] mValues -> mValues
    java.util.HashMap mValuesMap -> mValuesMap
    int RESTART -> RESTART
    int REVERSE -> REVERSE
    int INFINITE -> INFINITE
    com.nineoldandroids.animation.ValueAnimator ofInt(int[]) -> ofInt
    com.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> ofFloat
    com.nineoldandroids.animation.ValueAnimator ofPropertyValuesHolder(com.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    com.nineoldandroids.animation.ValueAnimator ofObject(com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void setValues(com.nineoldandroids.animation.PropertyValuesHolder[]) -> setValues
    com.nineoldandroids.animation.PropertyValuesHolder[] getValues() -> getValues
    void initAnimation() -> initAnimation
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setCurrentPlayTime(long) -> setCurrentPlayTime
    long getCurrentPlayTime() -> getCurrentPlayTime
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getFrameDelay() -> getFrameDelay
    void setFrameDelay(long) -> setFrameDelay
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.Object getAnimatedValue(java.lang.String) -> getAnimatedValue
    void setRepeatCount(int) -> setRepeatCount
    int getRepeatCount() -> getRepeatCount
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    void addUpdateListener(com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> addUpdateListener
    void removeAllUpdateListeners() -> removeAllUpdateListeners
    void removeUpdateListener(com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> removeUpdateListener
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void start(boolean) -> start
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void reverse() -> reverse
    void endAnimation() -> endAnimation
    void startAnimation() -> startAnimation
    boolean delayedAnimationFrame(long) -> delayedAnimationFrame
    boolean animationFrame(long) -> animationFrame
    float getAnimatedFraction() -> getAnimatedFraction
    void animateValue(float) -> animateValue
    com.nineoldandroids.animation.ValueAnimator clone() -> clone
    int getCurrentAnimationsCount() -> getCurrentAnimationsCount
    void clearAllAnimations() -> clearAllAnimations
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.Animator clone() -> clone
    com.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.Object clone() -> clone
    java.lang.ThreadLocal access$000() -> access$000
    java.lang.ThreadLocal access$100() -> access$100
    java.lang.ThreadLocal access$200() -> access$200
    long access$300(com.nineoldandroids.animation.ValueAnimator) -> access$300
    void access$400(com.nineoldandroids.animation.ValueAnimator) -> access$400
    java.lang.ThreadLocal access$500() -> access$500
    java.lang.ThreadLocal access$600() -> access$600
    boolean access$700(com.nineoldandroids.animation.ValueAnimator,long) -> access$700
    boolean access$802(com.nineoldandroids.animation.ValueAnimator,boolean) -> access$802
    void access$900(com.nineoldandroids.animation.ValueAnimator) -> access$900
    long access$1000() -> access$1000
com.nineoldandroids.animation.ValueAnimator$1 -> com.nineoldandroids.animation.ValueAnimator$1:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$2 -> com.nineoldandroids.animation.ValueAnimator$2:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$3 -> com.nineoldandroids.animation.ValueAnimator$3:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$4 -> com.nineoldandroids.animation.ValueAnimator$4:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$5 -> com.nineoldandroids.animation.ValueAnimator$5:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.nineoldandroids.animation.ValueAnimator$AnimationHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener:
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.nineoldandroids.util.FloatProperty -> com.nineoldandroids.util.FloatProperty:
    void setValue(java.lang.Object,float) -> setValue
    void set(java.lang.Object,java.lang.Float) -> set
    void set(java.lang.Object,java.lang.Object) -> set
com.nineoldandroids.util.IntProperty -> com.nineoldandroids.util.IntProperty:
    void setValue(java.lang.Object,int) -> setValue
    void set(java.lang.Object,java.lang.Integer) -> set
    void set(java.lang.Object,java.lang.Object) -> set
com.nineoldandroids.util.NoSuchPropertyException -> com.nineoldandroids.util.NoSuchPropertyException:
com.nineoldandroids.util.Property -> com.nineoldandroids.util.Property:
    java.lang.String mName -> mName
    java.lang.Class mType -> mType
    com.nineoldandroids.util.Property of(java.lang.Class,java.lang.Class,java.lang.String) -> of
    boolean isReadOnly() -> isReadOnly
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
    java.lang.String getName() -> getName
    java.lang.Class getType() -> getType
com.nineoldandroids.util.ReflectiveProperty -> com.nineoldandroids.util.ReflectiveProperty:
    java.lang.String PREFIX_GET -> PREFIX_GET
    java.lang.String PREFIX_IS -> PREFIX_IS
    java.lang.String PREFIX_SET -> PREFIX_SET
    java.lang.reflect.Method mSetter -> mSetter
    java.lang.reflect.Method mGetter -> mGetter
    java.lang.reflect.Field mField -> mField
    boolean typesMatch(java.lang.Class,java.lang.Class) -> typesMatch
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object get(java.lang.Object) -> get
    boolean isReadOnly() -> isReadOnly
com.nineoldandroids.view.ViewHelper -> com.nineoldandroids.view.ViewHelper:
    float getAlpha(android.view.View) -> getAlpha
    void setAlpha(android.view.View,float) -> setAlpha
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    void setRotation(android.view.View,float) -> setRotation
    float getRotationX(android.view.View) -> getRotationX
    void setRotationX(android.view.View,float) -> setRotationX
    float getRotationY(android.view.View) -> getRotationY
    void setRotationY(android.view.View,float) -> setRotationY
    float getScaleX(android.view.View) -> getScaleX
    void setScaleX(android.view.View,float) -> setScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setScaleY(android.view.View,float) -> setScaleY
    float getScrollX(android.view.View) -> getScrollX
    void setScrollX(android.view.View,int) -> setScrollX
    float getScrollY(android.view.View) -> getScrollY
    void setScrollY(android.view.View,int) -> setScrollY
    float getTranslationX(android.view.View) -> getTranslationX
    void setTranslationX(android.view.View,float) -> setTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationY(android.view.View,float) -> setTranslationY
    float getX(android.view.View) -> getX
    void setX(android.view.View,float) -> setX
    float getY(android.view.View) -> getY
    void setY(android.view.View,float) -> setY
com.nineoldandroids.view.ViewHelper$Honeycomb -> com.nineoldandroids.view.ViewHelper$Honeycomb:
    float getAlpha(android.view.View) -> getAlpha
    void setAlpha(android.view.View,float) -> setAlpha
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    void setRotation(android.view.View,float) -> setRotation
    float getRotationX(android.view.View) -> getRotationX
    void setRotationX(android.view.View,float) -> setRotationX
    float getRotationY(android.view.View) -> getRotationY
    void setRotationY(android.view.View,float) -> setRotationY
    float getScaleX(android.view.View) -> getScaleX
    void setScaleX(android.view.View,float) -> setScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setScaleY(android.view.View,float) -> setScaleY
    float getScrollX(android.view.View) -> getScrollX
    void setScrollX(android.view.View,int) -> setScrollX
    float getScrollY(android.view.View) -> getScrollY
    void setScrollY(android.view.View,int) -> setScrollY
    float getTranslationX(android.view.View) -> getTranslationX
    void setTranslationX(android.view.View,float) -> setTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationY(android.view.View,float) -> setTranslationY
    float getX(android.view.View) -> getX
    void setX(android.view.View,float) -> setX
    float getY(android.view.View) -> getY
    void setY(android.view.View,float) -> setY
com.nineoldandroids.view.ViewPropertyAnimator -> com.nineoldandroids.view.ViewPropertyAnimator:
    java.util.WeakHashMap ANIMATORS -> ANIMATORS
    com.nineoldandroids.view.ViewPropertyAnimator animate(android.view.View) -> animate
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
com.nineoldandroids.view.ViewPropertyAnimatorHC -> com.nineoldandroids.view.ViewPropertyAnimatorHC:
    java.lang.ref.WeakReference mView -> mView
    long mDuration -> mDuration
    boolean mDurationSet -> mDurationSet
    long mStartDelay -> mStartDelay
    boolean mStartDelaySet -> mStartDelaySet
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mInterpolatorSet -> mInterpolatorSet
    com.nineoldandroids.animation.Animator$AnimatorListener mListener -> mListener
    com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener mAnimatorEventListener -> mAnimatorEventListener
    java.util.ArrayList mPendingAnimations -> mPendingAnimations
    int NONE -> NONE
    int TRANSLATION_X -> TRANSLATION_X
    int TRANSLATION_Y -> TRANSLATION_Y
    int SCALE_X -> SCALE_X
    int SCALE_Y -> SCALE_Y
    int ROTATION -> ROTATION
    int ROTATION_X -> ROTATION_X
    int ROTATION_Y -> ROTATION_Y
    int X -> X
    int Y -> Y
    int ALPHA -> ALPHA
    int TRANSFORM_MASK -> TRANSFORM_MASK
    java.lang.Runnable mAnimationStarter -> mAnimationStarter
    java.util.HashMap mAnimatorMap -> mAnimatorMap
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
    void startAnimation() -> startAnimation
    void animateProperty(int,float) -> animateProperty
    void animatePropertyBy(int,float) -> animatePropertyBy
    void animatePropertyBy(int,float,float) -> animatePropertyBy
    void setValue(int,float) -> setValue
    float getValue(int) -> getValue
    void access$100(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$100
    com.nineoldandroids.animation.Animator$AnimatorListener access$200(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$200
    java.util.HashMap access$300(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$300
    com.nineoldandroids.animation.Animator$AnimatorListener access$202(com.nineoldandroids.view.ViewPropertyAnimatorHC,com.nineoldandroids.animation.Animator$AnimatorListener) -> access$202
    java.lang.ref.WeakReference access$400(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$400
    void access$500(com.nineoldandroids.view.ViewPropertyAnimatorHC,int,float) -> access$500
com.nineoldandroids.view.ViewPropertyAnimatorHC$1 -> com.nineoldandroids.view.ViewPropertyAnimatorHC$1:
    com.nineoldandroids.view.ViewPropertyAnimatorHC this$0 -> this$0
    void run() -> run
com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener -> com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener:
    com.nineoldandroids.view.ViewPropertyAnimatorHC this$0 -> this$0
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.nineoldandroids.view.ViewPropertyAnimatorHC$NameValuesHolder -> com.nineoldandroids.view.ViewPropertyAnimatorHC$NameValuesHolder:
    int mNameConstant -> mNameConstant
    float mFromValue -> mFromValue
    float mDeltaValue -> mDeltaValue
com.nineoldandroids.view.ViewPropertyAnimatorHC$PropertyBundle -> com.nineoldandroids.view.ViewPropertyAnimatorHC$PropertyBundle:
    int mPropertyMask -> mPropertyMask
    java.util.ArrayList mNameValuesHolder -> mNameValuesHolder
    boolean cancel(int) -> cancel
com.nineoldandroids.view.ViewPropertyAnimatorICS -> com.nineoldandroids.view.ViewPropertyAnimatorICS:
    long RETURN_WHEN_NULL -> RETURN_WHEN_NULL
    java.lang.ref.WeakReference mNative -> mNative
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
com.nineoldandroids.view.ViewPropertyAnimatorICS$1 -> com.nineoldandroids.view.ViewPropertyAnimatorICS$1:
    com.nineoldandroids.animation.Animator$AnimatorListener val$listener -> val$listener
    com.nineoldandroids.view.ViewPropertyAnimatorICS this$0 -> this$0
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.nineoldandroids.view.ViewPropertyAnimatorPreHC -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC:
    com.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    java.lang.ref.WeakReference mView -> mView
    long mDuration -> mDuration
    boolean mDurationSet -> mDurationSet
    long mStartDelay -> mStartDelay
    boolean mStartDelaySet -> mStartDelaySet
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mInterpolatorSet -> mInterpolatorSet
    com.nineoldandroids.animation.Animator$AnimatorListener mListener -> mListener
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener mAnimatorEventListener -> mAnimatorEventListener
    java.util.ArrayList mPendingAnimations -> mPendingAnimations
    int NONE -> NONE
    int TRANSLATION_X -> TRANSLATION_X
    int TRANSLATION_Y -> TRANSLATION_Y
    int SCALE_X -> SCALE_X
    int SCALE_Y -> SCALE_Y
    int ROTATION -> ROTATION
    int ROTATION_X -> ROTATION_X
    int ROTATION_Y -> ROTATION_Y
    int X -> X
    int Y -> Y
    int ALPHA -> ALPHA
    int TRANSFORM_MASK -> TRANSFORM_MASK
    java.lang.Runnable mAnimationStarter -> mAnimationStarter
    java.util.HashMap mAnimatorMap -> mAnimatorMap
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    long getStartDelay() -> getStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    void start() -> start
    void cancel() -> cancel
    com.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    com.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    com.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    com.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
    com.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    com.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    com.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    com.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    com.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
    void startAnimation() -> startAnimation
    void animateProperty(int,float) -> animateProperty
    void animatePropertyBy(int,float) -> animatePropertyBy
    void animatePropertyBy(int,float,float) -> animatePropertyBy
    void setValue(int,float) -> setValue
    float getValue(int) -> getValue
    void access$100(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$100
    com.nineoldandroids.animation.Animator$AnimatorListener access$200(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$200
    java.util.HashMap access$300(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$300
    com.nineoldandroids.animation.Animator$AnimatorListener access$202(com.nineoldandroids.view.ViewPropertyAnimatorPreHC,com.nineoldandroids.animation.Animator$AnimatorListener) -> access$202
    java.lang.ref.WeakReference access$400(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$400
    void access$500(com.nineoldandroids.view.ViewPropertyAnimatorPreHC,int,float) -> access$500
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$1 -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC$1:
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC this$0 -> this$0
    void run() -> run
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener:
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC this$0 -> this$0
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$NameValuesHolder -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC$NameValuesHolder:
    int mNameConstant -> mNameConstant
    float mFromValue -> mFromValue
    float mDeltaValue -> mDeltaValue
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$PropertyBundle -> com.nineoldandroids.view.ViewPropertyAnimatorPreHC$PropertyBundle:
    int mPropertyMask -> mPropertyMask
    java.util.ArrayList mNameValuesHolder -> mNameValuesHolder
    boolean cancel(int) -> cancel
com.nineoldandroids.view.animation.AnimatorProxy -> com.nineoldandroids.view.animation.AnimatorProxy:
    boolean NEEDS_PROXY -> NEEDS_PROXY
    java.util.WeakHashMap PROXIES -> PROXIES
    java.lang.ref.WeakReference mView -> mView
    android.graphics.Camera mCamera -> mCamera
    boolean mHasPivot -> mHasPivot
    float mAlpha -> mAlpha
    float mPivotX -> mPivotX
    float mPivotY -> mPivotY
    float mRotationX -> mRotationX
    float mRotationY -> mRotationY
    float mRotationZ -> mRotationZ
    float mScaleX -> mScaleX
    float mScaleY -> mScaleY
    float mTranslationX -> mTranslationX
    float mTranslationY -> mTranslationY
    android.graphics.RectF mBefore -> mBefore
    android.graphics.RectF mAfter -> mAfter
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    com.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> wrap
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getPivotX() -> getPivotX
    void setPivotX(float) -> setPivotX
    float getPivotY() -> getPivotY
    void setPivotY(float) -> setPivotY
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    float getRotationX() -> getRotationX
    void setRotationX(float) -> setRotationX
    float getRotationY() -> getRotationY
    void setRotationY(float) -> setRotationY
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    void prepareForUpdate() -> prepareForUpdate
    void invalidateAfterUpdate() -> invalidateAfterUpdate
    void computeRect(android.graphics.RectF,android.view.View) -> computeRect
    void transformMatrix(android.graphics.Matrix,android.view.View) -> transformMatrix
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.nostra13.universalimageloader.cache.disc.BaseDiscCache -> com.nostra13.universalimageloader.cache.disc.BaseDiscCache:
    java.lang.String ERROR_ARG_NULL -> ERROR_ARG_NULL
    java.io.File cacheDir -> cacheDir
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> fileNameGenerator
    java.io.File get(java.lang.String) -> get
    void clear() -> clear
com.nostra13.universalimageloader.cache.disc.DiscCacheAware -> com.nostra13.universalimageloader.cache.disc.DiscCacheAware:
    void put(java.lang.String,java.io.File) -> put
    java.io.File get(java.lang.String) -> get
    void clear() -> clear
com.nostra13.universalimageloader.cache.disc.LimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.LimitedDiscCache:
    int INVALID_SIZE -> INVALID_SIZE
    java.util.concurrent.atomic.AtomicInteger cacheSize -> cacheSize
    int sizeLimit -> sizeLimit
    java.util.Map lastUsageDates -> lastUsageDates
    void calculateCacheSizeAndFillUsageMap() -> calculateCacheSizeAndFillUsageMap
    void put(java.lang.String,java.io.File) -> put
    java.io.File get(java.lang.String) -> get
    void clear() -> clear
    int removeNext() -> removeNext
    int getSize(java.io.File) -> getSize
    java.util.Map access$000(com.nostra13.universalimageloader.cache.disc.LimitedDiscCache) -> access$000
    java.util.concurrent.atomic.AtomicInteger access$100(com.nostra13.universalimageloader.cache.disc.LimitedDiscCache) -> access$100
com.nostra13.universalimageloader.cache.disc.LimitedDiscCache$1 -> com.nostra13.universalimageloader.cache.disc.LimitedDiscCache$1:
    com.nostra13.universalimageloader.cache.disc.LimitedDiscCache this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.cache.disc.impl.FileCountLimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.FileCountLimitedDiscCache:
    int getSize(java.io.File) -> getSize
com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache:
    long maxFileAge -> maxFileAge
    java.util.Map loadingDates -> loadingDates
    void put(java.lang.String,java.io.File) -> put
    java.io.File get(java.lang.String) -> get
com.nostra13.universalimageloader.cache.disc.impl.TotalSizeLimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.TotalSizeLimitedDiscCache:
    int MIN_NORMAL_CACHE_SIZE_IN_MB -> MIN_NORMAL_CACHE_SIZE_IN_MB
    int MIN_NORMAL_CACHE_SIZE -> MIN_NORMAL_CACHE_SIZE
    int getSize(java.io.File) -> getSize
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache:
    void put(java.lang.String,java.io.File) -> put
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator:
    java.lang.String HASH_ALGORITHM -> HASH_ALGORITHM
    int RADIX -> RADIX
    java.lang.String generate(java.lang.String) -> generate
    byte[] getMD5(byte[]) -> getMD5
com.nostra13.universalimageloader.cache.memory.BaseMemoryCache -> com.nostra13.universalimageloader.cache.memory.BaseMemoryCache:
    java.util.Map softMap -> softMap
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    void remove(java.lang.Object) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache:
    int MAX_NORMAL_CACHE_SIZE_IN_MB -> MAX_NORMAL_CACHE_SIZE_IN_MB
    int MAX_NORMAL_CACHE_SIZE -> MAX_NORMAL_CACHE_SIZE
    int sizeLimit -> sizeLimit
    java.util.concurrent.atomic.AtomicInteger cacheSize -> cacheSize
    java.util.List hardCache -> hardCache
    boolean put(java.lang.Object,java.lang.Object) -> put
    void remove(java.lang.Object) -> remove
    void clear() -> clear
    int getSizeLimit() -> getSizeLimit
    int getSize(java.lang.Object) -> getSize
    java.lang.Object removeNext() -> removeNext
com.nostra13.universalimageloader.cache.memory.MemoryCacheAware -> com.nostra13.universalimageloader.cache.memory.MemoryCacheAware:
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void remove(java.lang.Object) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache:
    java.util.List queue -> queue
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware cache -> cache
    java.util.Comparator keyComparator -> keyComparator
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Collection keys() -> keys
com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache:
    int INITIAL_CAPACITY -> INITIAL_CAPACITY
    float LOAD_FACTOR -> LOAD_FACTOR
    java.util.Map lruCache -> lruCache
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
    java.lang.Object get(java.lang.Object) -> get
com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache:
    java.util.Map valueSizes -> valueSizes
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware cache -> cache
    long maxAge -> maxAge
    java.util.Map loadingDates -> loadingDates
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void remove(java.lang.Object) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache:
    java.util.LinkedHashMap map -> map
    int maxSize -> maxSize
    int size -> size
    android.graphics.Bitmap get(java.lang.String) -> get
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void trimToSize(int) -> trimToSize
    void remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    java.lang.String toString() -> toString
    void remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache:
    java.util.Map usingCounts -> usingCounts
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
    java.lang.Object get(java.lang.Object) -> get
com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache:
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory:
    java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> createExecutor
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> createFileNameGenerator
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware createDiscCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,int,int) -> createDiscCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware createReserveDiscCache(java.io.File) -> createReserveDiscCache
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware createMemoryCache(int) -> createMemoryCache
    com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> createImageDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder createImageDecoder(boolean) -> createImageDecoder
    com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> createBitmapDisplayer
    java.util.concurrent.ThreadFactory createThreadFactory(int) -> createThreadFactory
com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> poolNumber
    java.lang.ThreadGroup group -> group
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    java.lang.String namePrefix -> namePrefix
    int threadPriority -> threadPriority
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.nostra13.universalimageloader.core.DisplayBitmapTask:
    java.lang.String LOG_DISPLAY_IMAGE_IN_IMAGEAWARE -> LOG_DISPLAY_IMAGE_IN_IMAGEAWARE
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    android.graphics.Bitmap bitmap -> bitmap
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    boolean loggingEnabled -> loggingEnabled
    void run() -> run
    boolean isViewWasReused() -> isViewWasReused
    void setLoggingEnabled(boolean) -> setLoggingEnabled
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.nostra13.universalimageloader.core.DisplayImageOptions:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisc -> cacheOnDisc
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    boolean shouldShowImageOnLoading() -> shouldShowImageOnLoading
    boolean shouldShowImageForEmptyUri() -> shouldShowImageForEmptyUri
    boolean shouldShowImageOnFail() -> shouldShowImageOnFail
    boolean shouldPreProcess() -> shouldPreProcess
    boolean shouldPostProcess() -> shouldPostProcess
    boolean shouldDelayBeforeLoading() -> shouldDelayBeforeLoading
    android.graphics.drawable.Drawable getImageOnLoading(android.content.res.Resources) -> getImageOnLoading
    android.graphics.drawable.Drawable getImageForEmptyUri(android.content.res.Resources) -> getImageForEmptyUri
    android.graphics.drawable.Drawable getImageOnFail(android.content.res.Resources) -> getImageOnFail
    boolean isResetViewBeforeLoading() -> isResetViewBeforeLoading
    boolean isCacheInMemory() -> isCacheInMemory
    boolean isCacheOnDisc() -> isCacheOnDisc
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
    int getDelayBeforeLoading() -> getDelayBeforeLoading
    boolean isConsiderExifParams() -> isConsiderExifParams
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> getPreProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> getPostProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> getDisplayer
    android.os.Handler getHandler() -> getHandler
    boolean isSyncLoading() -> isSyncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> createSimple
    int access$1900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1900
    int access$2000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2000
    int access$2100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2100
    android.graphics.drawable.Drawable access$2200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2200
    android.graphics.drawable.Drawable access$2300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2300
    android.graphics.drawable.Drawable access$2400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2400
    boolean access$2500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2500
    boolean access$2600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2600
    boolean access$2700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2700
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$2800(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2800
    android.graphics.BitmapFactory$Options access$2900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2900
    int access$3000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3000
    boolean access$3100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3100
    java.lang.Object access$3200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3200
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3400
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$3500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3500
    android.os.Handler access$3600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3600
    boolean access$3700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3700
com.nostra13.universalimageloader.core.DisplayImageOptions$1 -> com.nostra13.universalimageloader.core.DisplayImageOptions$1:
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.nostra13.universalimageloader.core.DisplayImageOptions$Builder:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisc -> cacheOnDisc
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showStubImage(int) -> showStubImage
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(int) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(android.graphics.drawable.Drawable) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(int) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(android.graphics.drawable.Drawable) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(int) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(android.graphics.drawable.Drawable) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading() -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading(boolean) -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory() -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory(boolean) -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc() -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc(boolean) -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType) -> imageScaleType
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder bitmapConfig(android.graphics.Bitmap$Config) -> bitmapConfig
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder decodingOptions(android.graphics.BitmapFactory$Options) -> decodingOptions
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder delayBeforeLoading(int) -> delayBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder extraForDownloader(java.lang.Object) -> extraForDownloader
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder considerExifParams(boolean) -> considerExifParams
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder preProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> preProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder postProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> postProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer) -> displayer
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder syncLoading(boolean) -> syncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder handler(android.os.Handler) -> handler
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions) -> cloneFrom
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> build
    int access$000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$200
    android.graphics.drawable.Drawable access$300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$300
    android.graphics.drawable.Drawable access$400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$400
    android.graphics.drawable.Drawable access$500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$500
    boolean access$600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$600
    boolean access$700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$700
    boolean access$800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$800
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$900(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$900
    android.graphics.BitmapFactory$Options access$1000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1000
    int access$1100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1100
    boolean access$1200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1200
    java.lang.Object access$1300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1400
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1500
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$1600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1600
    android.os.Handler access$1700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1700
    boolean access$1800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1800
com.nostra13.universalimageloader.core.ImageLoader -> com.nostra13.universalimageloader.core.ImageLoader:
    java.lang.String TAG -> TAG
    java.lang.String LOG_INIT_CONFIG -> LOG_INIT_CONFIG
    java.lang.String LOG_DESTROY -> LOG_DESTROY
    java.lang.String LOG_LOAD_IMAGE_FROM_MEMORY_CACHE -> LOG_LOAD_IMAGE_FROM_MEMORY_CACHE
    java.lang.String WARNING_RE_INIT_CONFIG -> WARNING_RE_INIT_CONFIG
    java.lang.String ERROR_WRONG_ARGUMENTS -> ERROR_WRONG_ARGUMENTS
    java.lang.String ERROR_NOT_INIT -> ERROR_NOT_INIT
    java.lang.String ERROR_INIT_CONFIG_WITH_NULL -> ERROR_INIT_CONFIG_WITH_NULL
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener emptyListener -> emptyListener
    com.nostra13.universalimageloader.core.ImageLoader instance -> instance
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> getInstance
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> init
    boolean isInited() -> isInited
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener,com.nostra13.universalimageloader.core.assist.ImageLoadingProgressListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener,com.nostra13.universalimageloader.core.assist.ImageLoadingProgressListener) -> displayImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener,com.nostra13.universalimageloader.core.assist.ImageLoadingProgressListener) -> loadImage
    android.graphics.Bitmap loadImageSync(java.lang.String) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    void checkConfiguration() -> checkConfiguration
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware getMemoryCache() -> getMemoryCache
    void clearMemoryCache() -> clearMemoryCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware getDiscCache() -> getDiscCache
    void clearDiscCache() -> clearDiscCache
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    java.lang.String getLoadingUriForView(android.widget.ImageView) -> getLoadingUriForView
    void cancelDisplayTask(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTask
    void cancelDisplayTask(android.widget.ImageView) -> cancelDisplayTask
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void destroy() -> destroy
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration:
    android.content.res.Resources resources -> resources
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiscCache -> maxImageWidthForDiscCache
    int maxImageHeightForDiscCache -> maxImageHeightForDiscCache
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> imageCompressFormatForDiscCache
    int imageQualityForDiscCache -> imageQualityForDiscCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiscCache -> processorForDiscCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> discCache
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    boolean writeLogs -> writeLogs
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware reserveDiscCache -> reserveDiscCache
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration createDefault(android.content.Context) -> createDefault
    com.nostra13.universalimageloader.core.assist.ImageSize getMaxImageSize() -> getMaxImageSize
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1 -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1:
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder:
    java.lang.String WARNING_OVERLAP_DISC_CACHE_PARAMS -> WARNING_OVERLAP_DISC_CACHE_PARAMS
    java.lang.String WARNING_OVERLAP_DISC_CACHE_NAME_GENERATOR -> WARNING_OVERLAP_DISC_CACHE_NAME_GENERATOR
    java.lang.String WARNING_OVERLAP_MEMORY_CACHE -> WARNING_OVERLAP_MEMORY_CACHE
    java.lang.String WARNING_OVERLAP_EXECUTOR -> WARNING_OVERLAP_EXECUTOR
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    int DEFAULT_THREAD_PRIORITY -> DEFAULT_THREAD_PRIORITY
    com.nostra13.universalimageloader.core.assist.QueueProcessingType DEFAULT_TASK_PROCESSING_TYPE -> DEFAULT_TASK_PROCESSING_TYPE
    android.content.Context context -> context
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiscCache -> maxImageWidthForDiscCache
    int maxImageHeightForDiscCache -> maxImageHeightForDiscCache
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> imageCompressFormatForDiscCache
    int imageQualityForDiscCache -> imageQualityForDiscCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiscCache -> processorForDiscCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    boolean denyCacheImageMultipleSizesInMemory -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    int memoryCacheSize -> memoryCacheSize
    int discCacheSize -> discCacheSize
    int discCacheFileCount -> discCacheFileCount
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> discCache
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator discCacheFileNameGenerator -> discCacheFileNameGenerator
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    boolean writeLogs -> writeLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheExtraOptions(int,int) -> memoryCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheExtraOptions(int,int,android.graphics.Bitmap$CompressFormat,int,com.nostra13.universalimageloader.core.process.BitmapProcessor) -> discCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutor(java.util.concurrent.Executor) -> taskExecutor
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutorForCachedImages(java.util.concurrent.Executor) -> taskExecutorForCachedImages
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPoolSize(int) -> threadPoolSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> threadPriority
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> tasksProcessingOrder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSize(int) -> memoryCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSizePercentage(int) -> memoryCacheSizePercentage
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCache(com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> memoryCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheSize(int) -> discCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileCount(int) -> discCacheFileCount
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> discCacheFileNameGenerator
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDownloader(com.nostra13.universalimageloader.core.download.ImageDownloader) -> imageDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDecoder(com.nostra13.universalimageloader.core.decode.ImageDecoder) -> imageDecoder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCache(com.nostra13.universalimageloader.cache.disc.DiscCacheAware) -> discCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder defaultDisplayImageOptions(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defaultDisplayImageOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder writeDebugLogs() -> writeDebugLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> build
    void initEmptyFieldsWithDefaultValues() -> initEmptyFieldsWithDefaultValues
    android.content.Context access$000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$200
    int access$300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$300
    int access$400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$400
    android.graphics.Bitmap$CompressFormat access$500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$500
    int access$600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$600
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$700
    java.util.concurrent.Executor access$800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$800
    java.util.concurrent.Executor access$900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$900
    int access$1000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1000
    int access$1100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1100
    com.nostra13.universalimageloader.core.assist.QueueProcessingType access$1200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1200
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware access$1300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1300
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware access$1400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1400
    com.nostra13.universalimageloader.core.DisplayImageOptions access$1500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1500
    boolean access$1600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1600
    com.nostra13.universalimageloader.core.download.ImageDownloader access$1700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1700
    com.nostra13.universalimageloader.core.decode.ImageDecoder access$1800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1800
    boolean access$1900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1900
    boolean access$2000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$2000
com.nostra13.universalimageloader.core.ImageLoaderEngine -> com.nostra13.universalimageloader.core.ImageLoaderEngine:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    java.util.concurrent.ExecutorService taskDistributor -> taskDistributor
    java.util.Map cacheKeysForImageAwares -> cacheKeysForImageAwares
    java.util.Map uriLocks -> uriLocks
    java.util.concurrent.atomic.AtomicBoolean paused -> paused
    java.util.concurrent.atomic.AtomicBoolean networkDenied -> networkDenied
    java.util.concurrent.atomic.AtomicBoolean slowNetwork -> slowNetwork
    java.lang.Object pauseLock -> pauseLock
    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> submit
    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> submit
    void initExecutorsIfNeed() -> initExecutorsIfNeed
    java.util.concurrent.Executor createTaskExecutor() -> createTaskExecutor
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    void prepareDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware,java.lang.String) -> prepareDisplayTaskFor
    void cancelDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTaskFor
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> getLockForUri
    java.util.concurrent.atomic.AtomicBoolean getPause() -> getPause
    java.lang.Object getPauseLock() -> getPauseLock
    boolean isNetworkDenied() -> isNetworkDenied
    boolean isSlowNetwork() -> isSlowNetwork
    void access$000(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$000
    java.util.concurrent.Executor access$100(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$100
    java.util.concurrent.Executor access$200(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$200
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> com.nostra13.universalimageloader.core.ImageLoaderEngine$1:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask val$task -> val$task
    com.nostra13.universalimageloader.core.ImageLoaderEngine this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.nostra13.universalimageloader.core.ImageLoadingInfo:
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.assist.ImageLoadingProgressListener progressListener -> progressListener
    java.util.concurrent.locks.ReentrantLock loadFromUriLock -> loadFromUriLock
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask:
    java.lang.String LOG_WAITING_FOR_RESUME -> LOG_WAITING_FOR_RESUME
    java.lang.String LOG_RESUME_AFTER_PAUSE -> LOG_RESUME_AFTER_PAUSE
    java.lang.String LOG_DELAY_BEFORE_LOADING -> LOG_DELAY_BEFORE_LOADING
    java.lang.String LOG_START_DISPLAY_IMAGE_TASK -> LOG_START_DISPLAY_IMAGE_TASK
    java.lang.String LOG_WAITING_FOR_IMAGE_LOADED -> LOG_WAITING_FOR_IMAGE_LOADED
    java.lang.String LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING -> LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING
    java.lang.String LOG_LOAD_IMAGE_FROM_NETWORK -> LOG_LOAD_IMAGE_FROM_NETWORK
    java.lang.String LOG_LOAD_IMAGE_FROM_DISC_CACHE -> LOG_LOAD_IMAGE_FROM_DISC_CACHE
    java.lang.String LOG_RESIZE_CACHED_IMAGE_FILE -> LOG_RESIZE_CACHED_IMAGE_FILE
    java.lang.String LOG_PREPROCESS_IMAGE -> LOG_PREPROCESS_IMAGE
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    java.lang.String LOG_CACHE_IMAGE_IN_MEMORY -> LOG_CACHE_IMAGE_IN_MEMORY
    java.lang.String LOG_CACHE_IMAGE_ON_DISC -> LOG_CACHE_IMAGE_ON_DISC
    java.lang.String LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISC -> LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISC
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    java.lang.String LOG_TASK_INTERRUPTED -> LOG_TASK_INTERRUPTED
    java.lang.String ERROR_PRE_PROCESSOR_NULL -> ERROR_PRE_PROCESSOR_NULL
    java.lang.String ERROR_POST_PROCESSOR_NULL -> ERROR_POST_PROCESSOR_NULL
    java.lang.String ERROR_PROCESSOR_FOR_DISC_CACHE_NULL -> ERROR_PROCESSOR_FOR_DISC_CACHE_NULL
    int BUFFER_SIZE -> BUFFER_SIZE
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    boolean writeLogs -> writeLogs
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.assist.ImageLoadingProgressListener progressListener -> progressListener
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    void run() -> run
    boolean waitIfPaused() -> waitIfPaused
    boolean delayIfNeed() -> delayIfNeed
    android.graphics.Bitmap tryLoadBitmap() -> tryLoadBitmap
    java.io.File getImageFileInDiscCache() -> getImageFileInDiscCache
    android.graphics.Bitmap decodeImage(java.lang.String) -> decodeImage
    boolean tryCacheImageOnDisc(java.io.File) -> tryCacheImageOnDisc
    boolean downloadImage(java.io.File) -> downloadImage
    boolean resizeAndSaveImage(java.io.File,int,int) -> resizeAndSaveImage
    boolean onBytesCopied(int,int) -> onBytesCopied
    boolean fireProgressEvent(int,int) -> fireProgressEvent
    void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> fireFailEvent
    void fireCancelEvent() -> fireCancelEvent
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    void checkTaskNotActual() -> checkTaskNotActual
    boolean isTaskNotActual() -> isTaskNotActual
    void checkViewCollected() -> checkViewCollected
    boolean isViewCollected() -> isViewCollected
    void checkViewReused() -> checkViewReused
    boolean isViewReused() -> isViewReused
    void checkTaskInterrupted() -> checkTaskInterrupted
    boolean isTaskInterrupted() -> isTaskInterrupted
    java.lang.String getLoadingUri() -> getLoadingUri
    void log(java.lang.String) -> log
    void log(java.lang.String,java.lang.Object[]) -> log
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration access$000(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> access$000
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1:
    int val$current -> val$current
    int val$total -> val$total
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType val$failType -> val$failType
    java.lang.Throwable val$failCause -> val$failCause
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask:
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    android.graphics.Bitmap bitmap -> bitmap
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    void run() -> run
com.nostra13.universalimageloader.core.assist.ContentLengthInputStream -> com.nostra13.universalimageloader.core.assist.ContentLengthInputStream:
    java.io.InputStream stream -> stream
    long length -> length
    long pos -> pos
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.DiscCacheUtil -> com.nostra13.universalimageloader.core.assist.DiscCacheUtil:
    java.io.File findInCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiscCacheAware) -> findInCache
    boolean removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiscCacheAware) -> removeFromCache
com.nostra13.universalimageloader.core.assist.FailReason -> com.nostra13.universalimageloader.core.assist.FailReason:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType type -> type
    java.lang.Throwable cause -> cause
    com.nostra13.universalimageloader.core.assist.FailReason$FailType getType() -> getType
    java.lang.Throwable getCause() -> getCause
com.nostra13.universalimageloader.core.assist.FailReason$FailType -> com.nostra13.universalimageloader.core.assist.FailReason$FailType:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType IO_ERROR -> IO_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType DECODING_ERROR -> DECODING_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType NETWORK_DENIED -> NETWORK_DENIED
    com.nostra13.universalimageloader.core.assist.FailReason$FailType OUT_OF_MEMORY -> OUT_OF_MEMORY
    com.nostra13.universalimageloader.core.assist.FailReason$FailType UNKNOWN -> UNKNOWN
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values() -> values
    com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.nostra13.universalimageloader.core.assist.FlushedInputStream:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageLoadingListener -> com.nostra13.universalimageloader.core.assist.ImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.assist.ImageLoadingProgressListener -> com.nostra13.universalimageloader.core.assist.ImageLoadingProgressListener:
    void onProgressUpdate(java.lang.String,android.view.View,int,int) -> onProgressUpdate
com.nostra13.universalimageloader.core.assist.ImageScaleType -> com.nostra13.universalimageloader.core.assist.ImageScaleType:
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE -> NONE
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_POWER_OF_2 -> IN_SAMPLE_POWER_OF_2
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT -> IN_SAMPLE_INT
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY -> EXACTLY
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY_STRETCHED -> EXACTLY_STRETCHED
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ImageSize -> com.nostra13.universalimageloader.core.assist.ImageSize:
    int TO_STRING_MAX_LENGHT -> TO_STRING_MAX_LENGHT
    java.lang.String SEPARATOR -> SEPARATOR
    int width -> width
    int height -> height
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ImageSize scaleDown(int) -> scaleDown
    com.nostra13.universalimageloader.core.assist.ImageSize scale(float) -> scale
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.LoadedFrom -> com.nostra13.universalimageloader.core.assist.LoadedFrom:
    com.nostra13.universalimageloader.core.assist.LoadedFrom NETWORK -> NETWORK
    com.nostra13.universalimageloader.core.assist.LoadedFrom DISC_CACHE -> DISC_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom MEMORY_CACHE -> MEMORY_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] values() -> values
    com.nostra13.universalimageloader.core.assist.LoadedFrom valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.MemoryCacheUtil -> com.nostra13.universalimageloader.core.assist.MemoryCacheUtil:
    java.lang.String URI_AND_SIZE_SEPARATOR -> URI_AND_SIZE_SEPARATOR
    java.lang.String WIDTH_AND_HEIGHT_SEPARATOR -> WIDTH_AND_HEIGHT_SEPARATOR
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> generateKey
    java.util.Comparator createFuzzyKeyComparator() -> createFuzzyKeyComparator
    java.util.List findCachedBitmapsForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> findCachedBitmapsForImageUri
    java.util.List findCacheKeysForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> findCacheKeysForImageUri
    void removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> removeFromCache
com.nostra13.universalimageloader.core.assist.MemoryCacheUtil$1 -> com.nostra13.universalimageloader.core.assist.MemoryCacheUtil$1:
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.core.assist.PauseOnScrollListener -> com.nostra13.universalimageloader.core.assist.PauseOnScrollListener:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> com.nostra13.universalimageloader.core.assist.QueueProcessingType:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType FIFO -> FIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO -> LIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
    com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.SimpleImageLoadingListener -> com.nostra13.universalimageloader.core.assist.SimpleImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.assist.SyncImageLoadingListener -> com.nostra13.universalimageloader.core.assist.SyncImageLoadingListener:
    android.graphics.Bitmap loadedImage -> loadedImage
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    android.graphics.Bitmap getLoadedBitmap() -> getLoadedBitmap
com.nostra13.universalimageloader.core.assist.ViewScaleType -> com.nostra13.universalimageloader.core.assist.ViewScaleType:
    com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE -> FIT_INSIDE
    com.nostra13.universalimageloader.core.assist.ViewScaleType CROP -> CROP
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> fromImageView
com.nostra13.universalimageloader.core.assist.ViewScaleType$1 -> com.nostra13.universalimageloader.core.assist.ViewScaleType$1:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
com.nostra13.universalimageloader.core.assist.deque.BlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.BlockingDeque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    void push(java.lang.Object) -> push
com.nostra13.universalimageloader.core.assist.deque.Deque -> com.nostra13.universalimageloader.core.assist.deque.Deque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node first -> first
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node last -> last
    int count -> count
    int capacity -> capacity
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.Condition notFull -> notFull
    boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkFirst
    boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkLast
    java.lang.Object unlinkFirst() -> unlinkFirst
    java.lang.Object unlinkLast() -> unlinkLast
    void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> unlink
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    int remainingCapacity() -> remainingCapacity
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1 -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1:
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
    java.lang.Object nextItem -> nextItem
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node lastRet -> lastRet
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> succ
    void advance() -> advance
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node:
    java.lang.Object item -> item
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node prev -> prev
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
com.nostra13.universalimageloader.core.decode.BaseImageDecoder -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder:
    java.lang.String LOG_SABSAMPLE_IMAGE -> LOG_SABSAMPLE_IMAGE
    java.lang.String LOG_SCALE_IMAGE -> LOG_SCALE_IMAGE
    java.lang.String LOG_ROTATE_IMAGE -> LOG_ROTATE_IMAGE
    java.lang.String LOG_FLIP_IMAGE -> LOG_FLIP_IMAGE
    java.lang.String ERROR_CANT_DECODE_IMAGE -> ERROR_CANT_DECODE_IMAGE
    boolean loggingEnabled -> loggingEnabled
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
    java.io.InputStream getImageStream(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> getImageStream
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo defineImageSizeAndRotation(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> defineImageSizeAndRotation
    boolean canDefineExifParams(java.lang.String,java.lang.String) -> canDefineExifParams
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String) -> defineExifOrientation
    android.graphics.BitmapFactory$Options prepareDecodingOptions(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> prepareDecodingOptions
    java.io.InputStream resetStream(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> resetStream
    android.graphics.Bitmap considerExactScaleAndOrientaiton(android.graphics.Bitmap,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo,int,boolean) -> considerExactScaleAndOrientaiton
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo:
    int rotation -> rotation
    boolean flipHorizontal -> flipHorizontal
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo:
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo exif -> exif
com.nostra13.universalimageloader.core.decode.ImageDecoder -> com.nostra13.universalimageloader.core.decode.ImageDecoder:
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
com.nostra13.universalimageloader.core.decode.ImageDecodingInfo -> com.nostra13.universalimageloader.core.decode.ImageDecodingInfo:
    java.lang.String imageKey -> imageKey
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType -> viewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    java.lang.Object extraForDownloader -> extraForDownloader
    boolean considerExifParams -> considerExifParams
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions
    void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions10
    void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions11
    java.lang.String getImageKey() -> getImageKey
    java.lang.String getImageUri() -> getImageUri
    com.nostra13.universalimageloader.core.assist.ImageSize getTargetSize() -> getTargetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType getViewScaleType() -> getViewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    boolean shouldConsiderExifParams() -> shouldConsiderExifParams
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
com.nostra13.universalimageloader.core.display.BitmapDisplayer -> com.nostra13.universalimageloader.core.display.BitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer -> com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer:
    int durationMillis -> durationMillis
    boolean animateFromNetwork -> animateFromNetwork
    boolean animateFromDisc -> animateFromDisc
    boolean animateFromMemory -> animateFromMemory
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
    void animate(android.view.View,int) -> animate
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer:
    int cornerRadius -> cornerRadius
    int margin -> margin
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable:
    float cornerRadius -> cornerRadius
    int margin -> margin
    android.graphics.RectF mRect -> mRect
    android.graphics.BitmapShader bitmapShader -> bitmapShader
    android.graphics.Paint paint -> paint
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer$RoundedVignetteDrawable -> com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer$RoundedVignetteDrawable:
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> com.nostra13.universalimageloader.core.download.BaseImageDownloader:
    int DEFAULT_HTTP_CONNECT_TIMEOUT -> DEFAULT_HTTP_CONNECT_TIMEOUT
    int DEFAULT_HTTP_READ_TIMEOUT -> DEFAULT_HTTP_READ_TIMEOUT
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String ALLOWED_URI_CHARS -> ALLOWED_URI_CHARS
    int MAX_REDIRECT_COUNT -> MAX_REDIRECT_COUNT
    java.lang.String ERROR_UNSUPPORTED_SCHEME -> ERROR_UNSUPPORTED_SCHEME
    android.content.Context context -> context
    int connectTimeout -> connectTimeout
    int readTimeout -> readTimeout
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
    java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object) -> createConnection
    java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object) -> getStreamFromFile
    java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object) -> getStreamFromContent
    java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object) -> getStreamFromAssets
    java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object) -> getStreamFromDrawable
    java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object) -> getStreamFromOtherSource
com.nostra13.universalimageloader.core.download.BaseImageDownloader$1 -> com.nostra13.universalimageloader.core.download.BaseImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.download.HttpClientImageDownloader -> com.nostra13.universalimageloader.core.download.HttpClientImageDownloader:
    org.apache.http.client.HttpClient httpClient -> httpClient
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
com.nostra13.universalimageloader.core.download.ImageDownloader -> com.nostra13.universalimageloader.core.download.ImageDownloader:
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme -> com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme:
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTP -> HTTP
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTPS -> HTTPS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE -> FILE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme CONTENT -> CONTENT
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS -> ASSETS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE -> DRAWABLE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme UNKNOWN -> UNKNOWN
    java.lang.String scheme -> scheme
    java.lang.String uriPrefix -> uriPrefix
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> ofUri
    boolean belongsTo(java.lang.String) -> belongsTo
    java.lang.String wrap(java.lang.String) -> wrap
    java.lang.String crop(java.lang.String) -> crop
com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader -> com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader$1 -> com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader -> com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader$1 -> com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.imageaware.ImageAware -> com.nostra13.universalimageloader.core.imageaware.ImageAware:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ImageNonViewAware -> com.nostra13.universalimageloader.core.imageaware.ImageNonViewAware:
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.assist.ViewScaleType scaleType -> scaleType
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ImageViewAware -> com.nostra13.universalimageloader.core.imageaware.ImageViewAware:
    java.lang.ref.Reference imageViewRef -> imageViewRef
    boolean checkActualViewSize -> checkActualViewSize
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.widget.ImageView getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    android.view.View getWrappedView() -> getWrappedView
com.nostra13.universalimageloader.core.process.BitmapProcessor -> com.nostra13.universalimageloader.core.process.BitmapProcessor:
    android.graphics.Bitmap process(android.graphics.Bitmap) -> process
com.nostra13.universalimageloader.utils.ImageSizeUtils -> com.nostra13.universalimageloader.utils.ImageSizeUtils:
    int DEFAULT_MAX_BITMAP_DIMENSION -> DEFAULT_MAX_BITMAP_DIMENSION
    com.nostra13.universalimageloader.core.assist.ImageSize maxBitmapSize -> maxBitmapSize
    com.nostra13.universalimageloader.core.assist.ImageSize defineTargetSizeForView(com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.ImageSize) -> defineTargetSizeForView
    int computeImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageSampleSize
    int computeMinImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize) -> computeMinImageSampleSize
    float computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageScale
com.nostra13.universalimageloader.utils.ImageSizeUtils$1 -> com.nostra13.universalimageloader.utils.ImageSizeUtils$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType -> $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType
com.nostra13.universalimageloader.utils.IoUtils -> com.nostra13.universalimageloader.utils.IoUtils:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int CONTINUE_LOADING_PERCENTAGE -> CONTINUE_LOADING_PERCENTAGE
    boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> copyStream
    boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int) -> copyStream
    boolean shouldStopLoading(com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int,int) -> shouldStopLoading
    void closeSilently(java.io.Closeable) -> closeSilently
com.nostra13.universalimageloader.utils.IoUtils$CopyListener -> com.nostra13.universalimageloader.utils.IoUtils$CopyListener:
    boolean onBytesCopied(int,int) -> onBytesCopied
com.nostra13.universalimageloader.utils.L -> com.nostra13.universalimageloader.utils.L:
    java.lang.String LOG_FORMAT -> LOG_FORMAT
    boolean DISABLED -> DISABLED
    void enableLogging() -> enableLogging
    void disableLogging() -> disableLogging
    void d(java.lang.String,java.lang.Object[]) -> d
    void i(java.lang.String,java.lang.Object[]) -> i
    void w(java.lang.String,java.lang.Object[]) -> w
    void e(java.lang.Throwable) -> e
    void e(java.lang.String,java.lang.Object[]) -> e
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
com.nostra13.universalimageloader.utils.StorageUtils -> com.nostra13.universalimageloader.utils.StorageUtils:
    java.lang.String EXTERNAL_STORAGE_PERMISSION -> EXTERNAL_STORAGE_PERMISSION
    java.lang.String INDIVIDUAL_DIR_NAME -> INDIVIDUAL_DIR_NAME
    java.io.File getCacheDirectory(android.content.Context) -> getCacheDirectory
    java.io.File getCacheDirectory(android.content.Context,boolean) -> getCacheDirectory
    java.io.File getIndividualCacheDirectory(android.content.Context) -> getIndividualCacheDirectory
    java.io.File getOwnCacheDirectory(android.content.Context,java.lang.String) -> getOwnCacheDirectory
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    boolean hasExternalStoragePermission(android.content.Context) -> hasExternalStoragePermission
com.novell.sasl.client.DigestChallenge -> com.novell.sasl.client.DigestChallenge:
    int QOP_AUTH -> QOP_AUTH
    int QOP_AUTH_INT -> QOP_AUTH_INT
    int QOP_AUTH_CONF -> QOP_AUTH_CONF
    int QOP_UNRECOGNIZED -> QOP_UNRECOGNIZED
    java.util.ArrayList m_realms -> a
    java.lang.String m_nonce -> b
    int m_qop -> c
    boolean m_staleFlag -> d
    int m_maxBuf -> e
    java.lang.String m_characterSet -> f
    java.lang.String m_algorithm -> g
    int m_cipherOptions -> h
    void checkSemantics(com.novell.sasl.client.DirectiveList) -> a
    void handleNonce(com.novell.sasl.client.ParsedDirective) -> a
    void handleRealm(com.novell.sasl.client.ParsedDirective) -> b
    void handleQop(com.novell.sasl.client.ParsedDirective) -> c
    void handleMaxbuf(com.novell.sasl.client.ParsedDirective) -> d
    void handleCharset(com.novell.sasl.client.ParsedDirective) -> e
    void handleAlgorithm(com.novell.sasl.client.ParsedDirective) -> f
    void handleCipher(com.novell.sasl.client.ParsedDirective) -> g
    void handleStale(com.novell.sasl.client.ParsedDirective) -> h
    java.util.ArrayList getRealms() -> getRealms
    java.lang.String getNonce() -> getNonce
    int getQop() -> getQop
    boolean getStaleFlag() -> getStaleFlag
    int getMaxBuf() -> getMaxBuf
    java.lang.String getCharacterSet() -> getCharacterSet
    java.lang.String getAlgorithm() -> getAlgorithm
    int getCipherOptions() -> getCipherOptions
com.novell.sasl.client.DigestMD5SaslClient -> com.novell.sasl.client.a:
    java.lang.String m_authorizationId -> a
    java.lang.String m_protocol -> b
    java.lang.String m_serverName -> c
    java.util.Map m_props -> d
    org.apache.harmony.javax.security.auth.callback.CallbackHandler m_cbh -> e
    int m_state -> f
    java.lang.String m_qopValue -> g
    char[] m_HA1 -> h
    java.lang.String m_digestURI -> i
    com.novell.sasl.client.DigestChallenge m_dc -> j
    java.lang.String m_clientNonce -> k
    java.lang.String m_realm -> l
    java.lang.String m_name -> m
    org.apache.harmony.javax.security.sasl.SaslClient getClient(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    void dispose() -> dispose
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    char[] convertToHex(byte[]) -> a
    char[] DigestCalcHA1(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    char[] DigestCalcResponse(char[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String createDigestResponse(byte[]) -> c
    boolean checkServerResponseAuth(byte[]) -> b
    char getHexChar(byte) -> a
    java.lang.String getClientNonce() -> a
    java.lang.String getMechanismName() -> getMechanismName
com.novell.sasl.client.DirectiveList -> com.novell.sasl.client.b:
    int m_curPos -> a
    int m_errorPos -> b
    java.lang.String m_directives -> c
    int m_state -> d
    java.util.ArrayList m_directiveList -> e
    int m_scanStart -> f
    void parseDirectives() -> a
    boolean isValidTokenChar(char) -> a
    boolean isWhiteSpace(char) -> b
    void addDirective(java.lang.String,boolean) -> a
    java.util.Iterator getIterator() -> b
com.novell.sasl.client.ExternalSaslClient -> com.novell.sasl.client.c:
    java.lang.String m_authorizationId -> a
    java.lang.String m_protocol -> b
    java.lang.String m_serverName -> c
    java.util.Map m_props -> d
    org.apache.harmony.javax.security.auth.callback.CallbackHandler m_cbh -> e
    int m_state -> f
    org.apache.harmony.javax.security.sasl.SaslClient getClient(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    void dispose() -> dispose
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    java.lang.String getMechanismName() -> getMechanismName
com.novell.sasl.client.ParsedDirective -> com.novell.sasl.client.d:
    int m_valueType -> a
    java.lang.String m_name -> b
    java.lang.String m_value -> c
    java.lang.String getValue() -> a
    java.lang.String getName() -> b
com.novell.sasl.client.ResponseAuth -> com.novell.sasl.client.e:
    java.lang.String m_responseValue -> a
    void checkSemantics(com.novell.sasl.client.DirectiveList) -> a
    java.lang.String getResponseValue() -> a
com.novell.sasl.client.TokenParser -> com.novell.sasl.client.f:
    int m_curPos -> a
    int m_scanStart -> b
    int m_state -> c
    java.lang.String m_tokens -> d
    java.lang.String parseToken() -> a
    boolean isValidTokenChar(char) -> a
    boolean isWhiteSpace(char) -> b
com.slidingmenu.lib.BuildConfig -> com.slidingmenu.lib.BuildConfig:
    boolean DEBUG -> DEBUG
com.slidingmenu.lib.CanvasTransformerBuilder -> com.slidingmenu.lib.CanvasTransformerBuilder:
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer mTrans -> mTrans
    android.view.animation.Interpolator lin -> lin
    void initTransformer() -> initTransformer
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int) -> zoom
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int,android.view.animation.Interpolator) -> zoom
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer rotate(int,int,int,int) -> rotate
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer rotate(int,int,int,int,android.view.animation.Interpolator) -> rotate
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer translate(int,int,int,int) -> translate
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer translate(int,int,int,int,android.view.animation.Interpolator) -> translate
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer concatTransformer(com.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> concatTransformer
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer access$0(com.slidingmenu.lib.CanvasTransformerBuilder) -> access$0
com.slidingmenu.lib.CanvasTransformerBuilder$1 -> com.slidingmenu.lib.CanvasTransformerBuilder$1:
    float getInterpolation(float) -> getInterpolation
com.slidingmenu.lib.CanvasTransformerBuilder$2 -> com.slidingmenu.lib.CanvasTransformerBuilder$2:
    com.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.slidingmenu.lib.CanvasTransformerBuilder$3 -> com.slidingmenu.lib.CanvasTransformerBuilder$3:
    com.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedX -> val$openedX
    int val$closedX -> val$closedX
    int val$openedY -> val$openedY
    int val$closedY -> val$closedY
    int val$px -> val$px
    int val$py -> val$py
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.slidingmenu.lib.CanvasTransformerBuilder$4 -> com.slidingmenu.lib.CanvasTransformerBuilder$4:
    com.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedDeg -> val$openedDeg
    int val$closedDeg -> val$closedDeg
    int val$px -> val$px
    int val$py -> val$py
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.slidingmenu.lib.CanvasTransformerBuilder$5 -> com.slidingmenu.lib.CanvasTransformerBuilder$5:
    com.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedX -> val$openedX
    int val$closedX -> val$closedX
    int val$openedY -> val$openedY
    int val$closedY -> val$closedY
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.slidingmenu.lib.CanvasTransformerBuilder$6 -> com.slidingmenu.lib.CanvasTransformerBuilder$6:
    com.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer val$t -> val$t
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.slidingmenu.lib.CustomViewAbove -> com.slidingmenu.lib.CustomViewAbove:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    android.view.View mContent -> mContent
    int mCurItem -> mCurItem
    android.widget.Scroller mScroller -> mScroller
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mScrolling -> mScrolling
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mTouchSlop -> mTouchSlop
    float mInitialMotionX -> mInitialMotionX
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    com.slidingmenu.lib.CustomViewBehind mViewBehind -> mViewBehind
    boolean mEnabled -> mEnabled
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    com.slidingmenu.lib.SlidingMenu$OnClosedListener mClosedListener -> mClosedListener
    com.slidingmenu.lib.SlidingMenu$OnOpenedListener mOpenedListener -> mOpenedListener
    java.util.List mIgnoredViews -> mIgnoredViews
    int mTouchMode -> mTouchMode
    boolean mQuickReturn -> mQuickReturn
    float mScrollX -> mScrollX
    void initCustomViewAbove() -> initCustomViewAbove
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void setOnPageChangeListener(com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setOnPageChangeListener
    void setOnOpenedListener(com.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener setInternalPageChangeListener(com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setInternalPageChangeListener
    void addIgnoredView(android.view.View) -> addIgnoredView
    void removeIgnoredView(android.view.View) -> removeIgnoredView
    void clearIgnoredViews() -> clearIgnoredViews
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    int getDestScrollX(int) -> getDestScrollX
    int getLeftBound() -> getLeftBound
    int getRightBound() -> getRightBound
    int getContentLeft() -> getContentLeft
    boolean isMenuOpen() -> isMenuOpen
    boolean isInIgnoredView(android.view.MotionEvent) -> isInIgnoredView
    int getBehindWidth() -> getBehindWidth
    int getChildWidth(int) -> getChildWidth
    boolean isSlidingEnabled() -> isSlidingEnabled
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setCustomViewBehind(com.slidingmenu.lib.CustomViewBehind) -> setCustomViewBehind
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setAboveOffset(int) -> setAboveOffset
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll() -> completeScroll
    void setTouchMode(int) -> setTouchMode
    int getTouchMode() -> getTouchMode
    boolean thisTouchAllowed(android.view.MotionEvent) -> thisTouchAllowed
    boolean thisSlideAllowed(float) -> thisSlideAllowed
    int getPointerIndex(android.view.MotionEvent,int) -> getPointerIndex
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void determineDrag(android.view.MotionEvent) -> determineDrag
    void scrollTo(int,int) -> scrollTo
    int determineTargetPage(float,int,int) -> determineTargetPage
    float getPercentOpen() -> getPercentOpen
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void startDrag() -> startDrag
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    com.slidingmenu.lib.CustomViewBehind access$0(com.slidingmenu.lib.CustomViewAbove) -> access$0
com.slidingmenu.lib.CustomViewAbove$1 -> com.slidingmenu.lib.CustomViewAbove$1:
    float getInterpolation(float) -> getInterpolation
com.slidingmenu.lib.CustomViewAbove$2 -> com.slidingmenu.lib.CustomViewAbove$2:
    com.slidingmenu.lib.CustomViewAbove this$0 -> this$0
    void onPageSelected(int) -> onPageSelected
com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener -> com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener -> com.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.slidingmenu.lib.CustomViewBehind -> com.slidingmenu.lib.CustomViewBehind:
    java.lang.String TAG -> TAG
    int MARGIN_THRESHOLD -> MARGIN_THRESHOLD
    int mTouchMode -> mTouchMode
    com.slidingmenu.lib.CustomViewAbove mViewAbove -> mViewAbove
    android.view.View mContent -> mContent
    android.view.View mSecondaryContent -> mSecondaryContent
    int mMarginThreshold -> mMarginThreshold
    int mWidthOffset -> mWidthOffset
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer mTransformer -> mTransformer
    boolean mChildrenEnabled -> mChildrenEnabled
    int mMode -> mMode
    boolean mFadeEnabled -> mFadeEnabled
    android.graphics.Paint mFadePaint -> mFadePaint
    float mScrollScale -> mScrollScale
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    android.graphics.drawable.Drawable mSecondaryShadowDrawable -> mSecondaryShadowDrawable
    int mShadowWidth -> mShadowWidth
    float mFadeDegree -> mFadeDegree
    boolean mSelectorEnabled -> mSelectorEnabled
    android.graphics.Bitmap mSelectorDrawable -> mSelectorDrawable
    android.view.View mSelectedView -> mSelectedView
    void setCustomViewAbove(com.slidingmenu.lib.CustomViewAbove) -> setCustomViewAbove
    void setCanvasTransformer(com.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setCanvasTransformer
    void setWidthOffset(int) -> setWidthOffset
    int getBehindWidth() -> getBehindWidth
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setSecondaryContent(android.view.View) -> setSecondaryContent
    android.view.View getSecondaryContent() -> getSecondaryContent
    void setChildrenEnabled(boolean) -> setChildrenEnabled
    void scrollTo(int,int) -> scrollTo
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setScrollScale(float) -> setScrollScale
    float getScrollScale() -> getScrollScale
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    int getMenuPage(int) -> getMenuPage
    void scrollBehindTo(android.view.View,int,int) -> scrollBehindTo
    int getMenuLeft(android.view.View,int) -> getMenuLeft
    int getAbsLeftBound(android.view.View) -> getAbsLeftBound
    int getAbsRightBound(android.view.View) -> getAbsRightBound
    boolean marginTouchAllowed(android.view.View,int) -> marginTouchAllowed
    void setTouchMode(int) -> setTouchMode
    boolean menuOpenTouchAllowed(android.view.View,int,float) -> menuOpenTouchAllowed
    boolean menuTouchInQuickReturn(android.view.View,int,float) -> menuTouchInQuickReturn
    boolean menuClosedSlideAllowed(float) -> menuClosedSlideAllowed
    boolean menuOpenSlideAllowed(float) -> menuOpenSlideAllowed
    void drawShadow(android.view.View,android.graphics.Canvas) -> drawShadow
    void drawFade(android.view.View,android.graphics.Canvas,float) -> drawFade
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> drawSelector
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    int getSelectorTop() -> getSelectorTop
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
com.slidingmenu.lib.MenuInterface -> com.slidingmenu.lib.MenuInterface:
    void scrollBehindTo(int,int,com.slidingmenu.lib.CustomViewBehind,float) -> scrollBehindTo
    int getMenuLeft(com.slidingmenu.lib.CustomViewBehind,android.view.View) -> getMenuLeft
    int getAbsLeftBound(com.slidingmenu.lib.CustomViewBehind,android.view.View) -> getAbsLeftBound
    int getAbsRightBound(com.slidingmenu.lib.CustomViewBehind,android.view.View) -> getAbsRightBound
    boolean marginTouchAllowed(android.view.View,int,int) -> marginTouchAllowed
    boolean menuOpenTouchAllowed(android.view.View,int,int) -> menuOpenTouchAllowed
    boolean menuTouchInQuickReturn(android.view.View,int,int) -> menuTouchInQuickReturn
    boolean menuClosedSlideAllowed(int) -> menuClosedSlideAllowed
    boolean menuOpenSlideAllowed(int) -> menuOpenSlideAllowed
    void drawShadow(android.graphics.Canvas,android.graphics.drawable.Drawable,int) -> drawShadow
    void drawFade(android.graphics.Canvas,int,com.slidingmenu.lib.CustomViewBehind,android.view.View) -> drawFade
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> drawSelector
com.slidingmenu.lib.R -> com.slidingmenu.lib.R:
com.slidingmenu.lib.R$attr -> com.slidingmenu.lib.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int behindOffset -> behindOffset
    int behindScrollScale -> behindScrollScale
    int behindWidth -> behindWidth
    int buttonStyleSmall -> buttonStyleSmall
    int customNavigationLayout -> customNavigationLayout
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerVertical -> dividerVertical
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int fadeDegree -> fadeDegree
    int fadeEnabled -> fadeEnabled
    int headerBackground -> headerBackground
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalDivider -> horizontalDivider
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int itemBackground -> itemBackground
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int mode -> mode
    int navigationMode -> navigationMode
    int popupMenuStyle -> popupMenuStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryHint -> queryHint
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int selectorDrawable -> selectorDrawable
    int selectorEnabled -> selectorEnabled
    int shadowDrawable -> shadowDrawable
    int shadowWidth -> shadowWidth
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmall -> textAppearanceSmall
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorPrimary -> textColorPrimary
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int touchModeAbove -> touchModeAbove
    int touchModeBehind -> touchModeBehind
    int verticalDivider -> verticalDivider
    int viewAbove -> viewAbove
    int viewBehind -> viewBehind
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
com.slidingmenu.lib.R$bool -> com.slidingmenu.lib.R$bool:
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
com.slidingmenu.lib.R$color -> com.slidingmenu.lib.R$color:
    int abs__background_holo_dark -> abs__background_holo_dark
    int abs__background_holo_light -> abs__background_holo_light
    int abs__bright_foreground_disabled_holo_dark -> abs__bright_foreground_disabled_holo_dark
    int abs__bright_foreground_disabled_holo_light -> abs__bright_foreground_disabled_holo_light
    int abs__bright_foreground_holo_dark -> abs__bright_foreground_holo_dark
    int abs__bright_foreground_holo_light -> abs__bright_foreground_holo_light
    int abs__bright_foreground_inverse_holo_dark -> abs__bright_foreground_inverse_holo_dark
    int abs__bright_foreground_inverse_holo_light -> abs__bright_foreground_inverse_holo_light
    int abs__holo_blue_light -> abs__holo_blue_light
    int abs__primary_text_disable_only_holo_dark -> abs__primary_text_disable_only_holo_dark
    int abs__primary_text_disable_only_holo_light -> abs__primary_text_disable_only_holo_light
    int abs__primary_text_holo_dark -> abs__primary_text_holo_dark
    int abs__primary_text_holo_light -> abs__primary_text_holo_light
com.slidingmenu.lib.R$dimen -> com.slidingmenu.lib.R$dimen:
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__alert_dialog_title_height -> abs__alert_dialog_title_height
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
    int action_button_min_width -> action_button_min_width
com.slidingmenu.lib.R$drawable -> com.slidingmenu.lib.R$drawable:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_dark -> abs__btn_cab_done_default_holo_dark
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_dark -> abs__btn_cab_done_focused_holo_dark
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_dark -> abs__btn_cab_done_pressed_holo_dark
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__dialog_full_holo_dark -> abs__dialog_full_holo_dark
    int abs__dialog_full_holo_light -> abs__dialog_full_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_dark -> abs__ic_menu_moreoverflow_normal_holo_dark
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
com.slidingmenu.lib.R$id -> com.slidingmenu.lib.R$id:
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__titleDivider -> abs__titleDivider
    int abs__up -> abs__up
    int disableHome -> disableHome
    int edit_query -> edit_query
    int fullscreen -> fullscreen
    int homeAsUp -> homeAsUp
    int left -> left
    int listMode -> listMode
    int margin -> margin
    int normal -> normal
    int right -> right
    int selected_view -> selected_view
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int slidingmenumain -> slidingmenumain
    int tabMode -> tabMode
    int useLogo -> useLogo
    int wrap_content -> wrap_content
com.slidingmenu.lib.R$integer -> com.slidingmenu.lib.R$integer:
    int abs__max_action_buttons -> abs__max_action_buttons
com.slidingmenu.lib.R$layout -> com.slidingmenu.lib.R$layout:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__dialog_title_holo -> abs__dialog_title_holo
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_layout -> abs__list_menu_item_layout
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int sherlock_spinner_dropdown_item -> sherlock_spinner_dropdown_item
    int sherlock_spinner_item -> sherlock_spinner_item
    int slidingmenumain -> slidingmenumain
com.slidingmenu.lib.R$string -> com.slidingmenu.lib.R$string:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_dialog_title_default -> abs__activity_chooser_view_dialog_title_default
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__share_action_provider_share_with -> abs__share_action_provider_share_with
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
com.slidingmenu.lib.R$style -> com.slidingmenu.lib.R$style:
    int DialogWindowTitle_Sherlock -> DialogWindowTitle_Sherlock
    int DialogWindowTitle_Sherlock_Light -> DialogWindowTitle_Sherlock_Light
    int Sherlock___TextAppearance_Small -> Sherlock___TextAppearance_Small
    int Sherlock___Theme -> Sherlock___Theme
    int Sherlock___Theme_DarkActionBar -> Sherlock___Theme_DarkActionBar
    int Sherlock___Theme_Dialog -> Sherlock___Theme_Dialog
    int Sherlock___Theme_Light -> Sherlock___Theme_Light
    int Sherlock___Widget_ActionBar -> Sherlock___Widget_ActionBar
    int Sherlock___Widget_ActionMode -> Sherlock___Widget_ActionMode
    int Sherlock___Widget_ActivityChooserView -> Sherlock___Widget_ActivityChooserView
    int Sherlock___Widget_Holo_DropDownItem -> Sherlock___Widget_Holo_DropDownItem
    int Sherlock___Widget_Holo_ListView -> Sherlock___Widget_Holo_ListView
    int Sherlock___Widget_Holo_Spinner -> Sherlock___Widget_Holo_Spinner
    int Sherlock___Widget_SearchAutoCompleteTextView -> Sherlock___Widget_SearchAutoCompleteTextView
    int TextAppearance_Sherlock_DialogWindowTitle -> TextAppearance_Sherlock_DialogWindowTitle
    int TextAppearance_Sherlock_Light_DialogWindowTitle -> TextAppearance_Sherlock_Light_DialogWindowTitle
    int TextAppearance_Sherlock_Light_Small -> TextAppearance_Sherlock_Light_Small
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_Small -> TextAppearance_Sherlock_Small
    int TextAppearance_Sherlock_Widget_ActionBar_Menu -> TextAppearance_Sherlock_Widget_ActionBar_Menu
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionBar_Title -> TextAppearance_Sherlock_Widget_ActionBar_Title
    int TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Title -> TextAppearance_Sherlock_Widget_ActionMode_Title
    int TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse
    int TextAppearance_Sherlock_Widget_DropDownHint -> TextAppearance_Sherlock_Widget_DropDownHint
    int TextAppearance_Sherlock_Widget_DropDownItem -> TextAppearance_Sherlock_Widget_DropDownItem
    int TextAppearance_Sherlock_Widget_PopupMenu -> TextAppearance_Sherlock_Widget_PopupMenu
    int TextAppearance_Sherlock_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_Widget_TextView_SpinnerItem -> TextAppearance_Sherlock_Widget_TextView_SpinnerItem
    int Theme_Sherlock -> Theme_Sherlock
    int Theme_Sherlock_Dialog -> Theme_Sherlock_Dialog
    int Theme_Sherlock_Light -> Theme_Sherlock_Light
    int Theme_Sherlock_Light_DarkActionBar -> Theme_Sherlock_Light_DarkActionBar
    int Theme_Sherlock_Light_Dialog -> Theme_Sherlock_Light_Dialog
    int Theme_Sherlock_Light_NoActionBar -> Theme_Sherlock_Light_NoActionBar
    int Theme_Sherlock_NoActionBar -> Theme_Sherlock_NoActionBar
    int Widget -> Widget
    int Widget_Sherlock_ActionBar -> Widget_Sherlock_ActionBar
    int Widget_Sherlock_ActionBar_Solid -> Widget_Sherlock_ActionBar_Solid
    int Widget_Sherlock_ActionBar_TabBar -> Widget_Sherlock_ActionBar_TabBar
    int Widget_Sherlock_ActionBar_TabText -> Widget_Sherlock_ActionBar_TabText
    int Widget_Sherlock_ActionBar_TabView -> Widget_Sherlock_ActionBar_TabView
    int Widget_Sherlock_ActionButton -> Widget_Sherlock_ActionButton
    int Widget_Sherlock_ActionButton_CloseMode -> Widget_Sherlock_ActionButton_CloseMode
    int Widget_Sherlock_ActionButton_Overflow -> Widget_Sherlock_ActionButton_Overflow
    int Widget_Sherlock_ActionMode -> Widget_Sherlock_ActionMode
    int Widget_Sherlock_ActivityChooserView -> Widget_Sherlock_ActivityChooserView
    int Widget_Sherlock_Button_Small -> Widget_Sherlock_Button_Small
    int Widget_Sherlock_DropDownItem_Spinner -> Widget_Sherlock_DropDownItem_Spinner
    int Widget_Sherlock_Light_ActionBar -> Widget_Sherlock_Light_ActionBar
    int Widget_Sherlock_Light_ActionBar_Solid -> Widget_Sherlock_Light_ActionBar_Solid
    int Widget_Sherlock_Light_ActionBar_Solid_Inverse -> Widget_Sherlock_Light_ActionBar_Solid_Inverse
    int Widget_Sherlock_Light_ActionBar_TabBar -> Widget_Sherlock_Light_ActionBar_TabBar
    int Widget_Sherlock_Light_ActionBar_TabBar_Inverse -> Widget_Sherlock_Light_ActionBar_TabBar_Inverse
    int Widget_Sherlock_Light_ActionBar_TabText -> Widget_Sherlock_Light_ActionBar_TabText
    int Widget_Sherlock_Light_ActionBar_TabText_Inverse -> Widget_Sherlock_Light_ActionBar_TabText_Inverse
    int Widget_Sherlock_Light_ActionBar_TabView -> Widget_Sherlock_Light_ActionBar_TabView
    int Widget_Sherlock_Light_ActionBar_TabView_Inverse -> Widget_Sherlock_Light_ActionBar_TabView_Inverse
    int Widget_Sherlock_Light_ActionButton -> Widget_Sherlock_Light_ActionButton
    int Widget_Sherlock_Light_ActionButton_CloseMode -> Widget_Sherlock_Light_ActionButton_CloseMode
    int Widget_Sherlock_Light_ActionButton_Overflow -> Widget_Sherlock_Light_ActionButton_Overflow
    int Widget_Sherlock_Light_ActionMode -> Widget_Sherlock_Light_ActionMode
    int Widget_Sherlock_Light_ActionMode_Inverse -> Widget_Sherlock_Light_ActionMode_Inverse
    int Widget_Sherlock_Light_ActivityChooserView -> Widget_Sherlock_Light_ActivityChooserView
    int Widget_Sherlock_Light_Button_Small -> Widget_Sherlock_Light_Button_Small
    int Widget_Sherlock_Light_DropDownItem_Spinner -> Widget_Sherlock_Light_DropDownItem_Spinner
    int Widget_Sherlock_Light_ListPopupWindow -> Widget_Sherlock_Light_ListPopupWindow
    int Widget_Sherlock_Light_ListView_DropDown -> Widget_Sherlock_Light_ListView_DropDown
    int Widget_Sherlock_Light_PopupMenu -> Widget_Sherlock_Light_PopupMenu
    int Widget_Sherlock_Light_PopupWindow_ActionMode -> Widget_Sherlock_Light_PopupWindow_ActionMode
    int Widget_Sherlock_Light_ProgressBar -> Widget_Sherlock_Light_ProgressBar
    int Widget_Sherlock_Light_ProgressBar_Horizontal -> Widget_Sherlock_Light_ProgressBar_Horizontal
    int Widget_Sherlock_Light_SearchAutoCompleteTextView -> Widget_Sherlock_Light_SearchAutoCompleteTextView
    int Widget_Sherlock_Light_Spinner_DropDown_ActionBar -> Widget_Sherlock_Light_Spinner_DropDown_ActionBar
    int Widget_Sherlock_ListPopupWindow -> Widget_Sherlock_ListPopupWindow
    int Widget_Sherlock_ListView_DropDown -> Widget_Sherlock_ListView_DropDown
    int Widget_Sherlock_PopupMenu -> Widget_Sherlock_PopupMenu
    int Widget_Sherlock_PopupWindow_ActionMode -> Widget_Sherlock_PopupWindow_ActionMode
    int Widget_Sherlock_ProgressBar -> Widget_Sherlock_ProgressBar
    int Widget_Sherlock_ProgressBar_Horizontal -> Widget_Sherlock_ProgressBar_Horizontal
    int Widget_Sherlock_SearchAutoCompleteTextView -> Widget_Sherlock_SearchAutoCompleteTextView
    int Widget_Sherlock_Spinner_DropDown_ActionBar -> Widget_Sherlock_Spinner_DropDown_ActionBar
    int Widget_Sherlock_TextView_SpinnerItem -> Widget_Sherlock_TextView_SpinnerItem
com.slidingmenu.lib.R$styleable -> com.slidingmenu.lib.R$styleable:
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_android_windowIsFloating -> SherlockTheme_android_windowIsFloating
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
com.slidingmenu.lib.SlidingMenu -> com.slidingmenu.lib.SlidingMenu:
    java.lang.String TAG -> TAG
    int SLIDING_WINDOW -> SLIDING_WINDOW
    int SLIDING_CONTENT -> SLIDING_CONTENT
    boolean mActionbarOverlay -> mActionbarOverlay
    int TOUCHMODE_MARGIN -> TOUCHMODE_MARGIN
    int TOUCHMODE_FULLSCREEN -> TOUCHMODE_FULLSCREEN
    int TOUCHMODE_NONE -> TOUCHMODE_NONE
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int LEFT_RIGHT -> LEFT_RIGHT
    com.slidingmenu.lib.CustomViewAbove mViewAbove -> mViewAbove
    com.slidingmenu.lib.CustomViewBehind mViewBehind -> mViewBehind
    com.slidingmenu.lib.SlidingMenu$OnOpenListener mOpenListener -> mOpenListener
    com.slidingmenu.lib.SlidingMenu$OnCloseListener mCloseListener -> mCloseListener
    android.os.Handler mHandler -> mHandler
    void attachToActivity(android.app.Activity,int) -> attachToActivity
    void attachToActivity(android.app.Activity,int,boolean) -> attachToActivity
    void setContent(int) -> setContent
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setMenu(int) -> setMenu
    void setMenu(android.view.View) -> setMenu
    android.view.View getMenu() -> getMenu
    void setSecondaryMenu(int) -> setSecondaryMenu
    void setSecondaryMenu(android.view.View) -> setSecondaryMenu
    android.view.View getSecondaryMenu() -> getSecondaryMenu
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    boolean isSlidingEnabled() -> isSlidingEnabled
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setStatic(boolean) -> setStatic
    void showMenu() -> showMenu
    void showMenu(boolean) -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void showSecondaryMenu(boolean) -> showSecondaryMenu
    void showContent() -> showContent
    void showContent(boolean) -> showContent
    void toggle() -> toggle
    void toggle(boolean) -> toggle
    boolean isMenuShowing() -> isMenuShowing
    boolean isSecondaryMenuShowing() -> isSecondaryMenuShowing
    int getBehindOffset() -> getBehindOffset
    void setBehindOffset(int) -> setBehindOffset
    void setBehindOffsetRes(int) -> setBehindOffsetRes
    void setAboveOffset(int) -> setAboveOffset
    void setAboveOffsetRes(int) -> setAboveOffsetRes
    void setBehindWidth(int) -> setBehindWidth
    void setBehindWidthRes(int) -> setBehindWidthRes
    float getBehindScrollScale() -> getBehindScrollScale
    void setBehindScrollScale(float) -> setBehindScrollScale
    void setBehindCanvasTransformer(com.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setBehindCanvasTransformer
    int getTouchModeAbove() -> getTouchModeAbove
    void setTouchModeAbove(int) -> setTouchModeAbove
    void setTouchModeBehind(int) -> setTouchModeBehind
    void setShadowDrawable(int) -> setShadowDrawable
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(int) -> setSecondaryShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidthRes(int) -> setShadowWidthRes
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    void setSelectorDrawable(int) -> setSelectorDrawable
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
    void addIgnoredView(android.view.View) -> addIgnoredView
    void removeIgnoredView(android.view.View) -> removeIgnoredView
    void clearIgnoredViews() -> clearIgnoredViews
    void setOnOpenListener(com.slidingmenu.lib.SlidingMenu$OnOpenListener) -> setOnOpenListener
    void setOnCloseListener(com.slidingmenu.lib.SlidingMenu$OnCloseListener) -> setOnCloseListener
    void setOnOpenedListener(com.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void manageLayers(float) -> manageLayers
    com.slidingmenu.lib.SlidingMenu$OnOpenListener access$0(com.slidingmenu.lib.SlidingMenu) -> access$0
    com.slidingmenu.lib.SlidingMenu$OnCloseListener access$1(com.slidingmenu.lib.SlidingMenu) -> access$1
com.slidingmenu.lib.SlidingMenu$1 -> com.slidingmenu.lib.SlidingMenu$1:
    int POSITION_OPEN -> POSITION_OPEN
    int POSITION_CLOSE -> POSITION_CLOSE
    com.slidingmenu.lib.SlidingMenu this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.slidingmenu.lib.SlidingMenu$2 -> com.slidingmenu.lib.SlidingMenu$2:
    com.slidingmenu.lib.SlidingMenu this$0 -> this$0
    int val$layerType -> val$layerType
    void run() -> run
com.slidingmenu.lib.SlidingMenu$CanvasTransformer -> com.slidingmenu.lib.SlidingMenu$CanvasTransformer:
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.slidingmenu.lib.SlidingMenu$OnCloseListener -> com.slidingmenu.lib.SlidingMenu$OnCloseListener:
    void onClose() -> onClose
com.slidingmenu.lib.SlidingMenu$OnClosedListener -> com.slidingmenu.lib.SlidingMenu$OnClosedListener:
    void onClosed() -> onClosed
com.slidingmenu.lib.SlidingMenu$OnOpenListener -> com.slidingmenu.lib.SlidingMenu$OnOpenListener:
    void onOpen() -> onOpen
com.slidingmenu.lib.SlidingMenu$OnOpenedListener -> com.slidingmenu.lib.SlidingMenu$OnOpenedListener:
    void onOpened() -> onOpened
com.slidingmenu.lib.SlidingMenu$SavedState -> com.slidingmenu.lib.SlidingMenu$SavedState:
    int mItem -> mItem
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getItem() -> getItem
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.slidingmenu.lib.SlidingMenu$SavedState$1 -> com.slidingmenu.lib.SlidingMenu$SavedState$1:
    com.slidingmenu.lib.SlidingMenu$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.slidingmenu.lib.SlidingMenu$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.slidingmenu.lib.app.SlidingActivity -> com.slidingmenu.lib.app.SlidingActivity:
    com.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.slidingmenu.lib.app.SlidingActivityBase -> com.slidingmenu.lib.app.SlidingActivityBase:
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(int) -> setBehindContentView
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
com.slidingmenu.lib.app.SlidingActivityHelper -> com.slidingmenu.lib.app.SlidingActivityHelper:
    android.app.Activity mActivity -> mActivity
    com.slidingmenu.lib.SlidingMenu mSlidingMenu -> mSlidingMenu
    android.view.View mViewAbove -> mViewAbove
    android.view.View mViewBehind -> mViewBehind
    boolean mBroadcasting -> mBroadcasting
    boolean mOnPostCreateCalled -> mOnPostCreateCalled
    boolean mEnableSlide -> mEnableSlide
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void registerAboveContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> registerAboveContentView
    void setContentView(android.view.View) -> setContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    com.slidingmenu.lib.SlidingMenu access$0(com.slidingmenu.lib.app.SlidingActivityHelper) -> access$0
com.slidingmenu.lib.app.SlidingActivityHelper$1 -> com.slidingmenu.lib.app.SlidingActivityHelper$1:
    com.slidingmenu.lib.app.SlidingActivityHelper this$0 -> this$0
    boolean val$open -> val$open
    boolean val$secondary -> val$secondary
    void run() -> run
com.slidingmenu.lib.app.SlidingFragmentActivity -> com.slidingmenu.lib.app.SlidingFragmentActivity:
    com.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.slidingmenu.lib.app.SlidingListActivity -> com.slidingmenu.lib.app.SlidingListActivity:
    com.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.slidingmenu.lib.app.SlidingMapActivity -> com.slidingmenu.lib.app.SlidingMapActivity:
    com.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.slidingmenu.lib.app.SlidingPreferenceActivity -> com.slidingmenu.lib.app.SlidingPreferenceActivity:
    com.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.squareup.picasso.Action -> com.squareup.picasso.Action:
    com.squareup.picasso.Picasso picasso -> picasso
    com.squareup.picasso.Request request -> request
    java.lang.ref.WeakReference target -> target
    boolean skipCache -> skipCache
    boolean noFade -> noFade
    int errorResId -> errorResId
    android.graphics.drawable.Drawable errorDrawable -> errorDrawable
    java.lang.String key -> key
    java.lang.Object tag -> tag
    boolean willReplay -> willReplay
    boolean cancelled -> cancelled
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> complete
    void error() -> error
    void cancel() -> cancel
    com.squareup.picasso.Request getRequest() -> getRequest
    java.lang.Object getTarget() -> getTarget
    java.lang.String getKey() -> getKey
    boolean isCancelled() -> isCancelled
    boolean willReplay() -> willReplay
    com.squareup.picasso.Picasso getPicasso() -> getPicasso
    com.squareup.picasso.Picasso$Priority getPriority() -> getPriority
    java.lang.Object getTag() -> getTag
com.squareup.picasso.Action$RequestWeakReference -> com.squareup.picasso.Action$RequestWeakReference:
    com.squareup.picasso.Action action -> action
com.squareup.picasso.AssetRequestHandler -> com.squareup.picasso.AssetRequestHandler:
    java.lang.String ANDROID_ASSET -> ANDROID_ASSET
    int ASSET_PREFIX_LENGTH -> ASSET_PREFIX_LENGTH
    android.content.res.AssetManager assetManager -> assetManager
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> load
    android.graphics.Bitmap decodeAsset(com.squareup.picasso.Request,java.lang.String) -> decodeAsset
com.squareup.picasso.BitmapHunter -> com.squareup.picasso.BitmapHunter:
    java.lang.Object DECODE_LOCK -> DECODE_LOCK
    java.lang.ThreadLocal NAME_BUILDER -> NAME_BUILDER
    java.util.concurrent.atomic.AtomicInteger SEQUENCE_GENERATOR -> SEQUENCE_GENERATOR
    com.squareup.picasso.RequestHandler ERRORING_HANDLER -> ERRORING_HANDLER
    int sequence -> sequence
    com.squareup.picasso.Picasso picasso -> picasso
    com.squareup.picasso.Dispatcher dispatcher -> dispatcher
    com.squareup.picasso.Cache cache -> cache
    com.squareup.picasso.Stats stats -> stats
    java.lang.String key -> key
    com.squareup.picasso.Request data -> data
    boolean skipMemoryCache -> skipMemoryCache
    com.squareup.picasso.RequestHandler requestHandler -> requestHandler
    com.squareup.picasso.Action action -> action
    java.util.List actions -> actions
    android.graphics.Bitmap result -> result
    java.util.concurrent.Future future -> future
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> loadedFrom
    java.lang.Exception exception -> exception
    int exifRotation -> exifRotation
    int retryCount -> retryCount
    com.squareup.picasso.Picasso$Priority priority -> priority
    void run() -> run
    android.graphics.Bitmap hunt() -> hunt
    void attach(com.squareup.picasso.Action) -> attach
    void detach(com.squareup.picasso.Action) -> detach
    com.squareup.picasso.Picasso$Priority computeNewPriority() -> computeNewPriority
    boolean cancel() -> cancel
    boolean isCancelled() -> isCancelled
    boolean shouldSkipMemoryCache() -> shouldSkipMemoryCache
    boolean shouldRetry(boolean,android.net.NetworkInfo) -> shouldRetry
    boolean supportsReplay() -> supportsReplay
    android.graphics.Bitmap getResult() -> getResult
    java.lang.String getKey() -> getKey
    com.squareup.picasso.Request getData() -> getData
    com.squareup.picasso.Action getAction() -> getAction
    com.squareup.picasso.Picasso getPicasso() -> getPicasso
    java.util.List getActions() -> getActions
    java.lang.Exception getException() -> getException
    com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> getLoadedFrom
    com.squareup.picasso.Picasso$Priority getPriority() -> getPriority
    void updateThreadName(com.squareup.picasso.Request) -> updateThreadName
    com.squareup.picasso.BitmapHunter forRequest(com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action) -> forRequest
    android.graphics.Bitmap applyCustomTransformations(java.util.List,android.graphics.Bitmap) -> applyCustomTransformations
    android.graphics.Bitmap transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int) -> transformResult
com.squareup.picasso.BitmapHunter$1 -> com.squareup.picasso.BitmapHunter$1:
    java.lang.StringBuilder initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.squareup.picasso.BitmapHunter$2 -> com.squareup.picasso.BitmapHunter$2:
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> load
com.squareup.picasso.BitmapHunter$3 -> com.squareup.picasso.BitmapHunter$3:
    com.squareup.picasso.Transformation val$transformation -> val$transformation
    java.lang.RuntimeException val$e -> val$e
    void run() -> run
com.squareup.picasso.BitmapHunter$4 -> com.squareup.picasso.BitmapHunter$4:
    java.lang.StringBuilder val$builder -> val$builder
    void run() -> run
com.squareup.picasso.BitmapHunter$5 -> com.squareup.picasso.BitmapHunter$5:
    com.squareup.picasso.Transformation val$transformation -> val$transformation
    void run() -> run
com.squareup.picasso.BitmapHunter$6 -> com.squareup.picasso.BitmapHunter$6:
    com.squareup.picasso.Transformation val$transformation -> val$transformation
    void run() -> run
com.squareup.picasso.Cache -> com.squareup.picasso.Cache:
    com.squareup.picasso.Cache NONE -> NONE
    android.graphics.Bitmap get(java.lang.String) -> get
    void set(java.lang.String,android.graphics.Bitmap) -> set
    int size() -> size
    int maxSize() -> maxSize
    void clear() -> clear
com.squareup.picasso.Cache$1 -> com.squareup.picasso.Cache$1:
    android.graphics.Bitmap get(java.lang.String) -> get
    void set(java.lang.String,android.graphics.Bitmap) -> set
    int size() -> size
    int maxSize() -> maxSize
    void clear() -> clear
com.squareup.picasso.Callback -> com.squareup.picasso.Callback:
    void onSuccess() -> onSuccess
    void onError() -> onError
com.squareup.picasso.Callback$EmptyCallback -> com.squareup.picasso.Callback$EmptyCallback:
    void onSuccess() -> onSuccess
    void onError() -> onError
com.squareup.picasso.ContactsPhotoRequestHandler -> com.squareup.picasso.ContactsPhotoRequestHandler:
    int ID_LOOKUP -> ID_LOOKUP
    int ID_THUMBNAIL -> ID_THUMBNAIL
    int ID_CONTACT -> ID_CONTACT
    int ID_DISPLAY_PHOTO -> ID_DISPLAY_PHOTO
    android.content.UriMatcher matcher -> matcher
    android.content.Context context -> context
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> load
    java.io.InputStream getInputStream(com.squareup.picasso.Request) -> getInputStream
    android.graphics.Bitmap decodeStream(java.io.InputStream,com.squareup.picasso.Request) -> decodeStream
com.squareup.picasso.ContactsPhotoRequestHandler$ContactPhotoStreamIcs -> com.squareup.picasso.ContactsPhotoRequestHandler$ContactPhotoStreamIcs:
    java.io.InputStream get(android.content.ContentResolver,android.net.Uri) -> get
com.squareup.picasso.ContentStreamRequestHandler -> com.squareup.picasso.ContentStreamRequestHandler:
    android.content.Context context -> context
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> load
    android.graphics.Bitmap decodeContentStream(com.squareup.picasso.Request) -> decodeContentStream
com.squareup.picasso.DeferredRequestCreator -> com.squareup.picasso.DeferredRequestCreator:
    com.squareup.picasso.RequestCreator creator -> creator
    java.lang.ref.WeakReference target -> target
    com.squareup.picasso.Callback callback -> callback
    boolean onPreDraw() -> onPreDraw
    void cancel() -> cancel
com.squareup.picasso.Dispatcher -> com.squareup.picasso.Dispatcher:
    int RETRY_DELAY -> RETRY_DELAY
    int AIRPLANE_MODE_ON -> AIRPLANE_MODE_ON
    int AIRPLANE_MODE_OFF -> AIRPLANE_MODE_OFF
    int REQUEST_SUBMIT -> REQUEST_SUBMIT
    int REQUEST_CANCEL -> REQUEST_CANCEL
    int REQUEST_GCED -> REQUEST_GCED
    int HUNTER_COMPLETE -> HUNTER_COMPLETE
    int HUNTER_RETRY -> HUNTER_RETRY
    int HUNTER_DECODE_FAILED -> HUNTER_DECODE_FAILED
    int HUNTER_DELAY_NEXT_BATCH -> HUNTER_DELAY_NEXT_BATCH
    int HUNTER_BATCH_COMPLETE -> HUNTER_BATCH_COMPLETE
    int NETWORK_STATE_CHANGE -> NETWORK_STATE_CHANGE
    int AIRPLANE_MODE_CHANGE -> AIRPLANE_MODE_CHANGE
    int TAG_PAUSE -> TAG_PAUSE
    int TAG_RESUME -> TAG_RESUME
    int REQUEST_BATCH_RESUME -> REQUEST_BATCH_RESUME
    java.lang.String DISPATCHER_THREAD_NAME -> DISPATCHER_THREAD_NAME
    int BATCH_DELAY -> BATCH_DELAY
    com.squareup.picasso.Dispatcher$DispatcherThread dispatcherThread -> dispatcherThread
    android.content.Context context -> context
    java.util.concurrent.ExecutorService service -> service
    com.squareup.picasso.Downloader downloader -> downloader
    java.util.Map hunterMap -> hunterMap
    java.util.Map failedActions -> failedActions
    java.util.Map pausedActions -> pausedActions
    java.util.Set pausedTags -> pausedTags
    android.os.Handler handler -> handler
    android.os.Handler mainThreadHandler -> mainThreadHandler
    com.squareup.picasso.Cache cache -> cache
    com.squareup.picasso.Stats stats -> stats
    java.util.List batch -> batch
    com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver receiver -> receiver
    boolean scansNetworkChanges -> scansNetworkChanges
    boolean airplaneMode -> airplaneMode
    void shutdown() -> shutdown
    void dispatchSubmit(com.squareup.picasso.Action) -> dispatchSubmit
    void dispatchCancel(com.squareup.picasso.Action) -> dispatchCancel
    void dispatchPauseTag(java.lang.Object) -> dispatchPauseTag
    void dispatchResumeTag(java.lang.Object) -> dispatchResumeTag
    void dispatchComplete(com.squareup.picasso.BitmapHunter) -> dispatchComplete
    void dispatchRetry(com.squareup.picasso.BitmapHunter) -> dispatchRetry
    void dispatchFailed(com.squareup.picasso.BitmapHunter) -> dispatchFailed
    void dispatchNetworkStateChange(android.net.NetworkInfo) -> dispatchNetworkStateChange
    void dispatchAirplaneModeChange(boolean) -> dispatchAirplaneModeChange
    void performSubmit(com.squareup.picasso.Action) -> performSubmit
    void performSubmit(com.squareup.picasso.Action,boolean) -> performSubmit
    void performCancel(com.squareup.picasso.Action) -> performCancel
    void performPauseTag(java.lang.Object) -> performPauseTag
    void performResumeTag(java.lang.Object) -> performResumeTag
    void performRetry(com.squareup.picasso.BitmapHunter) -> performRetry
    void performComplete(com.squareup.picasso.BitmapHunter) -> performComplete
    void performBatchComplete() -> performBatchComplete
    void performError(com.squareup.picasso.BitmapHunter,boolean) -> performError
    void performAirplaneModeChange(boolean) -> performAirplaneModeChange
    void performNetworkStateChange(android.net.NetworkInfo) -> performNetworkStateChange
    void flushFailedActions() -> flushFailedActions
    void markForReplay(com.squareup.picasso.BitmapHunter) -> markForReplay
    void markForReplay(com.squareup.picasso.Action) -> markForReplay
    void batch(com.squareup.picasso.BitmapHunter) -> batch
    void logBatch(java.util.List) -> logBatch
com.squareup.picasso.Dispatcher$1 -> com.squareup.picasso.Dispatcher$1:
    com.squareup.picasso.Dispatcher this$0 -> this$0
    void run() -> run
com.squareup.picasso.Dispatcher$DispatcherHandler -> com.squareup.picasso.Dispatcher$DispatcherHandler:
    com.squareup.picasso.Dispatcher dispatcher -> dispatcher
    void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Dispatcher$DispatcherHandler$1 -> com.squareup.picasso.Dispatcher$DispatcherHandler$1:
    android.os.Message val$msg -> val$msg
    com.squareup.picasso.Dispatcher$DispatcherHandler this$0 -> this$0
    void run() -> run
com.squareup.picasso.Dispatcher$DispatcherThread -> com.squareup.picasso.Dispatcher$DispatcherThread:
com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver -> com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver:
    java.lang.String EXTRA_AIRPLANE_STATE -> EXTRA_AIRPLANE_STATE
    com.squareup.picasso.Dispatcher dispatcher -> dispatcher
    void register() -> register
    void unregister() -> unregister
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.squareup.picasso.Downloader -> com.squareup.picasso.Downloader:
    com.squareup.picasso.Downloader$Response load(android.net.Uri,boolean) -> load
    void shutdown() -> shutdown
com.squareup.picasso.Downloader$Response -> com.squareup.picasso.Downloader$Response:
    java.io.InputStream stream -> stream
    android.graphics.Bitmap bitmap -> bitmap
    boolean cached -> cached
    long contentLength -> contentLength
    java.io.InputStream getInputStream() -> getInputStream
    android.graphics.Bitmap getBitmap() -> getBitmap
    long getContentLength() -> getContentLength
com.squareup.picasso.Downloader$ResponseException -> com.squareup.picasso.Downloader$ResponseException:
com.squareup.picasso.FetchAction -> com.squareup.picasso.FetchAction:
    java.lang.Object target -> target
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> complete
    void error() -> error
    java.lang.Object getTarget() -> getTarget
com.squareup.picasso.FileRequestHandler -> com.squareup.picasso.FileRequestHandler:
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> load
    int getFileExifRotation(android.net.Uri) -> getFileExifRotation
com.squareup.picasso.GetAction -> com.squareup.picasso.GetAction:
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> complete
    void error() -> error
com.squareup.picasso.ImageViewAction -> com.squareup.picasso.ImageViewAction:
    com.squareup.picasso.Callback callback -> callback
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> complete
    void error() -> error
    void cancel() -> cancel
com.squareup.picasso.LruCache -> com.squareup.picasso.LruCache:
    java.util.LinkedHashMap map -> map
    int maxSize -> maxSize
    int size -> size
    int putCount -> putCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    android.graphics.Bitmap get(java.lang.String) -> get
    void set(java.lang.String,android.graphics.Bitmap) -> set
    void trimToSize(int) -> trimToSize
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    void clear() -> clear
    int hitCount() -> hitCount
    int missCount() -> missCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
com.squareup.picasso.MarkableInputStream -> com.squareup.picasso.MarkableInputStream:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    java.io.InputStream in -> in
    long offset -> offset
    long reset -> reset
    long limit -> limit
    long defaultMark -> defaultMark
    void mark(int) -> mark
    long savePosition(int) -> savePosition
    void setLimit(long) -> setLimit
    void reset() -> reset
    void reset(long) -> reset
    void skip(long,long) -> skip
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    boolean markSupported() -> markSupported
com.squareup.picasso.MediaStoreRequestHandler -> com.squareup.picasso.MediaStoreRequestHandler:
    java.lang.String[] CONTENT_ORIENTATION -> CONTENT_ORIENTATION
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> load
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind getPicassoKind(int,int) -> getPicassoKind
    int getExifOrientation(android.content.ContentResolver,android.net.Uri) -> getExifOrientation
com.squareup.picasso.MediaStoreRequestHandler$PicassoKind -> com.squareup.picasso.MediaStoreRequestHandler$PicassoKind:
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind MICRO -> MICRO
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind MINI -> MINI
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind FULL -> FULL
    int androidKind -> androidKind
    int width -> width
    int height -> height
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind[] $VALUES -> $VALUES
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind[] values() -> values
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind valueOf(java.lang.String) -> valueOf
com.squareup.picasso.NetworkRequestHandler -> com.squareup.picasso.NetworkRequestHandler:
    int RETRY_COUNT -> RETRY_COUNT
    int MARKER -> MARKER
    java.lang.String SCHEME_HTTP -> SCHEME_HTTP
    java.lang.String SCHEME_HTTPS -> SCHEME_HTTPS
    com.squareup.picasso.Downloader downloader -> downloader
    com.squareup.picasso.Stats stats -> stats
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> load
    int getRetryCount() -> getRetryCount
    boolean shouldRetry(boolean,android.net.NetworkInfo) -> shouldRetry
    boolean supportsReplay() -> supportsReplay
    android.graphics.Bitmap decodeStream(java.io.InputStream,com.squareup.picasso.Request) -> decodeStream
com.squareup.picasso.OkHttpDownloader -> com.squareup.picasso.OkHttpDownloader:
    java.lang.String RESPONSE_SOURCE_ANDROID -> RESPONSE_SOURCE_ANDROID
    java.lang.String RESPONSE_SOURCE_OKHTTP -> RESPONSE_SOURCE_OKHTTP
    com.squareup.okhttp.OkUrlFactory urlFactory -> urlFactory
    java.net.HttpURLConnection openConnection(android.net.Uri) -> openConnection
    com.squareup.okhttp.OkHttpClient getClient() -> getClient
    com.squareup.picasso.Downloader$Response load(android.net.Uri,boolean) -> load
    void shutdown() -> shutdown
com.squareup.picasso.Picasso -> com.squareup.picasso.Picasso:
    java.lang.String TAG -> TAG
    android.os.Handler HANDLER -> HANDLER
    com.squareup.picasso.Picasso singleton -> singleton
    com.squareup.picasso.Picasso$Listener listener -> listener
    com.squareup.picasso.Picasso$RequestTransformer requestTransformer -> requestTransformer
    com.squareup.picasso.Picasso$CleanupThread cleanupThread -> cleanupThread
    java.util.List requestHandlers -> requestHandlers
    android.content.Context context -> context
    com.squareup.picasso.Dispatcher dispatcher -> dispatcher
    com.squareup.picasso.Cache cache -> cache
    com.squareup.picasso.Stats stats -> stats
    java.util.Map targetToAction -> targetToAction
    java.util.Map targetToDeferredRequestCreator -> targetToDeferredRequestCreator
    java.lang.ref.ReferenceQueue referenceQueue -> referenceQueue
    boolean indicatorsEnabled -> indicatorsEnabled
    boolean loggingEnabled -> loggingEnabled
    boolean shutdown -> shutdown
    void cancelRequest(android.widget.ImageView) -> cancelRequest
    void cancelRequest(com.squareup.picasso.Target) -> cancelRequest
    void cancelRequest(android.widget.RemoteViews,int) -> cancelRequest
    void cancelTag(java.lang.Object) -> cancelTag
    void pauseTag(java.lang.Object) -> pauseTag
    void resumeTag(java.lang.Object) -> resumeTag
    com.squareup.picasso.RequestCreator load(android.net.Uri) -> load
    com.squareup.picasso.RequestCreator load(java.lang.String) -> load
    com.squareup.picasso.RequestCreator load(java.io.File) -> load
    com.squareup.picasso.RequestCreator load(int) -> load
    boolean isDebugging() -> isDebugging
    void setDebugging(boolean) -> setDebugging
    void setIndicatorsEnabled(boolean) -> setIndicatorsEnabled
    boolean areIndicatorsEnabled() -> areIndicatorsEnabled
    void setLoggingEnabled(boolean) -> setLoggingEnabled
    boolean isLoggingEnabled() -> isLoggingEnabled
    com.squareup.picasso.StatsSnapshot getSnapshot() -> getSnapshot
    void shutdown() -> shutdown
    java.util.List getRequestHandlers() -> getRequestHandlers
    com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> transformRequest
    void defer(android.widget.ImageView,com.squareup.picasso.DeferredRequestCreator) -> defer
    void enqueueAndSubmit(com.squareup.picasso.Action) -> enqueueAndSubmit
    void submit(com.squareup.picasso.Action) -> submit
    android.graphics.Bitmap quickMemoryCacheCheck(java.lang.String) -> quickMemoryCacheCheck
    void complete(com.squareup.picasso.BitmapHunter) -> complete
    void resumeAction(com.squareup.picasso.Action) -> resumeAction
    void deliverAction(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom,com.squareup.picasso.Action) -> deliverAction
    void cancelExistingRequest(java.lang.Object) -> cancelExistingRequest
    com.squareup.picasso.Picasso with(android.content.Context) -> with
    void setSingletonInstance(com.squareup.picasso.Picasso) -> setSingletonInstance
    void access$000(com.squareup.picasso.Picasso,java.lang.Object) -> access$000
com.squareup.picasso.Picasso$1 -> com.squareup.picasso.Picasso$1:
    void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Picasso$Builder -> com.squareup.picasso.Picasso$Builder:
    android.content.Context context -> context
    com.squareup.picasso.Downloader downloader -> downloader
    java.util.concurrent.ExecutorService service -> service
    com.squareup.picasso.Cache cache -> cache
    com.squareup.picasso.Picasso$Listener listener -> listener
    com.squareup.picasso.Picasso$RequestTransformer transformer -> transformer
    java.util.List requestHandlers -> requestHandlers
    boolean indicatorsEnabled -> indicatorsEnabled
    boolean loggingEnabled -> loggingEnabled
    com.squareup.picasso.Picasso$Builder downloader(com.squareup.picasso.Downloader) -> downloader
    com.squareup.picasso.Picasso$Builder executor(java.util.concurrent.ExecutorService) -> executor
    com.squareup.picasso.Picasso$Builder memoryCache(com.squareup.picasso.Cache) -> memoryCache
    com.squareup.picasso.Picasso$Builder listener(com.squareup.picasso.Picasso$Listener) -> listener
    com.squareup.picasso.Picasso$Builder requestTransformer(com.squareup.picasso.Picasso$RequestTransformer) -> requestTransformer
    com.squareup.picasso.Picasso$Builder addRequestHandler(com.squareup.picasso.RequestHandler) -> addRequestHandler
    com.squareup.picasso.Picasso$Builder debugging(boolean) -> debugging
    com.squareup.picasso.Picasso$Builder indicatorsEnabled(boolean) -> indicatorsEnabled
    com.squareup.picasso.Picasso$Builder loggingEnabled(boolean) -> loggingEnabled
    com.squareup.picasso.Picasso build() -> build
com.squareup.picasso.Picasso$CleanupThread -> com.squareup.picasso.Picasso$CleanupThread:
    java.lang.ref.ReferenceQueue referenceQueue -> referenceQueue
    android.os.Handler handler -> handler
    void run() -> run
    void shutdown() -> shutdown
com.squareup.picasso.Picasso$CleanupThread$1 -> com.squareup.picasso.Picasso$CleanupThread$1:
    java.lang.Exception val$e -> val$e
    com.squareup.picasso.Picasso$CleanupThread this$0 -> this$0
    void run() -> run
com.squareup.picasso.Picasso$Listener -> com.squareup.picasso.Picasso$Listener:
    void onImageLoadFailed(com.squareup.picasso.Picasso,android.net.Uri,java.lang.Exception) -> onImageLoadFailed
com.squareup.picasso.Picasso$LoadedFrom -> com.squareup.picasso.Picasso$LoadedFrom:
    com.squareup.picasso.Picasso$LoadedFrom MEMORY -> MEMORY
    com.squareup.picasso.Picasso$LoadedFrom DISK -> DISK
    com.squareup.picasso.Picasso$LoadedFrom NETWORK -> NETWORK
    int debugColor -> debugColor
    com.squareup.picasso.Picasso$LoadedFrom[] $VALUES -> $VALUES
    com.squareup.picasso.Picasso$LoadedFrom[] values() -> values
    com.squareup.picasso.Picasso$LoadedFrom valueOf(java.lang.String) -> valueOf
com.squareup.picasso.Picasso$Priority -> com.squareup.picasso.Picasso$Priority:
    com.squareup.picasso.Picasso$Priority LOW -> LOW
    com.squareup.picasso.Picasso$Priority NORMAL -> NORMAL
    com.squareup.picasso.Picasso$Priority HIGH -> HIGH
    com.squareup.picasso.Picasso$Priority[] $VALUES -> $VALUES
    com.squareup.picasso.Picasso$Priority[] values() -> values
    com.squareup.picasso.Picasso$Priority valueOf(java.lang.String) -> valueOf
com.squareup.picasso.Picasso$RequestTransformer -> com.squareup.picasso.Picasso$RequestTransformer:
    com.squareup.picasso.Picasso$RequestTransformer IDENTITY -> IDENTITY
    com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> transformRequest
com.squareup.picasso.Picasso$RequestTransformer$1 -> com.squareup.picasso.Picasso$RequestTransformer$1:
    com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> transformRequest
com.squareup.picasso.PicassoDrawable -> com.squareup.picasso.PicassoDrawable:
    android.graphics.Paint DEBUG_PAINT -> DEBUG_PAINT
    float FADE_DURATION -> FADE_DURATION
    boolean debugging -> debugging
    float density -> density
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> loadedFrom
    android.graphics.drawable.Drawable placeholder -> placeholder
    long startTimeMillis -> startTimeMillis
    boolean animating -> animating
    int alpha -> alpha
    void setBitmap(android.widget.ImageView,android.content.Context,android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom,boolean,boolean) -> setBitmap
    void setPlaceholder(android.widget.ImageView,android.graphics.drawable.Drawable) -> setPlaceholder
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void drawDebugIndicator(android.graphics.Canvas) -> drawDebugIndicator
    android.graphics.Path getTrianglePath(android.graphics.Point,int) -> getTrianglePath
com.squareup.picasso.PicassoExecutorService -> com.squareup.picasso.PicassoExecutorService:
    int DEFAULT_THREAD_COUNT -> DEFAULT_THREAD_COUNT
    void adjustThreadCount(android.net.NetworkInfo) -> adjustThreadCount
    void setThreadCount(int) -> setThreadCount
    java.util.concurrent.Future submit(java.lang.Runnable) -> submit
com.squareup.picasso.PicassoExecutorService$PicassoFutureTask -> com.squareup.picasso.PicassoExecutorService$PicassoFutureTask:
    com.squareup.picasso.BitmapHunter hunter -> hunter
    int compareTo(com.squareup.picasso.PicassoExecutorService$PicassoFutureTask) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.squareup.picasso.RemoteViewsAction -> com.squareup.picasso.RemoteViewsAction:
    android.widget.RemoteViews remoteViews -> remoteViews
    int viewId -> viewId
    com.squareup.picasso.RemoteViewsAction$RemoteViewsTarget target -> target
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> complete
    void error() -> error
    com.squareup.picasso.RemoteViewsAction$RemoteViewsTarget getTarget() -> getTarget
    void setImageResource(int) -> setImageResource
    void update() -> update
    java.lang.Object getTarget() -> getTarget
com.squareup.picasso.RemoteViewsAction$AppWidgetAction -> com.squareup.picasso.RemoteViewsAction$AppWidgetAction:
    int[] appWidgetIds -> appWidgetIds
    void update() -> update
    java.lang.Object getTarget() -> getTarget
com.squareup.picasso.RemoteViewsAction$NotificationAction -> com.squareup.picasso.RemoteViewsAction$NotificationAction:
    int notificationId -> notificationId
    android.app.Notification notification -> notification
    void update() -> update
    java.lang.Object getTarget() -> getTarget
com.squareup.picasso.RemoteViewsAction$RemoteViewsTarget -> com.squareup.picasso.RemoteViewsAction$RemoteViewsTarget:
    android.widget.RemoteViews remoteViews -> remoteViews
    int viewId -> viewId
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.squareup.picasso.Request -> com.squareup.picasso.Request:
    long TOO_LONG_LOG -> TOO_LONG_LOG
    int id -> id
    long started -> started
    boolean loadFromLocalCacheOnly -> loadFromLocalCacheOnly
    android.net.Uri uri -> uri
    int resourceId -> resourceId
    java.lang.String stableKey -> stableKey
    java.util.List transformations -> transformations
    int targetWidth -> targetWidth
    int targetHeight -> targetHeight
    boolean centerCrop -> centerCrop
    boolean centerInside -> centerInside
    float rotationDegrees -> rotationDegrees
    float rotationPivotX -> rotationPivotX
    float rotationPivotY -> rotationPivotY
    boolean hasRotationPivot -> hasRotationPivot
    android.graphics.Bitmap$Config config -> config
    com.squareup.picasso.Picasso$Priority priority -> priority
    java.lang.String toString() -> toString
    java.lang.String logId() -> logId
    java.lang.String plainId() -> plainId
    java.lang.String getName() -> getName
    boolean hasSize() -> hasSize
    boolean needsTransformation() -> needsTransformation
    boolean needsMatrixTransform() -> needsMatrixTransform
    boolean hasCustomTransformations() -> hasCustomTransformations
    com.squareup.picasso.Request$Builder buildUpon() -> buildUpon
com.squareup.picasso.Request$1 -> com.squareup.picasso.Request$1:
com.squareup.picasso.Request$Builder -> com.squareup.picasso.Request$Builder:
    android.net.Uri uri -> uri
    int resourceId -> resourceId
    java.lang.String stableKey -> stableKey
    int targetWidth -> targetWidth
    int targetHeight -> targetHeight
    boolean centerCrop -> centerCrop
    boolean centerInside -> centerInside
    float rotationDegrees -> rotationDegrees
    float rotationPivotX -> rotationPivotX
    float rotationPivotY -> rotationPivotY
    boolean hasRotationPivot -> hasRotationPivot
    java.util.List transformations -> transformations
    android.graphics.Bitmap$Config config -> config
    com.squareup.picasso.Picasso$Priority priority -> priority
    boolean hasImage() -> hasImage
    boolean hasSize() -> hasSize
    boolean hasPriority() -> hasPriority
    com.squareup.picasso.Request$Builder setUri(android.net.Uri) -> setUri
    com.squareup.picasso.Request$Builder setResourceId(int) -> setResourceId
    com.squareup.picasso.Request$Builder stableKey(java.lang.String) -> stableKey
    com.squareup.picasso.Request$Builder resize(int,int) -> resize
    com.squareup.picasso.Request$Builder clearResize() -> clearResize
    com.squareup.picasso.Request$Builder centerCrop() -> centerCrop
    com.squareup.picasso.Request$Builder clearCenterCrop() -> clearCenterCrop
    com.squareup.picasso.Request$Builder centerInside() -> centerInside
    com.squareup.picasso.Request$Builder clearCenterInside() -> clearCenterInside
    com.squareup.picasso.Request$Builder rotate(float) -> rotate
    com.squareup.picasso.Request$Builder rotate(float,float,float) -> rotate
    com.squareup.picasso.Request$Builder clearRotation() -> clearRotation
    com.squareup.picasso.Request$Builder config(android.graphics.Bitmap$Config) -> config
    com.squareup.picasso.Request$Builder priority(com.squareup.picasso.Picasso$Priority) -> priority
    com.squareup.picasso.Request$Builder transform(com.squareup.picasso.Transformation) -> transform
    com.squareup.picasso.Request build() -> build
com.squareup.picasso.RequestCreator -> com.squareup.picasso.RequestCreator:
    int nextId -> nextId
    com.squareup.picasso.Picasso picasso -> picasso
    com.squareup.picasso.Request$Builder data -> data
    boolean skipMemoryCache -> skipMemoryCache
    boolean noFade -> noFade
    boolean deferred -> deferred
    boolean setPlaceholder -> setPlaceholder
    int placeholderResId -> placeholderResId
    int errorResId -> errorResId
    android.graphics.drawable.Drawable placeholderDrawable -> placeholderDrawable
    android.graphics.drawable.Drawable errorDrawable -> errorDrawable
    java.lang.Object tag -> tag
    int getRequestId() -> getRequestId
    com.squareup.picasso.RequestCreator noPlaceholder() -> noPlaceholder
    com.squareup.picasso.RequestCreator placeholder(int) -> placeholder
    com.squareup.picasso.RequestCreator placeholder(android.graphics.drawable.Drawable) -> placeholder
    com.squareup.picasso.RequestCreator error(int) -> error
    com.squareup.picasso.RequestCreator error(android.graphics.drawable.Drawable) -> error
    com.squareup.picasso.RequestCreator tag(java.lang.Object) -> tag
    com.squareup.picasso.RequestCreator fit() -> fit
    com.squareup.picasso.RequestCreator unfit() -> unfit
    com.squareup.picasso.RequestCreator resizeDimen(int,int) -> resizeDimen
    com.squareup.picasso.RequestCreator resize(int,int) -> resize
    com.squareup.picasso.RequestCreator centerCrop() -> centerCrop
    com.squareup.picasso.RequestCreator centerInside() -> centerInside
    com.squareup.picasso.RequestCreator rotate(float) -> rotate
    com.squareup.picasso.RequestCreator rotate(float,float,float) -> rotate
    com.squareup.picasso.RequestCreator config(android.graphics.Bitmap$Config) -> config
    com.squareup.picasso.RequestCreator stableKey(java.lang.String) -> stableKey
    com.squareup.picasso.RequestCreator priority(com.squareup.picasso.Picasso$Priority) -> priority
    com.squareup.picasso.RequestCreator transform(com.squareup.picasso.Transformation) -> transform
    com.squareup.picasso.RequestCreator skipMemoryCache() -> skipMemoryCache
    com.squareup.picasso.RequestCreator noFade() -> noFade
    android.graphics.Bitmap get() -> get
    void fetch() -> fetch
    void into(com.squareup.picasso.Target) -> into
    void into(android.widget.RemoteViews,int,int,android.app.Notification) -> into
    void into(android.widget.RemoteViews,int,int[]) -> into
    void into(android.widget.ImageView) -> into
    void into(android.widget.ImageView,com.squareup.picasso.Callback) -> into
    android.graphics.drawable.Drawable getPlaceholderDrawable() -> getPlaceholderDrawable
    com.squareup.picasso.Request createRequest(long) -> createRequest
    void performRemoteViewInto(com.squareup.picasso.RemoteViewsAction) -> performRemoteViewInto
    int access$000() -> access$000
com.squareup.picasso.RequestCreator$1 -> com.squareup.picasso.RequestCreator$1:
    java.util.concurrent.atomic.AtomicInteger val$id -> val$id
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    void run() -> run
com.squareup.picasso.RequestHandler -> com.squareup.picasso.RequestHandler:
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> load
    int getRetryCount() -> getRetryCount
    boolean shouldRetry(boolean,android.net.NetworkInfo) -> shouldRetry
    boolean supportsReplay() -> supportsReplay
    android.graphics.BitmapFactory$Options createBitmapOptions(com.squareup.picasso.Request) -> createBitmapOptions
    boolean requiresInSampleSize(android.graphics.BitmapFactory$Options) -> requiresInSampleSize
    void calculateInSampleSize(int,int,android.graphics.BitmapFactory$Options,com.squareup.picasso.Request) -> calculateInSampleSize
    void calculateInSampleSize(int,int,int,int,android.graphics.BitmapFactory$Options,com.squareup.picasso.Request) -> calculateInSampleSize
com.squareup.picasso.RequestHandler$Result -> com.squareup.picasso.RequestHandler$Result:
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> loadedFrom
    android.graphics.Bitmap bitmap -> bitmap
    int exifOrientation -> exifOrientation
    android.graphics.Bitmap getBitmap() -> getBitmap
    com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> getLoadedFrom
    int getExifOrientation() -> getExifOrientation
com.squareup.picasso.ResourceRequestHandler -> com.squareup.picasso.ResourceRequestHandler:
    android.content.Context context -> context
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request) -> load
    android.graphics.Bitmap decodeResource(android.content.res.Resources,int,com.squareup.picasso.Request) -> decodeResource
com.squareup.picasso.Stats -> com.squareup.picasso.Stats:
    int CACHE_HIT -> CACHE_HIT
    int CACHE_MISS -> CACHE_MISS
    int BITMAP_DECODE_FINISHED -> BITMAP_DECODE_FINISHED
    int BITMAP_TRANSFORMED_FINISHED -> BITMAP_TRANSFORMED_FINISHED
    int DOWNLOAD_FINISHED -> DOWNLOAD_FINISHED
    java.lang.String STATS_THREAD_NAME -> STATS_THREAD_NAME
    android.os.HandlerThread statsThread -> statsThread
    com.squareup.picasso.Cache cache -> cache
    android.os.Handler handler -> handler
    long cacheHits -> cacheHits
    long cacheMisses -> cacheMisses
    long totalDownloadSize -> totalDownloadSize
    long totalOriginalBitmapSize -> totalOriginalBitmapSize
    long totalTransformedBitmapSize -> totalTransformedBitmapSize
    long averageDownloadSize -> averageDownloadSize
    long averageOriginalBitmapSize -> averageOriginalBitmapSize
    long averageTransformedBitmapSize -> averageTransformedBitmapSize
    int downloadCount -> downloadCount
    int originalBitmapCount -> originalBitmapCount
    int transformedBitmapCount -> transformedBitmapCount
    void dispatchBitmapDecoded(android.graphics.Bitmap) -> dispatchBitmapDecoded
    void dispatchBitmapTransformed(android.graphics.Bitmap) -> dispatchBitmapTransformed
    void dispatchDownloadFinished(long) -> dispatchDownloadFinished
    void dispatchCacheHit() -> dispatchCacheHit
    void dispatchCacheMiss() -> dispatchCacheMiss
    void shutdown() -> shutdown
    void performCacheHit() -> performCacheHit
    void performCacheMiss() -> performCacheMiss
    void performDownloadFinished(java.lang.Long) -> performDownloadFinished
    void performBitmapDecoded(long) -> performBitmapDecoded
    void performBitmapTransformed(long) -> performBitmapTransformed
    com.squareup.picasso.StatsSnapshot createSnapshot() -> createSnapshot
    void processBitmap(android.graphics.Bitmap,int) -> processBitmap
    long getAverage(int,long) -> getAverage
com.squareup.picasso.Stats$StatsHandler -> com.squareup.picasso.Stats$StatsHandler:
    com.squareup.picasso.Stats stats -> stats
    void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Stats$StatsHandler$1 -> com.squareup.picasso.Stats$StatsHandler$1:
    android.os.Message val$msg -> val$msg
    com.squareup.picasso.Stats$StatsHandler this$0 -> this$0
    void run() -> run
com.squareup.picasso.StatsSnapshot -> com.squareup.picasso.StatsSnapshot:
    int maxSize -> maxSize
    int size -> size
    long cacheHits -> cacheHits
    long cacheMisses -> cacheMisses
    long totalDownloadSize -> totalDownloadSize
    long totalOriginalBitmapSize -> totalOriginalBitmapSize
    long totalTransformedBitmapSize -> totalTransformedBitmapSize
    long averageDownloadSize -> averageDownloadSize
    long averageOriginalBitmapSize -> averageOriginalBitmapSize
    long averageTransformedBitmapSize -> averageTransformedBitmapSize
    int downloadCount -> downloadCount
    int originalBitmapCount -> originalBitmapCount
    int transformedBitmapCount -> transformedBitmapCount
    long timeStamp -> timeStamp
    void dump() -> dump
    void dump(java.io.PrintWriter) -> dump
    java.lang.String toString() -> toString
com.squareup.picasso.Target -> com.squareup.picasso.Target:
    void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> onBitmapLoaded
    void onBitmapFailed(android.graphics.drawable.Drawable) -> onBitmapFailed
    void onPrepareLoad(android.graphics.drawable.Drawable) -> onPrepareLoad
com.squareup.picasso.TargetAction -> com.squareup.picasso.TargetAction:
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> complete
    void error() -> error
com.squareup.picasso.Transformation -> com.squareup.picasso.Transformation:
    android.graphics.Bitmap transform(android.graphics.Bitmap) -> transform
    java.lang.String key() -> key
com.squareup.picasso.UrlConnectionDownloader -> com.squareup.picasso.UrlConnectionDownloader:
    java.lang.String RESPONSE_SOURCE -> RESPONSE_SOURCE
    java.lang.Object lock -> lock
    java.lang.Object cache -> cache
    android.content.Context context -> context
    java.net.HttpURLConnection openConnection(android.net.Uri) -> openConnection
    com.squareup.picasso.Downloader$Response load(android.net.Uri,boolean) -> load
    void shutdown() -> shutdown
    void installCacheIfNeeded(android.content.Context) -> installCacheIfNeeded
com.squareup.picasso.UrlConnectionDownloader$ResponseCacheIcs -> com.squareup.picasso.UrlConnectionDownloader$ResponseCacheIcs:
    java.lang.Object install(android.content.Context) -> install
    void close(java.lang.Object) -> close
com.squareup.picasso.Utils -> com.squareup.picasso.Utils:
    java.lang.String THREAD_PREFIX -> THREAD_PREFIX
    java.lang.String THREAD_IDLE_NAME -> THREAD_IDLE_NAME
    int DEFAULT_READ_TIMEOUT -> DEFAULT_READ_TIMEOUT
    int DEFAULT_CONNECT_TIMEOUT -> DEFAULT_CONNECT_TIMEOUT
    java.lang.String PICASSO_CACHE -> PICASSO_CACHE
    int KEY_PADDING -> KEY_PADDING
    int MIN_DISK_CACHE_SIZE -> MIN_DISK_CACHE_SIZE
    int MAX_DISK_CACHE_SIZE -> MAX_DISK_CACHE_SIZE
    java.lang.StringBuilder MAIN_THREAD_KEY_BUILDER -> MAIN_THREAD_KEY_BUILDER
    java.lang.String OWNER_MAIN -> OWNER_MAIN
    java.lang.String OWNER_DISPATCHER -> OWNER_DISPATCHER
    java.lang.String OWNER_HUNTER -> OWNER_HUNTER
    java.lang.String VERB_CREATED -> VERB_CREATED
    java.lang.String VERB_CHANGED -> VERB_CHANGED
    java.lang.String VERB_IGNORED -> VERB_IGNORED
    java.lang.String VERB_ENQUEUED -> VERB_ENQUEUED
    java.lang.String VERB_CANCELED -> VERB_CANCELED
    java.lang.String VERB_BATCHED -> VERB_BATCHED
    java.lang.String VERB_RETRYING -> VERB_RETRYING
    java.lang.String VERB_EXECUTING -> VERB_EXECUTING
    java.lang.String VERB_DECODED -> VERB_DECODED
    java.lang.String VERB_TRANSFORMED -> VERB_TRANSFORMED
    java.lang.String VERB_JOINED -> VERB_JOINED
    java.lang.String VERB_REMOVED -> VERB_REMOVED
    java.lang.String VERB_DELIVERED -> VERB_DELIVERED
    java.lang.String VERB_REPLAYING -> VERB_REPLAYING
    java.lang.String VERB_COMPLETED -> VERB_COMPLETED
    java.lang.String VERB_ERRORED -> VERB_ERRORED
    java.lang.String VERB_PAUSED -> VERB_PAUSED
    java.lang.String VERB_RESUMED -> VERB_RESUMED
    int WEBP_FILE_HEADER_SIZE -> WEBP_FILE_HEADER_SIZE
    java.lang.String WEBP_FILE_HEADER_RIFF -> WEBP_FILE_HEADER_RIFF
    java.lang.String WEBP_FILE_HEADER_WEBP -> WEBP_FILE_HEADER_WEBP
    int getBitmapBytes(android.graphics.Bitmap) -> getBitmapBytes
    void checkNotMain() -> checkNotMain
    void checkMain() -> checkMain
    boolean isMain() -> isMain
    java.lang.String getLogIdsForHunter(com.squareup.picasso.BitmapHunter) -> getLogIdsForHunter
    java.lang.String getLogIdsForHunter(com.squareup.picasso.BitmapHunter,java.lang.String) -> getLogIdsForHunter
    void log(java.lang.String,java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> log
    java.lang.String createKey(com.squareup.picasso.Request) -> createKey
    java.lang.String createKey(com.squareup.picasso.Request,java.lang.StringBuilder) -> createKey
    void closeQuietly(java.io.InputStream) -> closeQuietly
    boolean parseResponseSourceHeader(java.lang.String) -> parseResponseSourceHeader
    com.squareup.picasso.Downloader createDefaultDownloader(android.content.Context) -> createDefaultDownloader
    void sneakyRethrow(java.lang.Throwable) -> sneakyRethrow
    void sneakyThrow2(java.lang.Throwable) -> sneakyThrow2
    java.io.File createDefaultCacheDir(android.content.Context) -> createDefaultCacheDir
    long calculateDiskCacheSize(java.io.File) -> calculateDiskCacheSize
    int calculateMemoryCacheSize(android.content.Context) -> calculateMemoryCacheSize
    boolean isAirplaneModeOn(android.content.Context) -> isAirplaneModeOn
    java.lang.Object getService(android.content.Context,java.lang.String) -> getService
    boolean hasPermission(android.content.Context,java.lang.String) -> hasPermission
    byte[] toByteArray(java.io.InputStream) -> toByteArray
    boolean isWebPFile(java.io.InputStream) -> isWebPFile
    int getResourceId(android.content.res.Resources,com.squareup.picasso.Request) -> getResourceId
    android.content.res.Resources getResources(android.content.Context,com.squareup.picasso.Request) -> getResources
com.squareup.picasso.Utils$ActivityManagerHoneycomb -> com.squareup.picasso.Utils$ActivityManagerHoneycomb:
    int getLargeMemoryClass(android.app.ActivityManager) -> getLargeMemoryClass
com.squareup.picasso.Utils$BitmapHoneycombMR1 -> com.squareup.picasso.Utils$BitmapHoneycombMR1:
    int getByteCount(android.graphics.Bitmap) -> getByteCount
com.squareup.picasso.Utils$OkHttpLoaderCreator -> com.squareup.picasso.Utils$OkHttpLoaderCreator:
    com.squareup.picasso.Downloader create(android.content.Context) -> create
com.squareup.picasso.Utils$PicassoThread -> com.squareup.picasso.Utils$PicassoThread:
    void run() -> run
com.squareup.picasso.Utils$PicassoThreadFactory -> com.squareup.picasso.Utils$PicassoThreadFactory:
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.umeng.analytics.AnalyticsConfig -> com.umeng.analytics.AnalyticsConfig:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String mWrapperType -> mWrapperType
    java.lang.String mWrapperVersion -> mWrapperVersion
    int mVerticalType -> mVerticalType
    java.lang.String GPU_VENDER -> GPU_VENDER
    java.lang.String GPU_RENDERER -> GPU_RENDERER
    boolean sEncrypt -> sEncrypt
    int sLatentWindow -> sLatentWindow
    double[] c -> c
    boolean ACTIVITY_DURATION_OPEN -> ACTIVITY_DURATION_OPEN
    boolean COMPRESS_DATA -> COMPRESS_DATA
    boolean ENABLE_MEMORY_BUFFER -> ENABLE_MEMORY_BUFFER
    boolean CATCH_EXCEPTION -> CATCH_EXCEPTION
    long kContinueSessionMillis -> kContinueSessionMillis
    void enableEncrypt(boolean) -> enableEncrypt
    void setAppkey(android.content.Context,java.lang.String) -> setAppkey
    void setChannel(java.lang.String) -> setChannel
    java.lang.String getAppkey(android.content.Context) -> getAppkey
    java.lang.String getChannel(android.content.Context) -> getChannel
    java.lang.String getSDKVersion() -> getSDKVersion
    double[] getLocation() -> getLocation
    void setLocation(double,double) -> setLocation
    void setLatencyWindow(long) -> setLatencyWindow
com.umeng.analytics.Gender -> com.umeng.analytics.Gender:
    com.umeng.analytics.Gender Male -> Male
    com.umeng.analytics.Gender Female -> Female
    com.umeng.analytics.Gender Unknown -> Unknown
    int value -> value
    com.umeng.analytics.Gender[] a -> a
    com.umeng.analytics.Gender[] values() -> values
    com.umeng.analytics.Gender valueOf(java.lang.String) -> valueOf
    int value() -> value
    com.umeng.analytics.Gender getGender(int) -> getGender
    u.aly.ay transGender(com.umeng.analytics.Gender) -> transGender
com.umeng.analytics.Gender$1 -> com.umeng.analytics.Gender$1:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$2 -> com.umeng.analytics.Gender$2:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$3 -> com.umeng.analytics.Gender$3:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$4 -> com.umeng.analytics.Gender$4:
    int[] a -> a
com.umeng.analytics.MobclickAgent -> com.umeng.analytics.MobclickAgent:
    java.lang.String a -> a
    com.umeng.analytics.d b -> b
    void setAutoLocation(boolean) -> setAutoLocation
    void setCatchUncaughtExceptions(boolean) -> setCatchUncaughtExceptions
    void setWrapper(java.lang.String,java.lang.String) -> setWrapper
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void setEnableEventBuffer(boolean) -> setEnableEventBuffer
    void setOnlineConfigureListener(java.lang.Object) -> setOnlineConfigureListener
    com.umeng.analytics.d getAgent() -> getAgent
    void setOpenGLContext(javax.microedition.khronos.opengles.GL10) -> setOpenGLContext
    void openActivityDurationTrack(boolean) -> openActivityDurationTrack
    void onPageStart(java.lang.String) -> onPageStart
    void onPageEnd(java.lang.String) -> onPageEnd
    void setDebugMode(boolean) -> setDebugMode
    void onPause(android.content.Context) -> onPause
    void onResume(android.content.Context) -> onResume
    void onResume(android.content.Context,java.lang.String,java.lang.String) -> onResume
    void reportError(android.content.Context,java.lang.String) -> reportError
    void reportError(android.content.Context,java.lang.Throwable) -> reportError
    void flush(android.content.Context) -> flush
    void onEvent(android.content.Context,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.util.Map) -> onEvent
    void onEventDuration(android.content.Context,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.util.Map,long) -> onEventDuration
    void onEventValue(android.content.Context,java.lang.String,java.util.Map,int) -> onEventValue
    void onEventBegin(android.content.Context,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String) -> onEventEnd
    void onEventBegin(android.content.Context,java.lang.String,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onEventEnd
    void onKVEventBegin(android.content.Context,java.lang.String,java.util.Map,java.lang.String) -> onKVEventBegin
    void onKVEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onKVEventEnd
    void onSocialEvent(android.content.Context,java.lang.String,com.umeng.analytics.social.UMPlatformData[]) -> onSocialEvent
    void onSocialEvent(android.content.Context,com.umeng.analytics.social.UMPlatformData[]) -> onSocialEvent
    java.lang.String getConfigParams(android.content.Context,java.lang.String) -> getConfigParams
    void updateOnlineConfig(android.content.Context,java.lang.String,java.lang.String) -> updateOnlineConfig
    void updateOnlineConfig(android.content.Context) -> updateOnlineConfig
    void setUserID(android.content.Context,java.lang.String,java.lang.String,com.umeng.analytics.Gender,int) -> setUserID
    void onKillProcess(android.content.Context) -> onKillProcess
    void onProfileSignIn(java.lang.String) -> onProfileSignIn
    void onProfileSignIn(java.lang.String,java.lang.String) -> onProfileSignIn
    void onProfileSignOff() -> onProfileSignOff
com.umeng.analytics.MobclickAgentJSInterface -> com.umeng.analytics.MobclickAgentJSInterface:
    android.content.Context a -> a
    android.content.Context a(com.umeng.analytics.MobclickAgentJSInterface) -> a
com.umeng.analytics.MobclickAgentJSInterface$a -> com.umeng.analytics.MobclickAgentJSInterface$a:
    android.webkit.WebChromeClient a -> a
    java.lang.String c -> c
    java.lang.String d -> d
    com.umeng.analytics.MobclickAgentJSInterface b -> b
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message) -> onCreateWindow
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap) -> onReceivedIcon
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    void onRequestFocus(android.webkit.WebView) -> onRequestFocus
com.umeng.analytics.ReportPolicy -> com.umeng.analytics.ReportPolicy:
    int REALTIME -> REALTIME
    int BATCH_AT_LAUNCH -> BATCH_AT_LAUNCH
    int a -> a
    int b -> b
    int DAILY -> DAILY
    int WIFIONLY -> WIFIONLY
    int BATCH_BY_INTERVAL -> BATCH_BY_INTERVAL
    int SMART_POLICY -> SMART_POLICY
    boolean a(int) -> a
com.umeng.analytics.ReportPolicy$a -> com.umeng.analytics.ReportPolicy$a:
    long a -> a
    u.aly.aa b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$b -> com.umeng.analytics.ReportPolicy$b:
    u.aly.al a -> a
    u.aly.aa b -> b
    boolean a(boolean) -> a
    boolean a() -> a
com.umeng.analytics.ReportPolicy$c -> com.umeng.analytics.ReportPolicy$c:
    long a -> a
    long b -> b
    boolean a(boolean) -> a
    boolean a() -> a
com.umeng.analytics.ReportPolicy$d -> com.umeng.analytics.ReportPolicy$d:
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$e -> com.umeng.analytics.ReportPolicy$e:
    long a -> a
    long b -> b
    long c -> c
    u.aly.aa d -> d
    boolean a(boolean) -> a
    void a(long) -> a
    long b() -> b
    boolean a(int) -> a
com.umeng.analytics.ReportPolicy$f -> com.umeng.analytics.ReportPolicy$f:
    int a -> a
    u.aly.s b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$g -> com.umeng.analytics.ReportPolicy$g:
    long a -> a
    u.aly.aa b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$h -> com.umeng.analytics.ReportPolicy$h:
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$i -> com.umeng.analytics.ReportPolicy$i:
    boolean a(boolean) -> a
    boolean a() -> a
com.umeng.analytics.ReportPolicy$j -> com.umeng.analytics.ReportPolicy$j:
    android.content.Context a -> a
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$k -> com.umeng.analytics.ReportPolicy$k:
    long a -> a
    u.aly.aa b -> b
    boolean a(boolean) -> a
com.umeng.analytics.a -> com.umeng.analytics.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    long g -> g
    long h -> h
    boolean i -> i
    int j -> j
    int k -> k
    int l -> l
com.umeng.analytics.b -> com.umeng.analytics.b:
    byte[] a -> a
    byte[] a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    byte[] b(byte[]) -> b
    byte[] a(byte[],byte[]) -> a
    byte[] b(byte[],byte[]) -> b
    int a(int,java.lang.String) -> a
com.umeng.analytics.c -> com.umeng.analytics.c:
    void a() -> a
    void b() -> b
com.umeng.analytics.d -> com.umeng.analytics.d:
    android.content.Context a -> a
    com.umeng.analytics.c b -> b
    u.aly.n c -> c
    u.aly.ad d -> d
    u.aly.z e -> e
    u.aly.o f -> f
    u.aly.l g -> g
    boolean h -> h
    void e(android.content.Context) -> e
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(com.umeng.analytics.c) -> a
    void a(int) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    u.aly.z a() -> a
    void a(android.content.Context,java.lang.String,java.util.HashMap) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.Throwable) -> a
    void f(android.content.Context) -> f
    void g(android.content.Context) -> g
    void c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String,java.lang.String,long,int) -> a
    void a(android.content.Context,java.lang.String,java.util.Map,long) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void a(android.content.Context,java.lang.String,java.util.HashMap,java.lang.String) -> a
    void c(android.content.Context,java.lang.String,java.lang.String) -> c
    void d(android.content.Context) -> d
    void a(java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b() -> b
    void a(com.umeng.analytics.d,android.content.Context) -> a
    void b(com.umeng.analytics.d,android.content.Context) -> b
    u.aly.o a(com.umeng.analytics.d) -> a
    android.content.Context b(com.umeng.analytics.d) -> b
com.umeng.analytics.d$1 -> com.umeng.analytics.d$1:
    android.content.Context a -> a
    com.umeng.analytics.d b -> b
    void a() -> a
com.umeng.analytics.d$2 -> com.umeng.analytics.d$2:
    android.content.Context a -> a
    com.umeng.analytics.d b -> b
    void a() -> a
com.umeng.analytics.d$3 -> com.umeng.analytics.d$3:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.d c -> c
    void a() -> a
com.umeng.analytics.d$4 -> com.umeng.analytics.d$4:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.d c -> c
    void a() -> a
com.umeng.analytics.d$5 -> com.umeng.analytics.d$5:
    java.lang.String a -> a
    java.util.HashMap b -> b
    java.lang.String c -> c
    com.umeng.analytics.d d -> d
    void a() -> a
com.umeng.analytics.d$6 -> com.umeng.analytics.d$6:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.d c -> c
    void a() -> a
com.umeng.analytics.d$7 -> com.umeng.analytics.d$7:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.d c -> c
    void a() -> a
com.umeng.analytics.d$8 -> com.umeng.analytics.d$8:
    com.umeng.analytics.d a -> a
    void a() -> a
com.umeng.analytics.e -> com.umeng.analytics.e:
    java.lang.String[] a -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String[] a(android.content.Context) -> a
    void b(android.content.Context) -> b
com.umeng.analytics.f -> com.umeng.analytics.f:
    java.util.List a -> a
    java.util.concurrent.ExecutorService b -> b
    long c -> c
    java.util.concurrent.ScheduledExecutorService d -> d
    void a(java.lang.Runnable) -> a
    void a() -> a
    void b(java.lang.Runnable) -> b
    void a(java.lang.Runnable,long) -> a
    void c(java.lang.Runnable) -> c
com.umeng.analytics.g -> com.umeng.analytics.g:
    void run() -> run
    void a() -> a
com.umeng.analytics.h -> com.umeng.analytics.h:
    com.umeng.analytics.h a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    com.umeng.analytics.h$a d -> d
    long e -> e
    long f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    com.umeng.analytics.h a(android.content.Context) -> a
    boolean a(java.io.File) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String[] a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    byte[] e() -> e
    void a(byte[]) -> a
    void f() -> f
    void b(byte[]) -> b
    boolean g() -> g
    com.umeng.analytics.h$a h() -> h
    android.content.SharedPreferences l() -> l
    android.content.SharedPreferences i() -> i
    android.content.SharedPreferences j() -> j
    android.content.SharedPreferences k() -> k
    java.lang.String m() -> m
    java.lang.String n() -> n
com.umeng.analytics.h$a -> com.umeng.analytics.h$a:
    int a -> a
    java.io.File b -> b
    java.io.FilenameFilter c -> c
    boolean a() -> a
    void a(com.umeng.analytics.h$b) -> a
    void a(byte[]) -> a
    void b() -> b
    int c() -> c
com.umeng.analytics.h$a$1 -> com.umeng.analytics.h$a$1:
    com.umeng.analytics.h$a a -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.umeng.analytics.h$b -> com.umeng.analytics.h$b:
    void a(java.io.File) -> a
    boolean b(java.io.File) -> b
    void c(java.io.File) -> c
com.umeng.analytics.social.UMPlatformData -> com.umeng.analytics.social.UMPlatformData:
    com.umeng.analytics.social.UMPlatformData$UMedia a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.umeng.analytics.social.UMPlatformData$GENDER e -> e
    java.lang.String getWeiboId() -> getWeiboId
    void setWeiboId(java.lang.String) -> setWeiboId
    com.umeng.analytics.social.UMPlatformData$UMedia getMeida() -> getMeida
    java.lang.String getUsid() -> getUsid
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.umeng.analytics.social.UMPlatformData$GENDER getGender() -> getGender
    void setGender(com.umeng.analytics.social.UMPlatformData$GENDER) -> setGender
    boolean isValid() -> isValid
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$1 -> com.umeng.analytics.social.UMPlatformData$1:
com.umeng.analytics.social.UMPlatformData$GENDER -> com.umeng.analytics.social.UMPlatformData$GENDER:
    com.umeng.analytics.social.UMPlatformData$GENDER MALE -> MALE
    com.umeng.analytics.social.UMPlatformData$GENDER FEMALE -> FEMALE
    int value -> value
    com.umeng.analytics.social.UMPlatformData$GENDER[] a -> a
    com.umeng.analytics.social.UMPlatformData$GENDER[] values() -> values
    com.umeng.analytics.social.UMPlatformData$GENDER valueOf(java.lang.String) -> valueOf
com.umeng.analytics.social.UMPlatformData$GENDER$1 -> com.umeng.analytics.social.UMPlatformData$GENDER$1:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$GENDER$2 -> com.umeng.analytics.social.UMPlatformData$GENDER$2:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia -> com.umeng.analytics.social.UMPlatformData$UMedia:
    com.umeng.analytics.social.UMPlatformData$UMedia SINA_WEIBO -> SINA_WEIBO
    com.umeng.analytics.social.UMPlatformData$UMedia TENCENT_WEIBO -> TENCENT_WEIBO
    com.umeng.analytics.social.UMPlatformData$UMedia TENCENT_QZONE -> TENCENT_QZONE
    com.umeng.analytics.social.UMPlatformData$UMedia TENCENT_QQ -> TENCENT_QQ
    com.umeng.analytics.social.UMPlatformData$UMedia WEIXIN_FRIENDS -> WEIXIN_FRIENDS
    com.umeng.analytics.social.UMPlatformData$UMedia WEIXIN_CIRCLE -> WEIXIN_CIRCLE
    com.umeng.analytics.social.UMPlatformData$UMedia RENREN -> RENREN
    com.umeng.analytics.social.UMPlatformData$UMedia DOUBAN -> DOUBAN
    com.umeng.analytics.social.UMPlatformData$UMedia[] a -> a
    com.umeng.analytics.social.UMPlatformData$UMedia[] values() -> values
    com.umeng.analytics.social.UMPlatformData$UMedia valueOf(java.lang.String) -> valueOf
com.umeng.analytics.social.UMPlatformData$UMedia$1 -> com.umeng.analytics.social.UMPlatformData$UMedia$1:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$2 -> com.umeng.analytics.social.UMPlatformData$UMedia$2:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$3 -> com.umeng.analytics.social.UMPlatformData$UMedia$3:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$4 -> com.umeng.analytics.social.UMPlatformData$UMedia$4:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$5 -> com.umeng.analytics.social.UMPlatformData$UMedia$5:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$6 -> com.umeng.analytics.social.UMPlatformData$UMedia$6:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$7 -> com.umeng.analytics.social.UMPlatformData$UMedia$7:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMPlatformData$UMedia$8 -> com.umeng.analytics.social.UMPlatformData$UMedia$8:
    java.lang.String toString() -> toString
com.umeng.analytics.social.UMSocialService -> com.umeng.analytics.social.UMSocialService:
    void a(android.content.Context,com.umeng.analytics.social.UMSocialService$b,java.lang.String,com.umeng.analytics.social.UMPlatformData[]) -> a
    void share(android.content.Context,java.lang.String,com.umeng.analytics.social.UMPlatformData[]) -> share
    void share(android.content.Context,com.umeng.analytics.social.UMPlatformData[]) -> share
com.umeng.analytics.social.UMSocialService$a -> com.umeng.analytics.social.UMSocialService$a:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.social.UMSocialService$b c -> c
    com.umeng.analytics.social.UMPlatformData[] d -> d
    void onPreExecute() -> onPreExecute
    com.umeng.analytics.social.d a(java.lang.Void[]) -> a
    void a(com.umeng.analytics.social.d) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.analytics.social.UMSocialService$b -> com.umeng.analytics.social.UMSocialService$b:
    void a() -> a
    void a(com.umeng.analytics.social.d,com.umeng.analytics.social.UMPlatformData[]) -> a
com.umeng.analytics.social.a -> com.umeng.analytics.social.a:
    long b -> b
    int a -> a
    java.lang.String c -> c
    int a() -> a
    java.lang.String getMessage() -> getMessage
com.umeng.analytics.social.b -> com.umeng.analytics.social.b:
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Exception) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> e
com.umeng.analytics.social.c -> com.umeng.analytics.social.c:
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
com.umeng.analytics.social.d -> com.umeng.analytics.social.d:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.Exception d -> d
    java.lang.Exception a() -> a
    int b() -> b
    void a(int) -> a
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    java.lang.String toString() -> toString
com.umeng.analytics.social.e -> com.umeng.analytics.social.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    int t -> t
    int u -> u
    boolean v -> v
com.umeng.analytics.social.f -> com.umeng.analytics.social.f:
    java.util.Map a -> a
    java.lang.String[] a(android.content.Context,java.lang.String,com.umeng.analytics.social.UMPlatformData[]) -> a
    java.lang.String a(java.util.List) -> a
    java.util.List a(com.umeng.analytics.social.UMPlatformData[]) -> a
    java.lang.String b(com.umeng.analytics.social.UMPlatformData[]) -> b
    java.util.Map c(android.content.Context) -> c
    java.lang.String a(android.content.Context) -> a
    java.util.Map b(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String d(android.content.Context) -> d
com.xonami.javaBells.DefaultJingleSession -> com.xonami.javaBells.DefaultJingleSession:
    java.lang.String TAG -> TAG
    com.xonami.javaBells.JinglePacketHandler jinglePacketHandler -> jinglePacketHandler
    java.lang.String myJid -> myJid
    java.lang.String sessionId -> sessionId
    org.jivesoftware.smack.XMPPConnection connection -> connection
    com.xonami.javaBells.DefaultJingleSession$SessionState state -> state
    java.lang.String peerJid -> peerJid
    boolean checkAndAck(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> checkAndAck
    boolean check(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> check
    void closeSession(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason) -> closeSession
    void ack(org.jivesoftware.smack.packet.IQ) -> ack
    void unsupportedInfo(org.jivesoftware.smack.packet.IQ) -> unsupportedInfo
    void handleContentAcept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentAcept
    void handleContentAdd(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentAdd
    void handleContentModify(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentModify
    void handleContentReject(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentReject
    void handleContentRemove(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentRemove
    void handleDescriptionInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleDescriptionInfo
    void handleSecurityInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSecurityInfo
    void handleSessionAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionAccept
    void handleSessionInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionInfo
    void handleSessionInitiate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionInitiate
    void handleSessionTerminate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionTerminate
    void handleTransportAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleTransportAccept
    void handleTransportInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleTransportInfo
    void handleTransportReject(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleTransportReject
    void handleSessionReplace(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionReplace
    java.lang.String getSessionId() -> getSessionId
com.xonami.javaBells.DefaultJingleSession$1 -> com.xonami.javaBells.a:
    com.xonami.javaBells.DefaultJingleSession this$0 -> a
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason val$reason -> b
    void run() -> run
com.xonami.javaBells.DefaultJingleSession$2 -> com.xonami.javaBells.b:
    com.xonami.javaBells.DefaultJingleSession this$0 -> a
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
com.xonami.javaBells.DefaultJingleSession$SessionState -> com.xonami.javaBells.DefaultJingleSession$SessionState:
    com.xonami.javaBells.DefaultJingleSession$SessionState NEW -> NEW
    com.xonami.javaBells.DefaultJingleSession$SessionState NEGOTIATING_TRANSPORT -> NEGOTIATING_TRANSPORT
    com.xonami.javaBells.DefaultJingleSession$SessionState OPEN -> OPEN
    com.xonami.javaBells.DefaultJingleSession$SessionState CLOSED -> CLOSED
    com.xonami.javaBells.DefaultJingleSession$SessionState[] ENUM$VALUES -> a
    com.xonami.javaBells.DefaultJingleSession$SessionState[] values() -> values
    com.xonami.javaBells.DefaultJingleSession$SessionState valueOf(java.lang.String) -> valueOf
com.xonami.javaBells.JingleActionEnum -> com.xonami.javaBells.JingleActionEnum:
    com.xonami.javaBells.JingleActionEnum UNKNOWN -> UNKNOWN
    com.xonami.javaBells.JingleActionEnum CONTENT_ACCEPT -> CONTENT_ACCEPT
    com.xonami.javaBells.JingleActionEnum CONTENT_ADD -> CONTENT_ADD
    com.xonami.javaBells.JingleActionEnum CONTENT_MODIFY -> CONTENT_MODIFY
    com.xonami.javaBells.JingleActionEnum CONTENT_REMOVE -> CONTENT_REMOVE
    com.xonami.javaBells.JingleActionEnum SESSION_ACCEPT -> SESSION_ACCEPT
    com.xonami.javaBells.JingleActionEnum SESSION_INFO -> SESSION_INFO
    com.xonami.javaBells.JingleActionEnum SESSION_INITIATE -> SESSION_INITIATE
    com.xonami.javaBells.JingleActionEnum SESSION_TERMINATE -> SESSION_TERMINATE
    com.xonami.javaBells.JingleActionEnum TRANSPORT_INFO -> TRANSPORT_INFO
    java.lang.String actionCode -> a
    com.xonami.javaBells.JingleActionEnum[] ENUM$VALUES -> b
    java.lang.String toString() -> toString
    com.xonami.javaBells.JingleActionEnum getAction(java.lang.String) -> getAction
    com.xonami.javaBells.JingleActionEnum[] values() -> values
    com.xonami.javaBells.JingleActionEnum valueOf(java.lang.String) -> valueOf
com.xonami.javaBells.JingleManager -> com.xonami.javaBells.c:
    boolean enabled -> a
    void enableJingle() -> a
com.xonami.javaBells.JingleManager$1 -> com.xonami.javaBells.d:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
com.xonami.javaBells.JinglePacketHandler -> com.xonami.javaBells.e:
    java.util.HashMap jingleSessions -> jingleSessions
    java.util.HashMap deadSessions -> deadSessions
    org.jivesoftware.smack.XMPPConnection connection -> connection
    int[] $SWITCH_TABLE$net$java$sip$communicator$impl$protocol$jabber$extensions$jingle$JingleAction -> $SWITCH_TABLE$net$java$sip$communicator$impl$protocol$jabber$extensions$jingle$JingleAction
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    com.xonami.javaBells.JingleSession removeJingleSession(com.xonami.javaBells.JingleSession) -> removeJingleSession
    com.xonami.javaBells.JingleSession createInitateJingleSession(java.lang.String) -> createInitateJingleSession
    com.xonami.javaBells.JingleSession createJingleSession(java.lang.String,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> createJingleSession
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    void clear() -> clear
    int[] $SWITCH_TABLE$net$java$sip$communicator$impl$protocol$jabber$extensions$jingle$JingleAction() -> $SWITCH_TABLE$net$java$sip$communicator$impl$protocol$jabber$extensions$jingle$JingleAction
com.xonami.javaBells.JingleSession -> com.xonami.javaBells.f:
    void handleContentAcept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentAcept
    void handleContentAdd(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentAdd
    void handleContentModify(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentModify
    void handleContentReject(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentReject
    void handleContentRemove(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentRemove
    void handleDescriptionInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleDescriptionInfo
    void handleSecurityInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSecurityInfo
    void handleSessionAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionAccept
    void handleSessionInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionInfo
    void handleSessionInitiate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionInitiate
    void handleSessionTerminate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionTerminate
    void handleTransportAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleTransportAccept
    void handleTransportInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleTransportInfo
    void handleTransportReject(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleTransportReject
    void handleSessionReplace(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionReplace
    java.lang.String getSessionId() -> getSessionId
com.xonami.javaBells.MediaType -> com.xonami.javaBells.MediaType:
    com.xonami.javaBells.MediaType Audio -> Audio
    com.xonami.javaBells.MediaType Video -> Video
    com.xonami.javaBells.MediaType[] ENUM$VALUES -> a
    com.xonami.javaBells.MediaType[] values() -> values
    com.xonami.javaBells.MediaType valueOf(java.lang.String) -> valueOf
com.zcw.togglebutton.ToggleButton -> com.zcw.togglebutton.ToggleButton:
    com.facebook.rebound.SpringSystem springSystem -> springSystem
    com.facebook.rebound.Spring spring -> spring
    float radius -> radius
    int onColor -> onColor
    int offBorderColor -> offBorderColor
    int offColor -> offColor
    int spotColor -> spotColor
    int borderColor -> borderColor
    android.graphics.Paint paint -> paint
    boolean toggleOn -> toggleOn
    int borderWidth -> borderWidth
    float centerY -> centerY
    float startX -> startX
    float endX -> endX
    float spotMinX -> spotMinX
    float spotMaxX -> spotMaxX
    int spotSize -> spotSize
    float spotX -> spotX
    float offLineWidth -> offLineWidth
    com.facebook.rebound.SimpleSpringListener springListener -> springListener
    void setup(android.util.AttributeSet) -> setup
    void onLayout(boolean,int,int,int,int) -> onLayout
    void draw(android.graphics.Canvas) -> draw
    float access$0(com.zcw.togglebutton.ToggleButton) -> access$0
    float access$1(com.zcw.togglebutton.ToggleButton) -> access$1
    void access$2(com.zcw.togglebutton.ToggleButton,float) -> access$2
    int access$3(com.zcw.togglebutton.ToggleButton) -> access$3
    void access$4(com.zcw.togglebutton.ToggleButton,float) -> access$4
    int access$5(com.zcw.togglebutton.ToggleButton) -> access$5
    int access$6(com.zcw.togglebutton.ToggleButton) -> access$6
    void access$7(com.zcw.togglebutton.ToggleButton,int) -> access$7
    com.facebook.rebound.Spring access$8(com.zcw.togglebutton.ToggleButton) -> access$8
    boolean access$9(com.zcw.togglebutton.ToggleButton) -> access$9
    void access$10(com.zcw.togglebutton.ToggleButton,boolean) -> access$10
com.zcw.togglebutton.ToggleButton$1 -> com.zcw.togglebutton.ToggleButton$1:
    com.zcw.togglebutton.ToggleButton this$0 -> this$0
    void onSpringUpdate(com.facebook.rebound.Spring) -> onSpringUpdate
com.zcw.togglebutton.ToggleButton$2 -> com.zcw.togglebutton.ToggleButton$2:
    com.zcw.togglebutton.ToggleButton this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.zcw.togglebutton.package-info -> com.zcw.togglebutton.package-info:
de.measite.smack.AndroidDebugger -> de.measite.smack.AndroidDebugger:
    boolean printInterpreted -> printInterpreted
    java.text.SimpleDateFormat dateFormatter -> a
    org.jivesoftware.smack.Connection connection -> b
    org.jivesoftware.smack.PacketListener listener -> c
    org.jivesoftware.smack.ConnectionListener connListener -> d
    java.io.Writer writer -> e
    java.io.Reader reader -> f
    org.jivesoftware.smack.util.ReaderListener readerListener -> g
    org.jivesoftware.smack.util.WriterListener writerListener -> h
    void createDebug() -> a
    java.io.Reader newConnectionReader(java.io.Reader) -> newConnectionReader
    java.io.Writer newConnectionWriter(java.io.Writer) -> newConnectionWriter
    void userHasLogged(java.lang.String) -> userHasLogged
    java.io.Reader getReader() -> getReader
    java.io.Writer getWriter() -> getWriter
    org.jivesoftware.smack.PacketListener getReaderListener() -> getReaderListener
    org.jivesoftware.smack.PacketListener getWriterListener() -> getWriterListener
    java.text.SimpleDateFormat access$0(de.measite.smack.AndroidDebugger) -> a
    org.jivesoftware.smack.Connection access$1(de.measite.smack.AndroidDebugger) -> b
de.measite.smack.AndroidDebugger$1 -> de.measite.smack.a:
    de.measite.smack.AndroidDebugger this$0 -> a
    void read(java.lang.String) -> read
de.measite.smack.AndroidDebugger$2 -> de.measite.smack.b:
    de.measite.smack.AndroidDebugger this$0 -> a
    void write(java.lang.String) -> write
de.measite.smack.AndroidDebugger$3 -> de.measite.smack.c:
    de.measite.smack.AndroidDebugger this$0 -> a
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
de.measite.smack.AndroidDebugger$4 -> de.measite.smack.d:
    de.measite.smack.AndroidDebugger this$0 -> a
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectingIn(int) -> reconnectingIn
de.measite.smack.Sasl -> de.measite.smack.Sasl:
    java.lang.String POLICY_NOPLAINTEXT -> POLICY_NOPLAINTEXT
    java.lang.String POLICY_NOACTIVE -> POLICY_NOACTIVE
    java.lang.String POLICY_NODICTIONARY -> POLICY_NODICTIONARY
    java.lang.String POLICY_NOANONYMOUS -> POLICY_NOANONYMOUS
    java.lang.String POLICY_FORWARD_SECRECY -> POLICY_FORWARD_SECRECY
    java.lang.String POLICY_PASS_CREDENTIALS -> POLICY_PASS_CREDENTIALS
    java.lang.String MAX_BUFFER -> MAX_BUFFER
    java.lang.String RAW_SEND_SIZE -> RAW_SEND_SIZE
    java.lang.String REUSE -> REUSE
    java.lang.String QOP -> QOP
    java.lang.String STRENGTH -> STRENGTH
    java.lang.String SERVER_AUTH -> SERVER_AUTH
    java.util.Enumeration getSaslClientFactories() -> getSaslClientFactories
    java.util.Enumeration getSaslServerFactories() -> getSaslServerFactories
    org.apache.harmony.javax.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslServer
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
de.measite.smack.SaslClientFactory -> de.measite.smack.e:
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
internal.org.apache.http.entity.mime.FormBodyPart -> internal.org.apache.http.entity.mime.a:
    java.lang.String name -> a
    internal.org.apache.http.entity.mime.Header header -> b
    internal.org.apache.http.entity.mime.content.ContentBody body -> c
    java.lang.String getName() -> a
    internal.org.apache.http.entity.mime.content.ContentBody getBody() -> b
    internal.org.apache.http.entity.mime.Header getHeader() -> c
    void addField(java.lang.String,java.lang.String) -> a
    void generateContentDisp(internal.org.apache.http.entity.mime.content.ContentBody) -> a
    void generateContentType(internal.org.apache.http.entity.mime.content.ContentBody) -> b
    void generateTransferEncoding(internal.org.apache.http.entity.mime.content.ContentBody) -> c
internal.org.apache.http.entity.mime.Header -> internal.org.apache.http.entity.mime.b:
    java.util.List fields -> a
    java.util.Map fieldMap -> b
    void addField(internal.org.apache.http.entity.mime.MinimalField) -> a
    internal.org.apache.http.entity.mime.MinimalField getField(java.lang.String) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
internal.org.apache.http.entity.mime.HttpMultipart -> internal.org.apache.http.entity.mime.c:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> a
    org.apache.http.util.ByteArrayBuffer CR_LF -> b
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> c
    java.lang.String subType -> d
    java.nio.charset.Charset charset -> e
    java.lang.String boundary -> f
    java.util.List parts -> g
    internal.org.apache.http.entity.mime.HttpMultipartMode mode -> h
    int[] $SWITCH_TABLE$internal$org$apache$http$entity$mime$HttpMultipartMode -> i
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> a
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.io.OutputStream) -> a
    void writeField(internal.org.apache.http.entity.mime.MinimalField,java.io.OutputStream) -> a
    void writeField(internal.org.apache.http.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> a
    java.util.List getBodyParts() -> a
    void addBodyPart(internal.org.apache.http.entity.mime.FormBodyPart) -> a
    java.lang.String getBoundary() -> b
    void doWriteTo(internal.org.apache.http.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> a
    void writeTo(java.io.OutputStream) -> a
    long getTotalLength() -> c
    int[] $SWITCH_TABLE$internal$org$apache$http$entity$mime$HttpMultipartMode() -> d
internal.org.apache.http.entity.mime.HttpMultipartMode -> internal.org.apache.http.entity.mime.HttpMultipartMode:
    internal.org.apache.http.entity.mime.HttpMultipartMode STRICT -> STRICT
    internal.org.apache.http.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    internal.org.apache.http.entity.mime.HttpMultipartMode[] ENUM$VALUES -> a
    internal.org.apache.http.entity.mime.HttpMultipartMode[] values() -> values
    internal.org.apache.http.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
internal.org.apache.http.entity.mime.MIME -> internal.org.apache.http.entity.mime.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
internal.org.apache.http.entity.mime.MinimalField -> internal.org.apache.http.entity.mime.d:
    java.lang.String name -> a
    java.lang.String value -> b
    java.lang.String getName() -> a
    java.lang.String getBody() -> b
    java.lang.String toString() -> toString
internal.org.apache.http.entity.mime.MultipartEntity -> internal.org.apache.http.entity.mime.e:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    internal.org.apache.http.entity.mime.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(internal.org.apache.http.entity.mime.FormBodyPart) -> addPart
    void addPart(java.lang.String,internal.org.apache.http.entity.mime.content.ContentBody) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    org.apache.http.Header getContentType() -> getContentType
internal.org.apache.http.entity.mime.content.AbstractContentBody -> internal.org.apache.http.entity.mime.a.a:
    java.lang.String mimeType -> a
    java.lang.String mediaType -> b
    java.lang.String subType -> c
    java.lang.String getMimeType() -> a
internal.org.apache.http.entity.mime.content.ContentBody -> internal.org.apache.http.entity.mime.a.b:
    java.lang.String getFilename() -> b
    void writeTo(java.io.OutputStream) -> a
internal.org.apache.http.entity.mime.content.ContentDescriptor -> internal.org.apache.http.entity.mime.a.c:
    java.lang.String getMimeType() -> a
    java.lang.String getCharset() -> c
    java.lang.String getTransferEncoding() -> d
    long getContentLength() -> e
internal.org.apache.http.entity.mime.content.FileBody -> internal.org.apache.http.entity.mime.a.d:
    java.io.File file -> a
    java.lang.String filename -> b
    java.lang.String charset -> c
    void writeTo(java.io.OutputStream) -> a
    java.lang.String getTransferEncoding() -> d
    java.lang.String getCharset() -> c
    long getContentLength() -> e
    java.lang.String getFilename() -> b
internal.org.apache.http.entity.mime.content.StringBody -> internal.org.apache.http.entity.mime.a.e:
    byte[] content -> a
    java.nio.charset.Charset charset -> b
    void writeTo(java.io.OutputStream) -> a
    java.lang.String getTransferEncoding() -> d
    java.lang.String getCharset() -> c
    long getContentLength() -> e
    java.lang.String getFilename() -> b
javax.sdp.BandWidth -> javax.sdp.BandWidth:
    java.lang.String CT -> CT
    java.lang.String AS -> AS
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    int getValue() -> getValue
    void setValue(int) -> setValue
javax.sdp.Connection -> javax.sdp.Connection:
    java.lang.String IN -> IN
    java.lang.String IP4 -> IP4
    java.lang.String IP6 -> IP6
    java.lang.String getAddress() -> getAddress
    java.lang.String getAddressType() -> getAddressType
    java.lang.String getNetworkType() -> getNetworkType
    void setAddress(java.lang.String) -> setAddress
    void setAddressType(java.lang.String) -> setAddressType
    void setNetworkType(java.lang.String) -> setNetworkType
javax.sdp.Field -> javax.sdp.a:
javax.sdp.SdpException -> javax.sdp.b:
javax.sdp.SdpParseException -> javax.sdp.c:
    java.lang.String getMessage() -> getMessage
javax.sdp.Time -> javax.sdp.d:
javax.sdp.TimeDescription -> javax.sdp.TimeDescription:
    long NTP_CONST -> NTP_CONST
    javax.sdp.Time getTime() -> getTime
    void setTime(javax.sdp.Time) -> setTime
    java.util.Vector getRepeatTimes(boolean) -> getRepeatTimes
    void setRepeatTimes(java.util.Vector) -> setRepeatTimes
net.java.sip.communicator.impl.protocol.jabber.extensions.AbstractPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.AbstractPacketExtension:
    java.lang.String namespace -> namespace
    java.lang.String elementName -> elementName
    java.util.Map attributes -> attributes
    java.lang.String textContent -> textContent
    java.util.List childExtensions -> childExtensions
    java.lang.String getElementName() -> getElementName
    void setNamespace(java.lang.String) -> setNamespace
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.util.List getChildExtensions() -> getChildExtensions
    void addChildExtension(org.jivesoftware.smack.packet.PacketExtension) -> addChildExtension
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    void removeAttribute(java.lang.String) -> removeAttribute
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttributeAsString(java.lang.String) -> getAttributeAsString
    int getAttributeAsInt(java.lang.String) -> getAttributeAsInt
    int getAttributeAsInt(java.lang.String,int) -> getAttributeAsInt
    java.net.URI getAttributeAsURI(java.lang.String) -> getAttributeAsURI
    java.util.List getAttributeNames() -> getAttributeNames
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    org.jivesoftware.smack.packet.PacketExtension getFirstChildOfType(java.lang.Class) -> getFirstChildOfType
    java.util.List getChildExtensionsOfType(java.lang.Class) -> getChildExtensionsOfType
net.java.sip.communicator.impl.protocol.jabber.extensions.DefaultPacketExtensionProvider -> net.java.sip.communicator.impl.protocol.jabber.extensions.DefaultPacketExtensionProvider:
    java.util.logging.Logger logger -> logger
    java.lang.Class packetClass -> packetClass
    net.java.sip.communicator.impl.protocol.jabber.extensions.AbstractPacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.BandwidthPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.BandwidthPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String TYPE_ATTR_NAME -> TYPE_ATTR_NAME
    void setType(java.lang.String) -> setType
    java.lang.String getType() -> getType
    void setBandwidth(java.lang.String) -> setBandwidth
    java.lang.String getBandwidth() -> getBandwidth
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidatePacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidatePacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String COMPONENT_ATTR_NAME -> COMPONENT_ATTR_NAME
    int RTP_COMPONENT_ID -> RTP_COMPONENT_ID
    int RTCP_COMPONENT_ID -> RTCP_COMPONENT_ID
    java.lang.String FOUNDATION_ATTR_NAME -> FOUNDATION_ATTR_NAME
    java.lang.String GENERATION_ATTR_NAME -> GENERATION_ATTR_NAME
    java.lang.String ID_ATTR_NAME -> ID_ATTR_NAME
    java.lang.String IP_ATTR_NAME -> IP_ATTR_NAME
    java.lang.String NETWORK_ATTR_NAME -> NETWORK_ATTR_NAME
    java.lang.String PORT_ATTR_NAME -> PORT_ATTR_NAME
    java.lang.String PRIORITY_ATTR_NAME -> PRIORITY_ATTR_NAME
    java.lang.String PROTOCOL_ATTR_NAME -> PROTOCOL_ATTR_NAME
    java.lang.String REL_ADDR_ATTR_NAME -> REL_ADDR_ATTR_NAME
    java.lang.String REL_PORT_ATTR_NAME -> REL_PORT_ATTR_NAME
    java.lang.String TYPE_ATTR_NAME -> TYPE_ATTR_NAME
    void setComponent(int) -> setComponent
    int getComponent() -> getComponent
    void setFoundation(java.lang.String) -> setFoundation
    java.lang.String getFoundation() -> getFoundation
    void setGeneration(int) -> setGeneration
    int getGeneration() -> getGeneration
    void setID(java.lang.String) -> setID
    java.lang.String getID() -> getID
    void setIP(java.lang.String) -> setIP
    java.lang.String getIP() -> getIP
    void setNetwork(int) -> setNetwork
    int getNetwork() -> getNetwork
    void setPort(int) -> setPort
    int getPort() -> getPort
    void setPriority(long) -> setPriority
    int getPriority() -> getPriority
    void setProtocol(java.lang.String) -> setProtocol
    java.lang.String getProtocol() -> getProtocol
    void setRelAddr(java.lang.String) -> setRelAddr
    java.lang.String getRelAddr() -> getRelAddr
    void setRelPort(int) -> setRelPort
    int getRelPort() -> getRelPort
    void setType(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType) -> setType
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType getType() -> getType
    int compareTo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidatePacketExtension) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType host -> host
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType prflx -> prflx
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType relay -> relay
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType srflx -> srflx
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType stun -> stun
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType local -> local
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType[] ENUM$VALUES -> ENUM$VALUES
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType[] values() -> values
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType valueOf(java.lang.String) -> valueOf
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CoinPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CoinPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ISFOCUS_ATTR_NAME -> ISFOCUS_ATTR_NAME
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String CREATOR_ATTR_NAME -> CREATOR_ATTR_NAME
    java.lang.String DISPOSITION_ATTR_NAME -> DISPOSITION_ATTR_NAME
    java.lang.String NAME_ATTR_NAME -> NAME_ATTR_NAME
    java.lang.String SENDERS_ATTR_NAME -> SENDERS_ATTR_NAME
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum getCreator() -> getCreator
    void setCreator(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum) -> setCreator
    java.lang.String getDisposition() -> getDisposition
    void setDisposition(java.lang.String) -> setDisposition
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum getSenders() -> getSenders
    void setSenders(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum) -> setSenders
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum initiator -> initiator
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum responder -> responder
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum[] ENUM$VALUES -> ENUM$VALUES
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum[] values() -> values
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum valueOf(java.lang.String) -> valueOf
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum initiator -> initiator
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum none -> none
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum responder -> responder
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum both -> both
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum[] ENUM$VALUES -> ENUM$VALUES
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum[] values() -> values
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum valueOf(java.lang.String) -> valueOf
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CryptoPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CryptoPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String CRYPTO_SUITE_ATTR_NAME -> CRYPTO_SUITE_ATTR_NAME
    java.lang.String KEY_PARAMS_ATTR_NAME -> KEY_PARAMS_ATTR_NAME
    java.lang.String SESSION_PARAMS_ATTR_NAME -> SESSION_PARAMS_ATTR_NAME
    java.lang.String TAG_ATTR_NAME -> TAG_ATTR_NAME
    void initialize(a.a.a.a.g) -> initialize
    void setCryptoSuite(java.lang.String) -> setCryptoSuite
    java.lang.String getCryptoSuite() -> getCryptoSuite
    boolean equalsCryptoSuite(java.lang.String) -> equalsCryptoSuite
    void setKeyParams(java.lang.String) -> setKeyParams
    java.lang.String getKeyParams() -> getKeyParams
    boolean equalsKeyParams(java.lang.String) -> equalsKeyParams
    void setSessionParams(java.lang.String) -> setSessionParams
    java.lang.String getSessionParams() -> getSessionParams
    boolean equalsSessionParams(java.lang.String) -> equalsSessionParams
    void setTag(java.lang.String) -> setTag
    java.lang.String getTag() -> getTag
    boolean equalsTag(java.lang.String) -> equalsTag
    a.a.a.a.g toSrtpCryptoAttribute() -> toSrtpCryptoAttribute
    boolean equalsStrings(java.lang.String,java.lang.String) -> equalsStrings
    boolean equals(java.lang.Object) -> equals
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.EncryptionPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.EncryptionPacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String REQUIRED_ATTR_NAME -> REQUIRED_ATTR_NAME
    java.util.List cryptoList -> cryptoList
    void addCrypto(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CryptoPacketExtension) -> addCrypto
    java.util.List getCryptoList() -> getCryptoList
    void setRequired(boolean) -> setRequired
    boolean isRequired() -> isRequired
    java.util.List getChildExtensions() -> getChildExtensions
    void addChildExtension(org.jivesoftware.smack.packet.PacketExtension) -> addChildExtension
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.IceUdpTransportPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.IceUdpTransportPacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String PWD_ATTR_NAME -> PWD_ATTR_NAME
    java.lang.String UFRAG_ATTR_NAME -> UFRAG_ATTR_NAME
    java.util.List candidateList -> candidateList
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RemoteCandidatePacketExtension remoteCandidate -> remoteCandidate
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getPassword() -> getPassword
    void setUfrag(java.lang.String) -> setUfrag
    java.lang.String getUfrag() -> getUfrag
    java.util.List getChildExtensions() -> getChildExtensions
    void addCandidate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidatePacketExtension) -> addCandidate
    boolean removeCandidate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidatePacketExtension) -> removeCandidate
    java.util.List getCandidateList() -> getCandidateList
    void setRemoteCandidate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RemoteCandidatePacketExtension) -> setRemoteCandidate
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RemoteCandidatePacketExtension getRemoteCandidate() -> getRemoteCandidate
    void addChildExtension(org.jivesoftware.smack.packet.PacketExtension) -> addChildExtension
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.InputEvtPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.InputEvtPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction CONTENT_ACCEPT -> CONTENT_ACCEPT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction CONTENT_ADD -> CONTENT_ADD
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction CONTENT_MODIFY -> CONTENT_MODIFY
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction CONTENT_REJECT -> CONTENT_REJECT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction CONTENT_REMOVE -> CONTENT_REMOVE
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction DESCRIPTION_INFO -> DESCRIPTION_INFO
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction SECURITY_INFO -> SECURITY_INFO
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction SESSION_ACCEPT -> SESSION_ACCEPT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction SESSION_INFO -> SESSION_INFO
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction SESSION_INITIATE -> SESSION_INITIATE
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction SESSION_TERMINATE -> SESSION_TERMINATE
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction TRANSPORT_ACCEPT -> TRANSPORT_ACCEPT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction TRANSPORT_INFO -> TRANSPORT_INFO
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction TRANSPORT_REJECT -> TRANSPORT_REJECT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction TRANSPORT_REPLACE -> TRANSPORT_REPLACE
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction CALL_ACCEPT -> CALL_ACCEPT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction CALLER_RELAY -> CALLER_RELAY
    java.lang.String actionName -> actionName
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String toString() -> toString
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction parseString(java.lang.String) -> parseString
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction[] values() -> values
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction valueOf(java.lang.String) -> valueOf
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String ACTION_ATTR_NAME -> ACTION_ATTR_NAME
    java.lang.String INITIATOR_ATTR_NAME -> INITIATOR_ATTR_NAME
    java.lang.String RESPONDER_ATTR_NAME -> RESPONDER_ATTR_NAME
    java.lang.String SID_ATTR_NAME -> SID_ATTR_NAME
    java.lang.String SDP_JSON_STRING_ATTR_NAME -> SDP_JSON_STRING_ATTR_NAME
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction action -> action
    java.lang.String initiator -> initiator
    java.lang.String responder -> responder
    java.lang.String sid -> sid
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonPacketExtension reason -> reason
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoPacketExtension sessionInfo -> sessionInfo
    java.util.List contentList -> contentList
    java.lang.String sdp_json_string -> sdp_json_string
    java.lang.String statistic -> statistic
    java.lang.String getChildElementXML() -> getChildElementXML
    void setSID(java.lang.String) -> setSID
    java.lang.String getSID() -> getSID
    java.lang.String generateSID() -> generateSID
    void setResponder(java.lang.String) -> setResponder
    java.lang.String getResponder() -> getResponder
    void setInitiator(java.lang.String) -> setInitiator
    java.lang.String getInitiator() -> getInitiator
    void setSdpJsonString(java.lang.String) -> setSdpJsonString
    java.lang.String getSdpJsonString() -> getSdpJsonString
    void setStatistic(java.lang.String) -> setStatistic
    java.lang.String getStatistic() -> getStatistic
    void setAction(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction) -> setAction
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction getAction() -> getAction
    void setReason(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonPacketExtension) -> setReason
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonPacketExtension getReason() -> getReason
    java.util.List getContentList() -> getContentList
    void addContent(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension) -> addContent
    boolean containsContentChildOfType(java.lang.Class) -> containsContentChildOfType
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension getContentForType(java.lang.Class) -> getContentForType
    void setSessionInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoPacketExtension) -> setSessionInfo
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoPacketExtension getSessionInfo() -> getSessionInfo
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQProvider -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQProvider:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JinglePacketFactory -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JinglePacketFactory:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createRinging(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> createRinging
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createSessionInfo(java.lang.String,java.lang.String,java.lang.String) -> createSessionInfo
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createSessionInfo(java.lang.String,java.lang.String,java.lang.String,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType) -> createSessionInfo
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createBusy(java.lang.String,java.lang.String,java.lang.String) -> createBusy
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createBye(java.lang.String,java.lang.String,java.lang.String) -> createBye
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createCancel(java.lang.String,java.lang.String,java.lang.String) -> createCancel
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createSessionTerminate(java.lang.String,java.lang.String,java.lang.String,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason,java.lang.String) -> createSessionTerminate
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createSessionAccept(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable) -> createSessionAccept
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createSessionAccept(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createSessionAccept
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createSessionInitiate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List) -> createSessionInitiate
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createContentAdd(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> createContentAdd
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createContentAccept(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable) -> createContentAccept
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createContentReject(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable) -> createContentReject
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createContentModify(java.lang.String,java.lang.String,java.lang.String,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension) -> createContentModify
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createContentRemove(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable) -> createContentRemove
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createCallAccept(java.lang.String,java.lang.String,java.lang.String) -> createCallAccept
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createCallerRelay(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createCallerRelay
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.MuteSessionInfoPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.MuteSessionInfoPacketExtension:
    java.lang.String NAME_ATTR_VALUE -> NAME_ATTR_VALUE
    boolean isMute() -> isMute
    java.lang.String getName() -> getName
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ParameterPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ParameterPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAME_ATTR_NAME -> NAME_ATTR_NAME
    java.lang.String VALUE_ATTR_NAME -> VALUE_ATTR_NAME
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setValue(java.lang.String) -> setValue
    java.lang.String getValue() -> getValue
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.PayloadTypePacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.PayloadTypePacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String CHANNELS_ATTR_NAME -> CHANNELS_ATTR_NAME
    java.lang.String CLOCKRATE_ATTR_NAME -> CLOCKRATE_ATTR_NAME
    java.lang.String ID_ATTR_NAME -> ID_ATTR_NAME
    java.lang.String MAXPTIME_ATTR_NAME -> MAXPTIME_ATTR_NAME
    java.lang.String NAME_ATTR_NAME -> NAME_ATTR_NAME
    java.lang.String PTIME_ATTR_NAME -> PTIME_ATTR_NAME
    void setChannels(int) -> setChannels
    int getChannels() -> getChannels
    void setClockrate(int) -> setClockrate
    int getClockrate() -> getClockrate
    void setId(int) -> setId
    int getID() -> getID
    void setMaxptime(int) -> setMaxptime
    int getMaxptime() -> getMaxptime
    void setPtime(int) -> setPtime
    int getPtime() -> getPtime
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void addParameter(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ParameterPacketExtension) -> addParameter
    java.util.List getParameters() -> getParameters
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RTPHdrExtPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RTPHdrExtPacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String ID_ATTR_NAME -> ID_ATTR_NAME
    java.lang.String SENDERS_ATTR_NAME -> SENDERS_ATTR_NAME
    java.lang.String URI_ATTR_NAME -> URI_ATTR_NAME
    java.lang.String ATTRIBUTES_ATTR_NAME -> ATTRIBUTES_ATTR_NAME
    void setID(java.lang.String) -> setID
    java.lang.String getID() -> getID
    void setSenders(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum) -> setSenders
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum getSenders() -> getSenders
    void setURI(java.net.URI) -> setURI
    java.net.URI getURI() -> getURI
    void setAttributes(java.lang.String) -> setAttributes
    java.lang.String getAttributes() -> getAttributes
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RawUdpTransportPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RawUdpTransportPacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.util.List getChildExtensions() -> getChildExtensions
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason ALTERNATIVE_SESSION -> ALTERNATIVE_SESSION
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason BUSY -> BUSY
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason CANCEL -> CANCEL
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason CONNECTIVITY_ERROR -> CONNECTIVITY_ERROR
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason DECLINE -> DECLINE
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason EXPIRED -> EXPIRED
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason FAILED_APPLICATION -> FAILED_APPLICATION
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason FAILED_TRANSPORT -> FAILED_TRANSPORT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason GENERAL_ERROR -> GENERAL_ERROR
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason GONE -> GONE
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason INCOMPATIBLE_PARAMETERS -> INCOMPATIBLE_PARAMETERS
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason MEDIA_ERROR -> MEDIA_ERROR
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason SECURITY_ERROR -> SECURITY_ERROR
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason SUCCESS -> SUCCESS
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason TIMEOUT -> TIMEOUT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason UNSUPPORTED_APPLICATIONS -> UNSUPPORTED_APPLICATIONS
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason UNSUPPORTED_TRANSPORTS -> UNSUPPORTED_TRANSPORTS
    java.lang.String reasonValue -> reasonValue
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String toString() -> toString
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason parseString(java.lang.String) -> parseString
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason[] values() -> values
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason valueOf(java.lang.String) -> valueOf
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonPacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String TEXT_ELEMENT_NAME -> TEXT_ELEMENT_NAME
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason reason -> reason
    java.lang.String text -> text
    org.jivesoftware.smack.packet.PacketExtension otherExtension -> otherExtension
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason getReason() -> getReason
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    org.jivesoftware.smack.packet.PacketExtension getOtherExtension() -> getOtherExtension
    void setOtherExtension(org.jivesoftware.smack.packet.PacketExtension) -> setOtherExtension
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonProvider -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonProvider:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonPacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    java.lang.String parseText(org.xmlpull.v1.XmlPullParser) -> parseText
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RedirectPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RedirectPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String redir -> redir
    void setRedir(java.lang.String) -> setRedir
    java.lang.String getRedir() -> getRedir
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RedirectProvider -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RedirectProvider:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RedirectPacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    java.lang.String parseText(org.xmlpull.v1.XmlPullParser) -> parseText
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RemoteCandidatePacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RemoteCandidatePacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RtpDescriptionPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RtpDescriptionPacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String MEDIA_ATTR_NAME -> MEDIA_ATTR_NAME
    java.lang.String SSRC_ATTR_NAME -> SSRC_ATTR_NAME
    java.util.List payloadTypes -> payloadTypes
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.EncryptionPacketExtension encryption -> encryption
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.BandwidthPacketExtension bandwidth -> bandwidth
    java.util.List extmapList -> extmapList
    java.util.List children -> children
    void setMedia(java.lang.String) -> setMedia
    java.lang.String getMedia() -> getMedia
    void setSsrc(java.lang.String) -> setSsrc
    java.lang.String getSsrc() -> getSsrc
    void addPayloadType(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.PayloadTypePacketExtension) -> addPayloadType
    java.util.List getPayloadTypes() -> getPayloadTypes
    java.util.List getChildExtensions() -> getChildExtensions
    void addChildExtension(org.jivesoftware.smack.packet.PacketExtension) -> addChildExtension
    void setEncryption(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.EncryptionPacketExtension) -> setEncryption
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.EncryptionPacketExtension getEncryption() -> getEncryption
    void setBandwidth(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.BandwidthPacketExtension) -> setBandwidth
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.BandwidthPacketExtension getBandwidth() -> getBandwidth
    void addExtmap(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RTPHdrExtPacketExtension) -> addExtmap
    java.util.List getExtmapList() -> getExtmapList
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoPacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType type -> type
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType getType() -> getType
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType active -> active
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType hold -> hold
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType mute -> mute
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType ringing -> ringing
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType unhold -> unhold
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType unmute -> unmute
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType[] ENUM$VALUES -> ENUM$VALUES
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType[] values() -> values
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType valueOf(java.lang.String) -> valueOf
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.TransferPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.TransferPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String FROM_ATTR_NAME -> FROM_ATTR_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String SID_ATTR_NAME -> SID_ATTR_NAME
    java.lang.String TO_ATTR_NAME -> TO_ATTR_NAME
    java.lang.String getFrom() -> getFrom
    void setFrom(java.lang.String) -> setFrom
    java.lang.String getSID() -> getSID
    void setSID(java.lang.String) -> setSID
    java.lang.String getTo() -> getTo
    void setTo(java.lang.String) -> setTo
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.TransferredPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.TransferredPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ZrtpHashPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ZrtpHashPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String VERSION_ATTR_NAME -> VERSION_ATTR_NAME
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
org.apache.commons.codec.BinaryDecoder -> org.apache.commons.codec.BinaryDecoder:
    byte[] decode(byte[]) -> decode
org.apache.commons.codec.BinaryEncoder -> org.apache.commons.codec.BinaryEncoder:
    byte[] encode(byte[]) -> encode
org.apache.commons.codec.Decoder -> org.apache.commons.codec.Decoder:
    java.lang.Object decode(java.lang.Object) -> decode
org.apache.commons.codec.DecoderException -> org.apache.commons.codec.DecoderException:
org.apache.commons.codec.Encoder -> org.apache.commons.codec.Encoder:
    java.lang.Object encode(java.lang.Object) -> encode
org.apache.commons.codec.EncoderException -> org.apache.commons.codec.EncoderException:
org.apache.commons.codec.StringDecoder -> org.apache.commons.codec.StringDecoder:
    java.lang.String decode(java.lang.String) -> decode
org.apache.commons.codec.StringEncoder -> org.apache.commons.codec.StringEncoder:
    java.lang.String encode(java.lang.String) -> encode
org.apache.commons.codec.StringEncoderComparator -> org.apache.commons.codec.StringEncoderComparator:
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.codec.binary.Base64 -> org.apache.commons.codec.binary.Base64:
    boolean isArrayByteBase64(byte[]) -> isArrayByteBase64
    byte[] encodeBase64(byte[]) -> encodeBase64
    byte[] encodeBase64Chunked(byte[]) -> encodeBase64Chunked
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] decode(byte[]) -> decode
    byte[] encodeBase64(byte[],boolean) -> encodeBase64
    byte[] decodeBase64(byte[]) -> decodeBase64
    java.lang.Object encode(java.lang.Object) -> encode
    byte[] encode(byte[]) -> encode
org.apache.commons.codec.binary.BinaryCodec -> org.apache.commons.codec.binary.BinaryCodec:
    byte[] encode(byte[]) -> encode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] decode(byte[]) -> decode
    byte[] toByteArray(java.lang.String) -> toByteArray
    byte[] fromAscii(char[]) -> fromAscii
    byte[] fromAscii(byte[]) -> fromAscii
    byte[] toAsciiBytes(byte[]) -> toAsciiBytes
    char[] toAsciiChars(byte[]) -> toAsciiChars
    java.lang.String toAsciiString(byte[]) -> toAsciiString
org.apache.commons.codec.binary.Hex -> org.apache.commons.codec.binary.Hex:
    byte[] decodeHex(char[]) -> decodeHex
    int toDigit(char,int) -> toDigit
    char[] encodeHex(byte[]) -> encodeHex
    byte[] decode(byte[]) -> decode
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] encode(byte[]) -> encode
    java.lang.Object encode(java.lang.Object) -> encode
org.apache.commons.codec.language.DoubleMetaphone -> org.apache.commons.codec.language.DoubleMetaphone:
    int maxCodeLen -> maxCodeLen
    java.lang.String doubleMetaphone(java.lang.String) -> doubleMetaphone
    java.lang.String doubleMetaphone(java.lang.String,boolean) -> doubleMetaphone
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String) -> isDoubleMetaphoneEqual
    boolean isDoubleMetaphoneEqual(java.lang.String,java.lang.String,boolean) -> isDoubleMetaphoneEqual
    int getMaxCodeLen() -> getMaxCodeLen
    void setMaxCodeLen(int) -> setMaxCodeLen
    char charAt(java.lang.String,int) -> charAt
    boolean contains(java.lang.String,int,int,java.lang.String[]) -> contains
org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult -> org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult:
    org.apache.commons.codec.language.DoubleMetaphone this$0 -> this$0
    void append(char) -> append
    void append(char,char) -> append
    void appendPrimary(char) -> appendPrimary
    void appendAlternate(char) -> appendAlternate
    void append(java.lang.String) -> append
    void append(java.lang.String,java.lang.String) -> append
    void appendPrimary(java.lang.String) -> appendPrimary
    void appendAlternate(java.lang.String) -> appendAlternate
    java.lang.String getPrimary() -> getPrimary
    java.lang.String getAlternate() -> getAlternate
    boolean isComplete() -> isComplete
org.apache.commons.codec.language.Metaphone -> org.apache.commons.codec.language.Metaphone:
    java.lang.String metaphone(java.lang.String) -> metaphone
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    boolean isMetaphoneEqual(java.lang.String,java.lang.String) -> isMetaphoneEqual
    int getMaxCodeLen() -> getMaxCodeLen
    void setMaxCodeLen(int) -> setMaxCodeLen
org.apache.commons.codec.language.RefinedSoundex -> org.apache.commons.codec.language.RefinedSoundex:
    org.apache.commons.codec.language.RefinedSoundex US_ENGLISH -> US_ENGLISH
    char[] US_ENGLISH_MAPPING -> US_ENGLISH_MAPPING
    int difference(java.lang.String,java.lang.String) -> difference
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String soundex(java.lang.String) -> soundex
org.apache.commons.codec.language.Soundex -> org.apache.commons.codec.language.Soundex:
    org.apache.commons.codec.language.Soundex US_ENGLISH -> US_ENGLISH
    char[] US_ENGLISH_MAPPING -> US_ENGLISH_MAPPING
    java.lang.String US_ENGLISH_MAPPING_STRING -> US_ENGLISH_MAPPING_STRING
    int difference(java.lang.String,java.lang.String) -> difference
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encode(java.lang.String) -> encode
    int getMaxLength() -> getMaxLength
    void setMaxLength(int) -> setMaxLength
    java.lang.String soundex(java.lang.String) -> soundex
org.apache.commons.codec.net.BCodec -> org.apache.commons.codec.net.BCodec:
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getDefaultCharset() -> getDefaultCharset
org.apache.commons.codec.net.QCodec -> org.apache.commons.codec.net.QCodec:
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getDefaultCharset() -> getDefaultCharset
    boolean isEncodeBlanks() -> isEncodeBlanks
    void setEncodeBlanks(boolean) -> setEncodeBlanks
org.apache.commons.codec.net.QuotedPrintableCodec -> org.apache.commons.codec.net.QuotedPrintableCodec:
    byte[] encodeQuotedPrintable(java.util.BitSet,byte[]) -> encodeQuotedPrintable
    byte[] decodeQuotedPrintable(byte[]) -> decodeQuotedPrintable
    byte[] encode(byte[]) -> encode
    byte[] decode(byte[]) -> decode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getDefaultCharset() -> getDefaultCharset
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
org.apache.commons.codec.net.RFC1522Codec -> org.apache.commons.codec.net.RFC1522Codec:
    java.lang.String encodeText(java.lang.String,java.lang.String) -> encodeText
    java.lang.String decodeText(java.lang.String) -> decodeText
    java.lang.String getEncoding() -> getEncoding
    byte[] doEncoding(byte[]) -> doEncoding
    byte[] doDecoding(byte[]) -> doDecoding
org.apache.commons.codec.net.URLCodec -> org.apache.commons.codec.net.URLCodec:
    byte ESCAPE_CHAR -> ESCAPE_CHAR
    java.util.BitSet WWW_FORM_URL -> WWW_FORM_URL
    java.lang.String charset -> charset
    byte[] encodeUrl(java.util.BitSet,byte[]) -> encodeUrl
    byte[] decodeUrl(byte[]) -> decodeUrl
    byte[] encode(byte[]) -> encode
    byte[] decode(byte[]) -> decode
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.Object decode(java.lang.Object) -> decode
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getDefaultCharset() -> getDefaultCharset
org.apache.commons.logging.Log -> org.apache.commons.logging.Log:
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
org.apache.commons.logging.LogConfigurationException -> org.apache.commons.logging.LogConfigurationException:
    java.lang.Throwable cause -> cause
    java.lang.Throwable getCause() -> getCause
org.apache.commons.logging.LogFactory -> org.apache.commons.logging.LogFactory:
    java.lang.String DIAGNOSTICS_DEST_PROPERTY -> DIAGNOSTICS_DEST_PROPERTY
    java.lang.String FACTORY_DEFAULT -> FACTORY_DEFAULT
    java.lang.String FACTORY_PROPERTIES -> FACTORY_PROPERTIES
    java.lang.String FACTORY_PROPERTY -> FACTORY_PROPERTY
    java.lang.String HASHTABLE_IMPLEMENTATION_PROPERTY -> HASHTABLE_IMPLEMENTATION_PROPERTY
    java.lang.String PRIORITY_KEY -> PRIORITY_KEY
    java.lang.String SERVICE_ID -> SERVICE_ID
    java.lang.String TCCL_KEY -> TCCL_KEY
    java.util.Hashtable factories -> factories
    org.apache.commons.logging.LogFactory nullClassLoaderFactory -> nullClassLoaderFactory
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.String[] getAttributeNames() -> getAttributeNames
    org.apache.commons.logging.Log getInstance(java.lang.Class) -> getInstance
    org.apache.commons.logging.Log getInstance(java.lang.String) -> getInstance
    void release() -> release
    void removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    org.apache.commons.logging.LogFactory getFactory() -> getFactory
    org.apache.commons.logging.Log getLog(java.lang.Class) -> getLog
    org.apache.commons.logging.Log getLog(java.lang.String) -> getLog
    void release(java.lang.ClassLoader) -> release
    void releaseAll() -> releaseAll
    java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    java.lang.ClassLoader directGetContextClassLoader() -> directGetContextClassLoader
    org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader) -> newFactory
    org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader) -> newFactory
    java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader) -> createFactory
    boolean isDiagnosticsEnabled() -> isDiagnosticsEnabled
    void logRawDiagnostic(java.lang.String) -> logRawDiagnostic
    java.lang.String objectId(java.lang.Object) -> objectId
org.apache.commons.logging.LogSource -> org.apache.commons.logging.LogSource:
    boolean jdk14IsAvailable -> jdk14IsAvailable
    boolean log4jIsAvailable -> log4jIsAvailable
    java.lang.reflect.Constructor logImplctor -> logImplctor
    java.util.Hashtable logs -> logs
    void setLogImplementation(java.lang.String) -> setLogImplementation
    void setLogImplementation(java.lang.Class) -> setLogImplementation
    org.apache.commons.logging.Log getInstance(java.lang.String) -> getInstance
    org.apache.commons.logging.Log getInstance(java.lang.Class) -> getInstance
    org.apache.commons.logging.Log makeNewLogInstance(java.lang.String) -> makeNewLogInstance
    java.lang.String[] getLogNames() -> getLogNames
org.apache.commons.logging.impl.Jdk14Logger -> org.apache.commons.logging.impl.Jdk14Logger:
    java.util.logging.Level dummyLevel -> dummyLevel
    java.util.logging.Logger logger -> logger
    java.lang.String name -> name
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    java.util.logging.Logger getLogger() -> getLogger
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
org.apache.commons.logging.impl.LogFactoryImpl -> org.apache.commons.logging.impl.LogFactoryImpl:
    java.lang.String ALLOW_FLAWED_CONTEXT_PROPERTY -> ALLOW_FLAWED_CONTEXT_PROPERTY
    java.lang.String ALLOW_FLAWED_DISCOVERY_PROPERTY -> ALLOW_FLAWED_DISCOVERY_PROPERTY
    java.lang.String ALLOW_FLAWED_HIERARCHY_PROPERTY -> ALLOW_FLAWED_HIERARCHY_PROPERTY
    java.lang.String LOG_PROPERTY -> LOG_PROPERTY
    java.lang.String LOG_PROPERTY_OLD -> LOG_PROPERTY_OLD
    java.util.Hashtable attributes -> attributes
    java.util.Hashtable instances -> instances
    java.lang.reflect.Constructor logConstructor -> logConstructor
    java.lang.Class[] logConstructorSignature -> logConstructorSignature
    java.lang.reflect.Method logMethod -> logMethod
    java.lang.Class[] logMethodSignature -> logMethodSignature
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.String[] getAttributeNames() -> getAttributeNames
    org.apache.commons.logging.Log getInstance(java.lang.Class) -> getInstance
    org.apache.commons.logging.Log getInstance(java.lang.String) -> getInstance
    void release() -> release
    void removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    boolean isDiagnosticsEnabled() -> isDiagnosticsEnabled
    java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    void logDiagnostic(java.lang.String) -> logDiagnostic
    java.lang.String getLogClassName() -> getLogClassName
    java.lang.reflect.Constructor getLogConstructor() -> getLogConstructor
    boolean isJdk13LumberjackAvailable() -> isJdk13LumberjackAvailable
    boolean isJdk14Available() -> isJdk14Available
    boolean isLog4JAvailable() -> isLog4JAvailable
    org.apache.commons.logging.Log newInstance(java.lang.String) -> newInstance
org.apache.commons.logging.impl.NoOpLog -> org.apache.commons.logging.impl.NoOpLog:
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
org.apache.commons.logging.impl.SimpleLog -> org.apache.commons.logging.impl.SimpleLog:
    java.lang.String DEFAULT_DATE_TIME_FORMAT -> DEFAULT_DATE_TIME_FORMAT
    int LOG_LEVEL_ALL -> LOG_LEVEL_ALL
    int LOG_LEVEL_DEBUG -> LOG_LEVEL_DEBUG
    int LOG_LEVEL_ERROR -> LOG_LEVEL_ERROR
    int LOG_LEVEL_FATAL -> LOG_LEVEL_FATAL
    int LOG_LEVEL_INFO -> LOG_LEVEL_INFO
    int LOG_LEVEL_OFF -> LOG_LEVEL_OFF
    int LOG_LEVEL_TRACE -> LOG_LEVEL_TRACE
    int LOG_LEVEL_WARN -> LOG_LEVEL_WARN
    int currentLogLevel -> currentLogLevel
    java.text.DateFormat dateFormatter -> dateFormatter
    java.lang.String dateTimeFormat -> dateTimeFormat
    java.lang.String logName -> logName
    boolean showDateTime -> showDateTime
    boolean showLogName -> showLogName
    boolean showShortName -> showShortName
    java.util.Properties simpleLogProps -> simpleLogProps
    java.lang.String systemPrefix -> systemPrefix
    void setLevel(int) -> setLevel
    int getLevel() -> getLevel
    void log(int,java.lang.Object,java.lang.Throwable) -> log
    void write(java.lang.StringBuffer) -> write
    boolean isLevelEnabled(int) -> isLevelEnabled
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
org.apache.commons.logging.impl.WeakHashtable -> org.apache.commons.logging.impl.WeakHashtable:
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Enumeration elements() -> elements
    java.util.Set entrySet() -> entrySet
    java.lang.Object get(java.lang.Object) -> get
    java.util.Enumeration keys() -> keys
    java.util.Set keySet() -> keySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.util.Collection values() -> values
    java.lang.Object remove(java.lang.Object) -> remove
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.lang.String toString() -> toString
    void rehash() -> rehash
org.apache.harmony.javax.security.auth.AuthPermission -> org.apache.harmony.javax.security.auth.AuthPermission:
    long serialVersionUID -> serialVersionUID
    java.lang.String CREATE_LOGIN_CONTEXT -> CREATE_LOGIN_CONTEXT
    java.lang.String CREATE_LOGIN_CONTEXT_ANY -> CREATE_LOGIN_CONTEXT_ANY
    java.lang.String init(java.lang.String) -> init
org.apache.harmony.javax.security.auth.DestroyFailedException -> org.apache.harmony.javax.security.auth.DestroyFailedException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.Destroyable -> org.apache.harmony.javax.security.auth.Destroyable:
    void destroy() -> destroy
    boolean isDestroyed() -> isDestroyed
org.apache.harmony.javax.security.auth.PrivateCredentialPermission -> org.apache.harmony.javax.security.auth.PrivateCredentialPermission:
    long serialVersionUID -> serialVersionUID
    java.lang.String READ -> READ
    java.lang.String credentialClass -> credentialClass
    int offset -> offset
    org.apache.harmony.javax.security.auth.PrivateCredentialPermission$CredOwner[] set -> set
    void initTargetName(java.lang.String) -> initTargetName
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.String[][] getPrincipals() -> getPrincipals
    java.lang.String getActions() -> getActions
    java.lang.String getCredentialClass() -> getCredentialClass
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean implies(java.security.Permission) -> implies
    java.security.PermissionCollection newPermissionCollection() -> newPermissionCollection
    boolean sameMembers(java.lang.Object[],java.lang.Object[],int) -> sameMembers
org.apache.harmony.javax.security.auth.PrivateCredentialPermission$CredOwner -> org.apache.harmony.javax.security.auth.PrivateCredentialPermission$CredOwner:
    long serialVersionUID -> serialVersionUID
    java.lang.String principalClass -> principalClass
    java.lang.String principalName -> principalName
    boolean isClassWildcard -> isClassWildcard
    boolean isPNameWildcard -> isPNameWildcard
    boolean implies(java.lang.Object) -> implies
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.harmony.javax.security.auth.RefreshFailedException -> org.apache.harmony.javax.security.auth.RefreshFailedException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.Refreshable -> org.apache.harmony.javax.security.auth.Refreshable:
    void refresh() -> refresh
    boolean isCurrent() -> isCurrent
org.apache.harmony.javax.security.auth.Subject -> org.apache.harmony.javax.security.auth.Subject:
    long serialVersionUID -> serialVersionUID
    org.apache.harmony.javax.security.auth.AuthPermission _AS -> _AS
    org.apache.harmony.javax.security.auth.AuthPermission _AS_PRIVILEGED -> _AS_PRIVILEGED
    org.apache.harmony.javax.security.auth.AuthPermission _SUBJECT -> _SUBJECT
    org.apache.harmony.javax.security.auth.AuthPermission _PRINCIPALS -> _PRINCIPALS
    org.apache.harmony.javax.security.auth.AuthPermission _PRIVATE_CREDENTIALS -> _PRIVATE_CREDENTIALS
    org.apache.harmony.javax.security.auth.AuthPermission _PUBLIC_CREDENTIALS -> _PUBLIC_CREDENTIALS
    org.apache.harmony.javax.security.auth.AuthPermission _READ_ONLY -> _READ_ONLY
    java.util.Set principals -> principals
    boolean readOnly -> readOnly
    org.apache.harmony.javax.security.auth.Subject$SecureSet privateCredentials -> privateCredentials
    org.apache.harmony.javax.security.auth.Subject$SecureSet publicCredentials -> publicCredentials
    java.lang.Object doAs(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedAction) -> doAs
    java.lang.Object doAsPrivileged(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext) -> doAsPrivileged
    java.lang.Object doAs_PrivilegedAction(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext) -> doAs_PrivilegedAction
    java.lang.Object doAs(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedExceptionAction) -> doAs
    java.lang.Object doAsPrivileged(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext) -> doAsPrivileged
    java.lang.Object doAs_PrivilegedExceptionAction(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext) -> doAs_PrivilegedExceptionAction
    boolean equals(java.lang.Object) -> equals
    java.util.Set getPrincipals() -> getPrincipals
    java.util.Set getPrincipals(java.lang.Class) -> getPrincipals
    java.util.Set getPrivateCredentials() -> getPrivateCredentials
    java.util.Set getPrivateCredentials(java.lang.Class) -> getPrivateCredentials
    java.util.Set getPublicCredentials() -> getPublicCredentials
    java.util.Set getPublicCredentials(java.lang.Class) -> getPublicCredentials
    int hashCode() -> hashCode
    void setReadOnly() -> setReadOnly
    boolean isReadOnly() -> isReadOnly
    java.lang.String toString() -> toString
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    org.apache.harmony.javax.security.auth.Subject getSubject(java.security.AccessControlContext) -> getSubject
    void checkPermission(java.security.Permission) -> checkPermission
    void checkState() -> checkState
    void access$0(org.apache.harmony.javax.security.auth.Subject) -> access$0
    void access$1(java.security.Permission) -> access$1
    org.apache.harmony.javax.security.auth.AuthPermission access$2() -> access$2
    org.apache.harmony.javax.security.auth.AuthPermission access$3() -> access$3
    java.util.Set access$4(org.apache.harmony.javax.security.auth.Subject) -> access$4
    org.apache.harmony.javax.security.auth.AuthPermission access$5() -> access$5
org.apache.harmony.javax.security.auth.Subject$1 -> org.apache.harmony.javax.security.auth.Subject$1:
    java.security.AccessControlContext val$context -> val$context
    org.apache.harmony.javax.security.auth.SubjectDomainCombiner val$combiner -> val$combiner
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.Subject$2 -> org.apache.harmony.javax.security.auth.Subject$2:
    java.security.AccessControlContext val$context -> val$context
    org.apache.harmony.javax.security.auth.SubjectDomainCombiner val$combiner -> val$combiner
    java.security.AccessControlContext run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.Subject$3 -> org.apache.harmony.javax.security.auth.Subject$3:
    java.security.AccessControlContext val$context -> val$context
    java.security.DomainCombiner run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.Subject$SecureSet -> org.apache.harmony.javax.security.auth.Subject$SecureSet:
    long serialVersionUID -> serialVersionUID
    java.util.LinkedList elements -> elements
    int setType -> setType
    int SET_Principal -> SET_Principal
    int SET_PrivCred -> SET_PrivCred
    int SET_PubCred -> SET_PubCred
    org.apache.harmony.javax.security.auth.AuthPermission permission -> permission
    org.apache.harmony.javax.security.auth.Subject this$0 -> this$0
    void verifyElement(java.lang.Object) -> verifyElement
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.util.Set get(java.lang.Class) -> get
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    org.apache.harmony.javax.security.auth.AuthPermission access$0(org.apache.harmony.javax.security.auth.Subject$SecureSet) -> access$0
    org.apache.harmony.javax.security.auth.Subject access$1(org.apache.harmony.javax.security.auth.Subject$SecureSet) -> access$1
org.apache.harmony.javax.security.auth.Subject$SecureSet$1 -> org.apache.harmony.javax.security.auth.Subject$SecureSet$1:
    org.apache.harmony.javax.security.auth.Subject$SecureSet this$1 -> this$1
    java.lang.Object next() -> next
org.apache.harmony.javax.security.auth.Subject$SecureSet$2 -> org.apache.harmony.javax.security.auth.Subject$SecureSet$2:
    java.util.LinkedList elements -> elements
    org.apache.harmony.javax.security.auth.Subject$SecureSet this$1 -> this$1
    java.lang.Class val$c -> val$c
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
org.apache.harmony.javax.security.auth.Subject$SecureSet$SecureIterator -> org.apache.harmony.javax.security.auth.Subject$SecureSet$SecureIterator:
    java.util.Iterator iterator -> iterator
    org.apache.harmony.javax.security.auth.Subject$SecureSet this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.harmony.javax.security.auth.SubjectDomainCombiner -> org.apache.harmony.javax.security.auth.SubjectDomainCombiner:
    org.apache.harmony.javax.security.auth.Subject subject -> subject
    org.apache.harmony.javax.security.auth.AuthPermission _GET -> _GET
    org.apache.harmony.javax.security.auth.Subject getSubject() -> getSubject
    java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[]) -> combine
org.apache.harmony.javax.security.auth.callback.Callback -> org.apache.harmony.javax.security.auth.callback.Callback:
org.apache.harmony.javax.security.auth.callback.CallbackHandler -> org.apache.harmony.javax.security.auth.callback.CallbackHandler:
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
org.apache.harmony.javax.security.auth.callback.ChoiceCallback -> org.apache.harmony.javax.security.auth.callback.ChoiceCallback:
    long serialVersionUID -> serialVersionUID
    int defaultChoice -> defaultChoice
    java.lang.String prompt -> prompt
    boolean multipleSelectionsAllowed -> multipleSelectionsAllowed
    java.lang.String[] choices -> choices
    int[] selections -> selections
    void setChoices(java.lang.String[]) -> setChoices
    void setPrompt(java.lang.String) -> setPrompt
    void setDefaultChoice(int) -> setDefaultChoice
    boolean allowMultipleSelections() -> allowMultipleSelections
    java.lang.String[] getChoices() -> getChoices
    int getDefaultChoice() -> getDefaultChoice
    java.lang.String getPrompt() -> getPrompt
    int[] getSelectedIndexes() -> getSelectedIndexes
    void setSelectedIndex(int) -> setSelectedIndex
    void setSelectedIndexes(int[]) -> setSelectedIndexes
org.apache.harmony.javax.security.auth.callback.ConfirmationCallback -> org.apache.harmony.javax.security.auth.callback.ConfirmationCallback:
    long serialVersionUID -> serialVersionUID
    int YES -> YES
    int NO -> NO
    int CANCEL -> CANCEL
    int OK -> OK
    int YES_NO_OPTION -> YES_NO_OPTION
    int YES_NO_CANCEL_OPTION -> YES_NO_CANCEL_OPTION
    int OK_CANCEL_OPTION -> OK_CANCEL_OPTION
    int UNSPECIFIED_OPTION -> UNSPECIFIED_OPTION
    int INFORMATION -> INFORMATION
    int WARNING -> WARNING
    int ERROR -> ERROR
    java.lang.String prompt -> prompt
    int messageType -> messageType
    int optionType -> optionType
    int defaultOption -> defaultOption
    java.lang.String[] options -> options
    int selection -> selection
    java.lang.String getPrompt() -> getPrompt
    int getMessageType() -> getMessageType
    int getDefaultOption() -> getDefaultOption
    java.lang.String[] getOptions() -> getOptions
    int getOptionType() -> getOptionType
    int getSelectedIndex() -> getSelectedIndex
    void setSelectedIndex(int) -> setSelectedIndex
org.apache.harmony.javax.security.auth.callback.LanguageCallback -> org.apache.harmony.javax.security.auth.callback.LanguageCallback:
    long serialVersionUID -> serialVersionUID
    java.util.Locale locale -> locale
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
org.apache.harmony.javax.security.auth.callback.NameCallback -> org.apache.harmony.javax.security.auth.callback.NameCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String prompt -> prompt
    java.lang.String defaultName -> defaultName
    java.lang.String inputName -> inputName
    void setPrompt(java.lang.String) -> setPrompt
    void setDefaultName(java.lang.String) -> setDefaultName
    java.lang.String getPrompt() -> getPrompt
    java.lang.String getDefaultName() -> getDefaultName
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
org.apache.harmony.javax.security.auth.callback.PasswordCallback -> org.apache.harmony.javax.security.auth.callback.PasswordCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String prompt -> prompt
    boolean echoOn -> echoOn
    char[] inputPassword -> inputPassword
    void setPrompt(java.lang.String) -> setPrompt
    java.lang.String getPrompt() -> getPrompt
    boolean isEchoOn() -> isEchoOn
    void setPassword(char[]) -> setPassword
    char[] getPassword() -> getPassword
    void clearPassword() -> clearPassword
org.apache.harmony.javax.security.auth.callback.TextInputCallback -> org.apache.harmony.javax.security.auth.callback.TextInputCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String defaultText -> defaultText
    java.lang.String prompt -> prompt
    java.lang.String inputText -> inputText
    void setPrompt(java.lang.String) -> setPrompt
    void setDefaultText(java.lang.String) -> setDefaultText
    java.lang.String getDefaultText() -> getDefaultText
    java.lang.String getPrompt() -> getPrompt
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
org.apache.harmony.javax.security.auth.callback.TextOutputCallback -> org.apache.harmony.javax.security.auth.callback.TextOutputCallback:
    long serialVersionUID -> serialVersionUID
    int INFORMATION -> INFORMATION
    int WARNING -> WARNING
    int ERROR -> ERROR
    java.lang.String message -> message
    int messageType -> messageType
    java.lang.String getMessage() -> getMessage
    int getMessageType() -> getMessageType
org.apache.harmony.javax.security.auth.callback.UnsupportedCallbackException -> org.apache.harmony.javax.security.auth.callback.UnsupportedCallbackException:
    long serialVersionUID -> serialVersionUID
    org.apache.harmony.javax.security.auth.callback.Callback callback -> callback
    org.apache.harmony.javax.security.auth.callback.Callback getCallback() -> getCallback
org.apache.harmony.javax.security.auth.login.AccountException -> org.apache.harmony.javax.security.auth.login.AccountException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AccountExpiredException -> org.apache.harmony.javax.security.auth.login.AccountExpiredException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AccountLockedException -> org.apache.harmony.javax.security.auth.login.AccountLockedException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AccountNotFoundException -> org.apache.harmony.javax.security.auth.login.AccountNotFoundException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AppConfigurationEntry -> org.apache.harmony.javax.security.auth.login.AppConfigurationEntry:
    java.util.Map options -> options
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag controlFlag -> controlFlag
    java.lang.String loginModuleName -> loginModuleName
    java.lang.String getLoginModuleName() -> getLoginModuleName
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag getControlFlag() -> getControlFlag
    java.util.Map getOptions() -> getOptions
org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag -> org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag:
    java.lang.String flag -> flag
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag REQUIRED -> REQUIRED
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag REQUISITE -> REQUISITE
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag OPTIONAL -> OPTIONAL
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag SUFFICIENT -> SUFFICIENT
    java.lang.String toString() -> toString
org.apache.harmony.javax.security.auth.login.Configuration -> org.apache.harmony.javax.security.auth.login.Configuration:
    org.apache.harmony.javax.security.auth.login.Configuration configuration -> configuration
    org.apache.harmony.javax.security.auth.AuthPermission GET_LOGIN_CONFIGURATION -> GET_LOGIN_CONFIGURATION
    org.apache.harmony.javax.security.auth.AuthPermission SET_LOGIN_CONFIGURATION -> SET_LOGIN_CONFIGURATION
    java.lang.String LOGIN_CONFIGURATION_PROVIDER -> LOGIN_CONFIGURATION_PROVIDER
    org.apache.harmony.javax.security.auth.login.Configuration getConfiguration() -> getConfiguration
    org.apache.harmony.javax.security.auth.login.Configuration getDefaultProvider() -> getDefaultProvider
    org.apache.harmony.javax.security.auth.login.Configuration getAccessibleConfiguration() -> getAccessibleConfiguration
    void setConfiguration(org.apache.harmony.javax.security.auth.login.Configuration) -> setConfiguration
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry[] getAppConfigurationEntry(java.lang.String) -> getAppConfigurationEntry
    void refresh() -> refresh
org.apache.harmony.javax.security.auth.login.Configuration$1 -> org.apache.harmony.javax.security.auth.login.Configuration$1:
    void refresh() -> refresh
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry[] getAppConfigurationEntry(java.lang.String) -> getAppConfigurationEntry
org.apache.harmony.javax.security.auth.login.CredentialException -> org.apache.harmony.javax.security.auth.login.CredentialException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.CredentialExpiredException -> org.apache.harmony.javax.security.auth.login.CredentialExpiredException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.CredentialNotFoundException -> org.apache.harmony.javax.security.auth.login.CredentialNotFoundException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.FailedLoginException -> org.apache.harmony.javax.security.auth.login.FailedLoginException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.LoginContext -> org.apache.harmony.javax.security.auth.login.LoginContext:
    java.lang.String DEFAULT_CALLBACK_HANDLER_PROPERTY -> DEFAULT_CALLBACK_HANDLER_PROPERTY
    int OPTIONAL -> OPTIONAL
    int REQUIRED -> REQUIRED
    int REQUISITE -> REQUISITE
    int SUFFICIENT -> SUFFICIENT
    org.apache.harmony.javax.security.auth.Subject subject -> subject
    boolean userProvidedSubject -> userProvidedSubject
    boolean userProvidedConfig -> userProvidedConfig
    java.security.AccessControlContext userContext -> userContext
    org.apache.harmony.javax.security.auth.callback.CallbackHandler callbackHandler -> callbackHandler
    org.apache.harmony.javax.security.auth.login.LoginContext$Module[] modules -> modules
    java.util.Map sharedState -> sharedState
    java.lang.ClassLoader contextClassLoader -> contextClassLoader
    boolean loggedIn -> loggedIn
    void init(java.lang.String,org.apache.harmony.javax.security.auth.Subject,org.apache.harmony.javax.security.auth.callback.CallbackHandler,org.apache.harmony.javax.security.auth.login.Configuration) -> init
    org.apache.harmony.javax.security.auth.Subject getSubject() -> getSubject
    void login() -> login
    void loginImpl() -> loginImpl
    void logout() -> logout
    void logoutImpl() -> logoutImpl
    java.security.AccessControlContext access$0(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$0
    java.lang.ClassLoader access$1(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$1
    void access$2(org.apache.harmony.javax.security.auth.login.LoginContext,java.lang.ClassLoader) -> access$2
    void access$3(org.apache.harmony.javax.security.auth.login.LoginContext,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> access$3
    void access$4(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$4
    void access$5(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$5
org.apache.harmony.javax.security.auth.login.LoginContext$1 -> org.apache.harmony.javax.security.auth.login.LoginContext$1:
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    org.apache.harmony.javax.security.auth.callback.CallbackHandler val$cbHandler -> val$cbHandler
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$2 -> org.apache.harmony.javax.security.auth.login.LoginContext$2:
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$3 -> org.apache.harmony.javax.security.auth.login.LoginContext$3:
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler -> org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler:
    org.apache.harmony.javax.security.auth.callback.CallbackHandler hiddenHandlerRef -> hiddenHandlerRef
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
    org.apache.harmony.javax.security.auth.callback.CallbackHandler access$0(org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler) -> access$0
org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler$1 -> org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler$1:
    org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler this$1 -> this$1
    org.apache.harmony.javax.security.auth.callback.Callback[] val$callbacks -> val$callbacks
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$Module -> org.apache.harmony.javax.security.auth.login.LoginContext$Module:
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry entry -> entry
    int flag -> flag
    org.apache.harmony.javax.security.auth.spi.LoginModule module -> module
    java.lang.Class klass -> klass
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    int getFlag() -> getFlag
    void create(org.apache.harmony.javax.security.auth.Subject,org.apache.harmony.javax.security.auth.callback.CallbackHandler,java.util.Map) -> create
org.apache.harmony.javax.security.auth.login.LoginException -> org.apache.harmony.javax.security.auth.login.LoginException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.spi.LoginModule -> org.apache.harmony.javax.security.auth.spi.LoginModule:
    void initialize(org.apache.harmony.javax.security.auth.Subject,org.apache.harmony.javax.security.auth.callback.CallbackHandler,java.util.Map,java.util.Map) -> initialize
    boolean login() -> login
    boolean commit() -> commit
    boolean abort() -> abort
    boolean logout() -> logout
org.apache.harmony.javax.security.sasl.AuthenticationException -> org.apache.harmony.javax.security.sasl.AuthenticationException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.sasl.AuthorizeCallback -> org.apache.harmony.javax.security.sasl.AuthorizeCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String authenticationID -> authenticationID
    java.lang.String authorizationID -> authorizationID
    java.lang.String authorizedID -> authorizedID
    boolean authorized -> authorized
    java.lang.String getAuthenticationID() -> getAuthenticationID
    java.lang.String getAuthorizationID() -> getAuthorizationID
    java.lang.String getAuthorizedID() -> getAuthorizedID
    boolean isAuthorized() -> isAuthorized
    void setAuthorized(boolean) -> setAuthorized
    void setAuthorizedID(java.lang.String) -> setAuthorizedID
org.apache.harmony.javax.security.sasl.RealmCallback -> org.apache.harmony.javax.security.sasl.RealmCallback:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.sasl.RealmChoiceCallback -> org.apache.harmony.javax.security.sasl.RealmChoiceCallback:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.sasl.Sasl -> org.apache.harmony.javax.security.sasl.Sasl:
    java.lang.String CLIENTFACTORYSRV -> CLIENTFACTORYSRV
    java.lang.String SERVERFACTORYSRV -> SERVERFACTORYSRV
    java.lang.String POLICY_NOPLAINTEXT -> POLICY_NOPLAINTEXT
    java.lang.String POLICY_NOACTIVE -> POLICY_NOACTIVE
    java.lang.String POLICY_NODICTIONARY -> POLICY_NODICTIONARY
    java.lang.String POLICY_NOANONYMOUS -> POLICY_NOANONYMOUS
    java.lang.String POLICY_FORWARD_SECRECY -> POLICY_FORWARD_SECRECY
    java.lang.String POLICY_PASS_CREDENTIALS -> POLICY_PASS_CREDENTIALS
    java.lang.String MAX_BUFFER -> MAX_BUFFER
    java.lang.String RAW_SEND_SIZE -> RAW_SEND_SIZE
    java.lang.String REUSE -> REUSE
    java.lang.String QOP -> QOP
    java.lang.String STRENGTH -> STRENGTH
    java.lang.String SERVER_AUTH -> SERVER_AUTH
    java.lang.Object newInstance(java.lang.String,java.security.Provider) -> newInstance
    java.util.Collection findFactories(java.lang.String) -> findFactories
    java.util.Enumeration getSaslClientFactories() -> getSaslClientFactories
    java.util.Enumeration getSaslServerFactories() -> getSaslServerFactories
    org.apache.harmony.javax.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslServer
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
org.apache.harmony.javax.security.sasl.SaslClient -> org.apache.harmony.javax.security.sasl.SaslClient:
    void dispose() -> dispose
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    java.lang.String getMechanismName() -> getMechanismName
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
org.apache.harmony.javax.security.sasl.SaslClientFactory -> org.apache.harmony.javax.security.sasl.SaslClientFactory:
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.harmony.javax.security.sasl.SaslException -> org.apache.harmony.javax.security.sasl.SaslException:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable _exception -> _exception
    java.lang.Throwable getCause() -> getCause
    java.lang.Throwable initCause(java.lang.Throwable) -> initCause
    java.lang.String toString() -> toString
org.apache.harmony.javax.security.sasl.SaslServer -> org.apache.harmony.javax.security.sasl.SaslServer:
    void dispose() -> dispose
    byte[] evaluateResponse(byte[]) -> evaluateResponse
    java.lang.String getAuthorizationID() -> getAuthorizationID
    java.lang.String getMechanismName() -> getMechanismName
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
org.apache.harmony.javax.security.sasl.SaslServerFactory -> org.apache.harmony.javax.security.sasl.SaslServerFactory:
    org.apache.harmony.javax.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslServer
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.http.ConnectionClosedException -> org.apache.http.ConnectionClosedException:
org.apache.http.ConnectionReuseStrategy -> org.apache.http.ConnectionReuseStrategy:
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
org.apache.http.FormattedHeader -> org.apache.http.FormattedHeader:
    org.apache.http.util.CharArrayBuffer getBuffer() -> getBuffer
    int getValuePos() -> getValuePos
org.apache.http.Header -> org.apache.http.Header:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.HeaderElement[] getElements() -> getElements
org.apache.http.HeaderElement -> org.apache.http.HeaderElement:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.NameValuePair[] getParameters() -> getParameters
    org.apache.http.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    int getParameterCount() -> getParameterCount
    org.apache.http.NameValuePair getParameter(int) -> getParameter
org.apache.http.HeaderElementIterator -> org.apache.http.HeaderElementIterator:
    boolean hasNext() -> hasNext
    org.apache.http.HeaderElement nextElement() -> nextElement
org.apache.http.HeaderIterator -> org.apache.http.HeaderIterator:
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
org.apache.http.HttpClientConnection -> org.apache.http.HttpClientConnection:
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    void flush() -> flush
org.apache.http.HttpConnection -> org.apache.http.HttpConnection:
    void close() -> close
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.HttpConnectionMetrics -> org.apache.http.HttpConnectionMetrics:
    long getRequestCount() -> getRequestCount
    long getResponseCount() -> getResponseCount
    long getSentBytesCount() -> getSentBytesCount
    long getReceivedBytesCount() -> getReceivedBytesCount
    java.lang.Object getMetric(java.lang.String) -> getMetric
    void reset() -> reset
org.apache.http.HttpEntity -> org.apache.http.HttpEntity:
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.HttpEntityEnclosingRequest -> org.apache.http.HttpEntityEnclosingRequest:
    boolean expectContinue() -> expectContinue
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    org.apache.http.HttpEntity getEntity() -> getEntity
org.apache.http.HttpException -> org.apache.http.HttpException:
org.apache.http.HttpHost -> org.apache.http.HttpHost:
    java.lang.String DEFAULT_SCHEME_NAME -> DEFAULT_SCHEME_NAME
    java.lang.String hostname -> hostname
    java.lang.String lcHostname -> lcHostname
    int port -> port
    java.lang.String schemeName -> schemeName
    java.lang.String getHostName() -> getHostName
    int getPort() -> getPort
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String toURI() -> toURI
    java.lang.String toHostString() -> toHostString
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
org.apache.http.HttpInetConnection -> org.apache.http.HttpInetConnection:
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
org.apache.http.HttpMessage -> org.apache.http.HttpMessage:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    void removeHeader(org.apache.http.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    org.apache.http.HeaderIterator headerIterator() -> headerIterator
    org.apache.http.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
org.apache.http.HttpRequest -> org.apache.http.HttpRequest:
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
org.apache.http.HttpRequestFactory -> org.apache.http.HttpRequestFactory:
    org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) -> newHttpRequest
    org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
org.apache.http.HttpRequestInterceptor -> org.apache.http.HttpRequestInterceptor:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.HttpResponse -> org.apache.http.HttpResponse:
    org.apache.http.StatusLine getStatusLine() -> getStatusLine
    void setStatusLine(org.apache.http.StatusLine) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
org.apache.http.HttpResponseFactory -> org.apache.http.HttpResponseFactory:
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext) -> newHttpResponse
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext) -> newHttpResponse
org.apache.http.HttpResponseInterceptor -> org.apache.http.HttpResponseInterceptor:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.HttpServerConnection -> org.apache.http.HttpServerConnection:
    org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    void flush() -> flush
org.apache.http.HttpStatus -> org.apache.http.HttpStatus:
    int SC_ACCEPTED -> SC_ACCEPTED
    int SC_BAD_GATEWAY -> SC_BAD_GATEWAY
    int SC_BAD_REQUEST -> SC_BAD_REQUEST
    int SC_CONFLICT -> SC_CONFLICT
    int SC_CONTINUE -> SC_CONTINUE
    int SC_CREATED -> SC_CREATED
    int SC_EXPECTATION_FAILED -> SC_EXPECTATION_FAILED
    int SC_FAILED_DEPENDENCY -> SC_FAILED_DEPENDENCY
    int SC_FORBIDDEN -> SC_FORBIDDEN
    int SC_GATEWAY_TIMEOUT -> SC_GATEWAY_TIMEOUT
    int SC_GONE -> SC_GONE
    int SC_HTTP_VERSION_NOT_SUPPORTED -> SC_HTTP_VERSION_NOT_SUPPORTED
    int SC_INSUFFICIENT_SPACE_ON_RESOURCE -> SC_INSUFFICIENT_SPACE_ON_RESOURCE
    int SC_INSUFFICIENT_STORAGE -> SC_INSUFFICIENT_STORAGE
    int SC_INTERNAL_SERVER_ERROR -> SC_INTERNAL_SERVER_ERROR
    int SC_LENGTH_REQUIRED -> SC_LENGTH_REQUIRED
    int SC_LOCKED -> SC_LOCKED
    int SC_METHOD_FAILURE -> SC_METHOD_FAILURE
    int SC_METHOD_NOT_ALLOWED -> SC_METHOD_NOT_ALLOWED
    int SC_MOVED_PERMANENTLY -> SC_MOVED_PERMANENTLY
    int SC_MOVED_TEMPORARILY -> SC_MOVED_TEMPORARILY
    int SC_MULTIPLE_CHOICES -> SC_MULTIPLE_CHOICES
    int SC_MULTI_STATUS -> SC_MULTI_STATUS
    int SC_NON_AUTHORITATIVE_INFORMATION -> SC_NON_AUTHORITATIVE_INFORMATION
    int SC_NOT_ACCEPTABLE -> SC_NOT_ACCEPTABLE
    int SC_NOT_FOUND -> SC_NOT_FOUND
    int SC_NOT_IMPLEMENTED -> SC_NOT_IMPLEMENTED
    int SC_NOT_MODIFIED -> SC_NOT_MODIFIED
    int SC_NO_CONTENT -> SC_NO_CONTENT
    int SC_OK -> SC_OK
    int SC_PARTIAL_CONTENT -> SC_PARTIAL_CONTENT
    int SC_PAYMENT_REQUIRED -> SC_PAYMENT_REQUIRED
    int SC_PRECONDITION_FAILED -> SC_PRECONDITION_FAILED
    int SC_PROCESSING -> SC_PROCESSING
    int SC_PROXY_AUTHENTICATION_REQUIRED -> SC_PROXY_AUTHENTICATION_REQUIRED
    int SC_REQUESTED_RANGE_NOT_SATISFIABLE -> SC_REQUESTED_RANGE_NOT_SATISFIABLE
    int SC_REQUEST_TIMEOUT -> SC_REQUEST_TIMEOUT
    int SC_REQUEST_TOO_LONG -> SC_REQUEST_TOO_LONG
    int SC_REQUEST_URI_TOO_LONG -> SC_REQUEST_URI_TOO_LONG
    int SC_RESET_CONTENT -> SC_RESET_CONTENT
    int SC_SEE_OTHER -> SC_SEE_OTHER
    int SC_SERVICE_UNAVAILABLE -> SC_SERVICE_UNAVAILABLE
    int SC_SWITCHING_PROTOCOLS -> SC_SWITCHING_PROTOCOLS
    int SC_TEMPORARY_REDIRECT -> SC_TEMPORARY_REDIRECT
    int SC_UNAUTHORIZED -> SC_UNAUTHORIZED
    int SC_UNPROCESSABLE_ENTITY -> SC_UNPROCESSABLE_ENTITY
    int SC_UNSUPPORTED_MEDIA_TYPE -> SC_UNSUPPORTED_MEDIA_TYPE
    int SC_USE_PROXY -> SC_USE_PROXY
org.apache.http.HttpVersion -> org.apache.http.HttpVersion:
    java.lang.String HTTP -> HTTP
    org.apache.http.HttpVersion HTTP_0_9 -> HTTP_0_9
    org.apache.http.HttpVersion HTTP_1_0 -> HTTP_1_0
    org.apache.http.HttpVersion HTTP_1_1 -> HTTP_1_1
    org.apache.http.ProtocolVersion forVersion(int,int) -> forVersion
org.apache.http.MalformedChunkCodingException -> org.apache.http.MalformedChunkCodingException:
org.apache.http.MethodNotSupportedException -> org.apache.http.MethodNotSupportedException:
org.apache.http.NameValuePair -> org.apache.http.NameValuePair:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
org.apache.http.NoHttpResponseException -> org.apache.http.NoHttpResponseException:
org.apache.http.ParseException -> org.apache.http.ParseException:
org.apache.http.ProtocolException -> org.apache.http.ProtocolException:
org.apache.http.ProtocolVersion -> org.apache.http.ProtocolVersion:
    int major -> major
    int minor -> minor
    java.lang.String protocol -> protocol
    java.lang.String getProtocol() -> getProtocol
    int getMajor() -> getMajor
    int getMinor() -> getMinor
    org.apache.http.ProtocolVersion forVersion(int,int) -> forVersion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isComparable(org.apache.http.ProtocolVersion) -> isComparable
    int compareToVersion(org.apache.http.ProtocolVersion) -> compareToVersion
    boolean greaterEquals(org.apache.http.ProtocolVersion) -> greaterEquals
    boolean lessEquals(org.apache.http.ProtocolVersion) -> lessEquals
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.ReasonPhraseCatalog -> org.apache.http.ReasonPhraseCatalog:
    java.lang.String getReason(int,java.util.Locale) -> getReason
org.apache.http.RequestLine -> org.apache.http.RequestLine:
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
org.apache.http.StatusLine -> org.apache.http.StatusLine:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
org.apache.http.TokenIterator -> org.apache.http.TokenIterator:
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> nextToken
org.apache.http.UnsupportedHttpVersionException -> org.apache.http.UnsupportedHttpVersionException:
org.apache.http.auth.AUTH -> org.apache.http.auth.AUTH:
    java.lang.String PROXY_AUTH -> PROXY_AUTH
    java.lang.String PROXY_AUTH_RESP -> PROXY_AUTH_RESP
    java.lang.String WWW_AUTH -> WWW_AUTH
    java.lang.String WWW_AUTH_RESP -> WWW_AUTH_RESP
org.apache.http.auth.AuthScheme -> org.apache.http.auth.AuthScheme:
    void processChallenge(org.apache.http.Header) -> processChallenge
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
    boolean isComplete() -> isComplete
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
org.apache.http.auth.AuthSchemeFactory -> org.apache.http.auth.AuthSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.auth.AuthSchemeRegistry -> org.apache.http.auth.AuthSchemeRegistry:
    void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory) -> register
    void unregister(java.lang.String) -> unregister
    org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams) -> getAuthScheme
    java.util.List getSchemeNames() -> getSchemeNames
    void setItems(java.util.Map) -> setItems
org.apache.http.auth.AuthScope -> org.apache.http.auth.AuthScope:
    org.apache.http.auth.AuthScope ANY -> ANY
    java.lang.String ANY_HOST -> ANY_HOST
    int ANY_PORT -> ANY_PORT
    java.lang.String ANY_REALM -> ANY_REALM
    java.lang.String ANY_SCHEME -> ANY_SCHEME
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getRealm() -> getRealm
    java.lang.String getScheme() -> getScheme
    int match(org.apache.http.auth.AuthScope) -> match
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
org.apache.http.auth.AuthState -> org.apache.http.auth.AuthState:
    void invalidate() -> invalidate
    boolean isValid() -> isValid
    void setAuthScheme(org.apache.http.auth.AuthScheme) -> setAuthScheme
    org.apache.http.auth.AuthScheme getAuthScheme() -> getAuthScheme
    org.apache.http.auth.Credentials getCredentials() -> getCredentials
    void setCredentials(org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.AuthScope getAuthScope() -> getAuthScope
    void setAuthScope(org.apache.http.auth.AuthScope) -> setAuthScope
    java.lang.String toString() -> toString
org.apache.http.auth.AuthenticationException -> org.apache.http.auth.AuthenticationException:
org.apache.http.auth.BasicUserPrincipal -> org.apache.http.auth.BasicUserPrincipal:
    java.lang.String getName() -> getName
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.Credentials -> org.apache.http.auth.Credentials:
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getPassword() -> getPassword
org.apache.http.auth.InvalidCredentialsException -> org.apache.http.auth.InvalidCredentialsException:
org.apache.http.auth.MalformedChallengeException -> org.apache.http.auth.MalformedChallengeException:
org.apache.http.auth.NTCredentials -> org.apache.http.auth.NTCredentials:
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
    java.lang.String getDomain() -> getDomain
    java.lang.String getWorkstation() -> getWorkstation
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.NTUserPrincipal -> org.apache.http.auth.NTUserPrincipal:
    java.lang.String getName() -> getName
    java.lang.String getDomain() -> getDomain
    java.lang.String getUsername() -> getUsername
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.UsernamePasswordCredentials -> org.apache.http.auth.UsernamePasswordCredentials:
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.params.AuthPNames -> org.apache.http.auth.params.AuthPNames:
    java.lang.String CREDENTIAL_CHARSET -> CREDENTIAL_CHARSET
org.apache.http.auth.params.AuthParamBean -> org.apache.http.auth.params.AuthParamBean:
    void setCredentialCharset(java.lang.String) -> setCredentialCharset
org.apache.http.auth.params.AuthParams -> org.apache.http.auth.params.AuthParams:
    java.lang.String getCredentialCharset(org.apache.http.params.HttpParams) -> getCredentialCharset
    void setCredentialCharset(org.apache.http.params.HttpParams,java.lang.String) -> setCredentialCharset
org.apache.http.client.AuthenticationHandler -> org.apache.http.client.AuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> selectScheme
org.apache.http.client.CircularRedirectException -> org.apache.http.client.CircularRedirectException:
org.apache.http.client.ClientProtocolException -> org.apache.http.client.ClientProtocolException:
org.apache.http.client.CookieStore -> org.apache.http.client.CookieStore:
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
org.apache.http.client.CredentialsProvider -> org.apache.http.client.CredentialsProvider:
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    void clear() -> clear
org.apache.http.client.HttpClient -> org.apache.http.client.HttpClient:
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.client.HttpRequestRetryHandler -> org.apache.http.client.HttpRequestRetryHandler:
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
org.apache.http.client.HttpResponseException -> org.apache.http.client.HttpResponseException:
    int getStatusCode() -> getStatusCode
org.apache.http.client.NonRepeatableRequestException -> org.apache.http.client.NonRepeatableRequestException:
org.apache.http.client.RedirectException -> org.apache.http.client.RedirectException:
org.apache.http.client.RedirectHandler -> org.apache.http.client.RedirectHandler:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
org.apache.http.client.RequestDirector -> org.apache.http.client.RequestDirector:
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.client.ResponseHandler -> org.apache.http.client.ResponseHandler:
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
org.apache.http.client.UserTokenHandler -> org.apache.http.client.UserTokenHandler:
    java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
org.apache.http.client.entity.UrlEncodedFormEntity -> org.apache.http.client.entity.UrlEncodedFormEntity:
org.apache.http.client.methods.AbortableHttpRequest -> org.apache.http.client.methods.AbortableHttpRequest:
    void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) -> setConnectionRequest
    void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    void abort() -> abort
org.apache.http.client.methods.HttpDelete -> org.apache.http.client.methods.HttpDelete:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpEntityEnclosingRequestBase -> org.apache.http.client.methods.HttpEntityEnclosingRequestBase:
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    java.lang.Object clone() -> clone
org.apache.http.client.methods.HttpGet -> org.apache.http.client.methods.HttpGet:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpHead -> org.apache.http.client.methods.HttpHead:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpOptions -> org.apache.http.client.methods.HttpOptions:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
    java.util.Set getAllowedMethods(org.apache.http.HttpResponse) -> getAllowedMethods
org.apache.http.client.methods.HttpPost -> org.apache.http.client.methods.HttpPost:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpPut -> org.apache.http.client.methods.HttpPut:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpRequestBase -> org.apache.http.client.methods.HttpRequestBase:
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.net.URI getURI() -> getURI
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
    void setURI(java.net.URI) -> setURI
    void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) -> setConnectionRequest
    void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    void abort() -> abort
    boolean isAborted() -> isAborted
    java.lang.Object clone() -> clone
org.apache.http.client.methods.HttpTrace -> org.apache.http.client.methods.HttpTrace:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpUriRequest -> org.apache.http.client.methods.HttpUriRequest:
    java.lang.String getMethod() -> getMethod
    java.net.URI getURI() -> getURI
    void abort() -> abort
    boolean isAborted() -> isAborted
org.apache.http.client.params.AllClientPNames -> org.apache.http.client.params.AllClientPNames:
org.apache.http.client.params.AuthPolicy -> org.apache.http.client.params.AuthPolicy:
    java.lang.String BASIC -> BASIC
    java.lang.String DIGEST -> DIGEST
    java.lang.String NTLM -> NTLM
org.apache.http.client.params.ClientPNames -> org.apache.http.client.params.ClientPNames:
    java.lang.String ALLOW_CIRCULAR_REDIRECTS -> ALLOW_CIRCULAR_REDIRECTS
    java.lang.String CONNECTION_MANAGER_FACTORY -> CONNECTION_MANAGER_FACTORY
    java.lang.String CONNECTION_MANAGER_FACTORY_CLASS_NAME -> CONNECTION_MANAGER_FACTORY_CLASS_NAME
    java.lang.String COOKIE_POLICY -> COOKIE_POLICY
    java.lang.String DEFAULT_HEADERS -> DEFAULT_HEADERS
    java.lang.String DEFAULT_HOST -> DEFAULT_HOST
    java.lang.String HANDLE_AUTHENTICATION -> HANDLE_AUTHENTICATION
    java.lang.String HANDLE_REDIRECTS -> HANDLE_REDIRECTS
    java.lang.String MAX_REDIRECTS -> MAX_REDIRECTS
    java.lang.String REJECT_RELATIVE_REDIRECT -> REJECT_RELATIVE_REDIRECT
    java.lang.String VIRTUAL_HOST -> VIRTUAL_HOST
org.apache.http.client.params.ClientParamBean -> org.apache.http.client.params.ClientParamBean:
    void setConnectionManagerFactoryClassName(java.lang.String) -> setConnectionManagerFactoryClassName
    void setConnectionManagerFactory(org.apache.http.conn.ClientConnectionManagerFactory) -> setConnectionManagerFactory
    void setHandleRedirects(boolean) -> setHandleRedirects
    void setRejectRelativeRedirect(boolean) -> setRejectRelativeRedirect
    void setMaxRedirects(int) -> setMaxRedirects
    void setAllowCircularRedirects(boolean) -> setAllowCircularRedirects
    void setHandleAuthentication(boolean) -> setHandleAuthentication
    void setCookiePolicy(java.lang.String) -> setCookiePolicy
    void setVirtualHost(org.apache.http.HttpHost) -> setVirtualHost
    void setDefaultHeaders(java.util.Collection) -> setDefaultHeaders
    void setDefaultHost(org.apache.http.HttpHost) -> setDefaultHost
org.apache.http.client.params.CookiePolicy -> org.apache.http.client.params.CookiePolicy:
    java.lang.String BEST_MATCH -> BEST_MATCH
    java.lang.String BROWSER_COMPATIBILITY -> BROWSER_COMPATIBILITY
    java.lang.String NETSCAPE -> NETSCAPE
    java.lang.String RFC_2109 -> RFC_2109
    java.lang.String RFC_2965 -> RFC_2965
org.apache.http.client.params.HttpClientParams -> org.apache.http.client.params.HttpClientParams:
    boolean isRedirecting(org.apache.http.params.HttpParams) -> isRedirecting
    void setRedirecting(org.apache.http.params.HttpParams,boolean) -> setRedirecting
    boolean isAuthenticating(org.apache.http.params.HttpParams) -> isAuthenticating
    void setAuthenticating(org.apache.http.params.HttpParams,boolean) -> setAuthenticating
    java.lang.String getCookiePolicy(org.apache.http.params.HttpParams) -> getCookiePolicy
    void setCookiePolicy(org.apache.http.params.HttpParams,java.lang.String) -> setCookiePolicy
org.apache.http.client.protocol.ClientContext -> org.apache.http.client.protocol.ClientContext:
    java.lang.String AUTHSCHEME_REGISTRY -> AUTHSCHEME_REGISTRY
    java.lang.String AUTH_SCHEME_PREF -> AUTH_SCHEME_PREF
    java.lang.String COOKIESPEC_REGISTRY -> COOKIESPEC_REGISTRY
    java.lang.String COOKIE_ORIGIN -> COOKIE_ORIGIN
    java.lang.String COOKIE_SPEC -> COOKIE_SPEC
    java.lang.String COOKIE_STORE -> COOKIE_STORE
    java.lang.String CREDS_PROVIDER -> CREDS_PROVIDER
    java.lang.String PROXY_AUTH_STATE -> PROXY_AUTH_STATE
    java.lang.String TARGET_AUTH_STATE -> TARGET_AUTH_STATE
    java.lang.String USER_TOKEN -> USER_TOKEN
org.apache.http.client.protocol.ClientContextConfigurer -> org.apache.http.client.protocol.ClientContextConfigurer:
    void setCookieSpecRegistry(org.apache.http.cookie.CookieSpecRegistry) -> setCookieSpecRegistry
    void setAuthSchemeRegistry(org.apache.http.auth.AuthSchemeRegistry) -> setAuthSchemeRegistry
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
    void setAuthSchemePref(java.util.List) -> setAuthSchemePref
org.apache.http.client.protocol.RequestAddCookies -> org.apache.http.client.protocol.RequestAddCookies:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestDefaultHeaders -> org.apache.http.client.protocol.RequestDefaultHeaders:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestProxyAuthentication -> org.apache.http.client.protocol.RequestProxyAuthentication:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestTargetAuthentication -> org.apache.http.client.protocol.RequestTargetAuthentication:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.ResponseProcessCookies -> org.apache.http.client.protocol.ResponseProcessCookies:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.utils.CloneUtils -> org.apache.http.client.utils.CloneUtils:
    java.lang.Object clone(java.lang.Object) -> clone
org.apache.http.client.utils.URIUtils -> org.apache.http.client.utils.URIUtils:
    java.net.URI createURI(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> createURI
    java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean) -> rewriteURI
    java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost) -> rewriteURI
    java.net.URI resolve(java.net.URI,java.lang.String) -> resolve
    java.net.URI resolve(java.net.URI,java.net.URI) -> resolve
org.apache.http.client.utils.URLEncodedUtils -> org.apache.http.client.utils.URLEncodedUtils:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.util.List parse(java.net.URI,java.lang.String) -> parse
    java.util.List parse(org.apache.http.HttpEntity) -> parse
    boolean isEncoded(org.apache.http.HttpEntity) -> isEncoded
    void parse(java.util.List,java.util.Scanner,java.lang.String) -> parse
    java.lang.String format(java.util.List,java.lang.String) -> format
org.apache.http.conn.BasicEofSensorWatcher -> org.apache.http.conn.BasicEofSensorWatcher:
    boolean attemptReuse -> attemptReuse
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
org.apache.http.conn.BasicManagedEntity -> org.apache.http.conn.BasicManagedEntity:
    boolean attemptReuse -> attemptReuse
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    boolean isRepeatable() -> isRepeatable
    java.io.InputStream getContent() -> getContent
    void consumeContent() -> consumeContent
    void writeTo(java.io.OutputStream) -> writeTo
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
    void releaseManagedConnection() -> releaseManagedConnection
org.apache.http.conn.ClientConnectionManager -> org.apache.http.conn.ClientConnectionManager:
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
org.apache.http.conn.ClientConnectionManagerFactory -> org.apache.http.conn.ClientConnectionManagerFactory:
    org.apache.http.conn.ClientConnectionManager newInstance(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry) -> newInstance
org.apache.http.conn.ClientConnectionOperator -> org.apache.http.conn.ClientConnectionOperator:
    org.apache.http.conn.OperatedClientConnection createConnection() -> createConnection
    void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> openConnection
    void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> updateSecureConnection
org.apache.http.conn.ClientConnectionRequest -> org.apache.http.conn.ClientConnectionRequest:
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
    void abortRequest() -> abortRequest
org.apache.http.conn.ConnectTimeoutException -> org.apache.http.conn.ConnectTimeoutException:
org.apache.http.conn.ConnectionKeepAliveStrategy -> org.apache.http.conn.ConnectionKeepAliveStrategy:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
org.apache.http.conn.ConnectionPoolTimeoutException -> org.apache.http.conn.ConnectionPoolTimeoutException:
org.apache.http.conn.ConnectionReleaseTrigger -> org.apache.http.conn.ConnectionReleaseTrigger:
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.conn.EofSensorInputStream -> org.apache.http.conn.EofSensorInputStream:
    java.io.InputStream wrappedStream -> wrappedStream
    boolean isReadAllowed() -> isReadAllowed
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int available() -> available
    void close() -> close
    void checkEOF(int) -> checkEOF
    void checkClose() -> checkClose
    void checkAbort() -> checkAbort
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.conn.EofSensorWatcher -> org.apache.http.conn.EofSensorWatcher:
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
org.apache.http.conn.HttpHostConnectException -> org.apache.http.conn.HttpHostConnectException:
    org.apache.http.HttpHost getHost() -> getHost
org.apache.http.conn.ManagedClientConnection -> org.apache.http.conn.ManagedClientConnection:
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setState(java.lang.Object) -> setState
    java.lang.Object getState() -> getState
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
org.apache.http.conn.MultihomePlainSocketFactory -> org.apache.http.conn.MultihomePlainSocketFactory:
    org.apache.http.conn.MultihomePlainSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.http.conn.OperatedClientConnection -> org.apache.http.conn.OperatedClientConnection:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    boolean isSecure() -> isSecure
    java.net.Socket getSocket() -> getSocket
    void opening(java.net.Socket,org.apache.http.HttpHost) -> opening
    void openCompleted(boolean,org.apache.http.params.HttpParams) -> openCompleted
    void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> update
org.apache.http.conn.params.ConnConnectionPNames -> org.apache.http.conn.params.ConnConnectionPNames:
    java.lang.String MAX_STATUS_LINE_GARBAGE -> MAX_STATUS_LINE_GARBAGE
org.apache.http.conn.params.ConnConnectionParamBean -> org.apache.http.conn.params.ConnConnectionParamBean:
    void setMaxStatusLineGarbage(int) -> setMaxStatusLineGarbage
org.apache.http.conn.params.ConnManagerPNames -> org.apache.http.conn.params.ConnManagerPNames:
    java.lang.String MAX_CONNECTIONS_PER_ROUTE -> MAX_CONNECTIONS_PER_ROUTE
    java.lang.String MAX_TOTAL_CONNECTIONS -> MAX_TOTAL_CONNECTIONS
    java.lang.String TIMEOUT -> TIMEOUT
org.apache.http.conn.params.ConnManagerParamBean -> org.apache.http.conn.params.ConnManagerParamBean:
    void setTimeout(long) -> setTimeout
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    void setConnectionsPerRoute(org.apache.http.conn.params.ConnPerRouteBean) -> setConnectionsPerRoute
org.apache.http.conn.params.ConnManagerParams -> org.apache.http.conn.params.ConnManagerParams:
    int DEFAULT_MAX_TOTAL_CONNECTIONS -> DEFAULT_MAX_TOTAL_CONNECTIONS
    long getTimeout(org.apache.http.params.HttpParams) -> getTimeout
    void setTimeout(org.apache.http.params.HttpParams,long) -> setTimeout
    void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute) -> setMaxConnectionsPerRoute
    org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams) -> getMaxConnectionsPerRoute
    void setMaxTotalConnections(org.apache.http.params.HttpParams,int) -> setMaxTotalConnections
    int getMaxTotalConnections(org.apache.http.params.HttpParams) -> getMaxTotalConnections
org.apache.http.conn.params.ConnPerRoute -> org.apache.http.conn.params.ConnPerRoute:
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.conn.params.ConnPerRouteBean -> org.apache.http.conn.params.ConnPerRouteBean:
    int DEFAULT_MAX_CONNECTIONS_PER_ROUTE -> DEFAULT_MAX_CONNECTIONS_PER_ROUTE
    int getDefaultMax() -> getDefaultMax
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxForRoute
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
    void setMaxForRoutes(java.util.Map) -> setMaxForRoutes
org.apache.http.conn.params.ConnRoutePNames -> org.apache.http.conn.params.ConnRoutePNames:
    java.lang.String DEFAULT_PROXY -> DEFAULT_PROXY
    java.lang.String FORCED_ROUTE -> FORCED_ROUTE
    java.lang.String LOCAL_ADDRESS -> LOCAL_ADDRESS
org.apache.http.conn.params.ConnRouteParamBean -> org.apache.http.conn.params.ConnRouteParamBean:
    void setDefaultProxy(org.apache.http.HttpHost) -> setDefaultProxy
    void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    void setForcedRoute(org.apache.http.conn.routing.HttpRoute) -> setForcedRoute
org.apache.http.conn.params.ConnRouteParams -> org.apache.http.conn.params.ConnRouteParams:
    org.apache.http.HttpHost NO_HOST -> NO_HOST
    org.apache.http.conn.routing.HttpRoute NO_ROUTE -> NO_ROUTE
    org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams) -> getDefaultProxy
    void setDefaultProxy(org.apache.http.params.HttpParams,org.apache.http.HttpHost) -> setDefaultProxy
    org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams) -> getForcedRoute
    void setForcedRoute(org.apache.http.params.HttpParams,org.apache.http.conn.routing.HttpRoute) -> setForcedRoute
    java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams) -> getLocalAddress
    void setLocalAddress(org.apache.http.params.HttpParams,java.net.InetAddress) -> setLocalAddress
org.apache.http.conn.routing.BasicRouteDirector -> org.apache.http.conn.routing.BasicRouteDirector:
    int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> nextStep
    int firstStep(org.apache.http.conn.routing.RouteInfo) -> firstStep
    int directStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> directStep
    int proxiedStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> proxiedStep
org.apache.http.conn.routing.HttpRoute -> org.apache.http.conn.routing.HttpRoute:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.conn.routing.HttpRouteDirector -> org.apache.http.conn.routing.HttpRouteDirector:
    int COMPLETE -> COMPLETE
    int CONNECT_PROXY -> CONNECT_PROXY
    int CONNECT_TARGET -> CONNECT_TARGET
    int LAYER_PROTOCOL -> LAYER_PROTOCOL
    int TUNNEL_PROXY -> TUNNEL_PROXY
    int TUNNEL_TARGET -> TUNNEL_TARGET
    int UNREACHABLE -> UNREACHABLE
    int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> nextStep
org.apache.http.conn.routing.HttpRoutePlanner -> org.apache.http.conn.routing.HttpRoutePlanner:
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
org.apache.http.conn.routing.RouteInfo -> org.apache.http.conn.routing.RouteInfo:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
org.apache.http.conn.routing.RouteInfo$LayerType -> org.apache.http.conn.routing.RouteInfo$LayerType:
    org.apache.http.conn.routing.RouteInfo$LayerType LAYERED -> LAYERED
    org.apache.http.conn.routing.RouteInfo$LayerType PLAIN -> PLAIN
    org.apache.http.conn.routing.RouteInfo$LayerType[] $VALUES -> $VALUES
    org.apache.http.conn.routing.RouteInfo$LayerType[] values() -> values
    org.apache.http.conn.routing.RouteInfo$LayerType valueOf(java.lang.String) -> valueOf
org.apache.http.conn.routing.RouteInfo$TunnelType -> org.apache.http.conn.routing.RouteInfo$TunnelType:
    org.apache.http.conn.routing.RouteInfo$TunnelType PLAIN -> PLAIN
    org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED -> TUNNELLED
    org.apache.http.conn.routing.RouteInfo$TunnelType[] $VALUES -> $VALUES
    org.apache.http.conn.routing.RouteInfo$TunnelType[] values() -> values
    org.apache.http.conn.routing.RouteInfo$TunnelType valueOf(java.lang.String) -> valueOf
org.apache.http.conn.routing.RouteTracker -> org.apache.http.conn.routing.RouteTracker:
    void connectTarget(boolean) -> connectTarget
    void connectProxy(org.apache.http.HttpHost,boolean) -> connectProxy
    void tunnelTarget(boolean) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean) -> tunnelProxy
    void layerProtocol(boolean) -> layerProtocol
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    boolean isConnected() -> isConnected
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute toRoute() -> toRoute
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.conn.scheme.HostNameResolver -> org.apache.http.conn.scheme.HostNameResolver:
    java.net.InetAddress resolve(java.lang.String) -> resolve
org.apache.http.conn.scheme.PlainSocketFactory -> org.apache.http.conn.scheme.PlainSocketFactory:
    org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.http.conn.scheme.Scheme -> org.apache.http.conn.scheme.Scheme:
    int getDefaultPort() -> getDefaultPort
    org.apache.http.conn.scheme.SocketFactory getSocketFactory() -> getSocketFactory
    java.lang.String getName() -> getName
    boolean isLayered() -> isLayered
    int resolvePort(int) -> resolvePort
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.http.conn.scheme.SchemeRegistry -> org.apache.http.conn.scheme.SchemeRegistry:
    org.apache.http.conn.scheme.Scheme getScheme(java.lang.String) -> getScheme
    org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost) -> getScheme
    org.apache.http.conn.scheme.Scheme get(java.lang.String) -> get
    org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme) -> register
    org.apache.http.conn.scheme.Scheme unregister(java.lang.String) -> unregister
    java.util.List getSchemeNames() -> getSchemeNames
    void setItems(java.util.Map) -> setItems
org.apache.http.conn.scheme.SocketFactory -> org.apache.http.conn.scheme.SocketFactory:
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.util.InetAddressUtils -> org.apache.http.conn.util.InetAddressUtils:
    boolean isIPv4Address(java.lang.String) -> isIPv4Address
    boolean isIPv6StdAddress(java.lang.String) -> isIPv6StdAddress
    boolean isIPv6HexCompressedAddress(java.lang.String) -> isIPv6HexCompressedAddress
    boolean isIPv6Address(java.lang.String) -> isIPv6Address
org.apache.http.cookie.ClientCookie -> org.apache.http.cookie.ClientCookie:
    java.lang.String COMMENTURL_ATTR -> COMMENTURL_ATTR
    java.lang.String COMMENT_ATTR -> COMMENT_ATTR
    java.lang.String DISCARD_ATTR -> DISCARD_ATTR
    java.lang.String DOMAIN_ATTR -> DOMAIN_ATTR
    java.lang.String EXPIRES_ATTR -> EXPIRES_ATTR
    java.lang.String MAX_AGE_ATTR -> MAX_AGE_ATTR
    java.lang.String PATH_ATTR -> PATH_ATTR
    java.lang.String PORT_ATTR -> PORT_ATTR
    java.lang.String SECURE_ATTR -> SECURE_ATTR
    java.lang.String VERSION_ATTR -> VERSION_ATTR
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    boolean containsAttribute(java.lang.String) -> containsAttribute
org.apache.http.cookie.Cookie -> org.apache.http.cookie.Cookie:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String getComment() -> getComment
    java.lang.String getCommentURL() -> getCommentURL
    java.util.Date getExpiryDate() -> getExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    java.lang.String getPath() -> getPath
    int[] getPorts() -> getPorts
    boolean isSecure() -> isSecure
    int getVersion() -> getVersion
    boolean isExpired(java.util.Date) -> isExpired
org.apache.http.cookie.CookieAttributeHandler -> org.apache.http.cookie.CookieAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.cookie.CookieIdentityComparator -> org.apache.http.cookie.CookieIdentityComparator:
    int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.http.cookie.CookieOrigin -> org.apache.http.cookie.CookieOrigin:
    java.lang.String getHost() -> getHost
    java.lang.String getPath() -> getPath
    int getPort() -> getPort
    boolean isSecure() -> isSecure
    java.lang.String toString() -> toString
org.apache.http.cookie.CookiePathComparator -> org.apache.http.cookie.CookiePathComparator:
    int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.http.cookie.CookieSpec -> org.apache.http.cookie.CookieSpec:
    int getVersion() -> getVersion
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    java.util.List formatCookies(java.util.List) -> formatCookies
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.cookie.CookieSpecFactory -> org.apache.http.cookie.CookieSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.cookie.CookieSpecRegistry -> org.apache.http.cookie.CookieSpecRegistry:
    void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory) -> register
    void unregister(java.lang.String) -> unregister
    org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams) -> getCookieSpec
    org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String) -> getCookieSpec
    java.util.List getSpecNames() -> getSpecNames
    void setItems(java.util.Map) -> setItems
org.apache.http.cookie.MalformedCookieException -> org.apache.http.cookie.MalformedCookieException:
org.apache.http.cookie.SM -> org.apache.http.cookie.SM:
    java.lang.String COOKIE -> COOKIE
    java.lang.String COOKIE2 -> COOKIE2
    java.lang.String SET_COOKIE -> SET_COOKIE
    java.lang.String SET_COOKIE2 -> SET_COOKIE2
org.apache.http.cookie.SetCookie -> org.apache.http.cookie.SetCookie:
    void setValue(java.lang.String) -> setValue
    void setComment(java.lang.String) -> setComment
    void setExpiryDate(java.util.Date) -> setExpiryDate
    void setDomain(java.lang.String) -> setDomain
    void setPath(java.lang.String) -> setPath
    void setSecure(boolean) -> setSecure
    void setVersion(int) -> setVersion
org.apache.http.cookie.SetCookie2 -> org.apache.http.cookie.SetCookie2:
    void setCommentURL(java.lang.String) -> setCommentURL
    void setPorts(int[]) -> setPorts
    void setDiscard(boolean) -> setDiscard
org.apache.http.cookie.params.CookieSpecPNames -> org.apache.http.cookie.params.CookieSpecPNames:
    java.lang.String DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String SINGLE_COOKIE_HEADER -> SINGLE_COOKIE_HEADER
org.apache.http.cookie.params.CookieSpecParamBean -> org.apache.http.cookie.params.CookieSpecParamBean:
    void setDatePatterns(java.util.Collection) -> setDatePatterns
    void setSingleHeader(boolean) -> setSingleHeader
org.apache.http.entity.AbstractHttpEntity -> org.apache.http.entity.AbstractHttpEntity:
    boolean chunked -> chunked
    org.apache.http.Header contentEncoding -> contentEncoding
    org.apache.http.Header contentType -> contentType
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    boolean isChunked() -> isChunked
    void setContentType(org.apache.http.Header) -> setContentType
    void setContentType(java.lang.String) -> setContentType
    void setContentEncoding(org.apache.http.Header) -> setContentEncoding
    void setContentEncoding(java.lang.String) -> setContentEncoding
    void setChunked(boolean) -> setChunked
    void consumeContent() -> consumeContent
org.apache.http.entity.BasicHttpEntity -> org.apache.http.entity.BasicHttpEntity:
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isRepeatable() -> isRepeatable
    void setContentLength(long) -> setContentLength
    void setContent(java.io.InputStream) -> setContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.entity.BufferedHttpEntity -> org.apache.http.entity.BufferedHttpEntity:
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isChunked() -> isChunked
    boolean isRepeatable() -> isRepeatable
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
org.apache.http.entity.ByteArrayEntity -> org.apache.http.entity.ByteArrayEntity:
    byte[] content -> content
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
org.apache.http.entity.ContentLengthStrategy -> org.apache.http.entity.ContentLengthStrategy:
    int CHUNKED -> CHUNKED
    int IDENTITY -> IDENTITY
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.entity.ContentProducer -> org.apache.http.entity.ContentProducer:
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.EntityTemplate -> org.apache.http.entity.EntityTemplate:
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isRepeatable() -> isRepeatable
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.entity.FileEntity -> org.apache.http.entity.FileEntity:
    java.io.File file -> file
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
org.apache.http.entity.HttpEntityWrapper -> org.apache.http.entity.HttpEntityWrapper:
    org.apache.http.HttpEntity wrappedEntity -> wrappedEntity
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.entity.InputStreamEntity -> org.apache.http.entity.InputStreamEntity:
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.entity.SerializableEntity -> org.apache.http.entity.SerializableEntity:
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.StringEntity -> org.apache.http.entity.StringEntity:
    byte[] content -> content
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
org.apache.http.impl.AbstractHttpClientConnection -> org.apache.http.impl.AbstractHttpClientConnection:
    void assertOpen() -> assertOpen
    org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    org.apache.http.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    org.apache.http.HttpResponseFactory createHttpResponseFactory() -> createHttpResponseFactory
    org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> createResponseParser
    org.apache.http.io.HttpMessageWriter createRequestWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> createRequestWriter
    void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> init
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    void doFlush() -> doFlush
    void flush() -> flush
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    boolean isStale() -> isStale
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.impl.AbstractHttpServerConnection -> org.apache.http.impl.AbstractHttpServerConnection:
    void assertOpen() -> assertOpen
    org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    org.apache.http.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    org.apache.http.HttpRequestFactory createHttpRequestFactory() -> createHttpRequestFactory
    org.apache.http.io.HttpMessageParser createRequestParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams) -> createRequestParser
    org.apache.http.io.HttpMessageWriter createResponseWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> createResponseWriter
    void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> init
    org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void doFlush() -> doFlush
    void flush() -> flush
    void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    boolean isStale() -> isStale
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.impl.DefaultConnectionReuseStrategy -> org.apache.http.impl.DefaultConnectionReuseStrategy:
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
    org.apache.http.TokenIterator createTokenIterator(org.apache.http.HeaderIterator) -> createTokenIterator
org.apache.http.impl.DefaultHttpClientConnection -> org.apache.http.impl.DefaultHttpClientConnection:
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    java.lang.String toString() -> toString
org.apache.http.impl.DefaultHttpRequestFactory -> org.apache.http.impl.DefaultHttpRequestFactory:
    org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) -> newHttpRequest
    org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
org.apache.http.impl.DefaultHttpResponseFactory -> org.apache.http.impl.DefaultHttpResponseFactory:
    org.apache.http.ReasonPhraseCatalog reasonCatalog -> reasonCatalog
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext) -> newHttpResponse
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext) -> newHttpResponse
    java.util.Locale determineLocale(org.apache.http.protocol.HttpContext) -> determineLocale
org.apache.http.impl.DefaultHttpServerConnection -> org.apache.http.impl.DefaultHttpServerConnection:
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    java.lang.String toString() -> toString
org.apache.http.impl.EnglishReasonPhraseCatalog -> org.apache.http.impl.EnglishReasonPhraseCatalog:
    org.apache.http.impl.EnglishReasonPhraseCatalog INSTANCE -> INSTANCE
    java.lang.String getReason(int,java.util.Locale) -> getReason
org.apache.http.impl.HttpConnectionMetricsImpl -> org.apache.http.impl.HttpConnectionMetricsImpl:
    java.lang.String RECEIVED_BYTES_COUNT -> RECEIVED_BYTES_COUNT
    java.lang.String REQUEST_COUNT -> REQUEST_COUNT
    java.lang.String RESPONSE_COUNT -> RESPONSE_COUNT
    java.lang.String SENT_BYTES_COUNT -> SENT_BYTES_COUNT
    long getReceivedBytesCount() -> getReceivedBytesCount
    long getSentBytesCount() -> getSentBytesCount
    long getRequestCount() -> getRequestCount
    void incrementRequestCount() -> incrementRequestCount
    long getResponseCount() -> getResponseCount
    void incrementResponseCount() -> incrementResponseCount
    java.lang.Object getMetric(java.lang.String) -> getMetric
    void setMetric(java.lang.String,java.lang.Object) -> setMetric
    void reset() -> reset
org.apache.http.impl.NoConnectionReuseStrategy -> org.apache.http.impl.NoConnectionReuseStrategy:
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
org.apache.http.impl.SocketHttpClientConnection -> org.apache.http.impl.SocketHttpClientConnection:
    void assertNotOpen() -> assertNotOpen
    void assertOpen() -> assertOpen
    org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    boolean isOpen() -> isOpen
    java.net.Socket getSocket() -> getSocket
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
org.apache.http.impl.SocketHttpServerConnection -> org.apache.http.impl.SocketHttpServerConnection:
    void assertNotOpen() -> assertNotOpen
    void assertOpen() -> assertOpen
    org.apache.http.io.SessionInputBuffer createHttpDataReceiver(java.net.Socket,int,org.apache.http.params.HttpParams) -> createHttpDataReceiver
    org.apache.http.io.SessionOutputBuffer createHttpDataTransmitter(java.net.Socket,int,org.apache.http.params.HttpParams) -> createHttpDataTransmitter
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    java.net.Socket getSocket() -> getSocket
    boolean isOpen() -> isOpen
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
org.apache.http.impl.auth.AuthSchemeBase -> org.apache.http.impl.auth.AuthSchemeBase:
    void processChallenge(org.apache.http.Header) -> processChallenge
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    boolean isProxy() -> isProxy
org.apache.http.impl.auth.BasicScheme -> org.apache.http.impl.auth.BasicScheme:
    java.lang.String getSchemeName() -> getSchemeName
    void processChallenge(org.apache.http.Header) -> processChallenge
    boolean isComplete() -> isComplete
    boolean isConnectionBased() -> isConnectionBased
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,java.lang.String,boolean) -> authenticate
org.apache.http.impl.auth.BasicSchemeFactory -> org.apache.http.impl.auth.BasicSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.auth.DigestScheme -> org.apache.http.impl.auth.DigestScheme:
    void processChallenge(org.apache.http.Header) -> processChallenge
    boolean isComplete() -> isComplete
    java.lang.String getSchemeName() -> getSchemeName
    boolean isConnectionBased() -> isConnectionBased
    void overrideParamter(java.lang.String,java.lang.String) -> overrideParamter
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    java.lang.String createCnonce() -> createCnonce
org.apache.http.impl.auth.DigestSchemeFactory -> org.apache.http.impl.auth.DigestSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.auth.NTLMEngine -> org.apache.http.impl.auth.NTLMEngine:
    java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> generateType1Msg
    java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateType3Msg
org.apache.http.impl.auth.NTLMEngineException -> org.apache.http.impl.auth.NTLMEngineException:
org.apache.http.impl.auth.NTLMScheme -> org.apache.http.impl.auth.NTLMScheme:
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    boolean isComplete() -> isComplete
org.apache.http.impl.auth.RFC2617Scheme -> org.apache.http.impl.auth.RFC2617Scheme:
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    java.util.Map getParameters() -> getParameters
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
org.apache.http.impl.auth.UnsupportedDigestAlgorithmException -> org.apache.http.impl.auth.UnsupportedDigestAlgorithmException:
org.apache.http.impl.client.AbstractAuthenticationHandler -> org.apache.http.impl.client.AbstractAuthenticationHandler:
    java.util.Map parseChallenges(org.apache.http.Header[]) -> parseChallenges
    java.util.List getAuthPreferences() -> getAuthPreferences
    org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> selectScheme
org.apache.http.impl.client.AbstractHttpClient -> org.apache.http.impl.client.AbstractHttpClient:
    org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    org.apache.http.protocol.HttpContext createHttpContext() -> createHttpContext
    org.apache.http.protocol.HttpRequestExecutor createRequestExecutor() -> createRequestExecutor
    org.apache.http.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry() -> createAuthSchemeRegistry
    org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry() -> createCookieSpecRegistry
    org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy() -> createConnectionKeepAliveStrategy
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
    org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler() -> createHttpRequestRetryHandler
    org.apache.http.client.RedirectHandler createRedirectHandler() -> createRedirectHandler
    org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler() -> createTargetAuthenticationHandler
    org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler() -> createProxyAuthenticationHandler
    org.apache.http.client.CookieStore createCookieStore() -> createCookieStore
    org.apache.http.client.CredentialsProvider createCredentialsProvider() -> createCredentialsProvider
    org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    org.apache.http.client.UserTokenHandler createUserTokenHandler() -> createUserTokenHandler
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.protocol.HttpRequestExecutor getRequestExecutor() -> getRequestExecutor
    org.apache.http.auth.AuthSchemeRegistry getAuthSchemes() -> getAuthSchemes
    void setAuthSchemes(org.apache.http.auth.AuthSchemeRegistry) -> setAuthSchemes
    org.apache.http.cookie.CookieSpecRegistry getCookieSpecs() -> getCookieSpecs
    void setCookieSpecs(org.apache.http.cookie.CookieSpecRegistry) -> setCookieSpecs
    org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy() -> getConnectionReuseStrategy
    void setReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setReuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy() -> getConnectionKeepAliveStrategy
    void setKeepAliveStrategy(org.apache.http.conn.ConnectionKeepAliveStrategy) -> setKeepAliveStrategy
    org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler() -> getHttpRequestRetryHandler
    void setHttpRequestRetryHandler(org.apache.http.client.HttpRequestRetryHandler) -> setHttpRequestRetryHandler
    org.apache.http.client.RedirectHandler getRedirectHandler() -> getRedirectHandler
    void setRedirectHandler(org.apache.http.client.RedirectHandler) -> setRedirectHandler
    org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler() -> getTargetAuthenticationHandler
    void setTargetAuthenticationHandler(org.apache.http.client.AuthenticationHandler) -> setTargetAuthenticationHandler
    org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler() -> getProxyAuthenticationHandler
    void setProxyAuthenticationHandler(org.apache.http.client.AuthenticationHandler) -> setProxyAuthenticationHandler
    org.apache.http.client.CookieStore getCookieStore() -> getCookieStore
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    org.apache.http.client.CredentialsProvider getCredentialsProvider() -> getCredentialsProvider
    void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
    org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner() -> getRoutePlanner
    void setRoutePlanner(org.apache.http.conn.routing.HttpRoutePlanner) -> setRoutePlanner
    org.apache.http.client.UserTokenHandler getUserTokenHandler() -> getUserTokenHandler
    void setUserTokenHandler(org.apache.http.client.UserTokenHandler) -> setUserTokenHandler
    org.apache.http.protocol.BasicHttpProcessor getHttpProcessor() -> getHttpProcessor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    void clearResponseInterceptors() -> clearResponseInterceptors
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    void clearRequestInterceptors() -> clearRequestInterceptors
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    org.apache.http.params.HttpParams determineParams(org.apache.http.HttpRequest) -> determineParams
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.impl.client.BasicCookieStore -> org.apache.http.impl.client.BasicCookieStore:
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void addCookies(org.apache.http.cookie.Cookie[]) -> addCookies
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    java.lang.String toString() -> toString
    void clear() -> clear
org.apache.http.impl.client.BasicCredentialsProvider -> org.apache.http.impl.client.BasicCredentialsProvider:
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    java.lang.String toString() -> toString
    void clear() -> clear
org.apache.http.impl.client.BasicResponseHandler -> org.apache.http.impl.client.BasicResponseHandler:
    java.lang.String handleResponse(org.apache.http.HttpResponse) -> handleResponse
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
org.apache.http.impl.client.ClientParamsStack -> org.apache.http.impl.client.ClientParamsStack:
    org.apache.http.params.HttpParams applicationParams -> applicationParams
    org.apache.http.params.HttpParams clientParams -> clientParams
    org.apache.http.params.HttpParams overrideParams -> overrideParams
    org.apache.http.params.HttpParams requestParams -> requestParams
    org.apache.http.params.HttpParams getApplicationParams() -> getApplicationParams
    org.apache.http.params.HttpParams getClientParams() -> getClientParams
    org.apache.http.params.HttpParams getRequestParams() -> getRequestParams
    org.apache.http.params.HttpParams getOverrideParams() -> getOverrideParams
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    org.apache.http.params.HttpParams copy() -> copy
org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy -> org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
org.apache.http.impl.client.DefaultHttpClient -> org.apache.http.impl.client.DefaultHttpClient:
    org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    org.apache.http.protocol.HttpRequestExecutor createRequestExecutor() -> createRequestExecutor
    org.apache.http.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    org.apache.http.protocol.HttpContext createHttpContext() -> createHttpContext
    org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy() -> createConnectionKeepAliveStrategy
    org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry() -> createAuthSchemeRegistry
    org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry() -> createCookieSpecRegistry
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
    org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler() -> createHttpRequestRetryHandler
    org.apache.http.client.RedirectHandler createRedirectHandler() -> createRedirectHandler
    org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler() -> createTargetAuthenticationHandler
    org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler() -> createProxyAuthenticationHandler
    org.apache.http.client.CookieStore createCookieStore() -> createCookieStore
    org.apache.http.client.CredentialsProvider createCredentialsProvider() -> createCredentialsProvider
    org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    org.apache.http.client.UserTokenHandler createUserTokenHandler() -> createUserTokenHandler
org.apache.http.impl.client.DefaultHttpRequestRetryHandler -> org.apache.http.impl.client.DefaultHttpRequestRetryHandler:
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    boolean isRequestSentRetryEnabled() -> isRequestSentRetryEnabled
    int getRetryCount() -> getRetryCount
org.apache.http.impl.client.DefaultProxyAuthenticationHandler -> org.apache.http.impl.client.DefaultProxyAuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
org.apache.http.impl.client.DefaultRedirectHandler -> org.apache.http.impl.client.DefaultRedirectHandler:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
org.apache.http.impl.client.DefaultRequestDirector -> org.apache.http.impl.client.DefaultRequestDirector:
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.protocol.HttpProcessor httpProcessor -> httpProcessor
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    org.apache.http.params.HttpParams params -> params
    org.apache.http.client.RedirectHandler redirectHandler -> redirectHandler
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute) -> rewriteRequestURI
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    void releaseConnection() -> releaseConnection
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> establishRoute
    boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> createTunnelToTarget
    boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext) -> createTunnelToProxy
    org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> createConnectRequest
    org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> handleResponse
org.apache.http.impl.client.DefaultTargetAuthenticationHandler -> org.apache.http.impl.client.DefaultTargetAuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
org.apache.http.impl.client.DefaultUserTokenHandler -> org.apache.http.impl.client.DefaultUserTokenHandler:
    java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
org.apache.http.impl.client.EntityEnclosingRequestWrapper -> org.apache.http.impl.client.EntityEnclosingRequestWrapper:
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    boolean isRepeatable() -> isRepeatable
org.apache.http.impl.client.RedirectLocations -> org.apache.http.impl.client.RedirectLocations:
    boolean contains(java.net.URI) -> contains
    void add(java.net.URI) -> add
    boolean remove(java.net.URI) -> remove
org.apache.http.impl.client.RequestWrapper -> org.apache.http.impl.client.RequestWrapper:
    void resetHeaders() -> resetHeaders
    java.lang.String getMethod() -> getMethod
    void setMethod(java.lang.String) -> setMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    void setProtocolVersion(org.apache.http.ProtocolVersion) -> setProtocolVersion
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
    void abort() -> abort
    boolean isAborted() -> isAborted
    org.apache.http.HttpRequest getOriginal() -> getOriginal
    boolean isRepeatable() -> isRepeatable
    int getExecCount() -> getExecCount
    void incrementExecCount() -> incrementExecCount
org.apache.http.impl.client.RoutedRequest -> org.apache.http.impl.client.RoutedRequest:
    org.apache.http.impl.client.RequestWrapper request -> request
    org.apache.http.conn.routing.HttpRoute route -> route
    org.apache.http.impl.client.RequestWrapper getRequest() -> getRequest
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
org.apache.http.impl.client.TunnelRefusedException -> org.apache.http.impl.client.TunnelRefusedException:
    org.apache.http.HttpResponse getResponse() -> getResponse
org.apache.http.impl.conn.AbstractClientConnAdapter -> org.apache.http.impl.conn.AbstractClientConnAdapter:
    void detach() -> detach
    org.apache.http.conn.OperatedClientConnection getWrappedConnection() -> getWrappedConnection
    org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    void assertNotAborted() -> assertNotAborted
    void assertValid(org.apache.http.conn.OperatedClientConnection) -> assertValid
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
    void flush() -> flush
    boolean isResponseAvailable(int) -> isResponseAvailable
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    boolean isSecure() -> isSecure
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.impl.conn.AbstractPoolEntry -> org.apache.http.impl.conn.AbstractPoolEntry:
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.conn.OperatedClientConnection connection -> connection
    org.apache.http.conn.routing.HttpRoute route -> route
    java.lang.Object state -> state
    org.apache.http.conn.routing.RouteTracker tracker -> tracker
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void shutdownEntry() -> shutdownEntry
org.apache.http.impl.conn.AbstractPooledConnAdapter -> org.apache.http.impl.conn.AbstractPooledConnAdapter:
    org.apache.http.impl.conn.AbstractPoolEntry poolEntry -> poolEntry
    void assertAttached() -> assertAttached
    void detach() -> detach
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void close() -> close
    void shutdown() -> shutdown
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
org.apache.http.impl.conn.DefaultClientConnection -> org.apache.http.impl.conn.DefaultClientConnection:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    boolean isSecure() -> isSecure
    java.net.Socket getSocket() -> getSocket
    void opening(java.net.Socket,org.apache.http.HttpHost) -> opening
    void openCompleted(boolean,org.apache.http.params.HttpParams) -> openCompleted
    void shutdown() -> shutdown
    void close() -> close
    org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> createResponseParser
    void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> update
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
org.apache.http.impl.conn.DefaultClientConnectionOperator -> org.apache.http.impl.conn.DefaultClientConnectionOperator:
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.OperatedClientConnection createConnection() -> createConnection
    void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> openConnection
    void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> updateSecureConnection
    void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> prepareSocket
org.apache.http.impl.conn.DefaultHttpRoutePlanner -> org.apache.http.impl.conn.DefaultHttpRoutePlanner:
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
org.apache.http.impl.conn.DefaultResponseParser -> org.apache.http.impl.conn.DefaultResponseParser:
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.conn.IdleConnectionHandler -> org.apache.http.impl.conn.IdleConnectionHandler:
    void add(org.apache.http.HttpConnection,long,java.util.concurrent.TimeUnit) -> add
    boolean remove(org.apache.http.HttpConnection) -> remove
    void removeAll() -> removeAll
    void closeIdleConnections(long) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
org.apache.http.impl.conn.LoggingSessionInputBuffer -> org.apache.http.impl.conn.LoggingSessionInputBuffer:
    boolean isDataAvailable(int) -> isDataAvailable
    int read(byte[],int,int) -> read
    int read() -> read
    int read(byte[]) -> read
    java.lang.String readLine() -> readLine
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.conn.LoggingSessionOutputBuffer -> org.apache.http.impl.conn.LoggingSessionOutputBuffer:
    void write(byte[],int,int) -> write
    void write(int) -> write
    void write(byte[]) -> write
    void flush() -> flush
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void writeLine(java.lang.String) -> writeLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.conn.ProxySelectorRoutePlanner -> org.apache.http.impl.conn.ProxySelectorRoutePlanner:
    java.net.ProxySelector proxySelector -> proxySelector
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    java.net.ProxySelector getProxySelector() -> getProxySelector
    void setProxySelector(java.net.ProxySelector) -> setProxySelector
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineProxy
    java.lang.String getHost(java.net.InetSocketAddress) -> getHost
    java.net.Proxy chooseProxy(java.util.List,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> chooseProxy
org.apache.http.impl.conn.SingleClientConnManager -> org.apache.http.impl.conn.SingleClientConnManager:
    java.lang.String MISUSE_MESSAGE -> MISUSE_MESSAGE
    boolean alwaysShutDown -> alwaysShutDown
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    long connectionExpiresTime -> connectionExpiresTime
    boolean isShutDown -> isShutDown
    long lastReleaseTime -> lastReleaseTime
    org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter managedConn -> managedConn
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.impl.conn.SingleClientConnManager$PoolEntry uniquePoolEntry -> uniquePoolEntry
    void finalize() -> finalize
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    void assertStillUp() -> assertStillUp
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeExpiredConnections() -> closeExpiredConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void shutdown() -> shutdown
    void revokeConnection() -> revokeConnection
org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter -> org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter:
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
org.apache.http.impl.conn.SingleClientConnManager$PoolEntry -> org.apache.http.impl.conn.SingleClientConnManager$PoolEntry:
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
    void close() -> close
    void shutdown() -> shutdown
org.apache.http.impl.conn.Wire -> org.apache.http.impl.conn.Wire:
    boolean enabled() -> enabled
    void output(java.io.InputStream) -> output
    void input(java.io.InputStream) -> input
    void output(byte[],int,int) -> output
    void input(byte[],int,int) -> input
    void output(byte[]) -> output
    void input(byte[]) -> input
    void output(int) -> output
    void input(int) -> input
    void output(java.lang.String) -> output
    void input(java.lang.String) -> input
org.apache.http.impl.conn.tsccm.AbstractConnPool -> org.apache.http.impl.conn.tsccm.AbstractConnPool:
    org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler -> idleConnHandler
    boolean isShutDown -> isShutDown
    java.util.Set issuedConnections -> issuedConnections
    int numConnections -> numConnections
    java.util.concurrent.locks.Lock poolLock -> poolLock
    java.lang.ref.ReferenceQueue refQueue -> refQueue
    void enableConnectionGC() -> enableConnectionGC
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit) -> getEntry
    org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    void handleReference(java.lang.ref.Reference) -> handleReference
    void handleLostEntry(org.apache.http.conn.routing.HttpRoute) -> handleLostEntry
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void deleteClosedConnections() -> deleteClosedConnections
    void shutdown() -> shutdown
    void closeConnection(org.apache.http.conn.OperatedClientConnection) -> closeConnection
org.apache.http.impl.conn.tsccm.BasicPoolEntry -> org.apache.http.impl.conn.tsccm.BasicPoolEntry:
    org.apache.http.conn.OperatedClientConnection getConnection() -> getConnection
    org.apache.http.conn.routing.HttpRoute getPlannedRoute() -> getPlannedRoute
    org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef() -> getWeakRef
org.apache.http.impl.conn.tsccm.BasicPoolEntryRef -> org.apache.http.impl.conn.tsccm.BasicPoolEntryRef:
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter -> org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter:
    org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
    void detach() -> detach
org.apache.http.impl.conn.tsccm.ConnPoolByRoute -> org.apache.http.impl.conn.tsccm.ConnPoolByRoute:
    java.util.Queue freeConnections -> freeConnections
    int maxTotalConnections -> maxTotalConnections
    org.apache.http.conn.ClientConnectionOperator operator -> operator
    java.util.Map routeToPool -> routeToPool
    java.util.Queue waitingThreads -> waitingThreads
    java.util.Queue createFreeConnQueue() -> createFreeConnQueue
    java.util.Queue createWaitingThreadQueue() -> createWaitingThreadQueue
    java.util.Map createRouteToPoolMap() -> createRouteToPoolMap
    org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute) -> newRouteSpecificPool
    org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> newWaitingThread
    org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean) -> getRoutePool
    int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute) -> getConnectionsInPool
    org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter) -> getEntryBlocking
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object) -> getFreeEntry
    org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator) -> createEntry
    void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    void deleteLeastUsedEntry() -> deleteLeastUsedEntry
    void handleLostEntry(org.apache.http.conn.routing.HttpRoute) -> handleLostEntry
    void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> notifyWaitingThread
    void deleteClosedConnections() -> deleteClosedConnections
    void shutdown() -> shutdown
org.apache.http.impl.conn.tsccm.PoolEntryRequest -> org.apache.http.impl.conn.tsccm.PoolEntryRequest:
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    void abortRequest() -> abortRequest
org.apache.http.impl.conn.tsccm.RefQueueHandler -> org.apache.http.impl.conn.tsccm.RefQueueHandler:
    void handleReference(java.lang.ref.Reference) -> handleReference
org.apache.http.impl.conn.tsccm.RefQueueWorker -> org.apache.http.impl.conn.tsccm.RefQueueWorker:
    org.apache.http.impl.conn.tsccm.RefQueueHandler refHandler -> refHandler
    java.lang.ref.ReferenceQueue refQueue -> refQueue
    java.lang.Thread workerThread -> workerThread
    void run() -> run
    void shutdown() -> shutdown
    java.lang.String toString() -> toString
org.apache.http.impl.conn.tsccm.RouteSpecificPool -> org.apache.http.impl.conn.tsccm.RouteSpecificPool:
    java.util.LinkedList freeEntries -> freeEntries
    int maxEntries -> maxEntries
    int numEntries -> numEntries
    org.apache.http.conn.routing.HttpRoute route -> route
    java.util.Queue waitingThreads -> waitingThreads
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    int getMaxEntries() -> getMaxEntries
    boolean isUnused() -> isUnused
    int getCapacity() -> getCapacity
    int getEntryCount() -> getEntryCount
    org.apache.http.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object) -> allocEntry
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> freeEntry
    void createdEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> createdEntry
    boolean deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    void dropEntry() -> dropEntry
    void queueThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> queueThread
    boolean hasThread() -> hasThread
    org.apache.http.impl.conn.tsccm.WaitingThread nextThread() -> nextThread
    void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> removeThread
org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager -> org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool -> connectionPool
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    void finalize() -> finalize
    org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams) -> createConnectionPool
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void shutdown() -> shutdown
    int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute) -> getConnectionsInPool
    int getConnectionsInPool() -> getConnectionsInPool
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
org.apache.http.impl.conn.tsccm.WaitingThread -> org.apache.http.impl.conn.tsccm.WaitingThread:
    java.util.concurrent.locks.Condition getCondition() -> getCondition
    org.apache.http.impl.conn.tsccm.RouteSpecificPool getPool() -> getPool
    java.lang.Thread getThread() -> getThread
    boolean await(java.util.Date) -> await
    void wakeup() -> wakeup
    void interrupt() -> interrupt
org.apache.http.impl.conn.tsccm.WaitingThreadAborter -> org.apache.http.impl.conn.tsccm.WaitingThreadAborter:
    void abort() -> abort
    void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> setWaitingThread
org.apache.http.impl.cookie.AbstractCookieAttributeHandler -> org.apache.http.impl.cookie.AbstractCookieAttributeHandler:
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.AbstractCookieSpec -> org.apache.http.impl.cookie.AbstractCookieSpec:
    void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler) -> registerAttribHandler
    org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String) -> findAttribHandler
    org.apache.http.cookie.CookieAttributeHandler getAttribHandler(java.lang.String) -> getAttribHandler
    java.util.Collection getAttribHandlers() -> getAttribHandlers
org.apache.http.impl.cookie.BasicClientCookie -> org.apache.http.impl.cookie.BasicClientCookie:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.lang.String getCommentURL() -> getCommentURL
    java.util.Date getExpiryDate() -> getExpiryDate
    void setExpiryDate(java.util.Date) -> setExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    void setDomain(java.lang.String) -> setDomain
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    boolean isSecure() -> isSecure
    void setSecure(boolean) -> setSecure
    int[] getPorts() -> getPorts
    int getVersion() -> getVersion
    void setVersion(int) -> setVersion
    boolean isExpired(java.util.Date) -> isExpired
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    boolean containsAttribute(java.lang.String) -> containsAttribute
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.BasicClientCookie2 -> org.apache.http.impl.cookie.BasicClientCookie2:
    int[] getPorts() -> getPorts
    void setPorts(int[]) -> setPorts
    java.lang.String getCommentURL() -> getCommentURL
    void setCommentURL(java.lang.String) -> setCommentURL
    void setDiscard(boolean) -> setDiscard
    boolean isPersistent() -> isPersistent
    boolean isExpired(java.util.Date) -> isExpired
    java.lang.Object clone() -> clone
org.apache.http.impl.cookie.BasicCommentHandler -> org.apache.http.impl.cookie.BasicCommentHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicDomainHandler -> org.apache.http.impl.cookie.BasicDomainHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BasicExpiresHandler -> org.apache.http.impl.cookie.BasicExpiresHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicMaxAgeHandler -> org.apache.http.impl.cookie.BasicMaxAgeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicPathHandler -> org.apache.http.impl.cookie.BasicPathHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BasicSecureHandler -> org.apache.http.impl.cookie.BasicSecureHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BestMatchSpec -> org.apache.http.impl.cookie.BestMatchSpec:
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.impl.cookie.BestMatchSpecFactory -> org.apache.http.impl.cookie.BestMatchSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.BrowserCompatSpec -> org.apache.http.impl.cookie.BrowserCompatSpec:
    java.lang.String[] DATE_PATTERNS -> DATE_PATTERNS
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.impl.cookie.BrowserCompatSpecFactory -> org.apache.http.impl.cookie.BrowserCompatSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.CookieSpecBase -> org.apache.http.impl.cookie.CookieSpecBase:
    java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin) -> getDefaultPath
    java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin) -> getDefaultDomain
    java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.DateParseException -> org.apache.http.impl.cookie.DateParseException:
org.apache.http.impl.cookie.DateUtils -> org.apache.http.impl.cookie.DateUtils:
    java.util.TimeZone GMT -> GMT
    java.lang.String PATTERN_ASCTIME -> PATTERN_ASCTIME
    java.lang.String PATTERN_RFC1036 -> PATTERN_RFC1036
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date) -> parseDate
    java.lang.String formatDate(java.util.Date) -> formatDate
    java.lang.String formatDate(java.util.Date,java.lang.String) -> formatDate
org.apache.http.impl.cookie.NetscapeDomainHandler -> org.apache.http.impl.cookie.NetscapeDomainHandler:
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.NetscapeDraftHeaderParser -> org.apache.http.impl.cookie.NetscapeDraftHeaderParser:
    org.apache.http.impl.cookie.NetscapeDraftHeaderParser DEFAULT -> DEFAULT
    org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeader
org.apache.http.impl.cookie.NetscapeDraftSpec -> org.apache.http.impl.cookie.NetscapeDraftSpec:
    java.lang.String EXPIRES_PATTERN -> EXPIRES_PATTERN
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.impl.cookie.NetscapeDraftSpecFactory -> org.apache.http.impl.cookie.NetscapeDraftSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.RFC2109DomainHandler -> org.apache.http.impl.cookie.RFC2109DomainHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2109Spec -> org.apache.http.impl.cookie.RFC2109Spec:
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    java.util.List formatCookies(java.util.List) -> formatCookies
    void formatParamAsVer(org.apache.http.util.CharArrayBuffer,java.lang.String,java.lang.String,int) -> formatParamAsVer
    void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int) -> formatCookieAsVer
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.impl.cookie.RFC2109SpecFactory -> org.apache.http.impl.cookie.RFC2109SpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.RFC2109VersionHandler -> org.apache.http.impl.cookie.RFC2109VersionHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler -> org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler -> org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965DomainAttributeHandler -> org.apache.http.impl.cookie.RFC2965DomainAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965PortAttributeHandler -> org.apache.http.impl.cookie.RFC2965PortAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965Spec -> org.apache.http.impl.cookie.RFC2965Spec:
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int) -> formatCookieAsVer
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.impl.cookie.RFC2965SpecFactory -> org.apache.http.impl.cookie.RFC2965SpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.RFC2965VersionAttributeHandler -> org.apache.http.impl.cookie.RFC2965VersionAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.entity.EntityDeserializer -> org.apache.http.impl.entity.EntityDeserializer:
    org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage) -> doDeserialize
    org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage) -> deserialize
org.apache.http.impl.entity.EntitySerializer -> org.apache.http.impl.entity.EntitySerializer:
    java.io.OutputStream doSerialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage) -> doSerialize
    void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity) -> serialize
org.apache.http.impl.entity.LaxContentLengthStrategy -> org.apache.http.impl.entity.LaxContentLengthStrategy:
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.impl.entity.StrictContentLengthStrategy -> org.apache.http.impl.entity.StrictContentLengthStrategy:
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.impl.io.AbstractMessageParser -> org.apache.http.impl.io.AbstractMessageParser:
    org.apache.http.message.LineParser lineParser -> lineParser
    org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser) -> parseHeaders
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    org.apache.http.HttpMessage parse() -> parse
org.apache.http.impl.io.AbstractMessageWriter -> org.apache.http.impl.io.AbstractMessageWriter:
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.message.LineFormatter lineFormatter -> lineFormatter
    org.apache.http.io.SessionOutputBuffer sessionBuffer -> sessionBuffer
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
    void write(org.apache.http.HttpMessage) -> write
org.apache.http.impl.io.AbstractSessionInputBuffer -> org.apache.http.impl.io.AbstractSessionInputBuffer:
    void init(java.io.InputStream,int,org.apache.http.params.HttpParams) -> init
    int fillBuffer() -> fillBuffer
    boolean hasBufferedData() -> hasBufferedData
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    java.lang.String readLine() -> readLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.AbstractSessionOutputBuffer -> org.apache.http.impl.io.AbstractSessionOutputBuffer:
    void init(java.io.OutputStream,int,org.apache.http.params.HttpParams) -> init
    void flushBuffer() -> flushBuffer
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.ChunkedInputStream -> org.apache.http.impl.io.ChunkedInputStream:
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    void close() -> close
    org.apache.http.Header[] getFooters() -> getFooters
org.apache.http.impl.io.ChunkedOutputStream -> org.apache.http.impl.io.ChunkedOutputStream:
    void flushCache() -> flushCache
    void flushCacheWithAppend(byte[],int,int) -> flushCacheWithAppend
    void writeClosingChunk() -> writeClosingChunk
    void finish() -> finish
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
org.apache.http.impl.io.ContentLengthInputStream -> org.apache.http.impl.io.ContentLengthInputStream:
    void close() -> close
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    long skip(long) -> skip
org.apache.http.impl.io.ContentLengthOutputStream -> org.apache.http.impl.io.ContentLengthOutputStream:
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
org.apache.http.impl.io.HttpRequestParser -> org.apache.http.impl.io.HttpRequestParser:
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.HttpRequestWriter -> org.apache.http.impl.io.HttpRequestWriter:
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.HttpResponseParser -> org.apache.http.impl.io.HttpResponseParser:
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.HttpResponseWriter -> org.apache.http.impl.io.HttpResponseWriter:
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.HttpTransportMetricsImpl -> org.apache.http.impl.io.HttpTransportMetricsImpl:
    long getBytesTransferred() -> getBytesTransferred
    void setBytesTransferred(long) -> setBytesTransferred
    void incrementBytesTransferred(long) -> incrementBytesTransferred
    void reset() -> reset
org.apache.http.impl.io.IdentityInputStream -> org.apache.http.impl.io.IdentityInputStream:
    int available() -> available
    void close() -> close
    int read() -> read
    int read(byte[],int,int) -> read
org.apache.http.impl.io.IdentityOutputStream -> org.apache.http.impl.io.IdentityOutputStream:
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
org.apache.http.impl.io.SocketInputBuffer -> org.apache.http.impl.io.SocketInputBuffer:
    boolean isDataAvailable(int) -> isDataAvailable
    boolean isStale() -> isStale
org.apache.http.impl.io.SocketOutputBuffer -> org.apache.http.impl.io.SocketOutputBuffer:
org.apache.http.io.HttpMessageParser -> org.apache.http.io.HttpMessageParser:
    org.apache.http.HttpMessage parse() -> parse
org.apache.http.io.HttpMessageWriter -> org.apache.http.io.HttpMessageWriter:
    void write(org.apache.http.HttpMessage) -> write
org.apache.http.io.HttpTransportMetrics -> org.apache.http.io.HttpTransportMetrics:
    long getBytesTransferred() -> getBytesTransferred
    void reset() -> reset
org.apache.http.io.SessionInputBuffer -> org.apache.http.io.SessionInputBuffer:
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int read() -> read
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    java.lang.String readLine() -> readLine
    boolean isDataAvailable(int) -> isDataAvailable
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.io.SessionOutputBuffer -> org.apache.http.io.SessionOutputBuffer:
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void flush() -> flush
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.message.AbstractHttpMessage -> org.apache.http.message.AbstractHttpMessage:
    org.apache.http.message.HeaderGroup headergroup -> headergroup
    org.apache.http.params.HttpParams params -> params
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    void removeHeader(org.apache.http.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    org.apache.http.HeaderIterator headerIterator() -> headerIterator
    org.apache.http.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
org.apache.http.message.BasicHeader -> org.apache.http.message.BasicHeader:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    org.apache.http.HeaderElement[] getElements() -> getElements
    java.lang.Object clone() -> clone
org.apache.http.message.BasicHeaderElement -> org.apache.http.message.BasicHeaderElement:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.NameValuePair[] getParameters() -> getParameters
    int getParameterCount() -> getParameterCount
    org.apache.http.NameValuePair getParameter(int) -> getParameter
    org.apache.http.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.BasicHeaderElementIterator -> org.apache.http.message.BasicHeaderElementIterator:
    boolean hasNext() -> hasNext
    org.apache.http.HeaderElement nextElement() -> nextElement
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.http.message.BasicHeaderIterator -> org.apache.http.message.BasicHeaderIterator:
    org.apache.http.Header[] allHeaders -> allHeaders
    int currentIndex -> currentIndex
    java.lang.String headerName -> headerName
    int findNext(int) -> findNext
    boolean filterHeader(int) -> filterHeader
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.http.message.BasicHeaderValueFormatter -> org.apache.http.message.BasicHeaderValueFormatter:
    org.apache.http.message.BasicHeaderValueFormatter DEFAULT -> DEFAULT
    java.lang.String SEPARATORS -> SEPARATORS
    java.lang.String UNSAFE_CHARS -> UNSAFE_CHARS
    java.lang.String formatElements(org.apache.http.HeaderElement[],boolean,org.apache.http.message.HeaderValueFormatter) -> formatElements
    org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean) -> formatElements
    int estimateElementsLen(org.apache.http.HeaderElement[]) -> estimateElementsLen
    java.lang.String formatHeaderElement(org.apache.http.HeaderElement,boolean,org.apache.http.message.HeaderValueFormatter) -> formatHeaderElement
    org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean) -> formatHeaderElement
    int estimateHeaderElementLen(org.apache.http.HeaderElement) -> estimateHeaderElementLen
    java.lang.String formatParameters(org.apache.http.NameValuePair[],boolean,org.apache.http.message.HeaderValueFormatter) -> formatParameters
    org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean) -> formatParameters
    int estimateParametersLen(org.apache.http.NameValuePair[]) -> estimateParametersLen
    java.lang.String formatNameValuePair(org.apache.http.NameValuePair,boolean,org.apache.http.message.HeaderValueFormatter) -> formatNameValuePair
    org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean) -> formatNameValuePair
    int estimateNameValuePairLen(org.apache.http.NameValuePair) -> estimateNameValuePairLen
    void doFormatValue(org.apache.http.util.CharArrayBuffer,java.lang.String,boolean) -> doFormatValue
    boolean isSeparator(char) -> isSeparator
    boolean isUnsafe(char) -> isUnsafe
org.apache.http.message.BasicHeaderValueParser -> org.apache.http.message.BasicHeaderValueParser:
    org.apache.http.message.BasicHeaderValueParser DEFAULT -> DEFAULT
    org.apache.http.HeaderElement[] parseElements(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseElements
    org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseElements
    org.apache.http.HeaderElement parseHeaderElement(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseHeaderElement
    org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeaderElement
    org.apache.http.HeaderElement createHeaderElement(java.lang.String,java.lang.String,org.apache.http.NameValuePair[]) -> createHeaderElement
    org.apache.http.NameValuePair[] parseParameters(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseParameters
    org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseParameters
    org.apache.http.NameValuePair parseNameValuePair(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseNameValuePair
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[]) -> parseNameValuePair
    org.apache.http.NameValuePair createNameValuePair(java.lang.String,java.lang.String) -> createNameValuePair
org.apache.http.message.BasicHttpEntityEnclosingRequest -> org.apache.http.message.BasicHttpEntityEnclosingRequest:
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
org.apache.http.message.BasicHttpRequest -> org.apache.http.message.BasicHttpRequest:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
org.apache.http.message.BasicHttpResponse -> org.apache.http.message.BasicHttpResponse:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    org.apache.http.StatusLine getStatusLine() -> getStatusLine
    org.apache.http.HttpEntity getEntity() -> getEntity
    java.util.Locale getLocale() -> getLocale
    void setStatusLine(org.apache.http.StatusLine) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    void setLocale(java.util.Locale) -> setLocale
    java.lang.String getReason(int) -> getReason
org.apache.http.message.BasicLineFormatter -> org.apache.http.message.BasicLineFormatter:
    org.apache.http.message.BasicLineFormatter DEFAULT -> DEFAULT
    org.apache.http.util.CharArrayBuffer initBuffer(org.apache.http.util.CharArrayBuffer) -> initBuffer
    java.lang.String formatProtocolVersion(org.apache.http.ProtocolVersion,org.apache.http.message.LineFormatter) -> formatProtocolVersion
    org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion) -> appendProtocolVersion
    int estimateProtocolVersionLen(org.apache.http.ProtocolVersion) -> estimateProtocolVersionLen
    java.lang.String formatRequestLine(org.apache.http.RequestLine,org.apache.http.message.LineFormatter) -> formatRequestLine
    org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> formatRequestLine
    void doFormatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> doFormatRequestLine
    java.lang.String formatStatusLine(org.apache.http.StatusLine,org.apache.http.message.LineFormatter) -> formatStatusLine
    org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> formatStatusLine
    void doFormatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> doFormatStatusLine
    java.lang.String formatHeader(org.apache.http.Header,org.apache.http.message.LineFormatter) -> formatHeader
    org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> formatHeader
    void doFormatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> doFormatHeader
org.apache.http.message.BasicLineParser -> org.apache.http.message.BasicLineParser:
    org.apache.http.message.BasicLineParser DEFAULT -> DEFAULT
    org.apache.http.ProtocolVersion protocol -> protocol
    org.apache.http.ProtocolVersion parseProtocolVersion(java.lang.String,org.apache.http.message.LineParser) -> parseProtocolVersion
    org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseProtocolVersion
    org.apache.http.ProtocolVersion createProtocolVersion(int,int) -> createProtocolVersion
    boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> hasProtocolVersion
    org.apache.http.RequestLine parseRequestLine(java.lang.String,org.apache.http.message.LineParser) -> parseRequestLine
    org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseRequestLine
    org.apache.http.RequestLine createRequestLine(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion) -> createRequestLine
    org.apache.http.StatusLine parseStatusLine(java.lang.String,org.apache.http.message.LineParser) -> parseStatusLine
    org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseStatusLine
    org.apache.http.StatusLine createStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> createStatusLine
    org.apache.http.Header parseHeader(java.lang.String,org.apache.http.message.LineParser) -> parseHeader
    org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
    void skipWhitespace(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> skipWhitespace
org.apache.http.message.BasicListHeaderIterator -> org.apache.http.message.BasicListHeaderIterator:
    java.util.List allHeaders -> allHeaders
    int currentIndex -> currentIndex
    java.lang.String headerName -> headerName
    int lastIndex -> lastIndex
    int findNext(int) -> findNext
    boolean filterHeader(int) -> filterHeader
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.http.message.BasicNameValuePair -> org.apache.http.message.BasicNameValuePair:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
org.apache.http.message.BasicRequestLine -> org.apache.http.message.BasicRequestLine:
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.BasicStatusLine -> org.apache.http.message.BasicStatusLine:
    int getStatusCode() -> getStatusCode
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.BasicTokenIterator -> org.apache.http.message.BasicTokenIterator:
    java.lang.String HTTP_SEPARATORS -> HTTP_SEPARATORS
    java.lang.String currentHeader -> currentHeader
    java.lang.String currentToken -> currentToken
    org.apache.http.HeaderIterator headerIt -> headerIt
    int searchPos -> searchPos
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> nextToken
    java.lang.Object next() -> next
    void remove() -> remove
    int findNext(int) -> findNext
    java.lang.String createToken(java.lang.String,int,int) -> createToken
    int findTokenStart(int) -> findTokenStart
    int findTokenSeparator(int) -> findTokenSeparator
    int findTokenEnd(int) -> findTokenEnd
    boolean isTokenSeparator(char) -> isTokenSeparator
    boolean isWhitespace(char) -> isWhitespace
    boolean isTokenChar(char) -> isTokenChar
    boolean isHttpSeparator(char) -> isHttpSeparator
org.apache.http.message.BufferedHeader -> org.apache.http.message.BufferedHeader:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.HeaderElement[] getElements() -> getElements
    int getValuePos() -> getValuePos
    org.apache.http.util.CharArrayBuffer getBuffer() -> getBuffer
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.HeaderGroup -> org.apache.http.message.HeaderGroup:
    void clear() -> clear
    void addHeader(org.apache.http.Header) -> addHeader
    void removeHeader(org.apache.http.Header) -> removeHeader
    void updateHeader(org.apache.http.Header) -> updateHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    org.apache.http.Header getCondensedHeader(java.lang.String) -> getCondensedHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.HeaderIterator iterator() -> iterator
    org.apache.http.HeaderIterator iterator(java.lang.String) -> iterator
    org.apache.http.message.HeaderGroup copy() -> copy
    java.lang.Object clone() -> clone
org.apache.http.message.HeaderValueFormatter -> org.apache.http.message.HeaderValueFormatter:
    org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean) -> formatElements
    org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean) -> formatHeaderElement
    org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean) -> formatParameters
    org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean) -> formatNameValuePair
org.apache.http.message.HeaderValueParser -> org.apache.http.message.HeaderValueParser:
    org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseElements
    org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeaderElement
    org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseParameters
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
org.apache.http.message.LineFormatter -> org.apache.http.message.LineFormatter:
    org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion) -> appendProtocolVersion
    org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> formatRequestLine
    org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> formatStatusLine
    org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> formatHeader
org.apache.http.message.LineParser -> org.apache.http.message.LineParser:
    org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseProtocolVersion
    boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> hasProtocolVersion
    org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseRequestLine
    org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseStatusLine
    org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
org.apache.http.message.ParserCursor -> org.apache.http.message.ParserCursor:
    int getLowerBound() -> getLowerBound
    int getUpperBound() -> getUpperBound
    int getPos() -> getPos
    void updatePos(int) -> updatePos
    boolean atEnd() -> atEnd
    java.lang.String toString() -> toString
org.apache.http.params.AbstractHttpParams -> org.apache.http.params.AbstractHttpParams:
    long getLongParameter(java.lang.String,long) -> getLongParameter
    org.apache.http.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    org.apache.http.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
org.apache.http.params.BasicHttpParams -> org.apache.http.params.BasicHttpParams:
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    boolean isParameterSet(java.lang.String) -> isParameterSet
    boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    void clear() -> clear
    org.apache.http.params.HttpParams copy() -> copy
    java.lang.Object clone() -> clone
    void copyParams(org.apache.http.params.HttpParams) -> copyParams
org.apache.http.params.CoreProtocolPNames -> org.apache.http.params.CoreProtocolPNames:
    java.lang.String HTTP_CONTENT_CHARSET -> HTTP_CONTENT_CHARSET
    java.lang.String HTTP_ELEMENT_CHARSET -> HTTP_ELEMENT_CHARSET
    java.lang.String ORIGIN_SERVER -> ORIGIN_SERVER
    java.lang.String PROTOCOL_VERSION -> PROTOCOL_VERSION
    java.lang.String STRICT_TRANSFER_ENCODING -> STRICT_TRANSFER_ENCODING
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String USE_EXPECT_CONTINUE -> USE_EXPECT_CONTINUE
    java.lang.String WAIT_FOR_CONTINUE -> WAIT_FOR_CONTINUE
org.apache.http.params.DefaultedHttpParams -> org.apache.http.params.DefaultedHttpParams:
    org.apache.http.params.HttpParams copy() -> copy
    java.lang.Object getParameter(java.lang.String) -> getParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    org.apache.http.params.HttpParams getDefaults() -> getDefaults
org.apache.http.params.HttpAbstractParamBean -> org.apache.http.params.HttpAbstractParamBean:
    org.apache.http.params.HttpParams params -> params
org.apache.http.params.HttpConnectionParamBean -> org.apache.http.params.HttpConnectionParamBean:
    void setSoTimeout(int) -> setSoTimeout
    void setTcpNoDelay(boolean) -> setTcpNoDelay
    void setSocketBufferSize(int) -> setSocketBufferSize
    void setLinger(int) -> setLinger
    void setConnectionTimeout(int) -> setConnectionTimeout
    void setStaleCheckingEnabled(boolean) -> setStaleCheckingEnabled
org.apache.http.params.HttpParams -> org.apache.http.params.HttpParams:
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    org.apache.http.params.HttpParams copy() -> copy
    boolean removeParameter(java.lang.String) -> removeParameter
    long getLongParameter(java.lang.String,long) -> getLongParameter
    org.apache.http.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    org.apache.http.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
org.apache.http.params.HttpProtocolParamBean -> org.apache.http.params.HttpProtocolParamBean:
    void setHttpElementCharset(java.lang.String) -> setHttpElementCharset
    void setContentCharset(java.lang.String) -> setContentCharset
    void setVersion(org.apache.http.HttpVersion) -> setVersion
    void setUserAgent(java.lang.String) -> setUserAgent
    void setUseExpectContinue(boolean) -> setUseExpectContinue
org.apache.http.params.HttpProtocolParams -> org.apache.http.params.HttpProtocolParams:
    java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams) -> getHttpElementCharset
    void setHttpElementCharset(org.apache.http.params.HttpParams,java.lang.String) -> setHttpElementCharset
    java.lang.String getContentCharset(org.apache.http.params.HttpParams) -> getContentCharset
    void setContentCharset(org.apache.http.params.HttpParams,java.lang.String) -> setContentCharset
    org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams) -> getVersion
    void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion) -> setVersion
    java.lang.String getUserAgent(org.apache.http.params.HttpParams) -> getUserAgent
    void setUserAgent(org.apache.http.params.HttpParams,java.lang.String) -> setUserAgent
    boolean useExpectContinue(org.apache.http.params.HttpParams) -> useExpectContinue
    void setUseExpectContinue(org.apache.http.params.HttpParams,boolean) -> setUseExpectContinue
org.apache.http.protocol.BasicHttpContext -> org.apache.http.protocol.BasicHttpContext:
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
org.apache.http.protocol.BasicHttpProcessor -> org.apache.http.protocol.BasicHttpProcessor:
    java.util.List requestInterceptors -> requestInterceptors
    java.util.List responseInterceptors -> responseInterceptors
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void addInterceptor(org.apache.http.HttpRequestInterceptor) -> addInterceptor
    void addInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addInterceptor(org.apache.http.HttpResponseInterceptor) -> addInterceptor
    void addInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addInterceptor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void setInterceptors(java.util.List) -> setInterceptors
    void clearInterceptors() -> clearInterceptors
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    void copyInterceptors(org.apache.http.protocol.BasicHttpProcessor) -> copyInterceptors
    org.apache.http.protocol.BasicHttpProcessor copy() -> copy
    java.lang.Object clone() -> clone
org.apache.http.protocol.DefaultedHttpContext -> org.apache.http.protocol.DefaultedHttpContext:
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    org.apache.http.protocol.HttpContext getDefaults() -> getDefaults
org.apache.http.protocol.ExecutionContext -> org.apache.http.protocol.ExecutionContext:
    java.lang.String HTTP_CONNECTION -> HTTP_CONNECTION
    java.lang.String HTTP_PROXY_HOST -> HTTP_PROXY_HOST
    java.lang.String HTTP_REQUEST -> HTTP_REQUEST
    java.lang.String HTTP_REQ_SENT -> HTTP_REQ_SENT
    java.lang.String HTTP_RESPONSE -> HTTP_RESPONSE
    java.lang.String HTTP_TARGET_HOST -> HTTP_TARGET_HOST
org.apache.http.protocol.HTTP -> org.apache.http.protocol.HTTP:
    java.lang.String ASCII -> ASCII
    java.lang.String CHARSET_PARAM -> CHARSET_PARAM
    java.lang.String CHUNK_CODING -> CHUNK_CODING
    java.lang.String CONN_CLOSE -> CONN_CLOSE
    java.lang.String CONN_DIRECTIVE -> CONN_DIRECTIVE
    java.lang.String CONN_KEEP_ALIVE -> CONN_KEEP_ALIVE
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LEN -> CONTENT_LEN
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    int CR -> CR
    java.lang.String DATE_HEADER -> DATE_HEADER
    java.lang.String DEFAULT_CONTENT_CHARSET -> DEFAULT_CONTENT_CHARSET
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    java.lang.String DEFAULT_PROTOCOL_CHARSET -> DEFAULT_PROTOCOL_CHARSET
    java.lang.String EXPECT_CONTINUE -> EXPECT_CONTINUE
    java.lang.String EXPECT_DIRECTIVE -> EXPECT_DIRECTIVE
    int HT -> HT
    java.lang.String IDENTITY_CODING -> IDENTITY_CODING
    java.lang.String ISO_8859_1 -> ISO_8859_1
    int LF -> LF
    java.lang.String OCTET_STREAM_TYPE -> OCTET_STREAM_TYPE
    java.lang.String PLAIN_TEXT_TYPE -> PLAIN_TEXT_TYPE
    java.lang.String SERVER_HEADER -> SERVER_HEADER
    int SP -> SP
    java.lang.String TARGET_HOST -> TARGET_HOST
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String UTF_16 -> UTF_16
    java.lang.String UTF_8 -> UTF_8
    boolean isWhitespace(char) -> isWhitespace
org.apache.http.protocol.HttpContext -> org.apache.http.protocol.HttpContext:
    java.lang.String RESERVED_PREFIX -> RESERVED_PREFIX
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
org.apache.http.protocol.HttpDateGenerator -> org.apache.http.protocol.HttpDateGenerator:
    java.util.TimeZone GMT -> GMT
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.lang.String getCurrentDate() -> getCurrentDate
org.apache.http.protocol.HttpExpectationVerifier -> org.apache.http.protocol.HttpExpectationVerifier:
    void verify(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> verify
org.apache.http.protocol.HttpProcessor -> org.apache.http.protocol.HttpProcessor:
org.apache.http.protocol.HttpRequestExecutor -> org.apache.http.protocol.HttpRequestExecutor:
    boolean canResponseHaveBody(org.apache.http.HttpRequest,org.apache.http.HttpResponse) -> canResponseHaveBody
    org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> execute
    void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext) -> preProcess
    org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> doSendRequest
    org.apache.http.HttpResponse doReceiveResponse(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> doReceiveResponse
    void postProcess(org.apache.http.HttpResponse,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext) -> postProcess
org.apache.http.protocol.HttpRequestHandler -> org.apache.http.protocol.HttpRequestHandler:
    void handle(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> handle
org.apache.http.protocol.HttpRequestHandlerRegistry -> org.apache.http.protocol.HttpRequestHandlerRegistry:
    void register(java.lang.String,org.apache.http.protocol.HttpRequestHandler) -> register
    void unregister(java.lang.String) -> unregister
    void setHandlers(java.util.Map) -> setHandlers
    org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
    boolean matchUriRequestPattern(java.lang.String,java.lang.String) -> matchUriRequestPattern
org.apache.http.protocol.HttpRequestHandlerResolver -> org.apache.http.protocol.HttpRequestHandlerResolver:
    org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
org.apache.http.protocol.HttpRequestInterceptorList -> org.apache.http.protocol.HttpRequestInterceptorList:
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
org.apache.http.protocol.HttpResponseInterceptorList -> org.apache.http.protocol.HttpResponseInterceptorList:
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
org.apache.http.protocol.HttpService -> org.apache.http.protocol.HttpService:
    void setHttpProcessor(org.apache.http.protocol.HttpProcessor) -> setHttpProcessor
    void setConnReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setConnReuseStrategy
    void setResponseFactory(org.apache.http.HttpResponseFactory) -> setResponseFactory
    void setHandlerResolver(org.apache.http.protocol.HttpRequestHandlerResolver) -> setHandlerResolver
    void setExpectationVerifier(org.apache.http.protocol.HttpExpectationVerifier) -> setExpectationVerifier
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
    void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext) -> handleRequest
    void handleException(org.apache.http.HttpException,org.apache.http.HttpResponse) -> handleException
    void doService(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> doService
org.apache.http.protocol.RequestConnControl -> org.apache.http.protocol.RequestConnControl:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestContent -> org.apache.http.protocol.RequestContent:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestDate -> org.apache.http.protocol.RequestDate:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestExpectContinue -> org.apache.http.protocol.RequestExpectContinue:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestTargetHost -> org.apache.http.protocol.RequestTargetHost:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestUserAgent -> org.apache.http.protocol.RequestUserAgent:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseConnControl -> org.apache.http.protocol.ResponseConnControl:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseContent -> org.apache.http.protocol.ResponseContent:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseDate -> org.apache.http.protocol.ResponseDate:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseServer -> org.apache.http.protocol.ResponseServer:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.SyncBasicHttpContext -> org.apache.http.protocol.SyncBasicHttpContext:
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
org.apache.http.protocol.UriPatternMatcher -> org.apache.http.protocol.UriPatternMatcher:
    void register(java.lang.String,java.lang.Object) -> register
    void unregister(java.lang.String) -> unregister
    void setHandlers(java.util.Map) -> setHandlers
    java.lang.Object lookup(java.lang.String) -> lookup
    boolean matchUriRequestPattern(java.lang.String,java.lang.String) -> matchUriRequestPattern
org.apache.http.util.ByteArrayBuffer -> org.apache.http.util.ByteArrayBuffer:
    void append(byte[],int,int) -> append
    void append(int) -> append
    void append(char[],int,int) -> append
    void append(org.apache.http.util.CharArrayBuffer,int,int) -> append
    void clear() -> clear
    byte[] toByteArray() -> toByteArray
    int byteAt(int) -> byteAt
    int capacity() -> capacity
    int length() -> length
    byte[] buffer() -> buffer
    void setLength(int) -> setLength
    boolean isEmpty() -> isEmpty
    boolean isFull() -> isFull
org.apache.http.util.CharArrayBuffer -> org.apache.http.util.CharArrayBuffer:
    void append(char[],int,int) -> append
    void append(java.lang.String) -> append
    void append(org.apache.http.util.CharArrayBuffer,int,int) -> append
    void append(org.apache.http.util.CharArrayBuffer) -> append
    void append(char) -> append
    void append(byte[],int,int) -> append
    void append(org.apache.http.util.ByteArrayBuffer,int,int) -> append
    void append(java.lang.Object) -> append
    void clear() -> clear
    char[] toCharArray() -> toCharArray
    char charAt(int) -> charAt
    char[] buffer() -> buffer
    int capacity() -> capacity
    int length() -> length
    void ensureCapacity(int) -> ensureCapacity
    void setLength(int) -> setLength
    boolean isEmpty() -> isEmpty
    boolean isFull() -> isFull
    int indexOf(int,int,int) -> indexOf
    int indexOf(int) -> indexOf
    java.lang.String substring(int,int) -> substring
    java.lang.String substringTrimmed(int,int) -> substringTrimmed
    java.lang.String toString() -> toString
org.apache.http.util.EncodingUtils -> org.apache.http.util.EncodingUtils:
    java.lang.String getString(byte[],int,int,java.lang.String) -> getString
    java.lang.String getString(byte[],java.lang.String) -> getString
    byte[] getBytes(java.lang.String,java.lang.String) -> getBytes
    byte[] getAsciiBytes(java.lang.String) -> getAsciiBytes
    java.lang.String getAsciiString(byte[],int,int) -> getAsciiString
    java.lang.String getAsciiString(byte[]) -> getAsciiString
org.apache.http.util.EntityUtils -> org.apache.http.util.EntityUtils:
    byte[] toByteArray(org.apache.http.HttpEntity) -> toByteArray
    java.lang.String getContentCharSet(org.apache.http.HttpEntity) -> getContentCharSet
    java.lang.String toString(org.apache.http.HttpEntity,java.lang.String) -> toString
    java.lang.String toString(org.apache.http.HttpEntity) -> toString
org.apache.http.util.ExceptionUtils -> org.apache.http.util.ExceptionUtils:
    void initCause(java.lang.Throwable,java.lang.Throwable) -> initCause
org.apache.http.util.LangUtils -> org.apache.http.util.LangUtils:
    int HASH_OFFSET -> HASH_OFFSET
    int HASH_SEED -> HASH_SEED
    int hashCode(int,int) -> hashCode
    int hashCode(int,boolean) -> hashCode
    int hashCode(int,java.lang.Object) -> hashCode
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    boolean equals(java.lang.Object[],java.lang.Object[]) -> equals
org.apache.http.util.VersionInfo -> org.apache.http.util.VersionInfo:
    java.lang.String PROPERTY_MODULE -> PROPERTY_MODULE
    java.lang.String PROPERTY_RELEASE -> PROPERTY_RELEASE
    java.lang.String PROPERTY_TIMESTAMP -> PROPERTY_TIMESTAMP
    java.lang.String UNAVAILABLE -> UNAVAILABLE
    java.lang.String VERSION_PROPERTY_FILE -> VERSION_PROPERTY_FILE
    java.lang.String getPackage() -> getPackage
    java.lang.String getModule() -> getModule
    java.lang.String getRelease() -> getRelease
    java.lang.String getTimestamp() -> getTimestamp
    java.lang.String getClassloader() -> getClassloader
    java.lang.String toString() -> toString
    org.apache.http.util.VersionInfo[] loadVersionInfo(java.lang.String[],java.lang.ClassLoader) -> loadVersionInfo
    org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader) -> loadVersionInfo
    org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader) -> fromMap
org.apache.qpid.management.common.sasl.CRAMMD5HashedSaslClientFactory -> org.apache.qpid.management.common.sasl.CRAMMD5HashedSaslClientFactory:
    java.lang.String MECHANISM -> MECHANISM
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.qpid.management.common.sasl.ClientSaslFactory -> org.apache.qpid.management.common.sasl.ClientSaslFactory:
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.qpid.management.common.sasl.Constants -> org.apache.qpid.management.common.sasl.Constants:
    java.lang.String MECH_CRAMMD5 -> MECH_CRAMMD5
    java.lang.String MECH_PLAIN -> MECH_PLAIN
    java.lang.String SASL_CRAMMD5 -> SASL_CRAMMD5
    java.lang.String SASL_PLAIN -> SASL_PLAIN
org.apache.qpid.management.common.sasl.JCAProvider -> org.apache.qpid.management.common.sasl.JCAProvider:
    long serialVersionUID -> serialVersionUID
    void register(java.util.Map) -> register
org.apache.qpid.management.common.sasl.PlainSaslClient -> org.apache.qpid.management.common.sasl.PlainSaslClient:
    boolean completed -> completed
    org.apache.harmony.javax.security.auth.callback.CallbackHandler cbh -> cbh
    java.lang.String authorizationID -> authorizationID
    java.lang.String authenticationID -> authenticationID
    byte[] password -> password
    byte SEPARATOR -> SEPARATOR
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    java.lang.String getMechanismName() -> getMechanismName
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    void clearPassword() -> clearPassword
    void dispose() -> dispose
    void finalize() -> finalize
    java.lang.Object[] getUserInfo() -> getUserInfo
org.apache.qpid.management.common.sasl.SaslProvider -> org.apache.qpid.management.common.sasl.SaslProvider:
    long serialVersionUID -> serialVersionUID
org.apache.qpid.management.common.sasl.UserPasswordCallbackHandler -> org.apache.qpid.management.common.sasl.UserPasswordCallbackHandler:
    java.lang.String user -> user
    char[] pwchars -> pwchars
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
    void clearPassword() -> clearPassword
    void finalize() -> finalize
org.apache.qpid.management.common.sasl.UsernameHashedPasswordCallbackHandler -> org.apache.qpid.management.common.sasl.UsernameHashedPasswordCallbackHandler:
    java.lang.String user -> user
    char[] pwchars -> pwchars
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
    void clearPassword() -> clearPassword
    void finalize() -> finalize
    char[] getHash(java.lang.String) -> getHash
org.bitlet.weupnp.GatewayDevice -> org.bitlet.weupnp.GatewayDevice:
    java.lang.String st -> st
    java.lang.String location -> location
    java.lang.String serviceType -> serviceType
    java.lang.String serviceTypeCIF -> serviceTypeCIF
    java.lang.String urlBase -> urlBase
    java.lang.String controlURL -> controlURL
    java.lang.String controlURLCIF -> controlURLCIF
    java.lang.String eventSubURL -> eventSubURL
    java.lang.String eventSubURLCIF -> eventSubURLCIF
    java.lang.String sCPDURL -> sCPDURL
    java.lang.String sCPDURLCIF -> sCPDURLCIF
    java.lang.String deviceType -> deviceType
    java.lang.String deviceTypeCIF -> deviceTypeCIF
    java.lang.String friendlyName -> friendlyName
    java.lang.String manufacturer -> manufacturer
    java.lang.String modelDescription -> modelDescription
    java.lang.String presentationURL -> presentationURL
    java.net.InetAddress localAddress -> localAddress
    java.lang.String modelNumber -> modelNumber
    java.lang.String modelName -> modelName
    int TIMEOUT -> TIMEOUT
    void loadDescription() -> loadDescription
    java.util.Map simpleUPnPcommand(java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> simpleUPnPcommand
    boolean isConnected() -> isConnected
    java.lang.String getExternalIPAddress() -> getExternalIPAddress
    boolean addPortMapping(int,int,java.lang.String,java.lang.String,java.lang.String) -> addPortMapping
    boolean getSpecificPortMappingEntry(int,java.lang.String,org.bitlet.weupnp.PortMappingEntry) -> getSpecificPortMappingEntry
    boolean getGenericPortMappingEntry(int,org.bitlet.weupnp.PortMappingEntry) -> getGenericPortMappingEntry
    java.lang.Integer getPortMappingNumberOfEntries() -> getPortMappingNumberOfEntries
    boolean deletePortMapping(int,java.lang.String) -> deletePortMapping
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    java.lang.String getSt() -> getSt
    void setSt(java.lang.String) -> setSt
    java.lang.String getLocation() -> getLocation
    void setLocation(java.lang.String) -> setLocation
    java.lang.String getServiceType() -> getServiceType
    void setServiceType(java.lang.String) -> setServiceType
    java.lang.String getServiceTypeCIF() -> getServiceTypeCIF
    void setServiceTypeCIF(java.lang.String) -> setServiceTypeCIF
    java.lang.String getControlURL() -> getControlURL
    void setControlURL(java.lang.String) -> setControlURL
    java.lang.String getControlURLCIF() -> getControlURLCIF
    void setControlURLCIF(java.lang.String) -> setControlURLCIF
    java.lang.String getEventSubURL() -> getEventSubURL
    void setEventSubURL(java.lang.String) -> setEventSubURL
    java.lang.String getEventSubURLCIF() -> getEventSubURLCIF
    void setEventSubURLCIF(java.lang.String) -> setEventSubURLCIF
    java.lang.String getSCPDURL() -> getSCPDURL
    void setSCPDURL(java.lang.String) -> setSCPDURL
    java.lang.String getSCPDURLCIF() -> getSCPDURLCIF
    void setSCPDURLCIF(java.lang.String) -> setSCPDURLCIF
    java.lang.String getDeviceType() -> getDeviceType
    void setDeviceType(java.lang.String) -> setDeviceType
    java.lang.String getDeviceTypeCIF() -> getDeviceTypeCIF
    void setDeviceTypeCIF(java.lang.String) -> setDeviceTypeCIF
    java.lang.String getURLBase() -> getURLBase
    void setURLBase(java.lang.String) -> setURLBase
    java.lang.String getFriendlyName() -> getFriendlyName
    void setFriendlyName(java.lang.String) -> setFriendlyName
    java.lang.String getManufacturer() -> getManufacturer
    void setManufacturer(java.lang.String) -> setManufacturer
    java.lang.String getModelDescription() -> getModelDescription
    void setModelDescription(java.lang.String) -> setModelDescription
    java.lang.String getPresentationURL() -> getPresentationURL
    void setPresentationURL(java.lang.String) -> setPresentationURL
    java.lang.String getModelName() -> getModelName
    void setModelName(java.lang.String) -> setModelName
    java.lang.String getModelNumber() -> getModelNumber
    void setModelNumber(java.lang.String) -> setModelNumber
    java.lang.String copyOrCatUrl(java.lang.String,java.lang.String) -> copyOrCatUrl
org.bitlet.weupnp.GatewayDeviceHandler -> org.bitlet.weupnp.GatewayDeviceHandler:
    org.bitlet.weupnp.GatewayDevice device -> device
    java.lang.String currentElement -> currentElement
    int level -> level
    short state -> state
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
org.bitlet.weupnp.GatewayDiscover -> org.bitlet.weupnp.GatewayDiscover:
    int PORT -> PORT
    java.lang.String IP -> IP
    int TIMEOUT -> TIMEOUT
    java.lang.String stSearch -> stSearch
    java.util.Map devices -> devices
    java.util.Map discover() -> discover
    org.bitlet.weupnp.GatewayDevice parseMSearchReplay(byte[]) -> parseMSearchReplay
    org.bitlet.weupnp.GatewayDevice getValidGateway() -> getValidGateway
    java.net.InetAddress getOutboundAddress(java.net.SocketAddress) -> getOutboundAddress
org.bitlet.weupnp.LogUtils -> org.bitlet.weupnp.LogUtils:
    java.lang.String LOG_NAME -> LOG_NAME
    java.util.logging.Logger logger -> logger
    java.util.logging.Logger getLogger() -> getLogger
    java.lang.String getLogName() -> getLogName
org.bitlet.weupnp.Main -> org.bitlet.weupnp.Main:
    int SAMPLE_PORT -> SAMPLE_PORT
    short WAIT_TIME -> WAIT_TIME
    void main(java.lang.String[]) -> main
org.bitlet.weupnp.NameValueHandler -> org.bitlet.weupnp.NameValueHandler:
    java.util.Map nameValue -> nameValue
    java.lang.String currentElement -> currentElement
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
org.bitlet.weupnp.PortMappingEntry -> org.bitlet.weupnp.PortMappingEntry:
    int internalPort -> internalPort
    int externalPort -> externalPort
    java.lang.String remoteHost -> remoteHost
    java.lang.String internalClient -> internalClient
    java.lang.String protocol -> protocol
    java.lang.String enabled -> enabled
    java.lang.String portMappingDescription -> portMappingDescription
    int getInternalPort() -> getInternalPort
    void setInternalPort(int) -> setInternalPort
    int getExternalPort() -> getExternalPort
    void setExternalPort(int) -> setExternalPort
    java.lang.String getRemoteHost() -> getRemoteHost
    void setRemoteHost(java.lang.String) -> setRemoteHost
    java.lang.String getInternalClient() -> getInternalClient
    void setInternalClient(java.lang.String) -> setInternalClient
    java.lang.String getProtocol() -> getProtocol
    void setProtocol(java.lang.String) -> setProtocol
    java.lang.String getEnabled() -> getEnabled
    void setEnabled(java.lang.String) -> setEnabled
    java.lang.String getPortMappingDescription() -> getPortMappingDescription
    void setPortMappingDescription(java.lang.String) -> setPortMappingDescription
org.jivesoftware.smack.AbstractConnectionListener -> org.jivesoftware.smack.AbstractConnectionListener:
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
org.jivesoftware.smack.AccountManager -> org.jivesoftware.smack.AccountManager:
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.packet.Registration info -> info
    boolean accountCreationSupported -> accountCreationSupported
    void setSupportsAccountCreation(boolean) -> setSupportsAccountCreation
    boolean supportsAccountCreation() -> supportsAccountCreation
    java.util.Collection getAccountAttributes() -> getAccountAttributes
    java.lang.String getAccountAttribute(java.lang.String) -> getAccountAttribute
    java.lang.String getAccountInstructions() -> getAccountInstructions
    void createAccount(java.lang.String,java.lang.String) -> createAccount
    void createAccount(java.lang.String,java.lang.String,java.util.Map) -> createAccount
    void changePassword(java.lang.String) -> changePassword
    void deleteAccount() -> deleteAccount
    void getRegistrationInfo() -> getRegistrationInfo
org.jivesoftware.smack.AndroidConnectionConfiguration -> org.jivesoftware.smack.AndroidConnectionConfiguration:
    int DEFAULT_TIMEOUT -> DEFAULT_TIMEOUT
    void AndroidInit() -> AndroidInit
    void AndroidInit(java.lang.String,int) -> AndroidInit
org.jivesoftware.smack.AndroidConnectionConfiguration$1DnsSrvLookupRunnable -> org.jivesoftware.smack.AndroidConnectionConfiguration$1DnsSrvLookupRunnable:
    java.lang.String serviceName -> serviceName
    java.util.List addresses -> addresses
    org.jivesoftware.smack.AndroidConnectionConfiguration this$0 -> this$0
    void run() -> run
    java.util.List getHostAddresses() -> getHostAddresses
org.jivesoftware.smack.Chat -> org.jivesoftware.smack.Chat:
    org.jivesoftware.smack.ChatManager chatManager -> chatManager
    java.lang.String threadID -> threadID
    java.lang.String participant -> participant
    java.util.Set listeners -> listeners
    java.lang.String getThreadID() -> getThreadID
    java.lang.String getParticipant() -> getParticipant
    void sendMessage(java.lang.String) -> sendMessage
    void sendMessage(org.jivesoftware.smack.packet.Message) -> sendMessage
    void addMessageListener(org.jivesoftware.smack.MessageListener) -> addMessageListener
    void removeMessageListener(org.jivesoftware.smack.MessageListener) -> removeMessageListener
    java.util.Collection getListeners() -> getListeners
    org.jivesoftware.smack.PacketCollector createCollector() -> createCollector
    void deliver(org.jivesoftware.smack.packet.Message) -> deliver
    boolean equals(java.lang.Object) -> equals
org.jivesoftware.smack.ChatManager -> org.jivesoftware.smack.ChatManager:
    java.lang.String prefix -> prefix
    long id -> id
    java.util.Map threadChats -> threadChats
    java.util.Map jidChats -> jidChats
    java.util.Map baseJidChats -> baseJidChats
    java.util.Set chatManagerListeners -> chatManagerListeners
    java.util.Map interceptors -> interceptors
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String nextID() -> nextID
    org.jivesoftware.smack.Chat createChat(java.lang.String,org.jivesoftware.smack.MessageListener) -> createChat
    org.jivesoftware.smack.Chat createChat(java.lang.String,java.lang.String,org.jivesoftware.smack.MessageListener) -> createChat
    org.jivesoftware.smack.Chat createChat(java.lang.String,java.lang.String,boolean) -> createChat
    org.jivesoftware.smack.Chat createChat(org.jivesoftware.smack.packet.Message) -> createChat
    org.jivesoftware.smack.Chat getUserChat(java.lang.String) -> getUserChat
    org.jivesoftware.smack.Chat getThreadChat(java.lang.String) -> getThreadChat
    void addChatListener(org.jivesoftware.smack.ChatManagerListener) -> addChatListener
    void removeChatListener(org.jivesoftware.smack.ChatManagerListener) -> removeChatListener
    java.util.Collection getChatListeners() -> getChatListeners
    void deliverMessage(org.jivesoftware.smack.Chat,org.jivesoftware.smack.packet.Message) -> deliverMessage
    void sendMessage(org.jivesoftware.smack.Chat,org.jivesoftware.smack.packet.Message) -> sendMessage
    org.jivesoftware.smack.PacketCollector createPacketCollector(org.jivesoftware.smack.Chat) -> createPacketCollector
    void addOutgoingMessageInterceptor(org.jivesoftware.smack.PacketInterceptor) -> addOutgoingMessageInterceptor
    void addOutgoingMessageInterceptor(org.jivesoftware.smack.PacketInterceptor,org.jivesoftware.smack.filter.PacketFilter) -> addOutgoingMessageInterceptor
    org.jivesoftware.smack.Chat access$0(org.jivesoftware.smack.ChatManager,java.lang.String) -> access$0
    org.jivesoftware.smack.Chat access$1(org.jivesoftware.smack.ChatManager,org.jivesoftware.smack.packet.Message) -> access$1
    void access$2(org.jivesoftware.smack.ChatManager,org.jivesoftware.smack.Chat,org.jivesoftware.smack.packet.Message) -> access$2
org.jivesoftware.smack.ChatManager$1 -> org.jivesoftware.smack.ChatManager$1:
    org.jivesoftware.smack.ChatManager this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.ChatManager$2 -> org.jivesoftware.smack.ChatManager$2:
    org.jivesoftware.smack.ChatManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.ChatManagerListener -> org.jivesoftware.smack.ChatManagerListener:
    void chatCreated(org.jivesoftware.smack.Chat,boolean) -> chatCreated
org.jivesoftware.smack.Connection -> org.jivesoftware.smack.Connection:
    java.util.concurrent.atomic.AtomicInteger connectionCounter -> connectionCounter
    java.util.Set connectionEstablishedListeners -> connectionEstablishedListeners
    java.util.List compressionHandlers -> compressionHandlers
    boolean DEBUG_ENABLED -> DEBUG_ENABLED
    java.util.Collection connectionListeners -> connectionListeners
    java.util.Collection collectors -> collectors
    java.util.Map recvListeners -> recvListeners
    java.util.Map sendListeners -> sendListeners
    java.util.Map interceptors -> interceptors
    org.jivesoftware.smack.AccountManager accountManager -> accountManager
    org.jivesoftware.smack.ChatManager chatManager -> chatManager
    org.jivesoftware.smack.debugger.SmackDebugger debugger -> debugger
    java.io.Reader reader -> reader
    java.io.Writer writer -> writer
    org.jivesoftware.smack.RosterStorage rosterStorage -> rosterStorage
    org.jivesoftware.smack.SASLAuthentication saslAuthentication -> saslAuthentication
    int connectionCounterValue -> connectionCounterValue
    org.jivesoftware.smack.ConnectionConfiguration config -> config
    java.lang.String serviceCapsNode -> serviceCapsNode
    org.jivesoftware.smack.compression.XMPPInputOutputStream compressionHandler -> compressionHandler
    boolean released -> released
    void release() -> release
    boolean isReleased() -> isReleased
    org.jivesoftware.smack.ConnectionConfiguration getConfiguration() -> getConfiguration
    java.lang.String getServiceName() -> getServiceName
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getUser() -> getUser
    java.lang.String getConnectionID() -> getConnectionID
    boolean isConnected() -> isConnected
    boolean isAuthenticated() -> isAuthenticated
    boolean isAnonymous() -> isAnonymous
    boolean isSecureConnection() -> isSecureConnection
    boolean isReconnectionAllowed() -> isReconnectionAllowed
    boolean isUsingCompression() -> isUsingCompression
    void connect() -> connect
    void login(java.lang.String,java.lang.String) -> login
    void login(java.lang.String,java.lang.String,java.lang.String) -> login
    void loginAnonymously() -> loginAnonymously
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> sendPacket
    org.jivesoftware.smack.AccountManager getAccountManager() -> getAccountManager
    org.jivesoftware.smack.ChatManager getChatManager() -> getChatManager
    org.jivesoftware.smack.Roster getRoster() -> getRoster
    void setRosterStorage(org.jivesoftware.smack.RosterStorage) -> setRosterStorage
    org.jivesoftware.smack.SASLAuthentication getSASLAuthentication() -> getSASLAuthentication
    void disconnect() -> disconnect
    void disconnect(org.jivesoftware.smack.packet.Presence) -> disconnect
    void addConnectionCreationListener(org.jivesoftware.smack.ConnectionCreationListener) -> addConnectionCreationListener
    void removeConnectionCreationListener(org.jivesoftware.smack.ConnectionCreationListener) -> removeConnectionCreationListener
    java.util.Collection getConnectionCreationListeners() -> getConnectionCreationListeners
    void addConnectionListener(org.jivesoftware.smack.ConnectionListener) -> addConnectionListener
    void removeConnectionListener(org.jivesoftware.smack.ConnectionListener) -> removeConnectionListener
    java.util.Collection getConnectionListeners() -> getConnectionListeners
    org.jivesoftware.smack.PacketCollector createPacketCollector(org.jivesoftware.smack.filter.PacketFilter) -> createPacketCollector
    void removePacketCollector(org.jivesoftware.smack.PacketCollector) -> removePacketCollector
    java.util.Collection getPacketCollectors() -> getPacketCollectors
    void addPacketListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> addPacketListener
    void removePacketListener(org.jivesoftware.smack.PacketListener) -> removePacketListener
    java.util.Map getPacketListeners() -> getPacketListeners
    void addPacketSendingListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> addPacketSendingListener
    void removePacketSendingListener(org.jivesoftware.smack.PacketListener) -> removePacketSendingListener
    java.util.Map getPacketSendingListeners() -> getPacketSendingListeners
    void firePacketSendingListeners(org.jivesoftware.smack.packet.Packet) -> firePacketSendingListeners
    void addPacketInterceptor(org.jivesoftware.smack.PacketInterceptor,org.jivesoftware.smack.filter.PacketFilter) -> addPacketInterceptor
    void removePacketInterceptor(org.jivesoftware.smack.PacketInterceptor) -> removePacketInterceptor
    boolean isSendPresence() -> isSendPresence
    java.util.Map getPacketInterceptors() -> getPacketInterceptors
    void firePacketInterceptors(org.jivesoftware.smack.packet.Packet) -> firePacketInterceptors
    void initDebugger() -> initDebugger
    void setServiceCapsNode(java.lang.String) -> setServiceCapsNode
    java.lang.String getServiceCapsNode() -> getServiceCapsNode
org.jivesoftware.smack.Connection$InterceptorWrapper -> org.jivesoftware.smack.Connection$InterceptorWrapper:
    org.jivesoftware.smack.PacketInterceptor packetInterceptor -> packetInterceptor
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    boolean equals(java.lang.Object) -> equals
    void notifyListener(org.jivesoftware.smack.packet.Packet) -> notifyListener
org.jivesoftware.smack.Connection$ListenerWrapper -> org.jivesoftware.smack.Connection$ListenerWrapper:
    org.jivesoftware.smack.PacketListener packetListener -> packetListener
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    void notifyListener(org.jivesoftware.smack.packet.Packet) -> notifyListener
org.jivesoftware.smack.ConnectionConfiguration -> org.jivesoftware.smack.ConnectionConfiguration:
    java.lang.String serviceName -> serviceName
    java.lang.String host -> host
    int port -> port
    java.util.List hostAddresses -> hostAddresses
    java.lang.String truststorePath -> truststorePath
    java.lang.String truststoreType -> truststoreType
    java.lang.String truststorePassword -> truststorePassword
    java.lang.String keystorePath -> keystorePath
    java.lang.String keystoreType -> keystoreType
    java.lang.String pkcs11Library -> pkcs11Library
    boolean verifyChainEnabled -> verifyChainEnabled
    boolean verifyRootCAEnabled -> verifyRootCAEnabled
    boolean selfSignedCertificateEnabled -> selfSignedCertificateEnabled
    boolean expiredCertificatesCheckEnabled -> expiredCertificatesCheckEnabled
    boolean notMatchingDomainCheckEnabled -> notMatchingDomainCheckEnabled
    boolean isRosterVersioningAvailable -> isRosterVersioningAvailable
    javax.net.ssl.SSLContext customSSLContext -> customSSLContext
    boolean compressionEnabled -> compressionEnabled
    boolean saslAuthenticationEnabled -> saslAuthenticationEnabled
    org.apache.harmony.javax.security.auth.callback.CallbackHandler callbackHandler -> callbackHandler
    boolean debuggerEnabled -> debuggerEnabled
    boolean reconnectionAllowed -> reconnectionAllowed
    javax.net.SocketFactory socketFactory -> socketFactory
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String resource -> resource
    boolean sendPresence -> sendPresence
    boolean rosterLoadedAtLogin -> rosterLoadedAtLogin
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode securityMode -> securityMode
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    void init(java.lang.String,org.jivesoftware.smack.proxy.ProxyInfo) -> init
    void setServiceName(java.lang.String) -> setServiceName
    java.lang.String getServiceName() -> getServiceName
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    void setUsedHostAddress(org.jivesoftware.smack.util.dns.HostAddress) -> setUsedHostAddress
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode getSecurityMode() -> getSecurityMode
    void setSecurityMode(org.jivesoftware.smack.ConnectionConfiguration$SecurityMode) -> setSecurityMode
    java.lang.String getTruststorePath() -> getTruststorePath
    void setTruststorePath(java.lang.String) -> setTruststorePath
    java.lang.String getTruststoreType() -> getTruststoreType
    void setTruststoreType(java.lang.String) -> setTruststoreType
    java.lang.String getTruststorePassword() -> getTruststorePassword
    void setTruststorePassword(java.lang.String) -> setTruststorePassword
    java.lang.String getKeystorePath() -> getKeystorePath
    void setKeystorePath(java.lang.String) -> setKeystorePath
    java.lang.String getKeystoreType() -> getKeystoreType
    void setKeystoreType(java.lang.String) -> setKeystoreType
    java.lang.String getPKCS11Library() -> getPKCS11Library
    void setPKCS11Library(java.lang.String) -> setPKCS11Library
    boolean isVerifyChainEnabled() -> isVerifyChainEnabled
    void setVerifyChainEnabled(boolean) -> setVerifyChainEnabled
    boolean isVerifyRootCAEnabled() -> isVerifyRootCAEnabled
    void setVerifyRootCAEnabled(boolean) -> setVerifyRootCAEnabled
    boolean isSelfSignedCertificateEnabled() -> isSelfSignedCertificateEnabled
    void setSelfSignedCertificateEnabled(boolean) -> setSelfSignedCertificateEnabled
    boolean isExpiredCertificatesCheckEnabled() -> isExpiredCertificatesCheckEnabled
    void setExpiredCertificatesCheckEnabled(boolean) -> setExpiredCertificatesCheckEnabled
    boolean isNotMatchingDomainCheckEnabled() -> isNotMatchingDomainCheckEnabled
    void setNotMatchingDomainCheckEnabled(boolean) -> setNotMatchingDomainCheckEnabled
    javax.net.ssl.SSLContext getCustomSSLContext() -> getCustomSSLContext
    void setCustomSSLContext(javax.net.ssl.SSLContext) -> setCustomSSLContext
    boolean isCompressionEnabled() -> isCompressionEnabled
    void setCompressionEnabled(boolean) -> setCompressionEnabled
    boolean isSASLAuthenticationEnabled() -> isSASLAuthenticationEnabled
    void setSASLAuthenticationEnabled(boolean) -> setSASLAuthenticationEnabled
    boolean isDebuggerEnabled() -> isDebuggerEnabled
    void setDebuggerEnabled(boolean) -> setDebuggerEnabled
    void setReconnectionAllowed(boolean) -> setReconnectionAllowed
    boolean isReconnectionAllowed() -> isReconnectionAllowed
    void setSocketFactory(javax.net.SocketFactory) -> setSocketFactory
    void setSendPresence(boolean) -> setSendPresence
    boolean isRosterLoadedAtLogin() -> isRosterLoadedAtLogin
    void setRosterLoadedAtLogin(boolean) -> setRosterLoadedAtLogin
    org.apache.harmony.javax.security.auth.callback.CallbackHandler getCallbackHandler() -> getCallbackHandler
    void setCallbackHandler(org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> setCallbackHandler
    javax.net.SocketFactory getSocketFactory() -> getSocketFactory
    java.util.List getHostAddresses() -> getHostAddresses
    void addHostAddress(java.lang.String,int) -> addHostAddress
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
    java.lang.String getResource() -> getResource
    boolean isRosterVersioningAvailable() -> isRosterVersioningAvailable
    void setRosterVersioningAvailable(boolean) -> setRosterVersioningAvailable
    boolean isSendPresence() -> isSendPresence
    void setLoginInfo(java.lang.String,java.lang.String,java.lang.String) -> setLoginInfo
    void initHostAddresses(java.lang.String,int) -> initHostAddresses
org.jivesoftware.smack.ConnectionConfiguration$SecurityMode -> org.jivesoftware.smack.ConnectionConfiguration$SecurityMode:
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode required -> required
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode enabled -> enabled
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode disabled -> disabled
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode[] values() -> values
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.ConnectionCreationListener -> org.jivesoftware.smack.ConnectionCreationListener:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smack.ConnectionListener -> org.jivesoftware.smack.ConnectionListener:
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
org.jivesoftware.smack.MessageListener -> org.jivesoftware.smack.MessageListener:
    void processMessage(org.jivesoftware.smack.Chat,org.jivesoftware.smack.packet.Message) -> processMessage
org.jivesoftware.smack.NonSASLAuthentication -> org.jivesoftware.smack.NonSASLAuthentication:
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticateAnonymously() -> authenticateAnonymously
org.jivesoftware.smack.OpenTrustManager -> org.jivesoftware.smack.OpenTrustManager:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
org.jivesoftware.smack.PacketCollector -> org.jivesoftware.smack.PacketCollector:
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    java.util.concurrent.ArrayBlockingQueue resultQueue -> resultQueue
    org.jivesoftware.smack.Connection connection -> connection
    boolean cancelled -> cancelled
    void cancel() -> cancel
    org.jivesoftware.smack.filter.PacketFilter getPacketFilter() -> getPacketFilter
    org.jivesoftware.smack.packet.Packet pollResult() -> pollResult
    org.jivesoftware.smack.packet.Packet nextResult() -> nextResult
    org.jivesoftware.smack.packet.Packet nextResult(long) -> nextResult
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.PacketInterceptor -> org.jivesoftware.smack.PacketInterceptor:
    void interceptPacket(org.jivesoftware.smack.packet.Packet) -> interceptPacket
org.jivesoftware.smack.PacketListener -> org.jivesoftware.smack.PacketListener:
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.PacketReader -> org.jivesoftware.smack.PacketReader:
    java.lang.String TAG -> TAG
    java.lang.Thread readerThread -> readerThread
    java.util.concurrent.ExecutorService listenerExecutor -> listenerExecutor
    org.jivesoftware.smack.XMPPConnection connection -> connection
    org.xmlpull.v1.XmlPullParser parser -> parser
    boolean done -> done
    java.lang.String connectionID -> connectionID
    boolean featuresAreParsed -> featuresAreParsed
    void init() -> init
    void startup() -> startup
    void shutdown() -> shutdown
    void resetParser() -> resetParser
    void parsePackets(java.lang.Thread) -> parsePackets
    void releaseConnectionIDLock() -> releaseConnectionIDLock
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void parseFeatures(org.xmlpull.v1.XmlPullParser) -> parseFeatures
    org.jivesoftware.smack.XMPPConnection access$0(org.jivesoftware.smack.PacketReader) -> access$0
    void access$1(org.jivesoftware.smack.PacketReader,java.lang.Thread) -> access$1
org.jivesoftware.smack.PacketReader$1 -> org.jivesoftware.smack.PacketReader$1:
    org.jivesoftware.smack.PacketReader this$0 -> this$0
    void run() -> run
org.jivesoftware.smack.PacketReader$2 -> org.jivesoftware.smack.PacketReader$2:
    org.jivesoftware.smack.PacketReader this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.jivesoftware.smack.PacketReader$ListenerNotification -> org.jivesoftware.smack.PacketReader$ListenerNotification:
    org.jivesoftware.smack.packet.Packet packet -> packet
    org.jivesoftware.smack.PacketReader this$0 -> this$0
    void run() -> run
org.jivesoftware.smack.PacketWriter -> org.jivesoftware.smack.PacketWriter:
    java.lang.Thread writerThread -> writerThread
    java.lang.Thread keepAliveThread -> keepAliveThread
    java.io.Writer writer -> writer
    org.jivesoftware.smack.XMPPConnection connection -> connection
    java.util.concurrent.BlockingQueue queue -> queue
    boolean done -> done
    void init() -> init
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> sendPacket
    void startup() -> startup
    void setWriter(java.io.Writer) -> setWriter
    void shutdown() -> shutdown
    org.jivesoftware.smack.packet.Packet nextPacket() -> nextPacket
    void writePackets(java.lang.Thread) -> writePackets
    void openStream() -> openStream
    void access$0(org.jivesoftware.smack.PacketWriter,java.lang.Thread) -> access$0
org.jivesoftware.smack.PacketWriter$1 -> org.jivesoftware.smack.PacketWriter$1:
    org.jivesoftware.smack.PacketWriter this$0 -> this$0
    void run() -> run
org.jivesoftware.smack.PrivacyList -> org.jivesoftware.smack.PrivacyList:
    boolean isActiveList -> isActiveList
    boolean isDefaultList -> isDefaultList
    java.lang.String listName -> listName
    java.util.List items -> items
    boolean isActiveList() -> isActiveList
    boolean isDefaultList() -> isDefaultList
    java.util.List getItems() -> getItems
    java.lang.String toString() -> toString
org.jivesoftware.smack.PrivacyListListener -> org.jivesoftware.smack.PrivacyListListener:
    void setPrivacyList(java.lang.String,java.util.List) -> setPrivacyList
    void updatedPrivacyList(java.lang.String) -> updatedPrivacyList
org.jivesoftware.smack.PrivacyListManager -> org.jivesoftware.smack.PrivacyListManager:
    java.util.Map instances -> instances
    java.lang.ref.WeakReference connection -> connection
    java.util.List listeners -> listeners
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    java.lang.String getUser() -> getUser
    org.jivesoftware.smack.PrivacyListManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    org.jivesoftware.smack.packet.Privacy getRequest(org.jivesoftware.smack.packet.Privacy) -> getRequest
    org.jivesoftware.smack.packet.Packet setRequest(org.jivesoftware.smack.packet.Privacy) -> setRequest
    org.jivesoftware.smack.packet.Privacy getPrivacyWithListNames() -> getPrivacyWithListNames
    org.jivesoftware.smack.PrivacyList getActiveList() -> getActiveList
    org.jivesoftware.smack.PrivacyList getDefaultList() -> getDefaultList
    java.util.List getPrivacyListItems(java.lang.String) -> getPrivacyListItems
    org.jivesoftware.smack.PrivacyList getPrivacyList(java.lang.String) -> getPrivacyList
    org.jivesoftware.smack.PrivacyList[] getPrivacyLists() -> getPrivacyLists
    void setActiveListName(java.lang.String) -> setActiveListName
    void declineActiveList() -> declineActiveList
    void setDefaultListName(java.lang.String) -> setDefaultListName
    void declineDefaultList() -> declineDefaultList
    void createPrivacyList(java.lang.String,java.util.List) -> createPrivacyList
    void updatePrivacyList(java.lang.String,java.util.List) -> updatePrivacyList
    void deletePrivacyList(java.lang.String) -> deletePrivacyList
    void addListener(org.jivesoftware.smack.PrivacyListListener) -> addListener
    java.util.List access$0(org.jivesoftware.smack.PrivacyListManager) -> access$0
org.jivesoftware.smack.PrivacyListManager$1 -> org.jivesoftware.smack.PrivacyListManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smack.PrivacyListManager$2 -> org.jivesoftware.smack.PrivacyListManager$2:
    org.jivesoftware.smack.PrivacyListManager this$0 -> this$0
    org.jivesoftware.smack.Connection val$connection -> val$connection
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.PrivacyListManager$2$1 -> org.jivesoftware.smack.PrivacyListManager$2$1:
    org.jivesoftware.smack.PrivacyListManager$2 this$1 -> this$1
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.Roster -> org.jivesoftware.smack.Roster:
    org.jivesoftware.smack.Roster$SubscriptionMode defaultSubscriptionMode -> defaultSubscriptionMode
    org.jivesoftware.smack.RosterStorage persistentStorage -> persistentStorage
    org.jivesoftware.smack.Connection connection -> connection
    java.util.Map groups -> groups
    java.util.Map entries -> entries
    java.util.List unfiledEntries -> unfiledEntries
    java.util.List rosterListeners -> rosterListeners
    java.util.Map presenceMap -> presenceMap
    boolean rosterInitialized -> rosterInitialized
    org.jivesoftware.smack.Roster$PresencePacketListener presencePacketListener -> presencePacketListener
    org.jivesoftware.smack.Roster$SubscriptionMode subscriptionMode -> subscriptionMode
    java.lang.String requestPacketId -> requestPacketId
    org.jivesoftware.smack.Roster$SubscriptionMode getDefaultSubscriptionMode() -> getDefaultSubscriptionMode
    void setDefaultSubscriptionMode(org.jivesoftware.smack.Roster$SubscriptionMode) -> setDefaultSubscriptionMode
    org.jivesoftware.smack.Roster$SubscriptionMode getSubscriptionMode() -> getSubscriptionMode
    void setSubscriptionMode(org.jivesoftware.smack.Roster$SubscriptionMode) -> setSubscriptionMode
    void reload() -> reload
    void addRosterListener(org.jivesoftware.smack.RosterListener) -> addRosterListener
    void removeRosterListener(org.jivesoftware.smack.RosterListener) -> removeRosterListener
    org.jivesoftware.smack.RosterGroup createGroup(java.lang.String) -> createGroup
    void createEntry(java.lang.String,java.lang.String,java.lang.String[]) -> createEntry
    void insertRosterItems(java.util.List) -> insertRosterItems
    void insertRosterItem(org.jivesoftware.smack.packet.RosterPacket$Item,java.util.Collection,java.util.Collection,java.util.Collection) -> insertRosterItem
    void removeEntry(org.jivesoftware.smack.RosterEntry) -> removeEntry
    int getEntryCount() -> getEntryCount
    java.util.Collection getEntries() -> getEntries
    int getUnfiledEntryCount() -> getUnfiledEntryCount
    java.util.Collection getUnfiledEntries() -> getUnfiledEntries
    org.jivesoftware.smack.RosterEntry getEntry(java.lang.String) -> getEntry
    boolean contains(java.lang.String) -> contains
    org.jivesoftware.smack.RosterGroup getGroup(java.lang.String) -> getGroup
    int getGroupCount() -> getGroupCount
    java.util.Collection getGroups() -> getGroups
    org.jivesoftware.smack.packet.Presence getPresence(java.lang.String) -> getPresence
    org.jivesoftware.smack.packet.Presence getPresenceResource(java.lang.String) -> getPresenceResource
    java.util.Iterator getPresences(java.lang.String) -> getPresences
    java.lang.String getPresenceMapKey(java.lang.String) -> getPresenceMapKey
    void setOfflinePresences() -> setOfflinePresences
    void fireRosterChangedEvent(java.util.Collection,java.util.Collection,java.util.Collection) -> fireRosterChangedEvent
    void fireRosterPresenceEvent(org.jivesoftware.smack.packet.Presence) -> fireRosterPresenceEvent
    void loadFromStorage() -> loadFromStorage
    java.lang.String access$0(org.jivesoftware.smack.Roster,java.lang.String) -> access$0
    java.util.Map access$1(org.jivesoftware.smack.Roster) -> access$1
    java.util.Map access$2(org.jivesoftware.smack.Roster) -> access$2
    void access$3(org.jivesoftware.smack.Roster,org.jivesoftware.smack.packet.Presence) -> access$3
    org.jivesoftware.smack.Roster$SubscriptionMode access$4(org.jivesoftware.smack.Roster) -> access$4
    org.jivesoftware.smack.Connection access$5(org.jivesoftware.smack.Roster) -> access$5
    void access$6(org.jivesoftware.smack.Roster,org.jivesoftware.smack.RosterStorage) -> access$6
    void access$7(org.jivesoftware.smack.Roster,org.jivesoftware.smack.packet.RosterPacket$Item,java.util.Collection,java.util.Collection,java.util.Collection) -> access$7
    org.jivesoftware.smack.RosterStorage access$8(org.jivesoftware.smack.Roster) -> access$8
    java.util.List access$9(org.jivesoftware.smack.Roster) -> access$9
    void access$10(org.jivesoftware.smack.Roster,java.util.Collection,java.util.Collection,java.util.Collection) -> access$10
    void access$11(org.jivesoftware.smack.Roster) -> access$11
org.jivesoftware.smack.Roster$1 -> org.jivesoftware.smack.Roster$1:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
org.jivesoftware.smack.Roster$2 -> org.jivesoftware.smack.Roster$2:
    org.jivesoftware.smack.Roster this$0 -> this$0
    org.jivesoftware.smack.ConnectionListener val$connectionListener -> val$connectionListener
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smack.Roster$PresencePacketListener -> org.jivesoftware.smack.Roster$PresencePacketListener:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.Roster$RosterPacketListener -> org.jivesoftware.smack.Roster$RosterPacketListener:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.Roster$RosterResultListener -> org.jivesoftware.smack.Roster$RosterResultListener:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.Roster$SubscriptionMode -> org.jivesoftware.smack.Roster$SubscriptionMode:
    org.jivesoftware.smack.Roster$SubscriptionMode accept_all -> accept_all
    org.jivesoftware.smack.Roster$SubscriptionMode reject_all -> reject_all
    org.jivesoftware.smack.Roster$SubscriptionMode manual -> manual
    org.jivesoftware.smack.Roster$SubscriptionMode[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.Roster$SubscriptionMode[] values() -> values
    org.jivesoftware.smack.Roster$SubscriptionMode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.RosterEntry -> org.jivesoftware.smack.RosterEntry:
    java.lang.String user -> user
    java.lang.String name -> name
    org.jivesoftware.smack.packet.RosterPacket$ItemType type -> type
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus status -> status
    org.jivesoftware.smack.Roster roster -> roster
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String getUser() -> getUser
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    void updateState(java.lang.String,org.jivesoftware.smack.packet.RosterPacket$ItemType,org.jivesoftware.smack.packet.RosterPacket$ItemStatus) -> updateState
    java.util.Collection getGroups() -> getGroups
    org.jivesoftware.smack.packet.RosterPacket$ItemType getType() -> getType
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus getStatus() -> getStatus
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean equalsDeep(java.lang.Object) -> equalsDeep
    org.jivesoftware.smack.packet.RosterPacket$Item toRosterItem(org.jivesoftware.smack.RosterEntry) -> toRosterItem
org.jivesoftware.smack.RosterGroup -> org.jivesoftware.smack.RosterGroup:
    java.lang.String name -> name
    org.jivesoftware.smack.Connection connection -> connection
    java.util.List entries -> entries
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int getEntryCount() -> getEntryCount
    java.util.Collection getEntries() -> getEntries
    org.jivesoftware.smack.RosterEntry getEntry(java.lang.String) -> getEntry
    boolean contains(org.jivesoftware.smack.RosterEntry) -> contains
    boolean contains(java.lang.String) -> contains
    void addEntry(org.jivesoftware.smack.RosterEntry) -> addEntry
    void removeEntry(org.jivesoftware.smack.RosterEntry) -> removeEntry
    void addEntryLocal(org.jivesoftware.smack.RosterEntry) -> addEntryLocal
    void removeEntryLocal(org.jivesoftware.smack.RosterEntry) -> removeEntryLocal
org.jivesoftware.smack.RosterListener -> org.jivesoftware.smack.RosterListener:
    void entriesAdded(java.util.Collection) -> entriesAdded
    void entriesUpdated(java.util.Collection) -> entriesUpdated
    void entriesDeleted(java.util.Collection) -> entriesDeleted
    void presenceChanged(org.jivesoftware.smack.packet.Presence) -> presenceChanged
org.jivesoftware.smack.RosterStorage -> org.jivesoftware.smack.RosterStorage:
    java.util.List getEntries() -> getEntries
    org.jivesoftware.smack.packet.RosterPacket$Item getEntry(java.lang.String) -> getEntry
    int getEntryCount() -> getEntryCount
    java.lang.String getRosterVersion() -> getRosterVersion
    void addEntry(org.jivesoftware.smack.packet.RosterPacket$Item,java.lang.String) -> addEntry
    void removeEntry(java.lang.String,java.lang.String) -> removeEntry
    void updateLocalEntry(org.jivesoftware.smack.packet.RosterPacket$Item) -> updateLocalEntry
org.jivesoftware.smack.SASLAuthentication -> org.jivesoftware.smack.SASLAuthentication:
    long PACKET_TIMER_OUT_TIME -> PACKET_TIMER_OUT_TIME
    java.util.Map implementedMechanisms -> implementedMechanisms
    java.util.List mechanismsPreferences -> mechanismsPreferences
    org.jivesoftware.smack.Connection connection -> connection
    java.util.Collection serverMechanisms -> serverMechanisms
    org.jivesoftware.smack.sasl.SASLMechanism currentMechanism -> currentMechanism
    boolean saslNegotiated -> saslNegotiated
    boolean saslFailed -> saslFailed
    boolean resourceBinded -> resourceBinded
    boolean sessionSupported -> sessionSupported
    java.lang.String errorCondition -> errorCondition
    void registerSASLMechanism(java.lang.String,java.lang.Class) -> registerSASLMechanism
    void unregisterSASLMechanism(java.lang.String) -> unregisterSASLMechanism
    void supportSASLMechanism(java.lang.String) -> supportSASLMechanism
    void supportSASLMechanism(java.lang.String,int) -> supportSASLMechanism
    void unsupportSASLMechanism(java.lang.String) -> unsupportSASLMechanism
    java.util.List getRegisterSASLMechanisms() -> getRegisterSASLMechanisms
    boolean hasAnonymousAuthentication() -> hasAnonymousAuthentication
    boolean hasNonAnonymousAuthentication() -> hasNonAnonymousAuthentication
    java.lang.String authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    void throwExceptionIfConnectionDisconnected() -> throwExceptionIfConnectionDisconnected
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticateAnonymously() -> authenticateAnonymously
    java.lang.String bindResourceAndEstablishSession(java.lang.String) -> bindResourceAndEstablishSession
    void setAvailableSASLMethods(java.util.Collection) -> setAvailableSASLMethods
    boolean isAuthenticated() -> isAuthenticated
    void challengeReceived(java.lang.String) -> challengeReceived
    void authenticated() -> authenticated
    void authenticationFailed() -> authenticationFailed
    void authenticationFailed(java.lang.String) -> authenticationFailed
    void bindingRequired() -> bindingRequired
    void send(org.jivesoftware.smack.packet.Packet) -> send
    void sessionsSupported() -> sessionsSupported
    void init() -> init
org.jivesoftware.smack.ServerTrustManager -> org.jivesoftware.smack.ServerTrustManager:
    java.lang.String TAG -> TAG
    java.util.regex.Pattern cnPattern -> cnPattern
    org.jivesoftware.smack.ConnectionConfiguration configuration -> configuration
    java.lang.String server -> server
    java.security.KeyStore trustStore -> trustStore
    java.util.Map stores -> stores
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.util.List getPeerIdentity(java.security.cert.X509Certificate) -> getPeerIdentity
    java.util.List getSubjectAlternativeNames(java.security.cert.X509Certificate) -> getSubjectAlternativeNames
org.jivesoftware.smack.ServerTrustManager$KeyStoreOptions -> org.jivesoftware.smack.ServerTrustManager$KeyStoreOptions:
    java.lang.String type -> type
    java.lang.String path -> path
    java.lang.String password -> password
    java.lang.String getType() -> getType
    java.lang.String getPath() -> getPath
    java.lang.String getPassword() -> getPassword
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.jivesoftware.smack.SmackAndroid -> org.jivesoftware.smack.SmackAndroid:
    org.jivesoftware.smack.SmackAndroid sSmackAndroid -> sSmackAndroid
    android.content.BroadcastReceiver mConnectivityChangedReceiver -> mConnectivityChangedReceiver
    android.content.Context mCtx -> mCtx
    org.jivesoftware.smack.SmackAndroid init(android.content.Context) -> init
    void onDestroy() -> onDestroy
    void maybeRegisterReceiver() -> maybeRegisterReceiver
org.jivesoftware.smack.SmackAndroid$ConnectivtyChangedReceiver -> org.jivesoftware.smack.SmackAndroid$ConnectivtyChangedReceiver:
    org.jivesoftware.smack.SmackAndroid this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.jivesoftware.smack.SmackConfiguration -> org.jivesoftware.smack.SmackConfiguration:
    java.lang.String SMACK_VERSION -> SMACK_VERSION
    int packetReplyTimeout -> packetReplyTimeout
    java.util.Vector defaultMechs -> defaultMechs
    boolean localSocks5ProxyEnabled -> localSocks5ProxyEnabled
    int localSocks5ProxyPort -> localSocks5ProxyPort
    int packetCollectorSize -> packetCollectorSize
    int defaultPingInterval -> defaultPingInterval
    org.jivesoftware.smack.parsing.ParsingExceptionCallback defaultCallback -> defaultCallback
    boolean autoEnableEntityCaps -> autoEnableEntityCaps
    java.lang.String getVersion() -> getVersion
    int getPacketReplyTimeout() -> getPacketReplyTimeout
    void setPacketReplyTimeout(int) -> setPacketReplyTimeout
    int getPacketCollectorSize() -> getPacketCollectorSize
    void setPacketCollectorSize(int) -> setPacketCollectorSize
    void addSaslMech(java.lang.String) -> addSaslMech
    void addSaslMechs(java.util.Collection) -> addSaslMechs
    void removeSaslMech(java.lang.String) -> removeSaslMech
    void removeSaslMechs(java.util.Collection) -> removeSaslMechs
    java.util.List getSaslMechs() -> getSaslMechs
    boolean isLocalSocks5ProxyEnabled() -> isLocalSocks5ProxyEnabled
    void setLocalSocks5ProxyEnabled(boolean) -> setLocalSocks5ProxyEnabled
    int getLocalSocks5ProxyPort() -> getLocalSocks5ProxyPort
    void setLocalSocks5ProxyPort(int) -> setLocalSocks5ProxyPort
    int getDefaultPingInterval() -> getDefaultPingInterval
    void setDefaultPingInterval(int) -> setDefaultPingInterval
    boolean autoEnableEntityCaps() -> autoEnableEntityCaps
    void setAutoEnableEntityCaps(boolean) -> setAutoEnableEntityCaps
    void setDefaultParsingExceptionCallback(org.jivesoftware.smack.parsing.ParsingExceptionCallback) -> setDefaultParsingExceptionCallback
    org.jivesoftware.smack.parsing.ParsingExceptionCallback getDefaultParsingExceptionCallback() -> getDefaultParsingExceptionCallback
    void parseClassToLoad(org.xmlpull.v1.XmlPullParser) -> parseClassToLoad
    int parseIntProperty(org.xmlpull.v1.XmlPullParser,int) -> parseIntProperty
    java.lang.ClassLoader[] getClassLoaders() -> getClassLoaders
org.jivesoftware.smack.UserAuthentication -> org.jivesoftware.smack.UserAuthentication:
    java.lang.String authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticateAnonymously() -> authenticateAnonymously
org.jivesoftware.smack.XMPPConnection -> org.jivesoftware.smack.XMPPConnection:
    java.lang.String TAG -> TAG
    java.net.Socket socket -> socket
    java.lang.String connectionID -> connectionID
    java.lang.String user -> user
    boolean connected -> connected
    boolean socketClosed -> socketClosed
    boolean authenticated -> authenticated
    boolean wasAuthenticated -> wasAuthenticated
    boolean anonymous -> anonymous
    boolean usingTLS -> usingTLS
    org.jivesoftware.smack.parsing.ParsingExceptionCallback parsingExceptionCallback -> parsingExceptionCallback
    org.jivesoftware.smack.PacketWriter packetWriter -> packetWriter
    org.jivesoftware.smack.PacketReader packetReader -> packetReader
    org.jivesoftware.smack.Roster roster -> roster
    java.util.Collection compressionMethods -> compressionMethods
    boolean serverAckdCompression -> serverAckdCompression
    java.lang.Object mutex -> mutex
    java.lang.String getConnectionID() -> getConnectionID
    java.lang.String getUser() -> getUser
    void setParsingExceptionCallback(org.jivesoftware.smack.parsing.ParsingExceptionCallback) -> setParsingExceptionCallback
    org.jivesoftware.smack.parsing.ParsingExceptionCallback getParsingExceptionCallback() -> getParsingExceptionCallback
    void login(java.lang.String,java.lang.String,java.lang.String) -> login
    void loginAnonymously() -> loginAnonymously
    org.jivesoftware.smack.Roster getRosterWithoutLoad() -> getRosterWithoutLoad
    org.jivesoftware.smack.Roster getRoster() -> getRoster
    boolean isConnected() -> isConnected
    boolean isSecureConnection() -> isSecureConnection
    boolean isSocketClosed() -> isSocketClosed
    boolean isAuthenticated() -> isAuthenticated
    boolean isAnonymous() -> isAnonymous
    void release() -> release
    void shutdown(org.jivesoftware.smack.packet.Presence) -> shutdown
    void disconnect(org.jivesoftware.smack.packet.Presence) -> disconnect
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> sendPacket
    void addPacketWriterInterceptor(org.jivesoftware.smack.PacketInterceptor,org.jivesoftware.smack.filter.PacketFilter) -> addPacketWriterInterceptor
    void removePacketWriterInterceptor(org.jivesoftware.smack.PacketInterceptor) -> removePacketWriterInterceptor
    void addPacketWriterListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> addPacketWriterListener
    void removePacketWriterListener(org.jivesoftware.smack.PacketListener) -> removePacketWriterListener
    void connectUsingConfiguration(org.jivesoftware.smack.ConnectionConfiguration) -> connectUsingConfiguration
    void initConnection() -> initConnection
    void initReaderAndWriter() -> initReaderAndWriter
    boolean isUsingTLS() -> isUsingTLS
    void startTLSReceived(boolean) -> startTLSReceived
    void proceedTLSReceived() -> proceedTLSReceived
    void setAvailableCompressionMethods(java.util.Collection) -> setAvailableCompressionMethods
    org.jivesoftware.smack.compression.XMPPInputOutputStream maybeGetCompressionHandler() -> maybeGetCompressionHandler
    boolean isUsingCompression() -> isUsingCompression
    boolean useCompression() -> useCompression
    void requestStreamCompression(java.lang.String) -> requestStreamCompression
    void startStreamCompression() -> startStreamCompression
    void streamCompressionDenied() -> streamCompressionDenied
    void connect() -> connect
    void setWasAuthenticated(boolean) -> setWasAuthenticated
    void setRosterStorage(org.jivesoftware.smack.RosterStorage) -> setRosterStorage
    void notifyConnectionError(java.lang.Exception) -> notifyConnectionError
    void notifyReconnection() -> notifyReconnection
    java.lang.String getIP() -> getIP
    void cancelAllWaiting() -> cancelAllWaiting
org.jivesoftware.smack.XMPPException -> org.jivesoftware.smack.XMPPException:
    org.jivesoftware.smack.packet.StreamError streamError -> streamError
    org.jivesoftware.smack.packet.XMPPError error -> error
    java.lang.Throwable wrappedThrowable -> wrappedThrowable
    org.jivesoftware.smack.packet.XMPPError getXMPPError() -> getXMPPError
    org.jivesoftware.smack.packet.StreamError getStreamError() -> getStreamError
    java.lang.Throwable getWrappedThrowable() -> getWrappedThrowable
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.jivesoftware.smack.compression.Java7ZlibInputOutputStream -> org.jivesoftware.smack.compression.Java7ZlibInputOutputStream:
    java.lang.reflect.Method method -> method
    boolean supported -> supported
    int compressionLevel -> compressionLevel
    boolean isSupported() -> isSupported
    java.io.InputStream getInputStream(java.io.InputStream) -> getInputStream
    java.io.OutputStream getOutputStream(java.io.OutputStream) -> getOutputStream
    boolean access$0() -> access$0
    java.lang.reflect.Method access$1() -> access$1
org.jivesoftware.smack.compression.Java7ZlibInputOutputStream$1 -> org.jivesoftware.smack.compression.Java7ZlibInputOutputStream$1:
    org.jivesoftware.smack.compression.Java7ZlibInputOutputStream this$0 -> this$0
    int available() -> available
org.jivesoftware.smack.compression.Java7ZlibInputOutputStream$2 -> org.jivesoftware.smack.compression.Java7ZlibInputOutputStream$2:
    org.jivesoftware.smack.compression.Java7ZlibInputOutputStream this$0 -> this$0
    void flush() -> flush
org.jivesoftware.smack.compression.JzlibInputOutputStream -> org.jivesoftware.smack.compression.JzlibInputOutputStream:
    java.lang.Class zoClass -> zoClass
    java.lang.Class ziClass -> ziClass
    boolean isSupported() -> isSupported
    java.io.InputStream getInputStream(java.io.InputStream) -> getInputStream
    java.io.OutputStream getOutputStream(java.io.OutputStream) -> getOutputStream
org.jivesoftware.smack.compression.XMPPInputOutputStream -> org.jivesoftware.smack.compression.XMPPInputOutputStream:
    java.lang.String compressionMethod -> compressionMethod
    java.lang.String getCompressionMethod() -> getCompressionMethod
    boolean isSupported() -> isSupported
    java.io.InputStream getInputStream(java.io.InputStream) -> getInputStream
    java.io.OutputStream getOutputStream(java.io.OutputStream) -> getOutputStream
org.jivesoftware.smack.debugger.ConsoleDebugger -> org.jivesoftware.smack.debugger.ConsoleDebugger:
    boolean printInterpreted -> printInterpreted
    java.text.SimpleDateFormat dateFormatter -> dateFormatter
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.PacketListener listener -> listener
    org.jivesoftware.smack.ConnectionListener connListener -> connListener
    java.io.Writer writer -> writer
    java.io.Reader reader -> reader
    org.jivesoftware.smack.util.ReaderListener readerListener -> readerListener
    org.jivesoftware.smack.util.WriterListener writerListener -> writerListener
    void createDebug() -> createDebug
    java.io.Reader newConnectionReader(java.io.Reader) -> newConnectionReader
    java.io.Writer newConnectionWriter(java.io.Writer) -> newConnectionWriter
    void userHasLogged(java.lang.String) -> userHasLogged
    java.io.Reader getReader() -> getReader
    java.io.Writer getWriter() -> getWriter
    org.jivesoftware.smack.PacketListener getReaderListener() -> getReaderListener
    org.jivesoftware.smack.PacketListener getWriterListener() -> getWriterListener
    java.text.SimpleDateFormat access$0(org.jivesoftware.smack.debugger.ConsoleDebugger) -> access$0
    org.jivesoftware.smack.Connection access$1(org.jivesoftware.smack.debugger.ConsoleDebugger) -> access$1
org.jivesoftware.smack.debugger.ConsoleDebugger$1 -> org.jivesoftware.smack.debugger.ConsoleDebugger$1:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void read(java.lang.String) -> read
org.jivesoftware.smack.debugger.ConsoleDebugger$2 -> org.jivesoftware.smack.debugger.ConsoleDebugger$2:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void write(java.lang.String) -> write
org.jivesoftware.smack.debugger.ConsoleDebugger$3 -> org.jivesoftware.smack.debugger.ConsoleDebugger$3:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.debugger.ConsoleDebugger$4 -> org.jivesoftware.smack.debugger.ConsoleDebugger$4:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectingIn(int) -> reconnectingIn
org.jivesoftware.smack.debugger.FileDebugger -> org.jivesoftware.smack.debugger.FileDebugger:
    boolean printInterpreted -> printInterpreted
    java.text.SimpleDateFormat dateFormatter -> dateFormatter
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.PacketListener listener -> listener
    org.jivesoftware.smack.ConnectionListener connListener -> connListener
    java.io.Writer writer -> writer
    java.io.Reader reader -> reader
    org.jivesoftware.smack.util.ReaderListener readerListener -> readerListener
    org.jivesoftware.smack.util.WriterListener writerListener -> writerListener
    java.lang.String TAG -> TAG
    void createDebug() -> createDebug
    java.io.Reader newConnectionReader(java.io.Reader) -> newConnectionReader
    java.io.Writer newConnectionWriter(java.io.Writer) -> newConnectionWriter
    void userHasLogged(java.lang.String) -> userHasLogged
    java.io.Reader getReader() -> getReader
    java.io.Writer getWriter() -> getWriter
    org.jivesoftware.smack.PacketListener getReaderListener() -> getReaderListener
    org.jivesoftware.smack.PacketListener getWriterListener() -> getWriterListener
    org.jivesoftware.smack.Connection access$0(org.jivesoftware.smack.debugger.FileDebugger) -> access$0
org.jivesoftware.smack.debugger.FileDebugger$1 -> org.jivesoftware.smack.debugger.FileDebugger$1:
    org.jivesoftware.smack.debugger.FileDebugger this$0 -> this$0
    void read(java.lang.String) -> read
org.jivesoftware.smack.debugger.FileDebugger$2 -> org.jivesoftware.smack.debugger.FileDebugger$2:
    org.jivesoftware.smack.debugger.FileDebugger this$0 -> this$0
    void write(java.lang.String) -> write
org.jivesoftware.smack.debugger.FileDebugger$3 -> org.jivesoftware.smack.debugger.FileDebugger$3:
    org.jivesoftware.smack.debugger.FileDebugger this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.debugger.FileDebugger$4 -> org.jivesoftware.smack.debugger.FileDebugger$4:
    org.jivesoftware.smack.debugger.FileDebugger this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectingIn(int) -> reconnectingIn
org.jivesoftware.smack.debugger.SmackDebugger -> org.jivesoftware.smack.debugger.SmackDebugger:
    void userHasLogged(java.lang.String) -> userHasLogged
    java.io.Reader getReader() -> getReader
    java.io.Writer getWriter() -> getWriter
    java.io.Reader newConnectionReader(java.io.Reader) -> newConnectionReader
    java.io.Writer newConnectionWriter(java.io.Writer) -> newConnectionWriter
    org.jivesoftware.smack.PacketListener getReaderListener() -> getReaderListener
    org.jivesoftware.smack.PacketListener getWriterListener() -> getWriterListener
org.jivesoftware.smack.filter.AndFilter -> org.jivesoftware.smack.filter.AndFilter:
    java.util.List filters -> filters
    void addFilter(org.jivesoftware.smack.filter.PacketFilter) -> addFilter
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.FromContainsFilter -> org.jivesoftware.smack.filter.FromContainsFilter:
    java.lang.String from -> from
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.FromMatchesFilter -> org.jivesoftware.smack.filter.FromMatchesFilter:
    java.lang.String address -> address
    boolean matchBareJID -> matchBareJID
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.IQTypeFilter -> org.jivesoftware.smack.filter.IQTypeFilter:
    org.jivesoftware.smack.packet.IQ$Type type -> type
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.MessageTypeFilter -> org.jivesoftware.smack.filter.MessageTypeFilter:
    org.jivesoftware.smack.packet.Message$Type type -> type
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.NotFilter -> org.jivesoftware.smack.filter.NotFilter:
    org.jivesoftware.smack.filter.PacketFilter filter -> filter
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.OrFilter -> org.jivesoftware.smack.filter.OrFilter:
    int size -> size
    org.jivesoftware.smack.filter.PacketFilter[] filters -> filters
    void addFilter(org.jivesoftware.smack.filter.PacketFilter) -> addFilter
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.PacketExtensionFilter -> org.jivesoftware.smack.filter.PacketExtensionFilter:
    java.lang.String elementName -> elementName
    java.lang.String namespace -> namespace
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.PacketFilter -> org.jivesoftware.smack.filter.PacketFilter:
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.PacketIDFilter -> org.jivesoftware.smack.filter.PacketIDFilter:
    java.lang.String packetID -> packetID
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.PacketTypeFilter -> org.jivesoftware.smack.filter.PacketTypeFilter:
    java.lang.Class packetType -> packetType
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.ThreadFilter -> org.jivesoftware.smack.filter.ThreadFilter:
    java.lang.String thread -> thread
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.ToContainsFilter -> org.jivesoftware.smack.filter.ToContainsFilter:
    java.lang.String to -> to
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.packet.Authentication -> org.jivesoftware.smack.packet.Authentication:
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String digest -> digest
    java.lang.String resource -> resource
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getDigest() -> getDigest
    void setDigest(java.lang.String,java.lang.String) -> setDigest
    void setDigest(java.lang.String) -> setDigest
    java.lang.String getResource() -> getResource
    void setResource(java.lang.String) -> setResource
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.Bind -> org.jivesoftware.smack.packet.Bind:
    java.lang.String resource -> resource
    java.lang.String jid -> jid
    java.lang.String getResource() -> getResource
    void setResource(java.lang.String) -> setResource
    java.lang.String getJid() -> getJid
    void setJid(java.lang.String) -> setJid
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.DefaultPacketExtension -> org.jivesoftware.smack.packet.DefaultPacketExtension:
    java.lang.String elementName -> elementName
    java.lang.String namespace -> namespace
    java.util.Map map -> map
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.util.Collection getNames() -> getNames
    java.lang.String getValue(java.lang.String) -> getValue
    void setValue(java.lang.String,java.lang.String) -> setValue
org.jivesoftware.smack.packet.IQ -> org.jivesoftware.smack.packet.IQ:
    org.jivesoftware.smack.packet.IQ$Type type -> type
    org.jivesoftware.smack.packet.IQ$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.IQ$Type) -> setType
    java.lang.String toXML() -> toXML
    java.lang.String getChildElementXML() -> getChildElementXML
    org.jivesoftware.smack.packet.IQ createResultIQ(org.jivesoftware.smack.packet.IQ) -> createResultIQ
    org.jivesoftware.smack.packet.IQ createErrorResponse(org.jivesoftware.smack.packet.IQ,org.jivesoftware.smack.packet.XMPPError) -> createErrorResponse
org.jivesoftware.smack.packet.IQ$1 -> org.jivesoftware.smack.packet.IQ$1:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.IQ$2 -> org.jivesoftware.smack.packet.IQ$2:
    org.jivesoftware.smack.packet.IQ val$request -> val$request
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.IQ$Type -> org.jivesoftware.smack.packet.IQ$Type:
    org.jivesoftware.smack.packet.IQ$Type GET -> GET
    org.jivesoftware.smack.packet.IQ$Type SET -> SET
    org.jivesoftware.smack.packet.IQ$Type RESULT -> RESULT
    org.jivesoftware.smack.packet.IQ$Type ERROR -> ERROR
    java.lang.String value -> value
    org.jivesoftware.smack.packet.IQ$Type fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.Message -> org.jivesoftware.smack.packet.Message:
    org.jivesoftware.smack.packet.Message$Type type -> type
    org.jivesoftware.smack.packet.Message$PresenceType presenceType -> presenceType
    java.lang.String thread -> thread
    java.lang.String language -> language
    java.util.Set subjects -> subjects
    java.util.Set bodies -> bodies
    org.jivesoftware.smack.packet.Message$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.Message$Type) -> setType
    org.jivesoftware.smack.packet.Message$PresenceType getPresenceType() -> getPresenceType
    void setPresenceType(org.jivesoftware.smack.packet.Message$PresenceType) -> setPresenceType
    java.lang.String getSubject() -> getSubject
    java.lang.String getSubject(java.lang.String) -> getSubject
    org.jivesoftware.smack.packet.Message$Subject getMessageSubject(java.lang.String) -> getMessageSubject
    java.util.Collection getSubjects() -> getSubjects
    void setSubject(java.lang.String) -> setSubject
    org.jivesoftware.smack.packet.Message$Subject addSubject(java.lang.String,java.lang.String) -> addSubject
    boolean removeSubject(java.lang.String) -> removeSubject
    boolean removeSubject(org.jivesoftware.smack.packet.Message$Subject) -> removeSubject
    java.util.Collection getSubjectLanguages() -> getSubjectLanguages
    java.lang.String getBody() -> getBody
    java.lang.String getBody(java.lang.String) -> getBody
    org.jivesoftware.smack.packet.Message$Body getMessageBody(java.lang.String) -> getMessageBody
    java.util.Collection getBodies() -> getBodies
    void setBody(java.lang.String) -> setBody
    org.jivesoftware.smack.packet.Message$Body addBody(java.lang.String,java.lang.String) -> addBody
    boolean removeBody(java.lang.String) -> removeBody
    boolean removeBody(org.jivesoftware.smack.packet.Message$Body) -> removeBody
    java.util.Collection getBodyLanguages() -> getBodyLanguages
    java.lang.String getThread() -> getThread
    void setThread(java.lang.String) -> setThread
    java.lang.String getLanguage() -> getLanguage
    void setLanguage(java.lang.String) -> setLanguage
    java.lang.String determineLanguage(java.lang.String) -> determineLanguage
    java.lang.String toXML() -> toXML
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.packet.Message$Body -> org.jivesoftware.smack.packet.Message$Body:
    java.lang.String message -> message
    java.lang.String language -> language
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getMessage() -> getMessage
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String access$0(org.jivesoftware.smack.packet.Message$Body) -> access$0
    java.lang.String access$1(org.jivesoftware.smack.packet.Message$Body) -> access$1
org.jivesoftware.smack.packet.Message$PresenceType -> org.jivesoftware.smack.packet.Message$PresenceType:
    org.jivesoftware.smack.packet.Message$PresenceType available -> available
    org.jivesoftware.smack.packet.Message$PresenceType unavailable -> unavailable
    org.jivesoftware.smack.packet.Message$PresenceType[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.packet.Message$PresenceType fromString(java.lang.String) -> fromString
    org.jivesoftware.smack.packet.Message$PresenceType[] values() -> values
    org.jivesoftware.smack.packet.Message$PresenceType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Message$Subject -> org.jivesoftware.smack.packet.Message$Subject:
    java.lang.String subject -> subject
    java.lang.String language -> language
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getSubject() -> getSubject
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String access$0(org.jivesoftware.smack.packet.Message$Subject) -> access$0
    java.lang.String access$1(org.jivesoftware.smack.packet.Message$Subject) -> access$1
org.jivesoftware.smack.packet.Message$Type -> org.jivesoftware.smack.packet.Message$Type:
    org.jivesoftware.smack.packet.Message$Type normal -> normal
    org.jivesoftware.smack.packet.Message$Type chat -> chat
    org.jivesoftware.smack.packet.Message$Type groupchat -> groupchat
    org.jivesoftware.smack.packet.Message$Type headline -> headline
    org.jivesoftware.smack.packet.Message$Type error -> error
    org.jivesoftware.smack.packet.Message$Type notify -> notify
    org.jivesoftware.smack.packet.Message$Type[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.packet.Message$Type fromString(java.lang.String) -> fromString
    org.jivesoftware.smack.packet.Message$Type[] values() -> values
    org.jivesoftware.smack.packet.Message$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Packet -> org.jivesoftware.smack.packet.Packet:
    java.lang.String DEFAULT_LANGUAGE -> DEFAULT_LANGUAGE
    java.lang.String DEFAULT_XML_NS -> DEFAULT_XML_NS
    java.lang.String ID_NOT_AVAILABLE -> ID_NOT_AVAILABLE
    java.text.DateFormat XEP_0082_UTC_FORMAT -> XEP_0082_UTC_FORMAT
    java.lang.String prefix -> prefix
    long id -> id
    java.lang.String xmlns -> xmlns
    java.lang.String packetID -> packetID
    java.lang.String to -> to
    java.lang.String from -> from
    java.util.List packetExtensions -> packetExtensions
    java.util.Map properties -> properties
    org.jivesoftware.smack.packet.XMPPError error -> error
    java.lang.String nextID() -> nextID
    void setDefaultXmlns(java.lang.String) -> setDefaultXmlns
    java.lang.String getPacketID() -> getPacketID
    void setPacketID(java.lang.String) -> setPacketID
    java.lang.String getTo() -> getTo
    void setTo(java.lang.String) -> setTo
    java.lang.String getFrom() -> getFrom
    void setFrom(java.lang.String) -> setFrom
    org.jivesoftware.smack.packet.XMPPError getError() -> getError
    void setError(org.jivesoftware.smack.packet.XMPPError) -> setError
    java.util.Collection getExtensions() -> getExtensions
    org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String) -> getExtension
    org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String,java.lang.String) -> getExtension
    void addExtension(org.jivesoftware.smack.packet.PacketExtension) -> addExtension
    void addExtensions(java.util.Collection) -> addExtensions
    void removeExtension(org.jivesoftware.smack.packet.PacketExtension) -> removeExtension
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void deleteProperty(java.lang.String) -> deleteProperty
    java.util.Collection getPropertyNames() -> getPropertyNames
    java.lang.String toXML() -> toXML
    java.lang.String getExtensionsXML() -> getExtensionsXML
    java.lang.String getXmlns() -> getXmlns
    java.lang.String getDefaultLanguage() -> getDefaultLanguage
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.packet.PacketExtension -> org.jivesoftware.smack.packet.PacketExtension:
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.packet.Presence -> org.jivesoftware.smack.packet.Presence:
    org.jivesoftware.smack.packet.Presence$Type type -> type
    java.lang.String status -> status
    int priority -> priority
    org.jivesoftware.smack.packet.Presence$Mode mode -> mode
    java.lang.String language -> language
    long imLoginTime -> imLoginTime
    long chatLoginTime -> chatLoginTime
    boolean isAvailable() -> isAvailable
    boolean isAway() -> isAway
    org.jivesoftware.smack.packet.Presence$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.Presence$Type) -> setType
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    int getPriority() -> getPriority
    void setPriority(int) -> setPriority
    org.jivesoftware.smack.packet.Presence$Mode getMode() -> getMode
    void setMode(org.jivesoftware.smack.packet.Presence$Mode) -> setMode
    java.lang.String getLanguage() -> getLanguage
    void setLanguage(java.lang.String) -> setLanguage
    void setImLoginTime(long) -> setImLoginTime
    void setChatLoginTime(long) -> setChatLoginTime
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.Presence$Mode -> org.jivesoftware.smack.packet.Presence$Mode:
    org.jivesoftware.smack.packet.Presence$Mode chat -> chat
    org.jivesoftware.smack.packet.Presence$Mode available -> available
    org.jivesoftware.smack.packet.Presence$Mode away -> away
    org.jivesoftware.smack.packet.Presence$Mode xa -> xa
    org.jivesoftware.smack.packet.Presence$Mode dnd -> dnd
    org.jivesoftware.smack.packet.Presence$Mode[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.packet.Presence$Mode[] values() -> values
    org.jivesoftware.smack.packet.Presence$Mode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Presence$Type -> org.jivesoftware.smack.packet.Presence$Type:
    org.jivesoftware.smack.packet.Presence$Type available -> available
    org.jivesoftware.smack.packet.Presence$Type unavailable -> unavailable
    org.jivesoftware.smack.packet.Presence$Type subscribe -> subscribe
    org.jivesoftware.smack.packet.Presence$Type subscribed -> subscribed
    org.jivesoftware.smack.packet.Presence$Type unsubscribe -> unsubscribe
    org.jivesoftware.smack.packet.Presence$Type unsubscribed -> unsubscribed
    org.jivesoftware.smack.packet.Presence$Type error -> error
    org.jivesoftware.smack.packet.Presence$Type[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.packet.Presence$Type[] values() -> values
    org.jivesoftware.smack.packet.Presence$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Privacy -> org.jivesoftware.smack.packet.Privacy:
    boolean declineActiveList -> declineActiveList
    java.lang.String activeName -> activeName
    boolean declineDefaultList -> declineDefaultList
    java.lang.String defaultName -> defaultName
    java.util.Map itemLists -> itemLists
    java.util.List setPrivacyList(java.lang.String,java.util.List) -> setPrivacyList
    java.util.List setActivePrivacyList() -> setActivePrivacyList
    void deletePrivacyList(java.lang.String) -> deletePrivacyList
    java.util.List getActivePrivacyList() -> getActivePrivacyList
    java.util.List getDefaultPrivacyList() -> getDefaultPrivacyList
    java.util.List getPrivacyList(java.lang.String) -> getPrivacyList
    org.jivesoftware.smack.packet.PrivacyItem getItem(java.lang.String,int) -> getItem
    boolean changeDefaultList(java.lang.String) -> changeDefaultList
    void deleteList(java.lang.String) -> deleteList
    java.lang.String getActiveName() -> getActiveName
    void setActiveName(java.lang.String) -> setActiveName
    java.lang.String getDefaultName() -> getDefaultName
    void setDefaultName(java.lang.String) -> setDefaultName
    java.util.Map getItemLists() -> getItemLists
    boolean isDeclineActiveList() -> isDeclineActiveList
    void setDeclineActiveList(boolean) -> setDeclineActiveList
    boolean isDeclineDefaultList() -> isDeclineDefaultList
    void setDeclineDefaultList(boolean) -> setDeclineDefaultList
    java.util.Set getPrivacyListNames() -> getPrivacyListNames
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.PrivacyItem -> org.jivesoftware.smack.packet.PrivacyItem:
    boolean allow -> allow
    int order -> order
    org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule rule -> rule
    boolean filterIQ -> filterIQ
    boolean filterMessage -> filterMessage
    boolean filterPresence_in -> filterPresence_in
    boolean filterPresence_out -> filterPresence_out
    boolean isAllow() -> isAllow
    void setAllow(boolean) -> setAllow
    boolean isFilterIQ() -> isFilterIQ
    void setFilterIQ(boolean) -> setFilterIQ
    boolean isFilterMessage() -> isFilterMessage
    void setFilterMessage(boolean) -> setFilterMessage
    boolean isFilterPresence_in() -> isFilterPresence_in
    void setFilterPresence_in(boolean) -> setFilterPresence_in
    boolean isFilterPresence_out() -> isFilterPresence_out
    void setFilterPresence_out(boolean) -> setFilterPresence_out
    int getOrder() -> getOrder
    void setOrder(int) -> setOrder
    void setValue(java.lang.String) -> setValue
    org.jivesoftware.smack.packet.PrivacyItem$Type getType() -> getType
    java.lang.String getValue() -> getValue
    boolean isFilterEverything() -> isFilterEverything
    org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule getRule() -> getRule
    void setRule(org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule) -> setRule
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule -> org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule:
    org.jivesoftware.smack.packet.PrivacyItem$Type type -> type
    java.lang.String value -> value
    java.lang.String SUBSCRIPTION_BOTH -> SUBSCRIPTION_BOTH
    java.lang.String SUBSCRIPTION_TO -> SUBSCRIPTION_TO
    java.lang.String SUBSCRIPTION_FROM -> SUBSCRIPTION_FROM
    java.lang.String SUBSCRIPTION_NONE -> SUBSCRIPTION_NONE
    org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule fromString(java.lang.String) -> fromString
    org.jivesoftware.smack.packet.PrivacyItem$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.PrivacyItem$Type) -> setType
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    void setSuscriptionValue(java.lang.String) -> setSuscriptionValue
    boolean isSuscription() -> isSuscription
org.jivesoftware.smack.packet.PrivacyItem$Type -> org.jivesoftware.smack.packet.PrivacyItem$Type:
    org.jivesoftware.smack.packet.PrivacyItem$Type group -> group
    org.jivesoftware.smack.packet.PrivacyItem$Type jid -> jid
    org.jivesoftware.smack.packet.PrivacyItem$Type subscription -> subscription
    org.jivesoftware.smack.packet.PrivacyItem$Type[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.packet.PrivacyItem$Type[] values() -> values
    org.jivesoftware.smack.packet.PrivacyItem$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Registration -> org.jivesoftware.smack.packet.Registration:
    java.lang.String instructions -> instructions
    java.util.Map attributes -> attributes
    java.util.List requiredFields -> requiredFields
    boolean registered -> registered
    boolean remove -> remove
    java.lang.String getInstructions() -> getInstructions
    void setInstructions(java.lang.String) -> setInstructions
    java.util.Map getAttributes() -> getAttributes
    void setAttributes(java.util.Map) -> setAttributes
    java.util.List getRequiredFields() -> getRequiredFields
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setRegistered(boolean) -> setRegistered
    boolean isRegistered() -> isRegistered
    java.lang.String getField(java.lang.String) -> getField
    java.util.List getFieldNames() -> getFieldNames
    void setUsername(java.lang.String) -> setUsername
    void setPassword(java.lang.String) -> setPassword
    void setRemove(boolean) -> setRemove
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.RosterPacket -> org.jivesoftware.smack.packet.RosterPacket:
    java.util.List rosterItems -> rosterItems
    java.lang.String version -> version
    void addRosterItem(org.jivesoftware.smack.packet.RosterPacket$Item) -> addRosterItem
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    int getRosterItemCount() -> getRosterItemCount
    java.util.Collection getRosterItems() -> getRosterItems
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.RosterPacket$Item -> org.jivesoftware.smack.packet.RosterPacket$Item:
    java.lang.String user -> user
    java.lang.String name -> name
    org.jivesoftware.smack.packet.RosterPacket$ItemType itemType -> itemType
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus itemStatus -> itemStatus
    java.util.Set groupNames -> groupNames
    java.lang.String getUser() -> getUser
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    org.jivesoftware.smack.packet.RosterPacket$ItemType getItemType() -> getItemType
    void setItemType(org.jivesoftware.smack.packet.RosterPacket$ItemType) -> setItemType
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus getItemStatus() -> getItemStatus
    void setItemStatus(org.jivesoftware.smack.packet.RosterPacket$ItemStatus) -> setItemStatus
    java.util.Set getGroupNames() -> getGroupNames
    void addGroupName(java.lang.String) -> addGroupName
    void removeGroupName(java.lang.String) -> removeGroupName
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.packet.RosterPacket$ItemStatus -> org.jivesoftware.smack.packet.RosterPacket$ItemStatus:
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus SUBSCRIPTION_PENDING -> SUBSCRIPTION_PENDING
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus UNSUBSCRIPTION_PENDING -> UNSUBSCRIPTION_PENDING
    java.lang.String value -> value
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.RosterPacket$ItemType -> org.jivesoftware.smack.packet.RosterPacket$ItemType:
    org.jivesoftware.smack.packet.RosterPacket$ItemType none -> none
    org.jivesoftware.smack.packet.RosterPacket$ItemType to -> to
    org.jivesoftware.smack.packet.RosterPacket$ItemType from -> from
    org.jivesoftware.smack.packet.RosterPacket$ItemType both -> both
    org.jivesoftware.smack.packet.RosterPacket$ItemType remove -> remove
    org.jivesoftware.smack.packet.RosterPacket$ItemType[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.packet.RosterPacket$ItemType[] values() -> values
    org.jivesoftware.smack.packet.RosterPacket$ItemType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Session -> org.jivesoftware.smack.packet.Session:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.StreamError -> org.jivesoftware.smack.packet.StreamError:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String code -> code
    java.lang.String text -> text
    java.lang.String getCode() -> getCode
    java.lang.String getText() -> getText
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.XMPPError -> org.jivesoftware.smack.packet.XMPPError:
    int code -> code
    org.jivesoftware.smack.packet.XMPPError$Type type -> type
    java.lang.String condition -> condition
    java.lang.String message -> message
    java.util.List applicationExtensions -> applicationExtensions
    void init(org.jivesoftware.smack.packet.XMPPError$Condition) -> init
    java.lang.String getCondition() -> getCondition
    org.jivesoftware.smack.packet.XMPPError$Type getType() -> getType
    int getCode() -> getCode
    java.lang.String getMessage() -> getMessage
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
    java.util.List getExtensions() -> getExtensions
    org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String,java.lang.String) -> getExtension
    void addExtension(org.jivesoftware.smack.packet.PacketExtension) -> addExtension
    void setExtension(java.util.List) -> setExtension
org.jivesoftware.smack.packet.XMPPError$Condition -> org.jivesoftware.smack.packet.XMPPError$Condition:
    org.jivesoftware.smack.packet.XMPPError$Condition interna_server_error -> interna_server_error
    org.jivesoftware.smack.packet.XMPPError$Condition forbidden -> forbidden
    org.jivesoftware.smack.packet.XMPPError$Condition bad_request -> bad_request
    org.jivesoftware.smack.packet.XMPPError$Condition conflict -> conflict
    org.jivesoftware.smack.packet.XMPPError$Condition feature_not_implemented -> feature_not_implemented
    org.jivesoftware.smack.packet.XMPPError$Condition gone -> gone
    org.jivesoftware.smack.packet.XMPPError$Condition item_not_found -> item_not_found
    org.jivesoftware.smack.packet.XMPPError$Condition jid_malformed -> jid_malformed
    org.jivesoftware.smack.packet.XMPPError$Condition no_acceptable -> no_acceptable
    org.jivesoftware.smack.packet.XMPPError$Condition not_allowed -> not_allowed
    org.jivesoftware.smack.packet.XMPPError$Condition not_authorized -> not_authorized
    org.jivesoftware.smack.packet.XMPPError$Condition payment_required -> payment_required
    org.jivesoftware.smack.packet.XMPPError$Condition recipient_unavailable -> recipient_unavailable
    org.jivesoftware.smack.packet.XMPPError$Condition redirect -> redirect
    org.jivesoftware.smack.packet.XMPPError$Condition registration_required -> registration_required
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_error -> remote_server_error
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_not_found -> remote_server_not_found
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_timeout -> remote_server_timeout
    org.jivesoftware.smack.packet.XMPPError$Condition resource_constraint -> resource_constraint
    org.jivesoftware.smack.packet.XMPPError$Condition service_unavailable -> service_unavailable
    org.jivesoftware.smack.packet.XMPPError$Condition subscription_required -> subscription_required
    org.jivesoftware.smack.packet.XMPPError$Condition undefined_condition -> undefined_condition
    org.jivesoftware.smack.packet.XMPPError$Condition unexpected_request -> unexpected_request
    org.jivesoftware.smack.packet.XMPPError$Condition request_timeout -> request_timeout
    java.lang.String value -> value
    java.lang.String toString() -> toString
    java.lang.String access$0(org.jivesoftware.smack.packet.XMPPError$Condition) -> access$0
org.jivesoftware.smack.packet.XMPPError$ErrorSpecification -> org.jivesoftware.smack.packet.XMPPError$ErrorSpecification:
    int code -> code
    org.jivesoftware.smack.packet.XMPPError$Type type -> type
    org.jivesoftware.smack.packet.XMPPError$Condition condition -> condition
    java.util.Map instances -> instances
    java.util.Map errorSpecifications() -> errorSpecifications
    org.jivesoftware.smack.packet.XMPPError$ErrorSpecification specFor(org.jivesoftware.smack.packet.XMPPError$Condition) -> specFor
    org.jivesoftware.smack.packet.XMPPError$Condition getCondition() -> getCondition
    org.jivesoftware.smack.packet.XMPPError$Type getType() -> getType
    int getCode() -> getCode
org.jivesoftware.smack.packet.XMPPError$Type -> org.jivesoftware.smack.packet.XMPPError$Type:
    org.jivesoftware.smack.packet.XMPPError$Type WAIT -> WAIT
    org.jivesoftware.smack.packet.XMPPError$Type CANCEL -> CANCEL
    org.jivesoftware.smack.packet.XMPPError$Type MODIFY -> MODIFY
    org.jivesoftware.smack.packet.XMPPError$Type AUTH -> AUTH
    org.jivesoftware.smack.packet.XMPPError$Type CONTINUE -> CONTINUE
    org.jivesoftware.smack.packet.XMPPError$Type[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.packet.XMPPError$Type[] values() -> values
    org.jivesoftware.smack.packet.XMPPError$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.parsing.ExceptionLoggingCallback -> org.jivesoftware.smack.parsing.ExceptionLoggingCallback:
    java.lang.String TAG -> TAG
    void handleUnparsablePacket(org.jivesoftware.smack.parsing.UnparsablePacket) -> handleUnparsablePacket
org.jivesoftware.smack.parsing.ExceptionThrowingCallback -> org.jivesoftware.smack.parsing.ExceptionThrowingCallback:
    void handleUnparsablePacket(org.jivesoftware.smack.parsing.UnparsablePacket) -> handleUnparsablePacket
org.jivesoftware.smack.parsing.ParsingExceptionCallback -> org.jivesoftware.smack.parsing.ParsingExceptionCallback:
    void handleUnparsablePacket(org.jivesoftware.smack.parsing.UnparsablePacket) -> handleUnparsablePacket
org.jivesoftware.smack.parsing.UnparsablePacket -> org.jivesoftware.smack.parsing.UnparsablePacket:
    java.lang.String content -> content
    java.lang.Exception e -> e
    java.lang.Exception getParsingException() -> getParsingException
    java.lang.String getContent() -> getContent
org.jivesoftware.smack.provider.EmbeddedExtensionProvider -> org.jivesoftware.smack.provider.EmbeddedExtensionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smack.provider.IQProvider -> org.jivesoftware.smack.provider.IQProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smack.provider.PacketExtensionProvider -> org.jivesoftware.smack.provider.PacketExtensionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smack.provider.PrivacyProvider -> org.jivesoftware.smack.provider.PrivacyProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    void parseList(org.xmlpull.v1.XmlPullParser,org.jivesoftware.smack.packet.Privacy) -> parseList
    org.jivesoftware.smack.packet.PrivacyItem parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
org.jivesoftware.smack.provider.ProviderManager -> org.jivesoftware.smack.provider.ProviderManager:
    org.jivesoftware.smack.provider.ProviderManager instance -> instance
    java.util.Map extensionProviders -> extensionProviders
    java.util.Map iqProviders -> iqProviders
    org.jivesoftware.smack.provider.ProviderManager getInstance() -> getInstance
    void setInstance(org.jivesoftware.smack.provider.ProviderManager) -> setInstance
    void initialize() -> initialize
    java.lang.Object getIQProvider(java.lang.String,java.lang.String) -> getIQProvider
    java.util.Collection getIQProviders() -> getIQProviders
    void addIQProvider(java.lang.String,java.lang.String,java.lang.Object) -> addIQProvider
    void removeIQProvider(java.lang.String,java.lang.String) -> removeIQProvider
    java.lang.Object getExtensionProvider(java.lang.String,java.lang.String) -> getExtensionProvider
    void addExtensionProvider(java.lang.String,java.lang.String,java.lang.Object) -> addExtensionProvider
    void removeExtensionProvider(java.lang.String,java.lang.String) -> removeExtensionProvider
    java.util.Collection getExtensionProviders() -> getExtensionProviders
    java.lang.String getProviderKey(java.lang.String,java.lang.String) -> getProviderKey
    java.lang.ClassLoader[] getClassLoaders() -> getClassLoaders
org.jivesoftware.smack.proxy.DirectSocketFactory -> org.jivesoftware.smack.proxy.DirectSocketFactory:
    int roundrobin -> roundrobin
    int timeout -> timeout
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
org.jivesoftware.smack.proxy.HTTPProxySocketFactory -> org.jivesoftware.smack.proxy.HTTPProxySocketFactory:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    java.util.regex.Pattern RESPONSE_PATTERN -> RESPONSE_PATTERN
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket httpProxifiedSocket(java.lang.String,int) -> httpProxifiedSocket
org.jivesoftware.smack.proxy.ProxyException -> org.jivesoftware.smack.proxy.ProxyException:
org.jivesoftware.smack.proxy.ProxyInfo -> org.jivesoftware.smack.proxy.ProxyInfo:
    java.lang.String proxyAddress -> proxyAddress
    int proxyPort -> proxyPort
    java.lang.String proxyUsername -> proxyUsername
    java.lang.String proxyPassword -> proxyPassword
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType proxyType -> proxyType
    org.jivesoftware.smack.proxy.ProxyInfo forHttpProxy(java.lang.String,int,java.lang.String,java.lang.String) -> forHttpProxy
    org.jivesoftware.smack.proxy.ProxyInfo forSocks4Proxy(java.lang.String,int,java.lang.String,java.lang.String) -> forSocks4Proxy
    org.jivesoftware.smack.proxy.ProxyInfo forSocks5Proxy(java.lang.String,int,java.lang.String,java.lang.String) -> forSocks5Proxy
    org.jivesoftware.smack.proxy.ProxyInfo forNoProxy() -> forNoProxy
    org.jivesoftware.smack.proxy.ProxyInfo forDefaultProxy() -> forDefaultProxy
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType getProxyType() -> getProxyType
    java.lang.String getProxyAddress() -> getProxyAddress
    int getProxyPort() -> getProxyPort
    java.lang.String getProxyUsername() -> getProxyUsername
    java.lang.String getProxyPassword() -> getProxyPassword
    javax.net.SocketFactory getSocketFactory() -> getSocketFactory
org.jivesoftware.smack.proxy.ProxyInfo$ProxyType -> org.jivesoftware.smack.proxy.ProxyInfo$ProxyType:
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType NONE -> NONE
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType HTTP -> HTTP
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType SOCKS4 -> SOCKS4
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType SOCKS5 -> SOCKS5
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType[] values() -> values
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.proxy.Socks4ProxySocketFactory -> org.jivesoftware.smack.proxy.Socks4ProxySocketFactory:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket socks4ProxifiedSocket(java.lang.String,int) -> socks4ProxifiedSocket
org.jivesoftware.smack.proxy.Socks5ProxySocketFactory -> org.jivesoftware.smack.proxy.Socks5ProxySocketFactory:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket socks5ProxifiedSocket(java.lang.String,int) -> socks5ProxifiedSocket
    void fill(java.io.InputStream,byte[],int) -> fill
org.jivesoftware.smack.sasl.SASLAnonymous -> org.jivesoftware.smack.sasl.SASLAnonymous:
    java.lang.String getName() -> getName
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    void authenticate() -> authenticate
    void challengeReceived(java.lang.String) -> challengeReceived
org.jivesoftware.smack.sasl.SASLCramMD5Mechanism -> org.jivesoftware.smack.sasl.SASLCramMD5Mechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.sasl.SASLDigestMD5Mechanism -> org.jivesoftware.smack.sasl.SASLDigestMD5Mechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.sasl.SASLExternalMechanism -> org.jivesoftware.smack.sasl.SASLExternalMechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.sasl.SASLFacebookConnect -> org.jivesoftware.smack.sasl.SASLFacebookConnect:
    java.lang.String sessionKey -> sessionKey
    java.lang.String sessionSecret -> sessionSecret
    java.lang.String apiKey -> apiKey
    void authenticate() -> authenticate
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    java.lang.String getName() -> getName
    void challengeReceived(java.lang.String) -> challengeReceived
    java.util.Map getQueryMap(java.lang.String) -> getQueryMap
    java.lang.String convertToHex(byte[]) -> convertToHex
    java.lang.String MD5(java.lang.String) -> MD5
org.jivesoftware.smack.sasl.SASLFacebookConnect$1 -> org.jivesoftware.smack.sasl.SASLFacebookConnect$1:
    org.jivesoftware.smack.sasl.SASLFacebookConnect this$0 -> this$0
    java.lang.StringBuilder val$stanza -> val$stanza
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLFacebookConnect$2 -> org.jivesoftware.smack.sasl.SASLFacebookConnect$2:
    org.jivesoftware.smack.sasl.SASLFacebookConnect this$0 -> this$0
    java.lang.StringBuilder val$stanza -> val$stanza
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLGSSAPIMechanism -> org.jivesoftware.smack.sasl.SASLGSSAPIMechanism:
    java.lang.String getName() -> getName
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
org.jivesoftware.smack.sasl.SASLMechanism -> org.jivesoftware.smack.sasl.SASLMechanism:
    org.jivesoftware.smack.SASLAuthentication saslAuthentication -> saslAuthentication
    org.apache.harmony.javax.security.sasl.SaslClient sc -> sc
    java.lang.String authenticationId -> authenticationId
    java.lang.String password -> password
    java.lang.String hostname -> hostname
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    void authenticate() -> authenticate
    void challengeReceived(java.lang.String) -> challengeReceived
    java.lang.String getName() -> getName
    org.jivesoftware.smack.SASLAuthentication getSASLAuthentication() -> getSASLAuthentication
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
org.jivesoftware.smack.sasl.SASLMechanism$AuthMechanism -> org.jivesoftware.smack.sasl.SASLMechanism$AuthMechanism:
    java.lang.String name -> name
    java.lang.String authenticationText -> authenticationText
    org.jivesoftware.smack.sasl.SASLMechanism this$0 -> this$0
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Challenge -> org.jivesoftware.smack.sasl.SASLMechanism$Challenge:
    java.lang.String data -> data
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Failure -> org.jivesoftware.smack.sasl.SASLMechanism$Failure:
    java.lang.String condition -> condition
    java.lang.String getCondition() -> getCondition
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Response -> org.jivesoftware.smack.sasl.SASLMechanism$Response:
    java.lang.String authenticationText -> authenticationText
    org.jivesoftware.smack.sasl.SASLMechanism this$0 -> this$0
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Success -> org.jivesoftware.smack.sasl.SASLMechanism$Success:
    java.lang.String data -> data
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLPlainMechanism -> org.jivesoftware.smack.sasl.SASLPlainMechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.util.Base32Encoder -> org.jivesoftware.smack.util.Base32Encoder:
    org.jivesoftware.smack.util.Base32Encoder instance -> instance
    java.lang.String ALPHABET -> ALPHABET
    org.jivesoftware.smack.util.Base32Encoder getInstance() -> getInstance
    java.lang.String decode(java.lang.String) -> decode
    java.lang.String encode(java.lang.String) -> encode
    int lenToPadding(int) -> lenToPadding
    int paddingToLen(int) -> paddingToLen
org.jivesoftware.smack.util.Base64 -> org.jivesoftware.smack.util.Base64:
    java.lang.String TAG -> TAG
    int NO_OPTIONS -> NO_OPTIONS
    int ENCODE -> ENCODE
    int DECODE -> DECODE
    int GZIP -> GZIP
    int DONT_BREAK_LINES -> DONT_BREAK_LINES
    int URL_SAFE -> URL_SAFE
    int ORDERED -> ORDERED
    int MAX_LINE_LENGTH -> MAX_LINE_LENGTH
    byte EQUALS_SIGN -> EQUALS_SIGN
    byte NEW_LINE -> NEW_LINE
    java.lang.String PREFERRED_ENCODING -> PREFERRED_ENCODING
    byte WHITE_SPACE_ENC -> WHITE_SPACE_ENC
    byte EQUALS_SIGN_ENC -> EQUALS_SIGN_ENC
    byte[] _STANDARD_ALPHABET -> _STANDARD_ALPHABET
    byte[] _STANDARD_DECODABET -> _STANDARD_DECODABET
    byte[] _URL_SAFE_ALPHABET -> _URL_SAFE_ALPHABET
    byte[] _URL_SAFE_DECODABET -> _URL_SAFE_DECODABET
    byte[] _ORDERED_ALPHABET -> _ORDERED_ALPHABET
    byte[] _ORDERED_DECODABET -> _ORDERED_DECODABET
    byte[] getAlphabet(int) -> getAlphabet
    byte[] getDecodabet(int) -> getDecodabet
    void usage(java.lang.String) -> usage
    byte[] encode3to4(byte[],byte[],int,int) -> encode3to4
    byte[] encode3to4(byte[],int,int,byte[],int,int) -> encode3to4
    java.lang.String encodeObject(java.io.Serializable) -> encodeObject
    java.lang.String encodeObject(java.io.Serializable,int) -> encodeObject
    java.lang.String encodeBytes(byte[]) -> encodeBytes
    java.lang.String encodeBytes(byte[],int) -> encodeBytes
    java.lang.String encodeBytes(byte[],int,int) -> encodeBytes
    java.lang.String encodeBytes(byte[],int,int,int) -> encodeBytes
    int decode4to3(byte[],int,byte[],int,int) -> decode4to3
    byte[] decode(byte[],int,int,int) -> decode
    byte[] decode(java.lang.String) -> decode
    byte[] decode(java.lang.String,int) -> decode
    java.lang.Object decodeToObject(java.lang.String) -> decodeToObject
    boolean encodeToFile(byte[],java.lang.String) -> encodeToFile
    boolean decodeToFile(java.lang.String,java.lang.String) -> decodeToFile
    byte[] decodeFromFile(java.lang.String) -> decodeFromFile
    java.lang.String encodeFromFile(java.lang.String) -> encodeFromFile
    void encodeFileToFile(java.lang.String,java.lang.String) -> encodeFileToFile
    void decodeFileToFile(java.lang.String,java.lang.String) -> decodeFileToFile
    byte[] access$0(int) -> access$0
    byte[] access$1(int) -> access$1
    byte[] access$2(byte[],int,int,byte[],int,int) -> access$2
    int access$3(byte[],int,byte[],int,int) -> access$3
    byte[] access$4(byte[],byte[],int,int) -> access$4
org.jivesoftware.smack.util.Base64$InputStream -> org.jivesoftware.smack.util.Base64$InputStream:
    boolean encode -> encode
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> bufferLength
    int numSigBytes -> numSigBytes
    int lineLength -> lineLength
    boolean breakLines -> breakLines
    int options -> options
    byte[] alphabet -> alphabet
    byte[] decodabet -> decodabet
    int read() -> read
    int read(byte[],int,int) -> read
org.jivesoftware.smack.util.Base64$OutputStream -> org.jivesoftware.smack.util.Base64$OutputStream:
    boolean encode -> encode
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> bufferLength
    int lineLength -> lineLength
    boolean breakLines -> breakLines
    byte[] b4 -> b4
    boolean suspendEncoding -> suspendEncoding
    int options -> options
    byte[] alphabet -> alphabet
    byte[] decodabet -> decodabet
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flushBase64() -> flushBase64
    void close() -> close
    void suspendEncoding() -> suspendEncoding
    void resumeEncoding() -> resumeEncoding
org.jivesoftware.smack.util.Base64Encoder -> org.jivesoftware.smack.util.Base64Encoder:
    org.jivesoftware.smack.util.Base64Encoder instance -> instance
    org.jivesoftware.smack.util.Base64Encoder getInstance() -> getInstance
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
org.jivesoftware.smack.util.Base64FileUrlEncoder -> org.jivesoftware.smack.util.Base64FileUrlEncoder:
    org.jivesoftware.smack.util.Base64FileUrlEncoder instance -> instance
    org.jivesoftware.smack.util.Base64FileUrlEncoder getInstance() -> getInstance
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
org.jivesoftware.smack.util.Cache -> org.jivesoftware.smack.util.Cache:
    java.lang.String TAG -> TAG
    java.util.Map map -> map
    org.jivesoftware.smack.util.Cache$LinkedList lastAccessedList -> lastAccessedList
    org.jivesoftware.smack.util.Cache$LinkedList ageList -> ageList
    int maxCacheSize -> maxCacheSize
    long maxLifetime -> maxLifetime
    long cacheHits -> cacheHits
    long cacheMisses -> cacheMisses
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object remove(java.lang.Object,boolean) -> remove
    void clear() -> clear
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Collection values() -> values
    boolean containsKey(java.lang.Object) -> containsKey
    void putAll(java.util.Map) -> putAll
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    long getCacheHits() -> getCacheHits
    long getCacheMisses() -> getCacheMisses
    int getMaxCacheSize() -> getMaxCacheSize
    void setMaxCacheSize(int) -> setMaxCacheSize
    long getMaxLifetime() -> getMaxLifetime
    void setMaxLifetime(long) -> setMaxLifetime
    void deleteExpiredEntries() -> deleteExpiredEntries
    void cullCache() -> cullCache
org.jivesoftware.smack.util.Cache$1 -> org.jivesoftware.smack.util.Cache$1:
    java.util.Collection values -> values
    org.jivesoftware.smack.util.Cache this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
org.jivesoftware.smack.util.Cache$1$1 -> org.jivesoftware.smack.util.Cache$1$1:
    java.util.Iterator it -> it
    org.jivesoftware.smack.util.Cache$1 this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.jivesoftware.smack.util.Cache$2 -> org.jivesoftware.smack.util.Cache$2:
    java.util.Set set -> set
    org.jivesoftware.smack.util.Cache this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    java.util.Set access$0(org.jivesoftware.smack.util.Cache$2) -> access$0
org.jivesoftware.smack.util.Cache$2$1 -> org.jivesoftware.smack.util.Cache$2$1:
    java.util.Iterator it -> it
    org.jivesoftware.smack.util.Cache$2 this$1 -> this$1
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.jivesoftware.smack.util.Cache$2$1$1 -> org.jivesoftware.smack.util.Cache$2$1$1:
    org.jivesoftware.smack.util.Cache$2$1 this$2 -> this$2
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.Cache$CacheObject -> org.jivesoftware.smack.util.Cache$CacheObject:
    java.lang.Object object -> object
    org.jivesoftware.smack.util.Cache$LinkedListNode lastAccessedListNode -> lastAccessedListNode
    org.jivesoftware.smack.util.Cache$LinkedListNode ageListNode -> ageListNode
    int readCount -> readCount
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.util.Cache$LinkedList -> org.jivesoftware.smack.util.Cache$LinkedList:
    org.jivesoftware.smack.util.Cache$LinkedListNode head -> head
    org.jivesoftware.smack.util.Cache$LinkedListNode getFirst() -> getFirst
    org.jivesoftware.smack.util.Cache$LinkedListNode getLast() -> getLast
    org.jivesoftware.smack.util.Cache$LinkedListNode addFirst(org.jivesoftware.smack.util.Cache$LinkedListNode) -> addFirst
    org.jivesoftware.smack.util.Cache$LinkedListNode addFirst(java.lang.Object) -> addFirst
    org.jivesoftware.smack.util.Cache$LinkedListNode addLast(java.lang.Object) -> addLast
    void clear() -> clear
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.Cache$LinkedListNode -> org.jivesoftware.smack.util.Cache$LinkedListNode:
    org.jivesoftware.smack.util.Cache$LinkedListNode previous -> previous
    org.jivesoftware.smack.util.Cache$LinkedListNode next -> next
    java.lang.Object object -> object
    long timestamp -> timestamp
    void remove() -> remove
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.DNSUtil -> org.jivesoftware.smack.util.DNSUtil:
    java.util.Map cache -> cache
    org.jivesoftware.smack.util.dns.DNSResolver dnsResolver -> dnsResolver
    void setDNSResolver(org.jivesoftware.smack.util.dns.DNSResolver) -> setDNSResolver
    org.jivesoftware.smack.util.dns.DNSResolver getDNSResolver() -> getDNSResolver
    java.util.List resolveXMPPDomain(java.lang.String) -> resolveXMPPDomain
    java.util.List resolveXMPPServerDomain(java.lang.String) -> resolveXMPPServerDomain
    java.util.List resolveDomain(java.lang.String,char) -> resolveDomain
    java.util.List sortSRVRecords(java.util.List) -> sortSRVRecords
    int bisect(int[],double) -> bisect
org.jivesoftware.smack.util.DateFormatType -> org.jivesoftware.smack.util.DateFormatType:
    org.jivesoftware.smack.util.DateFormatType XEP_0082_DATE_PROFILE -> XEP_0082_DATE_PROFILE
    org.jivesoftware.smack.util.DateFormatType XEP_0082_DATETIME_PROFILE -> XEP_0082_DATETIME_PROFILE
    org.jivesoftware.smack.util.DateFormatType XEP_0082_DATETIME_MILLIS_PROFILE -> XEP_0082_DATETIME_MILLIS_PROFILE
    org.jivesoftware.smack.util.DateFormatType XEP_0082_TIME_PROFILE -> XEP_0082_TIME_PROFILE
    org.jivesoftware.smack.util.DateFormatType XEP_0082_TIME_ZONE_PROFILE -> XEP_0082_TIME_ZONE_PROFILE
    org.jivesoftware.smack.util.DateFormatType XEP_0082_TIME_MILLIS_PROFILE -> XEP_0082_TIME_MILLIS_PROFILE
    org.jivesoftware.smack.util.DateFormatType XEP_0082_TIME_MILLIS_ZONE_PROFILE -> XEP_0082_TIME_MILLIS_ZONE_PROFILE
    org.jivesoftware.smack.util.DateFormatType XEP_0091_DATETIME -> XEP_0091_DATETIME
    java.lang.String formatString -> formatString
    org.jivesoftware.smack.util.DateFormatType[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String getFormatString() -> getFormatString
    java.text.SimpleDateFormat createFormatter() -> createFormatter
    org.jivesoftware.smack.util.DateFormatType[] values() -> values
    org.jivesoftware.smack.util.DateFormatType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.util.ObservableReader -> org.jivesoftware.smack.util.ObservableReader:
    java.io.Reader wrappedReader -> wrappedReader
    java.util.List listeners -> listeners
    int read(char[],int,int) -> read
    void close() -> close
    int read() -> read
    int read(char[]) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
    void addReaderListener(org.jivesoftware.smack.util.ReaderListener) -> addReaderListener
    void removeReaderListener(org.jivesoftware.smack.util.ReaderListener) -> removeReaderListener
org.jivesoftware.smack.util.ObservableWriter -> org.jivesoftware.smack.util.ObservableWriter:
    java.io.Writer wrappedWriter -> wrappedWriter
    java.util.List listeners -> listeners
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void write(int) -> write
    void write(char[]) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    void notifyListeners(java.lang.String) -> notifyListeners
    void addWriterListener(org.jivesoftware.smack.util.WriterListener) -> addWriterListener
    void removeWriterListener(org.jivesoftware.smack.util.WriterListener) -> removeWriterListener
org.jivesoftware.smack.util.PacketParserUtils -> org.jivesoftware.smack.util.PacketParserUtils:
    java.lang.String TAG -> TAG
    java.lang.String PROPERTIES_NAMESPACE -> PROPERTIES_NAMESPACE
    org.jivesoftware.smack.packet.Packet parseMessage(org.xmlpull.v1.XmlPullParser) -> parseMessage
    java.lang.String parseContent(org.xmlpull.v1.XmlPullParser) -> parseContent
    java.lang.String parseContentDepth(org.xmlpull.v1.XmlPullParser,int) -> parseContentDepth
    org.jivesoftware.smack.packet.Presence parsePresence(org.xmlpull.v1.XmlPullParser) -> parsePresence
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser,org.jivesoftware.smack.Connection) -> parseIQ
    org.jivesoftware.smack.packet.Authentication parseAuthentication(org.xmlpull.v1.XmlPullParser) -> parseAuthentication
    org.jivesoftware.smack.packet.RosterPacket parseRoster(org.xmlpull.v1.XmlPullParser) -> parseRoster
    org.jivesoftware.smack.packet.Registration parseRegistration(org.xmlpull.v1.XmlPullParser) -> parseRegistration
    org.jivesoftware.smack.packet.Bind parseResourceBinding(org.xmlpull.v1.XmlPullParser) -> parseResourceBinding
    java.util.Collection parseMechanisms(org.xmlpull.v1.XmlPullParser) -> parseMechanisms
    java.util.Collection parseCompressionMethods(org.xmlpull.v1.XmlPullParser) -> parseCompressionMethods
    java.util.Map parseProperties(org.xmlpull.v1.XmlPullParser) -> parseProperties
    org.jivesoftware.smack.sasl.SASLMechanism$Failure parseSASLFailure(org.xmlpull.v1.XmlPullParser) -> parseSASLFailure
    org.jivesoftware.smack.packet.StreamError parseStreamError(org.xmlpull.v1.XmlPullParser) -> parseStreamError
    org.jivesoftware.smack.packet.XMPPError parseError(org.xmlpull.v1.XmlPullParser) -> parseError
    org.jivesoftware.smack.packet.PacketExtension parsePacketExtension(java.lang.String,java.lang.String,org.xmlpull.v1.XmlPullParser) -> parsePacketExtension
    java.lang.String getLanguageAttribute(org.xmlpull.v1.XmlPullParser) -> getLanguageAttribute
    java.lang.Object parseWithIntrospection(java.lang.String,java.lang.Class,org.xmlpull.v1.XmlPullParser) -> parseWithIntrospection
    java.lang.Object decode(java.lang.Class,java.lang.String) -> decode
org.jivesoftware.smack.util.PacketParserUtils$1 -> org.jivesoftware.smack.util.PacketParserUtils$1:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.util.PacketParserUtils$2 -> org.jivesoftware.smack.util.PacketParserUtils$2:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.util.PacketParserUtils$UnparsedResultIQ -> org.jivesoftware.smack.util.PacketParserUtils$UnparsedResultIQ:
    java.lang.String str -> str
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.util.ReaderListener -> org.jivesoftware.smack.util.ReaderListener:
    void read(java.lang.String) -> read
org.jivesoftware.smack.util.StringEncoder -> org.jivesoftware.smack.util.StringEncoder:
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
org.jivesoftware.smack.util.StringUtils -> org.jivesoftware.smack.util.StringUtils:
    java.lang.String TAG -> TAG
    java.text.DateFormat XEP_0082_UTC_FORMAT -> XEP_0082_UTC_FORMAT
    java.text.DateFormat dateFormatter -> dateFormatter
    java.util.regex.Pattern datePattern -> datePattern
    java.text.DateFormat timeFormatter -> timeFormatter
    java.util.regex.Pattern timePattern -> timePattern
    java.text.DateFormat timeNoZoneFormatter -> timeNoZoneFormatter
    java.util.regex.Pattern timeNoZonePattern -> timeNoZonePattern
    java.text.DateFormat timeNoMillisFormatter -> timeNoMillisFormatter
    java.util.regex.Pattern timeNoMillisPattern -> timeNoMillisPattern
    java.text.DateFormat timeNoMillisNoZoneFormatter -> timeNoMillisNoZoneFormatter
    java.util.regex.Pattern timeNoMillisNoZonePattern -> timeNoMillisNoZonePattern
    java.text.DateFormat dateTimeFormatter -> dateTimeFormatter
    java.util.regex.Pattern dateTimePattern -> dateTimePattern
    java.text.DateFormat dateTimeNoMillisFormatter -> dateTimeNoMillisFormatter
    java.util.regex.Pattern dateTimeNoMillisPattern -> dateTimeNoMillisPattern
    java.text.DateFormat xep0091Formatter -> xep0091Formatter
    java.text.DateFormat xep0091Date6DigitFormatter -> xep0091Date6DigitFormatter
    java.text.DateFormat xep0091Date7Digit1MonthFormatter -> xep0091Date7Digit1MonthFormatter
    java.text.DateFormat xep0091Date7Digit2MonthFormatter -> xep0091Date7Digit2MonthFormatter
    java.util.regex.Pattern xep0091Pattern -> xep0091Pattern
    java.util.List couplings -> couplings
    char[] QUOTE_ENCODE -> QUOTE_ENCODE
    char[] APOS_ENCODE -> APOS_ENCODE
    char[] AMP_ENCODE -> AMP_ENCODE
    char[] LT_ENCODE -> LT_ENCODE
    char[] GT_ENCODE -> GT_ENCODE
    java.security.MessageDigest digest -> digest
    java.util.Random randGen -> randGen
    char[] numbersAndLetters -> numbersAndLetters
    java.util.Date parseXEP0082Date(java.lang.String) -> parseXEP0082Date
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Date handleDateWithMissingLeadingZeros(java.lang.String,int) -> handleDateWithMissingLeadingZeros
    java.util.Calendar parseXEP91Date(java.lang.String,java.text.DateFormat) -> parseXEP91Date
    java.util.List filterDatesBefore(java.util.Calendar,java.util.Calendar[]) -> filterDatesBefore
    java.util.Calendar determineNearestDate(java.util.Calendar,java.util.List) -> determineNearestDate
    java.lang.String formatXEP0082Date(java.util.Date) -> formatXEP0082Date
    java.lang.String formatDate(java.util.Date,org.jivesoftware.smack.util.DateFormatType) -> formatDate
    java.lang.String parseName(java.lang.String) -> parseName
    java.lang.String parseServer(java.lang.String) -> parseServer
    java.lang.String parseResource(java.lang.String) -> parseResource
    java.lang.String parseBareAddress(java.lang.String) -> parseBareAddress
    boolean isFullJID(java.lang.String) -> isFullJID
    java.lang.String escapeNode(java.lang.String) -> escapeNode
    java.lang.String unescapeNode(java.lang.String) -> unescapeNode
    java.lang.String escapeForXML(java.lang.String) -> escapeForXML
    java.lang.String hash(java.lang.String) -> hash
    java.lang.String encodeHex(byte[]) -> encodeHex
    java.lang.String encodeBase64(java.lang.String) -> encodeBase64
    java.lang.String encodeBase64(byte[]) -> encodeBase64
    java.lang.String encodeBase64(byte[],boolean) -> encodeBase64
    java.lang.String encodeBase64(byte[],int,int,boolean) -> encodeBase64
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    java.lang.String randomString(int) -> randomString
org.jivesoftware.smack.util.StringUtils$1 -> org.jivesoftware.smack.util.StringUtils$1:
    java.util.Calendar val$now -> val$now
    int compare(java.util.Calendar,java.util.Calendar) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.jivesoftware.smack.util.StringUtils$PatternCouplings -> org.jivesoftware.smack.util.StringUtils$PatternCouplings:
    java.util.regex.Pattern pattern -> pattern
    java.text.DateFormat formatter -> formatter
    boolean needToConvertTimeZone -> needToConvertTimeZone
    java.lang.String convertTime(java.lang.String) -> convertTime
org.jivesoftware.smack.util.SyncPacketSend -> org.jivesoftware.smack.util.SyncPacketSend:
    org.jivesoftware.smack.packet.Packet getReply(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,long) -> getReply
    org.jivesoftware.smack.packet.Packet getReply(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet) -> getReply
org.jivesoftware.smack.util.WriterListener -> org.jivesoftware.smack.util.WriterListener:
    void write(java.lang.String) -> write
org.jivesoftware.smack.util.collections.AbstractEmptyIterator -> org.jivesoftware.smack.util.collections.AbstractEmptyIterator:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    void reset() -> reset
org.jivesoftware.smack.util.collections.AbstractHashedMap -> org.jivesoftware.smack.util.collections.AbstractHashedMap:
    java.lang.String NO_NEXT_ENTRY -> NO_NEXT_ENTRY
    java.lang.String NO_PREVIOUS_ENTRY -> NO_PREVIOUS_ENTRY
    java.lang.String REMOVE_INVALID -> REMOVE_INVALID
    java.lang.String GETKEY_INVALID -> GETKEY_INVALID
    java.lang.String GETVALUE_INVALID -> GETVALUE_INVALID
    java.lang.String SETVALUE_INVALID -> SETVALUE_INVALID
    int DEFAULT_CAPACITY -> DEFAULT_CAPACITY
    int DEFAULT_THRESHOLD -> DEFAULT_THRESHOLD
    float DEFAULT_LOAD_FACTOR -> DEFAULT_LOAD_FACTOR
    int MAXIMUM_CAPACITY -> MAXIMUM_CAPACITY
    java.lang.Object NULL -> NULL
    float loadFactor -> loadFactor
    int size -> size
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry[] data -> data
    int threshold -> threshold
    int modCount -> modCount
    org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySet entrySet -> entrySet
    org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySet keySet -> keySet
    org.jivesoftware.smack.util.collections.AbstractHashedMap$Values values -> values
    void init() -> init
    java.lang.Object get(java.lang.Object) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    int hash(java.lang.Object) -> hash
    boolean isEqualKey(java.lang.Object,java.lang.Object) -> isEqualKey
    boolean isEqualValue(java.lang.Object,java.lang.Object) -> isEqualValue
    int hashIndex(int,int) -> hashIndex
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry getEntry(java.lang.Object) -> getEntry
    void updateEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,java.lang.Object) -> updateEntry
    void reuseEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,int,java.lang.Object,java.lang.Object) -> reuseEntry
    void addMapping(int,int,java.lang.Object,java.lang.Object) -> addMapping
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry createEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,java.lang.Object,java.lang.Object) -> createEntry
    void addEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int) -> addEntry
    void removeMapping(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> removeMapping
    void removeEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> removeEntry
    void destroyEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> destroyEntry
    void checkCapacity() -> checkCapacity
    void ensureCapacity(int) -> ensureCapacity
    int calculateNewCapacity(int) -> calculateNewCapacity
    int calculateThreshold(int,float) -> calculateThreshold
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry entryNext(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryNext
    int entryHashCode(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryHashCode
    java.lang.Object entryKey(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryKey
    java.lang.Object entryValue(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryValue
    org.jivesoftware.smack.util.collections.MapIterator mapIterator() -> mapIterator
    java.util.Set entrySet() -> entrySet
    java.util.Iterator createEntrySetIterator() -> createEntrySetIterator
    java.util.Set keySet() -> keySet
    java.util.Iterator createKeySetIterator() -> createKeySetIterator
    java.util.Collection values() -> values
    java.util.Iterator createValuesIterator() -> createValuesIterator
    void doWriteObject(java.io.ObjectOutputStream) -> doWriteObject
    void doReadObject(java.io.ObjectInputStream) -> doReadObject
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySet -> org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySet:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int size() -> size
    void clear() -> clear
    boolean contains(java.util.Map$Entry) -> contains
    boolean remove(java.lang.Object) -> remove
    java.util.Iterator iterator() -> iterator
org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySetIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySetIterator:
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry next() -> next
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry -> org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry:
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry next -> next
    int hashCode -> hashCode
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    void setKey(java.lang.Object) -> setKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object access$0(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> access$0
    void access$1(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,java.lang.Object) -> access$1
    void access$2(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,java.lang.Object) -> access$2
    java.lang.Object access$3(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> access$3
org.jivesoftware.smack.util.collections.AbstractHashedMap$HashIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$HashIterator:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int hashIndex -> hashIndex
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry last -> last
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry next -> next
    int expectedModCount -> expectedModCount
    boolean hasNext() -> hasNext
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry nextEntry() -> nextEntry
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry currentEntry() -> currentEntry
    void remove() -> remove
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.collections.AbstractHashedMap$HashMapIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$HashMapIterator:
    java.lang.Object next() -> next
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySet -> org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySet:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    java.util.Iterator iterator() -> iterator
org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySetIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySetIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractHashedMap$Values -> org.jivesoftware.smack.util.collections.AbstractHashedMap$Values:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
org.jivesoftware.smack.util.collections.AbstractHashedMap$ValuesIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$ValuesIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractKeyValue -> org.jivesoftware.smack.util.collections.AbstractKeyValue:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.collections.AbstractMapEntry -> org.jivesoftware.smack.util.collections.AbstractMapEntry:
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.util.collections.AbstractReferenceMap -> org.jivesoftware.smack.util.collections.AbstractReferenceMap:
    int HARD -> HARD
    int SOFT -> SOFT
    int WEAK -> WEAK
    int keyType -> keyType
    int valueType -> valueType
    boolean purgeValues -> purgeValues
    java.lang.ref.ReferenceQueue queue -> queue
    void init() -> init
    void verify(java.lang.String,int) -> verify
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    org.jivesoftware.smack.util.collections.MapIterator mapIterator() -> mapIterator
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    void purgeBeforeRead() -> purgeBeforeRead
    void purgeBeforeWrite() -> purgeBeforeWrite
    void purge() -> purge
    void purge(java.lang.ref.Reference) -> purge
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry getEntry(java.lang.Object) -> getEntry
    int hashEntry(java.lang.Object,java.lang.Object) -> hashEntry
    boolean isEqualKey(java.lang.Object,java.lang.Object) -> isEqualKey
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry createEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,java.lang.Object,java.lang.Object) -> createEntry
    java.util.Iterator createEntrySetIterator() -> createEntrySetIterator
    java.util.Iterator createKeySetIterator() -> createKeySetIterator
    java.util.Iterator createValuesIterator() -> createValuesIterator
    void doWriteObject(java.io.ObjectOutputStream) -> doWriteObject
    void doReadObject(java.io.ObjectInputStream) -> doReadObject
    java.lang.ref.ReferenceQueue access$0(org.jivesoftware.smack.util.collections.AbstractReferenceMap) -> access$0
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry:
    org.jivesoftware.smack.util.collections.AbstractReferenceMap parent -> parent
    java.lang.ref.Reference refKey -> refKey
    java.lang.ref.Reference refValue -> refValue
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.ref.Reference toReference(int,java.lang.Object,int) -> toReference
    boolean purge(java.lang.ref.Reference) -> purge
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySet -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySet:
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySetIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySetIterator:
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry next() -> next
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceIteratorBase -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceIteratorBase:
    org.jivesoftware.smack.util.collections.AbstractReferenceMap parent -> parent
    int index -> index
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry entry -> entry
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry previous -> previous
    java.lang.Object nextKey -> nextKey
    java.lang.Object nextValue -> nextValue
    java.lang.Object currentKey -> currentKey
    java.lang.Object currentValue -> currentValue
    int expectedModCount -> expectedModCount
    boolean hasNext() -> hasNext
    void checkMod() -> checkMod
    boolean nextNull() -> nextNull
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry nextEntry() -> nextEntry
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry currentEntry() -> currentEntry
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry superNext() -> superNext
    void remove() -> remove
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySet -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySet:
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySetIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySetIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceMapIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceMapIterator:
    java.lang.Object next() -> next
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValues -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValues:
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValuesIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValuesIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$SoftRef -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$SoftRef:
    int hash -> hash
    int hashCode() -> hashCode
org.jivesoftware.smack.util.collections.AbstractReferenceMap$WeakRef -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$WeakRef:
    int hash -> hash
    int hashCode() -> hashCode
org.jivesoftware.smack.util.collections.DefaultMapEntry -> org.jivesoftware.smack.util.collections.DefaultMapEntry:
org.jivesoftware.smack.util.collections.EmptyIterator -> org.jivesoftware.smack.util.collections.EmptyIterator:
    org.jivesoftware.smack.util.collections.ResettableIterator RESETTABLE_INSTANCE -> RESETTABLE_INSTANCE
    java.util.Iterator INSTANCE -> INSTANCE
    java.util.Iterator getInstance() -> getInstance
    java.lang.Object getValue() -> getValue
    boolean hasPrevious() -> hasPrevious
    java.lang.Object getKey() -> getKey
    java.lang.Object next() -> next
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    void reset() -> reset
    int previousIndex() -> previousIndex
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    void remove() -> remove
    boolean hasNext() -> hasNext
org.jivesoftware.smack.util.collections.EmptyMapIterator -> org.jivesoftware.smack.util.collections.EmptyMapIterator:
    org.jivesoftware.smack.util.collections.MapIterator INSTANCE -> INSTANCE
    java.lang.Object getValue() -> getValue
    boolean hasPrevious() -> hasPrevious
    java.lang.Object getKey() -> getKey
    java.lang.Object next() -> next
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    void reset() -> reset
    int previousIndex() -> previousIndex
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    void remove() -> remove
    boolean hasNext() -> hasNext
org.jivesoftware.smack.util.collections.IterableMap -> org.jivesoftware.smack.util.collections.IterableMap:
    org.jivesoftware.smack.util.collections.MapIterator mapIterator() -> mapIterator
org.jivesoftware.smack.util.collections.KeyValue -> org.jivesoftware.smack.util.collections.KeyValue:
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
org.jivesoftware.smack.util.collections.MapIterator -> org.jivesoftware.smack.util.collections.MapIterator:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    void remove() -> remove
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.collections.ReferenceMap -> org.jivesoftware.smack.util.collections.ReferenceMap:
    long serialVersionUID -> serialVersionUID
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
org.jivesoftware.smack.util.collections.ResettableIterator -> org.jivesoftware.smack.util.collections.ResettableIterator:
    void reset() -> reset
org.jivesoftware.smack.util.dns.DNSJavaResolver -> org.jivesoftware.smack.util.dns.DNSJavaResolver:
    org.jivesoftware.smack.util.dns.DNSJavaResolver instance -> instance
    org.jivesoftware.smack.util.dns.DNSResolver getInstance() -> getInstance
    java.util.List lookupSRVRecords(java.lang.String) -> lookupSRVRecords
org.jivesoftware.smack.util.dns.DNSResolver -> org.jivesoftware.smack.util.dns.DNSResolver:
    java.util.List lookupSRVRecords(java.lang.String) -> lookupSRVRecords
org.jivesoftware.smack.util.dns.HostAddress -> org.jivesoftware.smack.util.dns.HostAddress:
    java.lang.String fqdn -> fqdn
    int port -> port
    java.lang.Exception exception -> exception
    java.lang.String getFQDN() -> getFQDN
    int getPort() -> getPort
    void setException(java.lang.Exception) -> setException
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String getErrorMessage() -> getErrorMessage
org.jivesoftware.smack.util.dns.SRVRecord -> org.jivesoftware.smack.util.dns.SRVRecord:
    int weight -> weight
    int priority -> priority
    int getPriority() -> getPriority
    int getWeight() -> getWeight
    int compareTo(org.jivesoftware.smack.util.dns.SRVRecord) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
org.jivesoftware.smackx.ChatState -> org.jivesoftware.smackx.ChatState:
    org.jivesoftware.smackx.ChatState active -> active
    org.jivesoftware.smackx.ChatState composing -> composing
    org.jivesoftware.smackx.ChatState paused -> paused
    org.jivesoftware.smackx.ChatState inactive -> inactive
    org.jivesoftware.smackx.ChatState gone -> gone
    org.jivesoftware.smackx.ChatState[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smackx.ChatState[] values() -> values
    org.jivesoftware.smackx.ChatState valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.ChatStateListener -> org.jivesoftware.smackx.ChatStateListener:
    void stateChanged(org.jivesoftware.smack.Chat,org.jivesoftware.smackx.ChatState) -> stateChanged
org.jivesoftware.smackx.ChatStateManager -> org.jivesoftware.smackx.ChatStateManager:
    java.util.Map managers -> managers
    org.jivesoftware.smack.filter.PacketFilter filter -> filter
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.ChatStateManager$OutgoingMessageInterceptor outgoingInterceptor -> outgoingInterceptor
    org.jivesoftware.smackx.ChatStateManager$IncomingMessageInterceptor incomingInterceptor -> incomingInterceptor
    java.util.Map chatStates -> chatStates
    org.jivesoftware.smackx.ChatStateManager getInstance(org.jivesoftware.smack.Connection) -> getInstance
    void init() -> init
    void setCurrentState(org.jivesoftware.smackx.ChatState,org.jivesoftware.smack.Chat) -> setCurrentState
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean updateChatState(org.jivesoftware.smack.Chat,org.jivesoftware.smackx.ChatState) -> updateChatState
    void fireNewChatState(org.jivesoftware.smack.Chat,org.jivesoftware.smackx.ChatState) -> fireNewChatState
    org.jivesoftware.smack.Connection access$0(org.jivesoftware.smackx.ChatStateManager) -> access$0
    boolean access$1(org.jivesoftware.smackx.ChatStateManager,org.jivesoftware.smack.Chat,org.jivesoftware.smackx.ChatState) -> access$1
    void access$2(org.jivesoftware.smackx.ChatStateManager,org.jivesoftware.smack.Chat,org.jivesoftware.smackx.ChatState) -> access$2
org.jivesoftware.smackx.ChatStateManager$IncomingMessageInterceptor -> org.jivesoftware.smackx.ChatStateManager$IncomingMessageInterceptor:
    org.jivesoftware.smackx.ChatStateManager this$0 -> this$0
    void chatCreated(org.jivesoftware.smack.Chat,boolean) -> chatCreated
    void processMessage(org.jivesoftware.smack.Chat,org.jivesoftware.smack.packet.Message) -> processMessage
org.jivesoftware.smackx.ChatStateManager$OutgoingMessageInterceptor -> org.jivesoftware.smackx.ChatStateManager$OutgoingMessageInterceptor:
    org.jivesoftware.smackx.ChatStateManager this$0 -> this$0
    void interceptPacket(org.jivesoftware.smack.packet.Packet) -> interceptPacket
org.jivesoftware.smackx.ConfigureProviderManager -> org.jivesoftware.smackx.ConfigureProviderManager:
    java.lang.String TAG -> TAG
    void configureProviderManager() -> configureProviderManager
org.jivesoftware.smackx.DefaultMessageEventRequestListener -> org.jivesoftware.smackx.DefaultMessageEventRequestListener:
    void deliveredNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> deliveredNotificationRequested
    void displayedNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> displayedNotificationRequested
    void composingNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> composingNotificationRequested
    void offlineNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> offlineNotificationRequested
org.jivesoftware.smackx.Form -> org.jivesoftware.smackx.Form:
    java.lang.String TYPE_FORM -> TYPE_FORM
    java.lang.String TYPE_SUBMIT -> TYPE_SUBMIT
    java.lang.String TYPE_CANCEL -> TYPE_CANCEL
    java.lang.String TYPE_RESULT -> TYPE_RESULT
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT -> ELEMENT
    org.jivesoftware.smackx.packet.DataForm dataForm -> dataForm
    org.jivesoftware.smackx.Form getFormFrom(org.jivesoftware.smack.packet.Packet) -> getFormFrom
    void addField(org.jivesoftware.smackx.FormField) -> addField
    void setAnswer(java.lang.String,java.lang.String) -> setAnswer
    void setAnswer(java.lang.String,int) -> setAnswer
    void setAnswer(java.lang.String,long) -> setAnswer
    void setAnswer(java.lang.String,float) -> setAnswer
    void setAnswer(java.lang.String,double) -> setAnswer
    void setAnswer(java.lang.String,boolean) -> setAnswer
    void setAnswer(org.jivesoftware.smackx.FormField,java.lang.Object) -> setAnswer
    void setAnswer(java.lang.String,java.util.List) -> setAnswer
    void setDefaultAnswer(java.lang.String) -> setDefaultAnswer
    java.util.Iterator getFields() -> getFields
    org.jivesoftware.smackx.FormField getField(java.lang.String) -> getField
    java.lang.String getInstructions() -> getInstructions
    java.lang.String getTitle() -> getTitle
    java.lang.String getType() -> getType
    void setInstructions(java.lang.String) -> setInstructions
    void setTitle(java.lang.String) -> setTitle
    org.jivesoftware.smackx.packet.DataForm getDataFormToSend() -> getDataFormToSend
    boolean isFormType() -> isFormType
    boolean isSubmitType() -> isSubmitType
    org.jivesoftware.smackx.Form createAnswerForm() -> createAnswerForm
org.jivesoftware.smackx.FormField -> org.jivesoftware.smackx.FormField:
    java.lang.String TYPE_BOOLEAN -> TYPE_BOOLEAN
    java.lang.String TYPE_FIXED -> TYPE_FIXED
    java.lang.String TYPE_HIDDEN -> TYPE_HIDDEN
    java.lang.String TYPE_JID_MULTI -> TYPE_JID_MULTI
    java.lang.String TYPE_JID_SINGLE -> TYPE_JID_SINGLE
    java.lang.String TYPE_LIST_MULTI -> TYPE_LIST_MULTI
    java.lang.String TYPE_LIST_SINGLE -> TYPE_LIST_SINGLE
    java.lang.String TYPE_TEXT_MULTI -> TYPE_TEXT_MULTI
    java.lang.String TYPE_TEXT_PRIVATE -> TYPE_TEXT_PRIVATE
    java.lang.String TYPE_TEXT_SINGLE -> TYPE_TEXT_SINGLE
    java.lang.String description -> description
    boolean required -> required
    java.lang.String label -> label
    java.lang.String variable -> variable
    java.lang.String type -> type
    java.util.List options -> options
    java.util.List values -> values
    java.lang.String getDescription() -> getDescription
    java.lang.String getLabel() -> getLabel
    java.util.Iterator getOptions() -> getOptions
    boolean isRequired() -> isRequired
    java.lang.String getType() -> getType
    java.util.Iterator getValues() -> getValues
    java.lang.String getVariable() -> getVariable
    void setDescription(java.lang.String) -> setDescription
    void setLabel(java.lang.String) -> setLabel
    void setRequired(boolean) -> setRequired
    void setType(java.lang.String) -> setType
    void addValue(java.lang.String) -> addValue
    void addValues(java.util.List) -> addValues
    void resetValues() -> resetValues
    void addOption(org.jivesoftware.smackx.FormField$Option) -> addOption
    java.lang.String toXML() -> toXML
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smackx.FormField$Option -> org.jivesoftware.smackx.FormField$Option:
    java.lang.String label -> label
    java.lang.String value -> value
    java.lang.String getLabel() -> getLabel
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    java.lang.String toXML() -> toXML
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smackx.Gateway -> org.jivesoftware.smackx.Gateway:
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.ServiceDiscoveryManager sdManager -> sdManager
    org.jivesoftware.smack.Roster roster -> roster
    java.lang.String entityJID -> entityJID
    org.jivesoftware.smack.packet.Registration registerInfo -> registerInfo
    org.jivesoftware.smackx.packet.DiscoverInfo$Identity identity -> identity
    org.jivesoftware.smackx.packet.DiscoverInfo info -> info
    void discoverInfo() -> discoverInfo
    org.jivesoftware.smackx.packet.DiscoverInfo$Identity getIdentity() -> getIdentity
    org.jivesoftware.smack.packet.Registration getRegisterInfo() -> getRegisterInfo
    void refreshRegisterInfo() -> refreshRegisterInfo
    boolean canRegister() -> canRegister
    java.util.List getRequiredFields() -> getRequiredFields
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isRegistered() -> isRegistered
    java.lang.String getField(java.lang.String) -> getField
    java.util.List getFieldNames() -> getFieldNames
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
    java.lang.String getInstructions() -> getInstructions
    void register(java.lang.String,java.lang.String,java.util.Map) -> register
    void register(java.lang.String,java.lang.String) -> register
    void unregister() -> unregister
    void login() -> login
    void login(org.jivesoftware.smack.packet.Presence) -> login
    void logout() -> logout
    java.lang.String access$0(org.jivesoftware.smackx.Gateway) -> access$0
    org.jivesoftware.smack.Roster access$1(org.jivesoftware.smackx.Gateway) -> access$1
    org.jivesoftware.smack.Connection access$2(org.jivesoftware.smackx.Gateway) -> access$2
org.jivesoftware.smackx.Gateway$GatewayPresenceListener -> org.jivesoftware.smackx.Gateway$GatewayPresenceListener:
    org.jivesoftware.smackx.Gateway this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.GatewayManager -> org.jivesoftware.smackx.GatewayManager:
    java.util.Map instances -> instances
    org.jivesoftware.smackx.ServiceDiscoveryManager sdManager -> sdManager
    java.util.Map localGateways -> localGateways
    java.util.Map nonLocalGateways -> nonLocalGateways
    java.util.Map gateways -> gateways
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.Roster roster -> roster
    void loadLocalGateways() -> loadLocalGateways
    void discoverGateway(java.lang.String) -> discoverGateway
    void loadNonLocalGateways() -> loadNonLocalGateways
    org.jivesoftware.smackx.GatewayManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    java.util.List getLocalGateways() -> getLocalGateways
    java.util.List getNonLocalGateways() -> getNonLocalGateways
    void refreshNonLocalGateways() -> refreshNonLocalGateways
    org.jivesoftware.smackx.Gateway getGateway(java.lang.String) -> getGateway
org.jivesoftware.smackx.GroupChatInvitation -> org.jivesoftware.smackx.GroupChatInvitation:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String roomAddress -> roomAddress
    java.lang.String getRoomAddress() -> getRoomAddress
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.GroupChatInvitation$Provider -> org.jivesoftware.smackx.GroupChatInvitation$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.InitStaticCode -> org.jivesoftware.smackx.InitStaticCode:
    void initStaticCode(android.content.Context) -> initStaticCode
org.jivesoftware.smackx.LastActivityManager -> org.jivesoftware.smackx.LastActivityManager:
    long lastMessageSent -> lastMessageSent
    org.jivesoftware.smack.Connection connection -> connection
    void resetIdleTime() -> resetIdleTime
    long getIdleTime() -> getIdleTime
    org.jivesoftware.smackx.packet.LastActivity getLastActivity(org.jivesoftware.smack.Connection,java.lang.String) -> getLastActivity
    boolean isLastActivitySupported(org.jivesoftware.smack.Connection,java.lang.String) -> isLastActivitySupported
    void access$1(org.jivesoftware.smackx.LastActivityManager) -> access$1
    long access$2(org.jivesoftware.smackx.LastActivityManager) -> access$2
    org.jivesoftware.smack.Connection access$3(org.jivesoftware.smackx.LastActivityManager) -> access$3
org.jivesoftware.smackx.LastActivityManager$1 -> org.jivesoftware.smackx.LastActivityManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.LastActivityManager$2 -> org.jivesoftware.smackx.LastActivityManager$2:
    org.jivesoftware.smackx.LastActivityManager this$0 -> this$0
    int[] $SWITCH_TABLE$org$jivesoftware$smack$packet$Presence$Mode -> $SWITCH_TABLE$org$jivesoftware$smack$packet$Presence$Mode
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    int[] $SWITCH_TABLE$org$jivesoftware$smack$packet$Presence$Mode() -> $SWITCH_TABLE$org$jivesoftware$smack$packet$Presence$Mode
org.jivesoftware.smackx.LastActivityManager$3 -> org.jivesoftware.smackx.LastActivityManager$3:
    org.jivesoftware.smackx.LastActivityManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.LastActivityManager$4 -> org.jivesoftware.smackx.LastActivityManager$4:
    org.jivesoftware.smackx.LastActivityManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.MessageEventManager -> org.jivesoftware.smackx.MessageEventManager:
    java.util.List messageEventNotificationListeners -> messageEventNotificationListeners
    java.util.List messageEventRequestListeners -> messageEventRequestListeners
    org.jivesoftware.smack.Connection con -> con
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    org.jivesoftware.smack.PacketListener packetListener -> packetListener
    void addNotificationsRequests(org.jivesoftware.smack.packet.Message,boolean,boolean,boolean,boolean) -> addNotificationsRequests
    void addMessageEventRequestListener(org.jivesoftware.smackx.MessageEventRequestListener) -> addMessageEventRequestListener
    void removeMessageEventRequestListener(org.jivesoftware.smackx.MessageEventRequestListener) -> removeMessageEventRequestListener
    void addMessageEventNotificationListener(org.jivesoftware.smackx.MessageEventNotificationListener) -> addMessageEventNotificationListener
    void removeMessageEventNotificationListener(org.jivesoftware.smackx.MessageEventNotificationListener) -> removeMessageEventNotificationListener
    void fireMessageEventRequestListeners(java.lang.String,java.lang.String,java.lang.String) -> fireMessageEventRequestListeners
    void fireMessageEventNotificationListeners(java.lang.String,java.lang.String,java.lang.String) -> fireMessageEventNotificationListeners
    void init() -> init
    void sendDeliveredNotification(java.lang.String,java.lang.String) -> sendDeliveredNotification
    void sendDisplayedNotification(java.lang.String,java.lang.String) -> sendDisplayedNotification
    void sendComposingNotification(java.lang.String,java.lang.String) -> sendComposingNotification
    void sendCancelledNotification(java.lang.String,java.lang.String) -> sendCancelledNotification
    void destroy() -> destroy
    void finalize() -> finalize
    void access$0(org.jivesoftware.smackx.MessageEventManager,java.lang.String,java.lang.String,java.lang.String) -> access$0
    void access$1(org.jivesoftware.smackx.MessageEventManager,java.lang.String,java.lang.String,java.lang.String) -> access$1
org.jivesoftware.smackx.MessageEventManager$1 -> org.jivesoftware.smackx.MessageEventManager$1:
    org.jivesoftware.smackx.MessageEventManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.MessageEventNotificationListener -> org.jivesoftware.smackx.MessageEventNotificationListener:
    void deliveredNotification(java.lang.String,java.lang.String) -> deliveredNotification
    void displayedNotification(java.lang.String,java.lang.String) -> displayedNotification
    void composingNotification(java.lang.String,java.lang.String) -> composingNotification
    void offlineNotification(java.lang.String,java.lang.String) -> offlineNotification
    void cancelledNotification(java.lang.String,java.lang.String) -> cancelledNotification
org.jivesoftware.smackx.MessageEventRequestListener -> org.jivesoftware.smackx.MessageEventRequestListener:
    void deliveredNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> deliveredNotificationRequested
    void displayedNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> displayedNotificationRequested
    void composingNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> composingNotificationRequested
    void offlineNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> offlineNotificationRequested
org.jivesoftware.smackx.MultipleRecipientInfo -> org.jivesoftware.smackx.MultipleRecipientInfo:
    org.jivesoftware.smackx.packet.MultipleAddresses extension -> extension
    java.util.List getTOAddresses() -> getTOAddresses
    java.util.List getCCAddresses() -> getCCAddresses
    java.lang.String getReplyRoom() -> getReplyRoom
    boolean shouldNotReply() -> shouldNotReply
    org.jivesoftware.smackx.packet.MultipleAddresses$Address getReplyAddress() -> getReplyAddress
org.jivesoftware.smackx.MultipleRecipientManager -> org.jivesoftware.smackx.MultipleRecipientManager:
    org.jivesoftware.smack.util.Cache services -> services
    void send(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,java.util.List,java.util.List,java.util.List) -> send
    void send(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,boolean) -> send
    void reply(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Message,org.jivesoftware.smack.packet.Message) -> reply
    org.jivesoftware.smackx.MultipleRecipientInfo getMultipleRecipientInfo(org.jivesoftware.smack.packet.Packet) -> getMultipleRecipientInfo
    void sendToIndividualRecipients(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,java.util.List,java.util.List,java.util.List) -> sendToIndividualRecipients
    void sendThroughService(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,boolean,java.lang.String) -> sendThroughService
    java.lang.String getMultipleRecipienServiceAddress(org.jivesoftware.smack.Connection) -> getMultipleRecipienServiceAddress
org.jivesoftware.smackx.MultipleRecipientManager$PacketCopy -> org.jivesoftware.smackx.MultipleRecipientManager$PacketCopy:
    java.lang.String text -> text
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.NodeInformationProvider -> org.jivesoftware.smackx.NodeInformationProvider:
    java.util.List getNodeItems() -> getNodeItems
    java.util.List getNodeFeatures() -> getNodeFeatures
    java.util.List getNodeIdentities() -> getNodeIdentities
    java.util.List getNodePacketExtensions() -> getNodePacketExtensions
org.jivesoftware.smackx.OfflineMessageHeader -> org.jivesoftware.smackx.OfflineMessageHeader:
    java.lang.String user -> user
    java.lang.String jid -> jid
    java.lang.String stamp -> stamp
    java.lang.String getUser() -> getUser
    java.lang.String getJid() -> getJid
    java.lang.String getStamp() -> getStamp
org.jivesoftware.smackx.OfflineMessageManager -> org.jivesoftware.smackx.OfflineMessageManager:
    java.lang.String namespace -> namespace
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    boolean supportsFlexibleRetrieval() -> supportsFlexibleRetrieval
    int getMessageCount() -> getMessageCount
    java.util.Iterator getHeaders() -> getHeaders
    java.util.Iterator getMessages(java.util.List) -> getMessages
    java.util.Iterator getMessages() -> getMessages
    void deleteMessages(java.util.List) -> deleteMessages
    void deleteMessages() -> deleteMessages
org.jivesoftware.smackx.OfflineMessageManager$1 -> org.jivesoftware.smackx.OfflineMessageManager$1:
    org.jivesoftware.smackx.OfflineMessageManager this$0 -> this$0
    java.util.List val$nodes -> val$nodes
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.PrivateDataManager -> org.jivesoftware.smackx.PrivateDataManager:
    java.util.Map privateDataProviders -> privateDataProviders
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String user -> user
    org.jivesoftware.smackx.provider.PrivateDataProvider getPrivateDataProvider(java.lang.String,java.lang.String) -> getPrivateDataProvider
    void addPrivateDataProvider(java.lang.String,java.lang.String,org.jivesoftware.smackx.provider.PrivateDataProvider) -> addPrivateDataProvider
    void removePrivateDataProvider(java.lang.String,java.lang.String) -> removePrivateDataProvider
    org.jivesoftware.smackx.packet.PrivateData getPrivateData(java.lang.String,java.lang.String) -> getPrivateData
    void setPrivateData(org.jivesoftware.smackx.packet.PrivateData) -> setPrivateData
    java.lang.String getProviderKey(java.lang.String,java.lang.String) -> getProviderKey
org.jivesoftware.smackx.PrivateDataManager$1 -> org.jivesoftware.smackx.PrivateDataManager$1:
    org.jivesoftware.smackx.PrivateDataManager this$0 -> this$0
    java.lang.String val$elementName -> val$elementName
    java.lang.String val$namespace -> val$namespace
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.PrivateDataManager$2 -> org.jivesoftware.smackx.PrivateDataManager$2:
    org.jivesoftware.smackx.PrivateDataManager this$0 -> this$0
    org.jivesoftware.smackx.packet.PrivateData val$privateData -> val$privateData
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.PrivateDataManager$PrivateDataIQProvider -> org.jivesoftware.smackx.PrivateDataManager$PrivateDataIQProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.PrivateDataManager$PrivateDataResult -> org.jivesoftware.smackx.PrivateDataManager$PrivateDataResult:
    org.jivesoftware.smackx.packet.PrivateData privateData -> privateData
    org.jivesoftware.smackx.packet.PrivateData getPrivateData() -> getPrivateData
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.RemoteRosterEntry -> org.jivesoftware.smackx.RemoteRosterEntry:
    java.lang.String user -> user
    java.lang.String name -> name
    java.util.List groupNames -> groupNames
    java.lang.String getUser() -> getUser
    java.lang.String getName() -> getName
    java.util.Iterator getGroupNames() -> getGroupNames
    java.lang.String[] getGroupArrayNames() -> getGroupArrayNames
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.ReportedData -> org.jivesoftware.smackx.ReportedData:
    java.util.List columns -> columns
    java.util.List rows -> rows
    java.lang.String title -> title
    org.jivesoftware.smackx.ReportedData getReportedDataFrom(org.jivesoftware.smack.packet.Packet) -> getReportedDataFrom
    void addRow(org.jivesoftware.smackx.ReportedData$Row) -> addRow
    void addColumn(org.jivesoftware.smackx.ReportedData$Column) -> addColumn
    java.util.Iterator getRows() -> getRows
    java.util.Iterator getColumns() -> getColumns
    java.lang.String getTitle() -> getTitle
org.jivesoftware.smackx.ReportedData$Column -> org.jivesoftware.smackx.ReportedData$Column:
    java.lang.String label -> label
    java.lang.String variable -> variable
    java.lang.String type -> type
    java.lang.String getLabel() -> getLabel
    java.lang.String getType() -> getType
    java.lang.String getVariable() -> getVariable
org.jivesoftware.smackx.ReportedData$Field -> org.jivesoftware.smackx.ReportedData$Field:
    java.lang.String variable -> variable
    java.util.List values -> values
    java.lang.String getVariable() -> getVariable
    java.util.Iterator getValues() -> getValues
org.jivesoftware.smackx.ReportedData$Row -> org.jivesoftware.smackx.ReportedData$Row:
    java.util.List fields -> fields
    java.util.Iterator getValues(java.lang.String) -> getValues
    java.util.Iterator getFields() -> getFields
org.jivesoftware.smackx.RosterExchangeListener -> org.jivesoftware.smackx.RosterExchangeListener:
    void entriesReceived(java.lang.String,java.util.Iterator) -> entriesReceived
org.jivesoftware.smackx.RosterExchangeManager -> org.jivesoftware.smackx.RosterExchangeManager:
    java.util.List rosterExchangeListeners -> rosterExchangeListeners
    org.jivesoftware.smack.Connection con -> con
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    org.jivesoftware.smack.PacketListener packetListener -> packetListener
    void addRosterListener(org.jivesoftware.smackx.RosterExchangeListener) -> addRosterListener
    void removeRosterListener(org.jivesoftware.smackx.RosterExchangeListener) -> removeRosterListener
    void send(org.jivesoftware.smack.Roster,java.lang.String) -> send
    void send(org.jivesoftware.smack.RosterEntry,java.lang.String) -> send
    void send(org.jivesoftware.smack.RosterGroup,java.lang.String) -> send
    void fireRosterExchangeListeners(java.lang.String,java.util.Iterator) -> fireRosterExchangeListeners
    void init() -> init
    void destroy() -> destroy
    void finalize() -> finalize
    void access$0(org.jivesoftware.smackx.RosterExchangeManager,java.lang.String,java.util.Iterator) -> access$0
org.jivesoftware.smackx.RosterExchangeManager$1 -> org.jivesoftware.smackx.RosterExchangeManager$1:
    org.jivesoftware.smackx.RosterExchangeManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.ServiceDiscoveryManager -> org.jivesoftware.smackx.ServiceDiscoveryManager:
    java.lang.String DEFAULT_IDENTITY_NAME -> DEFAULT_IDENTITY_NAME
    java.lang.String DEFAULT_IDENTITY_CATEGORY -> DEFAULT_IDENTITY_CATEGORY
    java.lang.String DEFAULT_IDENTITY_TYPE -> DEFAULT_IDENTITY_TYPE
    org.jivesoftware.smackx.packet.DiscoverInfo$Identity defaultIdentity -> defaultIdentity
    java.util.Set identities -> identities
    org.jivesoftware.smackx.packet.DiscoverInfo$Identity identity -> identity
    org.jivesoftware.smackx.entitycaps.EntityCapsManager capsManager -> capsManager
    java.util.Map instances -> instances
    java.lang.ref.WeakReference connection -> connection
    java.util.Set features -> features
    org.jivesoftware.smackx.packet.DataForm extendedInfo -> extendedInfo
    java.util.Map nodeInformationProviders -> nodeInformationProviders
    void setDefaultIdentity(org.jivesoftware.smackx.packet.DiscoverInfo$Identity) -> setDefaultIdentity
    java.lang.String getIdentityName() -> getIdentityName
    void setIdentityName(java.lang.String) -> setIdentityName
    java.lang.String getIdentityType() -> getIdentityType
    void setIdentityType(java.lang.String) -> setIdentityType
    void addIdentity(org.jivesoftware.smackx.packet.DiscoverInfo$Identity) -> addIdentity
    boolean removeIdentity(org.jivesoftware.smackx.packet.DiscoverInfo$Identity) -> removeIdentity
    java.util.Set getIdentities() -> getIdentities
    org.jivesoftware.smackx.ServiceDiscoveryManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    void addDiscoverInfoTo(org.jivesoftware.smackx.packet.DiscoverInfo) -> addDiscoverInfoTo
    org.jivesoftware.smackx.NodeInformationProvider getNodeInformationProvider(java.lang.String) -> getNodeInformationProvider
    void setNodeInformationProvider(java.lang.String,org.jivesoftware.smackx.NodeInformationProvider) -> setNodeInformationProvider
    void removeNodeInformationProvider(java.lang.String) -> removeNodeInformationProvider
    java.util.Iterator getFeatures() -> getFeatures
    java.util.List getFeaturesList() -> getFeaturesList
    void addFeature(java.lang.String) -> addFeature
    void removeFeature(java.lang.String) -> removeFeature
    boolean includesFeature(java.lang.String) -> includesFeature
    void setExtendedInfo(org.jivesoftware.smackx.packet.DataForm) -> setExtendedInfo
    org.jivesoftware.smackx.packet.DataForm getExtendedInfo() -> getExtendedInfo
    java.util.List getExtendedInfoAsList() -> getExtendedInfoAsList
    void removeExtendedInfo() -> removeExtendedInfo
    org.jivesoftware.smackx.packet.DiscoverInfo discoverInfo(java.lang.String) -> discoverInfo
    org.jivesoftware.smackx.packet.DiscoverInfo discoverInfo(java.lang.String,java.lang.String) -> discoverInfo
    org.jivesoftware.smackx.packet.DiscoverItems discoverItems(java.lang.String) -> discoverItems
    org.jivesoftware.smackx.packet.DiscoverItems discoverItems(java.lang.String,java.lang.String) -> discoverItems
    boolean canPublishItems(java.lang.String) -> canPublishItems
    boolean canPublishItems(org.jivesoftware.smackx.packet.DiscoverInfo) -> canPublishItems
    void publishItems(java.lang.String,org.jivesoftware.smackx.packet.DiscoverItems) -> publishItems
    void publishItems(java.lang.String,java.lang.String,org.jivesoftware.smackx.packet.DiscoverItems) -> publishItems
    void setEntityCapsManager(org.jivesoftware.smackx.entitycaps.EntityCapsManager) -> setEntityCapsManager
    void renewEntityCapsVersion() -> renewEntityCapsVersion
    java.lang.ref.WeakReference access$0(org.jivesoftware.smackx.ServiceDiscoveryManager) -> access$0
    org.jivesoftware.smackx.NodeInformationProvider access$1(org.jivesoftware.smackx.ServiceDiscoveryManager,java.lang.String) -> access$1
org.jivesoftware.smackx.ServiceDiscoveryManager$1 -> org.jivesoftware.smackx.ServiceDiscoveryManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.ServiceDiscoveryManager$2 -> org.jivesoftware.smackx.ServiceDiscoveryManager$2:
    org.jivesoftware.smackx.ServiceDiscoveryManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.ServiceDiscoveryManager$3 -> org.jivesoftware.smackx.ServiceDiscoveryManager$3:
    org.jivesoftware.smackx.ServiceDiscoveryManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.SharedGroupManager -> org.jivesoftware.smackx.SharedGroupManager:
    java.util.List getSharedGroups(org.jivesoftware.smack.Connection) -> getSharedGroups
org.jivesoftware.smackx.entitycaps.EntityCapsManager -> org.jivesoftware.smackx.entitycaps.EntityCapsManager:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT -> ELEMENT
    java.lang.String ENTITY_NODE -> ENTITY_NODE
    java.util.Map SUPPORTED_HASHES -> SUPPORTED_HASHES
    org.jivesoftware.smackx.entitycaps.cache.EntityCapsPersistentCache persistentCache -> persistentCache
    java.util.Map instances -> instances
    java.util.Map caps -> caps
    java.util.Map jidCaps -> jidCaps
    java.lang.ref.WeakReference weakRefConnection -> weakRefConnection
    org.jivesoftware.smackx.ServiceDiscoveryManager sdm -> sdm
    boolean entityCapsEnabled -> entityCapsEnabled
    java.lang.String currentCapsVersion -> currentCapsVersion
    boolean presenceSend -> presenceSend
    java.util.Queue lastLocalCapsVersions -> lastLocalCapsVersions
    void addDiscoverInfoByNode(java.lang.String,org.jivesoftware.smackx.packet.DiscoverInfo) -> addDiscoverInfoByNode
    java.lang.String getNodeVersionByJid(java.lang.String) -> getNodeVersionByJid
    org.jivesoftware.smackx.entitycaps.EntityCapsManager$NodeVerHash getNodeVerHashByJid(java.lang.String) -> getNodeVerHashByJid
    org.jivesoftware.smackx.packet.DiscoverInfo getDiscoverInfoByUser(java.lang.String) -> getDiscoverInfoByUser
    org.jivesoftware.smackx.packet.DiscoverInfo getDiscoveryInfoByNodeVer(java.lang.String) -> getDiscoveryInfoByNodeVer
    void setPersistentCache(org.jivesoftware.smackx.entitycaps.cache.EntityCapsPersistentCache) -> setPersistentCache
    void setJidCapsMaxCacheSize(int) -> setJidCapsMaxCacheSize
    void setCapsMaxCacheSize(int) -> setCapsMaxCacheSize
    org.jivesoftware.smackx.entitycaps.EntityCapsManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    void enableEntityCaps() -> enableEntityCaps
    void disableEntityCaps() -> disableEntityCaps
    boolean entityCapsEnabled() -> entityCapsEnabled
    void removeUserCapsNode(java.lang.String) -> removeUserCapsNode
    java.lang.String getCapsVersion() -> getCapsVersion
    java.lang.String getLocalNodeVer() -> getLocalNodeVer
    boolean areEntityCapsSupported(java.lang.String) -> areEntityCapsSupported
    boolean areEntityCapsSupportedByServer() -> areEntityCapsSupportedByServer
    void updateLocalEntityCaps() -> updateLocalEntityCaps
    boolean verifyDiscoverInfoVersion(java.lang.String,java.lang.String,org.jivesoftware.smackx.packet.DiscoverInfo) -> verifyDiscoverInfoVersion
    boolean verifyPacketExtensions(org.jivesoftware.smackx.packet.DiscoverInfo) -> verifyPacketExtensions
    java.lang.String generateVerificationString(org.jivesoftware.smackx.packet.DiscoverInfo,java.lang.String) -> generateVerificationString
    void formFieldValuesToCaps(java.util.Iterator,java.lang.StringBuilder) -> formFieldValuesToCaps
    void access$0(org.jivesoftware.smackx.entitycaps.EntityCapsManager,boolean) -> access$0
    java.util.Map access$1() -> access$1
    boolean access$2(org.jivesoftware.smackx.entitycaps.EntityCapsManager) -> access$2
    org.jivesoftware.smackx.ServiceDiscoveryManager access$3(org.jivesoftware.smackx.entitycaps.EntityCapsManager) -> access$3
org.jivesoftware.smackx.entitycaps.EntityCapsManager$1 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.entitycaps.EntityCapsManager$2 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$2:
    org.jivesoftware.smackx.entitycaps.EntityCapsManager this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
org.jivesoftware.smackx.entitycaps.EntityCapsManager$3 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$3:
    org.jivesoftware.smackx.entitycaps.EntityCapsManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.entitycaps.EntityCapsManager$4 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$4:
    org.jivesoftware.smackx.entitycaps.EntityCapsManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.entitycaps.EntityCapsManager$5 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$5:
    org.jivesoftware.smackx.entitycaps.EntityCapsManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.entitycaps.EntityCapsManager$6 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$6:
    org.jivesoftware.smackx.entitycaps.EntityCapsManager this$0 -> this$0
    void interceptPacket(org.jivesoftware.smack.packet.Packet) -> interceptPacket
org.jivesoftware.smackx.entitycaps.EntityCapsManager$7 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$7:
    java.util.List features -> features
    java.util.List packetExtensions -> packetExtensions
    org.jivesoftware.smackx.entitycaps.EntityCapsManager this$0 -> this$0
    java.util.List val$identities -> val$identities
    java.util.List getNodeItems() -> getNodeItems
    java.util.List getNodeFeatures() -> getNodeFeatures
    java.util.List getNodeIdentities() -> getNodeIdentities
    java.util.List getNodePacketExtensions() -> getNodePacketExtensions
org.jivesoftware.smackx.entitycaps.EntityCapsManager$8 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$8:
    int compare(org.jivesoftware.smackx.FormField,org.jivesoftware.smackx.FormField) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.jivesoftware.smackx.entitycaps.EntityCapsManager$NodeVerHash -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$NodeVerHash:
    java.lang.String node -> node
    java.lang.String hash -> hash
    java.lang.String ver -> ver
    java.lang.String nodeVer -> nodeVer
    java.lang.String getNodeVer() -> getNodeVer
    java.lang.String getNode() -> getNode
    java.lang.String getHash() -> getHash
    java.lang.String getVer() -> getVer
    java.lang.String access$0(org.jivesoftware.smackx.entitycaps.EntityCapsManager$NodeVerHash) -> access$0
org.jivesoftware.smackx.entitycaps.cache.EntityCapsPersistentCache -> org.jivesoftware.smackx.entitycaps.cache.EntityCapsPersistentCache:
    void addDiscoverInfoByNodePersistent(java.lang.String,org.jivesoftware.smackx.packet.DiscoverInfo) -> addDiscoverInfoByNodePersistent
    void replay() -> replay
    void emptyCache() -> emptyCache
org.jivesoftware.smackx.entitycaps.cache.SimpleDirectoryPersistentCache -> org.jivesoftware.smackx.entitycaps.cache.SimpleDirectoryPersistentCache:
    java.io.File cacheDir -> cacheDir
    org.jivesoftware.smack.util.StringEncoder filenameEncoder -> filenameEncoder
    void addDiscoverInfoByNodePersistent(java.lang.String,org.jivesoftware.smackx.packet.DiscoverInfo) -> addDiscoverInfoByNodePersistent
    void replay() -> replay
    void emptyCache() -> emptyCache
    void writeInfoToFile(java.io.File,org.jivesoftware.smackx.packet.DiscoverInfo) -> writeInfoToFile
    org.jivesoftware.smackx.packet.DiscoverInfo restoreInfoFromFile(java.io.File) -> restoreInfoFromFile
org.jivesoftware.smackx.entitycaps.packet.CapsExtension -> org.jivesoftware.smackx.entitycaps.packet.CapsExtension:
    java.lang.String node -> node
    java.lang.String ver -> ver
    java.lang.String hash -> hash
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.lang.String getVer() -> getVer
    void setVer(java.lang.String) -> setVer
    java.lang.String getHash() -> getHash
    void setHash(java.lang.String) -> setHash
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.entitycaps.provider.CapsExtensionProvider -> org.jivesoftware.smackx.entitycaps.provider.CapsExtensionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.forward.Forwarded -> org.jivesoftware.smackx.forward.Forwarded:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    org.jivesoftware.smackx.packet.DelayInfo delay -> delay
    org.jivesoftware.smack.packet.Packet forwardedPacket -> forwardedPacket
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    org.jivesoftware.smack.packet.Packet getForwardedPacket() -> getForwardedPacket
    org.jivesoftware.smackx.packet.DelayInfo getDelayInfo() -> getDelayInfo
org.jivesoftware.smackx.forward.Forwarded$Provider -> org.jivesoftware.smackx.forward.Forwarded$Provider:
    org.jivesoftware.smackx.provider.DelayInfoProvider dip -> dip
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.muc.Affiliate -> org.jivesoftware.smackx.muc.Affiliate:
    java.lang.String jid -> jid
    java.lang.String affiliation -> affiliation
    java.lang.String role -> role
    java.lang.String nick -> nick
    java.lang.String getJid() -> getJid
    java.lang.String getAffiliation() -> getAffiliation
    java.lang.String getRole() -> getRole
    java.lang.String getNick() -> getNick
org.jivesoftware.smackx.muc.ConnectionDetachedPacketCollector -> org.jivesoftware.smackx.muc.ConnectionDetachedPacketCollector:
    int maxPackets -> maxPackets
    java.util.concurrent.ArrayBlockingQueue resultQueue -> resultQueue
    org.jivesoftware.smack.packet.Packet pollResult() -> pollResult
    org.jivesoftware.smack.packet.Packet nextResult() -> nextResult
    org.jivesoftware.smack.packet.Packet nextResult(long) -> nextResult
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.DeafOccupantInterceptor -> org.jivesoftware.smackx.muc.DeafOccupantInterceptor:
    void interceptPacket(org.jivesoftware.smack.packet.Packet) -> interceptPacket
org.jivesoftware.smackx.muc.DeafOccupantInterceptor$DeafExtension -> org.jivesoftware.smackx.muc.DeafOccupantInterceptor$DeafExtension:
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.muc.DefaultParticipantStatusListener -> org.jivesoftware.smackx.muc.DefaultParticipantStatusListener:
    void joined(java.lang.String) -> joined
    void left(java.lang.String) -> left
    void kicked(java.lang.String,java.lang.String,java.lang.String) -> kicked
    void voiceGranted(java.lang.String) -> voiceGranted
    void voiceRevoked(java.lang.String) -> voiceRevoked
    void banned(java.lang.String,java.lang.String,java.lang.String) -> banned
    void membershipGranted(java.lang.String) -> membershipGranted
    void membershipRevoked(java.lang.String) -> membershipRevoked
    void moderatorGranted(java.lang.String) -> moderatorGranted
    void moderatorRevoked(java.lang.String) -> moderatorRevoked
    void ownershipGranted(java.lang.String) -> ownershipGranted
    void ownershipRevoked(java.lang.String) -> ownershipRevoked
    void adminGranted(java.lang.String) -> adminGranted
    void adminRevoked(java.lang.String) -> adminRevoked
    void nicknameChanged(java.lang.String,java.lang.String) -> nicknameChanged
org.jivesoftware.smackx.muc.DefaultUserStatusListener -> org.jivesoftware.smackx.muc.DefaultUserStatusListener:
    void kicked(java.lang.String,java.lang.String) -> kicked
    void voiceGranted() -> voiceGranted
    void voiceRevoked() -> voiceRevoked
    void banned(java.lang.String,java.lang.String) -> banned
    void membershipGranted() -> membershipGranted
    void membershipRevoked() -> membershipRevoked
    void moderatorGranted() -> moderatorGranted
    void moderatorRevoked() -> moderatorRevoked
    void ownershipGranted() -> ownershipGranted
    void ownershipRevoked() -> ownershipRevoked
    void adminGranted() -> adminGranted
    void adminRevoked() -> adminRevoked
org.jivesoftware.smackx.muc.DiscussionHistory -> org.jivesoftware.smackx.muc.DiscussionHistory:
    int maxChars -> maxChars
    int maxStanzas -> maxStanzas
    int seconds -> seconds
    java.util.Date since -> since
    int getMaxChars() -> getMaxChars
    int getMaxStanzas() -> getMaxStanzas
    int getSeconds() -> getSeconds
    java.util.Date getSince() -> getSince
    void setMaxChars(int) -> setMaxChars
    void setMaxStanzas(int) -> setMaxStanzas
    void setSeconds(int) -> setSeconds
    void setSince(java.util.Date) -> setSince
    boolean isConfigured() -> isConfigured
    org.jivesoftware.smackx.packet.MUCInitialPresence$History getMUCHistory() -> getMUCHistory
org.jivesoftware.smackx.muc.HostedRoom -> org.jivesoftware.smackx.muc.HostedRoom:
    java.lang.String jid -> jid
    java.lang.String name -> name
    java.lang.String getJid() -> getJid
    java.lang.String getName() -> getName
org.jivesoftware.smackx.muc.InvitationListener -> org.jivesoftware.smackx.muc.InvitationListener:
    void invitationReceived(org.jivesoftware.smack.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.jivesoftware.smack.packet.Message) -> invitationReceived
org.jivesoftware.smackx.muc.InvitationRejectionListener -> org.jivesoftware.smackx.muc.InvitationRejectionListener:
    void invitationDeclined(java.lang.String,java.lang.String) -> invitationDeclined
org.jivesoftware.smackx.muc.MultiUserChat -> org.jivesoftware.smackx.muc.MultiUserChat:
    java.lang.String discoNamespace -> discoNamespace
    java.lang.String discoNode -> discoNode
    java.util.Map joinedRooms -> joinedRooms
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String room -> room
    java.lang.String subject -> subject
    java.lang.String nickname -> nickname
    boolean joined -> joined
    java.util.Map occupantsMap -> occupantsMap
    java.util.List invitationRejectionListeners -> invitationRejectionListeners
    java.util.List subjectUpdatedListeners -> subjectUpdatedListeners
    java.util.List userStatusListeners -> userStatusListeners
    java.util.List participantStatusListeners -> participantStatusListeners
    org.jivesoftware.smack.filter.PacketFilter presenceFilter -> presenceFilter
    java.util.List presenceInterceptors -> presenceInterceptors
    org.jivesoftware.smack.filter.PacketFilter messageFilter -> messageFilter
    org.jivesoftware.smackx.muc.RoomListenerMultiplexor roomListenerMultiplexor -> roomListenerMultiplexor
    org.jivesoftware.smackx.muc.ConnectionDetachedPacketCollector messageCollector -> messageCollector
    java.util.List connectionListeners -> connectionListeners
    boolean isServiceEnabled(org.jivesoftware.smack.Connection,java.lang.String) -> isServiceEnabled
    java.util.Iterator getJoinedRooms(org.jivesoftware.smack.Connection) -> getJoinedRooms
    java.util.Iterator getJoinedRooms(org.jivesoftware.smack.Connection,java.lang.String) -> getJoinedRooms
    org.jivesoftware.smackx.muc.RoomInfo getRoomInfo(org.jivesoftware.smack.Connection,java.lang.String) -> getRoomInfo
    java.util.Collection getServiceNames(org.jivesoftware.smack.Connection) -> getServiceNames
    java.util.Collection getHostedRooms(org.jivesoftware.smack.Connection,java.lang.String) -> getHostedRooms
    java.util.Collection getPublicRooms(org.jivesoftware.smack.Connection,java.lang.String,java.lang.String) -> getPublicRooms
    java.lang.String getRoom() -> getRoom
    void create(java.lang.String) -> create
    void join(java.lang.String) -> join
    void join(java.lang.String,long) -> join
    void join(java.lang.String,java.lang.String) -> join
    void join(java.lang.String,java.lang.String,org.jivesoftware.smackx.muc.DiscussionHistory,long) -> join
    boolean isJoined() -> isJoined
    void leave() -> leave
    void leaveAndWait(long) -> leaveAndWait
    org.jivesoftware.smackx.Form getConfigurationForm() -> getConfigurationForm
    void sendConfigurationForm(org.jivesoftware.smackx.Form) -> sendConfigurationForm
    org.jivesoftware.smackx.Form getRegistrationForm() -> getRegistrationForm
    void sendRegistrationForm(org.jivesoftware.smackx.Form) -> sendRegistrationForm
    void destroy(java.lang.String,java.lang.String) -> destroy
    void invite(java.lang.String,java.lang.String) -> invite
    void invite(org.jivesoftware.smack.packet.Message,java.lang.String,java.lang.String) -> invite
    void decline(org.jivesoftware.smack.Connection,java.lang.String,java.lang.String,java.lang.String) -> decline
    void addInvitationListener(org.jivesoftware.smack.Connection,org.jivesoftware.smackx.muc.InvitationListener) -> addInvitationListener
    void removeInvitationListener(org.jivesoftware.smack.Connection,org.jivesoftware.smackx.muc.InvitationListener) -> removeInvitationListener
    void addInvitationRejectionListener(org.jivesoftware.smackx.muc.InvitationRejectionListener) -> addInvitationRejectionListener
    void removeInvitationRejectionListener(org.jivesoftware.smackx.muc.InvitationRejectionListener) -> removeInvitationRejectionListener
    void fireInvitationRejectionListeners(java.lang.String,java.lang.String) -> fireInvitationRejectionListeners
    void addSubjectUpdatedListener(org.jivesoftware.smackx.muc.SubjectUpdatedListener) -> addSubjectUpdatedListener
    void removeSubjectUpdatedListener(org.jivesoftware.smackx.muc.SubjectUpdatedListener) -> removeSubjectUpdatedListener
    void fireSubjectUpdatedListeners(java.lang.String,java.lang.String) -> fireSubjectUpdatedListeners
    void addPresenceInterceptor(org.jivesoftware.smack.PacketInterceptor) -> addPresenceInterceptor
    void removePresenceInterceptor(org.jivesoftware.smack.PacketInterceptor) -> removePresenceInterceptor
    java.lang.String getSubject() -> getSubject
    java.lang.String getReservedNickname() -> getReservedNickname
    java.lang.String getNickname() -> getNickname
    void changeNickname(java.lang.String) -> changeNickname
    void changeAvailabilityStatus(java.lang.String,org.jivesoftware.smack.packet.Presence$Mode) -> changeAvailabilityStatus
    void kickParticipant(java.lang.String,java.lang.String) -> kickParticipant
    void grantVoice(java.util.Collection) -> grantVoice
    void grantVoice(java.lang.String) -> grantVoice
    void revokeVoice(java.util.Collection) -> revokeVoice
    void revokeVoice(java.lang.String) -> revokeVoice
    void banUsers(java.util.Collection) -> banUsers
    void banUser(java.lang.String,java.lang.String) -> banUser
    void grantMembership(java.util.Collection) -> grantMembership
    void grantMembership(java.lang.String) -> grantMembership
    void revokeMembership(java.util.Collection) -> revokeMembership
    void revokeMembership(java.lang.String) -> revokeMembership
    void grantModerator(java.util.Collection) -> grantModerator
    void grantModerator(java.lang.String) -> grantModerator
    void revokeModerator(java.util.Collection) -> revokeModerator
    void revokeModerator(java.lang.String) -> revokeModerator
    void grantOwnership(java.util.Collection) -> grantOwnership
    void grantOwnership(java.lang.String) -> grantOwnership
    void revokeOwnership(java.util.Collection) -> revokeOwnership
    void revokeOwnership(java.lang.String) -> revokeOwnership
    void grantAdmin(java.util.Collection) -> grantAdmin
    void grantAdmin(java.lang.String) -> grantAdmin
    void revokeAdmin(java.util.Collection) -> revokeAdmin
    void revokeAdmin(java.lang.String) -> revokeAdmin
    void changeAffiliationByOwner(java.lang.String,java.lang.String) -> changeAffiliationByOwner
    void changeAffiliationByOwner(java.util.Collection,java.lang.String) -> changeAffiliationByOwner
    void changeAffiliationByAdmin(java.lang.String,java.lang.String,java.lang.String) -> changeAffiliationByAdmin
    void changeAffiliationByAdmin(java.util.Collection,java.lang.String) -> changeAffiliationByAdmin
    void changeRole(java.lang.String,java.lang.String,java.lang.String) -> changeRole
    void changeRole(java.util.Collection,java.lang.String) -> changeRole
    int getOccupantsCount() -> getOccupantsCount
    java.util.Iterator getOccupants() -> getOccupants
    org.jivesoftware.smack.packet.Presence getOccupantPresence(java.lang.String) -> getOccupantPresence
    org.jivesoftware.smackx.muc.Occupant getOccupant(java.lang.String) -> getOccupant
    void addParticipantListener(org.jivesoftware.smack.PacketListener) -> addParticipantListener
    void removeParticipantListener(org.jivesoftware.smack.PacketListener) -> removeParticipantListener
    java.util.Collection getOwners() -> getOwners
    java.util.Collection getAdmins() -> getAdmins
    java.util.Collection getMembers() -> getMembers
    java.util.Collection getOutcasts() -> getOutcasts
    java.util.Collection getAffiliatesByOwner(java.lang.String) -> getAffiliatesByOwner
    java.util.Collection getAffiliatesByAdmin(java.lang.String) -> getAffiliatesByAdmin
    java.util.Collection getModerators() -> getModerators
    java.util.Collection getParticipants() -> getParticipants
    java.util.Collection getOccupants(java.lang.String) -> getOccupants
    void sendMessage(java.lang.String) -> sendMessage
    org.jivesoftware.smack.Chat createPrivateChat(java.lang.String,org.jivesoftware.smack.MessageListener) -> createPrivateChat
    org.jivesoftware.smack.packet.Message createMessage() -> createMessage
    void sendMessage(org.jivesoftware.smack.packet.Message) -> sendMessage
    org.jivesoftware.smack.packet.Message pollMessage() -> pollMessage
    org.jivesoftware.smack.packet.Message nextMessage() -> nextMessage
    org.jivesoftware.smack.packet.Message nextMessage(long) -> nextMessage
    void addMessageListener(org.jivesoftware.smack.PacketListener) -> addMessageListener
    void removeMessageListener(org.jivesoftware.smack.PacketListener) -> removeMessageListener
    void changeSubject(java.lang.String) -> changeSubject
    void userHasJoined() -> userHasJoined
    void userHasLeft() -> userHasLeft
    org.jivesoftware.smackx.packet.MUCUser getMUCUserExtension(org.jivesoftware.smack.packet.Packet) -> getMUCUserExtension
    void addUserStatusListener(org.jivesoftware.smackx.muc.UserStatusListener) -> addUserStatusListener
    void removeUserStatusListener(org.jivesoftware.smackx.muc.UserStatusListener) -> removeUserStatusListener
    void fireUserStatusListeners(java.lang.String,java.lang.Object[]) -> fireUserStatusListeners
    void addParticipantStatusListener(org.jivesoftware.smackx.muc.ParticipantStatusListener) -> addParticipantStatusListener
    void removeParticipantStatusListener(org.jivesoftware.smackx.muc.ParticipantStatusListener) -> removeParticipantStatusListener
    void fireParticipantStatusListeners(java.lang.String,java.util.List) -> fireParticipantStatusListeners
    void init() -> init
    void checkRoleModifications(java.lang.String,java.lang.String,boolean,java.lang.String) -> checkRoleModifications
    void checkAffiliationModifications(java.lang.String,java.lang.String,boolean,java.lang.String) -> checkAffiliationModifications
    void checkPresenceCode(java.lang.String,boolean,org.jivesoftware.smackx.packet.MUCUser,java.lang.String) -> checkPresenceCode
    void cleanup() -> cleanup
    void finalize() -> finalize
    java.util.Iterator access$0(org.jivesoftware.smack.Connection) -> access$0
    void access$1(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String) -> access$1
    void access$2(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,java.lang.String) -> access$2
    java.lang.String access$3(org.jivesoftware.smackx.muc.MultiUserChat) -> access$3
    java.lang.String access$4(org.jivesoftware.smackx.muc.MultiUserChat) -> access$4
    java.util.Map access$5(org.jivesoftware.smackx.muc.MultiUserChat) -> access$5
    org.jivesoftware.smackx.packet.MUCUser access$6(org.jivesoftware.smackx.muc.MultiUserChat,org.jivesoftware.smack.packet.Packet) -> access$6
    void access$7(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,java.lang.String,boolean,java.lang.String) -> access$7
    void access$8(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,java.lang.String,boolean,java.lang.String) -> access$8
    void access$9(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,java.util.List) -> access$9
    void access$10(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,boolean,org.jivesoftware.smackx.packet.MUCUser,java.lang.String) -> access$10
    void access$11(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,java.lang.String) -> access$11
org.jivesoftware.smackx.muc.MultiUserChat$1 -> org.jivesoftware.smackx.muc.MultiUserChat$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.muc.MultiUserChat$1$1 -> org.jivesoftware.smackx.muc.MultiUserChat$1$1:
    org.jivesoftware.smackx.muc.MultiUserChat$1 this$1 -> this$1
    org.jivesoftware.smack.Connection val$connection -> val$connection
    java.util.List getNodeItems() -> getNodeItems
    java.util.List getNodeFeatures() -> getNodeFeatures
    java.util.List getNodeIdentities() -> getNodeIdentities
    java.util.List getNodePacketExtensions() -> getNodePacketExtensions
org.jivesoftware.smackx.muc.MultiUserChat$2 -> org.jivesoftware.smackx.muc.MultiUserChat$2:
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.muc.MultiUserChat$3 -> org.jivesoftware.smackx.muc.MultiUserChat$3:
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    java.lang.String val$subject -> val$subject
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.muc.MultiUserChat$4 -> org.jivesoftware.smackx.muc.MultiUserChat$4:
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.muc.MultiUserChat$5 -> org.jivesoftware.smackx.muc.MultiUserChat$5:
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.MultiUserChat$6 -> org.jivesoftware.smackx.muc.MultiUserChat$6:
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.MultiUserChat$7 -> org.jivesoftware.smackx.muc.MultiUserChat$7:
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor -> org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor:
    java.util.Map monitors -> monitors
    java.util.List invitationsListeners -> invitationsListeners
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.filter.PacketFilter invitationFilter -> invitationFilter
    org.jivesoftware.smack.PacketListener invitationPacketListener -> invitationPacketListener
    org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor getInvitationsMonitor(org.jivesoftware.smack.Connection) -> getInvitationsMonitor
    void addInvitationListener(org.jivesoftware.smackx.muc.InvitationListener) -> addInvitationListener
    void removeInvitationListener(org.jivesoftware.smackx.muc.InvitationListener) -> removeInvitationListener
    void fireInvitationListeners(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.jivesoftware.smack.packet.Message) -> fireInvitationListeners
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void init() -> init
    void cancel() -> cancel
    void access$0(org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.jivesoftware.smack.packet.Message) -> access$0
org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor$1 -> org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor$1:
    org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor this$1 -> this$1
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.Occupant -> org.jivesoftware.smackx.muc.Occupant:
    java.lang.String affiliation -> affiliation
    java.lang.String role -> role
    java.lang.String jid -> jid
    java.lang.String nick -> nick
    java.lang.String getJid() -> getJid
    java.lang.String getAffiliation() -> getAffiliation
    java.lang.String getRole() -> getRole
    java.lang.String getNick() -> getNick
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smackx.muc.PacketMultiplexListener -> org.jivesoftware.smackx.muc.PacketMultiplexListener:
    org.jivesoftware.smack.filter.PacketFilter MESSAGE_FILTER -> MESSAGE_FILTER
    org.jivesoftware.smack.filter.PacketFilter PRESENCE_FILTER -> PRESENCE_FILTER
    org.jivesoftware.smack.filter.PacketFilter SUBJECT_FILTER -> SUBJECT_FILTER
    org.jivesoftware.smack.filter.PacketFilter DECLINES_FILTER -> DECLINES_FILTER
    org.jivesoftware.smackx.muc.ConnectionDetachedPacketCollector messageCollector -> messageCollector
    org.jivesoftware.smack.PacketListener presenceListener -> presenceListener
    org.jivesoftware.smack.PacketListener subjectListener -> subjectListener
    org.jivesoftware.smack.PacketListener declinesListener -> declinesListener
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.PacketMultiplexListener$1 -> org.jivesoftware.smackx.muc.PacketMultiplexListener$1:
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.muc.ParticipantStatusListener -> org.jivesoftware.smackx.muc.ParticipantStatusListener:
    void joined(java.lang.String) -> joined
    void left(java.lang.String) -> left
    void kicked(java.lang.String,java.lang.String,java.lang.String) -> kicked
    void voiceGranted(java.lang.String) -> voiceGranted
    void voiceRevoked(java.lang.String) -> voiceRevoked
    void banned(java.lang.String,java.lang.String,java.lang.String) -> banned
    void membershipGranted(java.lang.String) -> membershipGranted
    void membershipRevoked(java.lang.String) -> membershipRevoked
    void moderatorGranted(java.lang.String) -> moderatorGranted
    void moderatorRevoked(java.lang.String) -> moderatorRevoked
    void ownershipGranted(java.lang.String) -> ownershipGranted
    void ownershipRevoked(java.lang.String) -> ownershipRevoked
    void adminGranted(java.lang.String) -> adminGranted
    void adminRevoked(java.lang.String) -> adminRevoked
    void nicknameChanged(java.lang.String,java.lang.String) -> nicknameChanged
org.jivesoftware.smackx.muc.RoomInfo -> org.jivesoftware.smackx.muc.RoomInfo:
    java.lang.String room -> room
    java.lang.String description -> description
    java.lang.String subject -> subject
    int occupantsCount -> occupantsCount
    int affiliationsCount -> affiliationsCount
    boolean membersOnly -> membersOnly
    boolean moderated -> moderated
    boolean nonanonymous -> nonanonymous
    boolean passwordProtected -> passwordProtected
    boolean persistent -> persistent
    boolean allowInvites -> allowInvites
    boolean publicRoom -> publicRoom
    java.lang.String roomName -> roomName
    int maxUsers -> maxUsers
    java.lang.String owner -> owner
    java.lang.String getRoom() -> getRoom
    java.lang.String getRoomName() -> getRoomName
    java.lang.String getOwner() -> getOwner
    java.lang.String getDescription() -> getDescription
    java.lang.String getSubject() -> getSubject
    int getOccupantsCount() -> getOccupantsCount
    int getAffiliationsCount() -> getAffiliationsCount
    boolean isMembersOnly() -> isMembersOnly
    boolean isModerated() -> isModerated
    boolean isNonanonymous() -> isNonanonymous
    boolean isPasswordProtected() -> isPasswordProtected
    boolean isPersistent() -> isPersistent
    boolean isPublic() -> isPublic
    boolean isAllowInvites() -> isAllowInvites
    int getMaxUsers() -> getMaxUsers
org.jivesoftware.smackx.muc.RoomListenerMultiplexor -> org.jivesoftware.smackx.muc.RoomListenerMultiplexor:
    java.util.Map monitors -> monitors
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexFilter filter -> filter
    org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexListener listener -> listener
    org.jivesoftware.smackx.muc.RoomListenerMultiplexor getRoomMultiplexor(org.jivesoftware.smack.Connection) -> getRoomMultiplexor
    void addRoom(java.lang.String,org.jivesoftware.smackx.muc.PacketMultiplexListener) -> addRoom
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void init() -> init
    void removeRoom(java.lang.String) -> removeRoom
    void cancel() -> cancel
org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexFilter -> org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexFilter:
    java.util.Map roomAddressTable -> roomAddressTable
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    void addRoom(java.lang.String) -> addRoom
    void removeRoom(java.lang.String) -> removeRoom
org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexListener -> org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexListener:
    java.util.Map roomListenersByAddress -> roomListenersByAddress
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void addRoom(java.lang.String,org.jivesoftware.smackx.muc.PacketMultiplexListener) -> addRoom
    void removeRoom(java.lang.String) -> removeRoom
org.jivesoftware.smackx.muc.SubjectUpdatedListener -> org.jivesoftware.smackx.muc.SubjectUpdatedListener:
    void subjectUpdated(java.lang.String,java.lang.String) -> subjectUpdated
org.jivesoftware.smackx.muc.UserStatusListener -> org.jivesoftware.smackx.muc.UserStatusListener:
    void kicked(java.lang.String,java.lang.String) -> kicked
    void voiceGranted() -> voiceGranted
    void voiceRevoked() -> voiceRevoked
    void banned(java.lang.String,java.lang.String) -> banned
    void membershipGranted() -> membershipGranted
    void membershipRevoked() -> membershipRevoked
    void moderatorGranted() -> moderatorGranted
    void moderatorRevoked() -> moderatorRevoked
    void ownershipGranted() -> ownershipGranted
    void ownershipRevoked() -> ownershipRevoked
    void adminGranted() -> adminGranted
    void adminRevoked() -> adminRevoked
org.jivesoftware.smackx.packet.AttentionExtension -> org.jivesoftware.smackx.packet.AttentionExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.AttentionExtension$Provider -> org.jivesoftware.smackx.packet.AttentionExtension$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.packet.ChatStateExtension -> org.jivesoftware.smackx.packet.ChatStateExtension:
    org.jivesoftware.smackx.ChatState state -> state
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.ChatStateExtension$Provider -> org.jivesoftware.smackx.packet.ChatStateExtension$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.packet.DataForm -> org.jivesoftware.smackx.packet.DataForm:
    java.lang.String type -> type
    java.lang.String title -> title
    java.util.List instructions -> instructions
    org.jivesoftware.smackx.packet.DataForm$ReportedData reportedData -> reportedData
    java.util.List items -> items
    java.util.List fields -> fields
    java.lang.String getType() -> getType
    java.lang.String getTitle() -> getTitle
    java.util.Iterator getInstructions() -> getInstructions
    org.jivesoftware.smackx.packet.DataForm$ReportedData getReportedData() -> getReportedData
    java.util.Iterator getItems() -> getItems
    java.util.Iterator getFields() -> getFields
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    void setTitle(java.lang.String) -> setTitle
    void setInstructions(java.util.List) -> setInstructions
    void setReportedData(org.jivesoftware.smackx.packet.DataForm$ReportedData) -> setReportedData
    void addField(org.jivesoftware.smackx.FormField) -> addField
    void addInstruction(java.lang.String) -> addInstruction
    void addItem(org.jivesoftware.smackx.packet.DataForm$Item) -> addItem
    boolean hasHiddenFormTypeField() -> hasHiddenFormTypeField
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DataForm$Item -> org.jivesoftware.smackx.packet.DataForm$Item:
    java.util.List fields -> fields
    java.util.Iterator getFields() -> getFields
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DataForm$ReportedData -> org.jivesoftware.smackx.packet.DataForm$ReportedData:
    java.util.List fields -> fields
    java.util.Iterator getFields() -> getFields
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DefaultPrivateData -> org.jivesoftware.smackx.packet.DefaultPrivateData:
    java.lang.String elementName -> elementName
    java.lang.String namespace -> namespace
    java.util.Map map -> map
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.util.Iterator getNames() -> getNames
    java.lang.String getValue(java.lang.String) -> getValue
    void setValue(java.lang.String,java.lang.String) -> setValue
org.jivesoftware.smackx.packet.DelayInfo -> org.jivesoftware.smackx.packet.DelayInfo:
    org.jivesoftware.smackx.packet.DelayInformation wrappedInfo -> wrappedInfo
    java.lang.String getFrom() -> getFrom
    java.lang.String getReason() -> getReason
    java.util.Date getStamp() -> getStamp
    void setFrom(java.lang.String) -> setFrom
    void setReason(java.lang.String) -> setReason
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DelayInformation -> org.jivesoftware.smackx.packet.DelayInformation:
    java.text.DateFormat XEP_0091_UTC_FORMAT -> XEP_0091_UTC_FORMAT
    java.util.Date stamp -> stamp
    java.lang.String from -> from
    java.lang.String reason -> reason
    java.lang.String getFrom() -> getFrom
    void setFrom(java.lang.String) -> setFrom
    java.util.Date getStamp() -> getStamp
    java.lang.String getReason() -> getReason
    void setReason(java.lang.String) -> setReason
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DiscoverInfo -> org.jivesoftware.smackx.packet.DiscoverInfo:
    java.lang.String NAMESPACE -> NAMESPACE
    java.util.List features -> features
    java.util.List identities -> identities
    java.lang.String node -> node
    void addFeature(java.lang.String) -> addFeature
    void addFeatures(java.util.Collection) -> addFeatures
    void addFeature(org.jivesoftware.smackx.packet.DiscoverInfo$Feature) -> addFeature
    java.util.Iterator getFeatures() -> getFeatures
    void addIdentity(org.jivesoftware.smackx.packet.DiscoverInfo$Identity) -> addIdentity
    void addIdentities(java.util.Collection) -> addIdentities
    java.util.Iterator getIdentities() -> getIdentities
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    boolean containsFeature(java.lang.String) -> containsFeature
    java.lang.String getChildElementXML() -> getChildElementXML
    boolean containsDuplicateIdentities() -> containsDuplicateIdentities
    boolean containsDuplicateFeatures() -> containsDuplicateFeatures
org.jivesoftware.smackx.packet.DiscoverInfo$Feature -> org.jivesoftware.smackx.packet.DiscoverInfo$Feature:
    java.lang.String variable -> variable
    java.lang.String getVar() -> getVar
    java.lang.String toXML() -> toXML
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smackx.packet.DiscoverInfo$Identity -> org.jivesoftware.smackx.packet.DiscoverInfo$Identity:
    java.lang.String category -> category
    java.lang.String name -> name
    java.lang.String type -> type
    java.lang.String lang -> lang
    java.lang.String getCategory() -> getCategory
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    void setLanguage(java.lang.String) -> setLanguage
    java.lang.String getLanguage() -> getLanguage
    java.lang.String toXML() -> toXML
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.jivesoftware.smackx.packet.DiscoverInfo$Identity) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
org.jivesoftware.smackx.packet.DiscoverItems -> org.jivesoftware.smackx.packet.DiscoverItems:
    java.lang.String NAMESPACE -> NAMESPACE
    java.util.List items -> items
    java.lang.String node -> node
    void addItem(org.jivesoftware.smackx.packet.DiscoverItems$Item) -> addItem
    void addItems(java.util.Collection) -> addItems
    java.util.Iterator getItems() -> getItems
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.DiscoverItems$Item -> org.jivesoftware.smackx.packet.DiscoverItems$Item:
    java.lang.String UPDATE_ACTION -> UPDATE_ACTION
    java.lang.String REMOVE_ACTION -> REMOVE_ACTION
    java.lang.String entityID -> entityID
    java.lang.String name -> name
    java.lang.String node -> node
    java.lang.String action -> action
    java.lang.String getEntityID() -> getEntityID
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.lang.String getAction() -> getAction
    void setAction(java.lang.String) -> setAction
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.Header -> org.jivesoftware.smackx.packet.Header:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.HeadersExtension -> org.jivesoftware.smackx.packet.HeadersExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.util.Collection headers -> headers
    java.util.Collection getHeaders() -> getHeaders
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.LastActivity -> org.jivesoftware.smackx.packet.LastActivity:
    java.lang.String NAMESPACE -> NAMESPACE
    long lastActivity -> lastActivity
    java.lang.String message -> message
    java.lang.String getChildElementXML() -> getChildElementXML
    void setLastActivity(long) -> setLastActivity
    void setMessage(java.lang.String) -> setMessage
    long getIdleTime() -> getIdleTime
    java.lang.String getStatusMessage() -> getStatusMessage
    org.jivesoftware.smackx.packet.LastActivity getLastActivity(org.jivesoftware.smack.Connection,java.lang.String) -> getLastActivity
    void access$0(org.jivesoftware.smackx.packet.LastActivity,java.lang.String) -> access$0
org.jivesoftware.smackx.packet.LastActivity$Provider -> org.jivesoftware.smackx.packet.LastActivity$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.packet.MUCAdmin -> org.jivesoftware.smackx.packet.MUCAdmin:
    java.util.List items -> items
    java.util.Iterator getItems() -> getItems
    void addItem(org.jivesoftware.smackx.packet.MUCAdmin$Item) -> addItem
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.MUCAdmin$Item -> org.jivesoftware.smackx.packet.MUCAdmin$Item:
    java.lang.String actor -> actor
    java.lang.String reason -> reason
    java.lang.String affiliation -> affiliation
    java.lang.String jid -> jid
    java.lang.String nick -> nick
    java.lang.String role -> role
    java.lang.String getActor() -> getActor
    java.lang.String getReason() -> getReason
    java.lang.String getAffiliation() -> getAffiliation
    java.lang.String getJid() -> getJid
    java.lang.String getNick() -> getNick
    java.lang.String getRole() -> getRole
    void setActor(java.lang.String) -> setActor
    void setReason(java.lang.String) -> setReason
    void setJid(java.lang.String) -> setJid
    void setNick(java.lang.String) -> setNick
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCCreatePresence -> org.jivesoftware.smackx.packet.MUCCreatePresence:
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCInitialPresence -> org.jivesoftware.smackx.packet.MUCInitialPresence:
    java.lang.String password -> password
    org.jivesoftware.smackx.packet.MUCInitialPresence$History history -> history
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    org.jivesoftware.smackx.packet.MUCInitialPresence$History getHistory() -> getHistory
    java.lang.String getPassword() -> getPassword
    void setHistory(org.jivesoftware.smackx.packet.MUCInitialPresence$History) -> setHistory
    void setPassword(java.lang.String) -> setPassword
org.jivesoftware.smackx.packet.MUCInitialPresence$History -> org.jivesoftware.smackx.packet.MUCInitialPresence$History:
    int maxChars -> maxChars
    int maxStanzas -> maxStanzas
    int seconds -> seconds
    java.util.Date since -> since
    int getMaxChars() -> getMaxChars
    int getMaxStanzas() -> getMaxStanzas
    int getSeconds() -> getSeconds
    java.util.Date getSince() -> getSince
    void setMaxChars(int) -> setMaxChars
    void setMaxStanzas(int) -> setMaxStanzas
    void setSeconds(int) -> setSeconds
    void setSince(java.util.Date) -> setSince
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCJoinPresence -> org.jivesoftware.smackx.packet.MUCJoinPresence:
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCOwner -> org.jivesoftware.smackx.packet.MUCOwner:
    java.util.List items -> items
    org.jivesoftware.smackx.packet.MUCOwner$Destroy destroy -> destroy
    java.util.Iterator getItems() -> getItems
    org.jivesoftware.smackx.packet.MUCOwner$Destroy getDestroy() -> getDestroy
    void setDestroy(org.jivesoftware.smackx.packet.MUCOwner$Destroy) -> setDestroy
    void addItem(org.jivesoftware.smackx.packet.MUCOwner$Item) -> addItem
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.MUCOwner$Destroy -> org.jivesoftware.smackx.packet.MUCOwner$Destroy:
    java.lang.String reason -> reason
    java.lang.String jid -> jid
    java.lang.String getJid() -> getJid
    java.lang.String getReason() -> getReason
    void setJid(java.lang.String) -> setJid
    void setReason(java.lang.String) -> setReason
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCOwner$Item -> org.jivesoftware.smackx.packet.MUCOwner$Item:
    java.lang.String actor -> actor
    java.lang.String reason -> reason
    java.lang.String affiliation -> affiliation
    java.lang.String jid -> jid
    java.lang.String nick -> nick
    java.lang.String role -> role
    java.lang.String getActor() -> getActor
    java.lang.String getReason() -> getReason
    java.lang.String getAffiliation() -> getAffiliation
    java.lang.String getJid() -> getJid
    java.lang.String getNick() -> getNick
    java.lang.String getRole() -> getRole
    void setActor(java.lang.String) -> setActor
    void setReason(java.lang.String) -> setReason
    void setJid(java.lang.String) -> setJid
    void setNick(java.lang.String) -> setNick
    void setRole(java.lang.String) -> setRole
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser -> org.jivesoftware.smackx.packet.MUCUser:
    org.jivesoftware.smackx.packet.MUCUser$Invite invite -> invite
    org.jivesoftware.smackx.packet.MUCUser$Decline decline -> decline
    org.jivesoftware.smackx.packet.MUCUser$Apply apply -> apply
    org.jivesoftware.smackx.packet.MUCUser$Accept accept -> accept
    org.jivesoftware.smackx.packet.MUCUser$Item item -> item
    java.lang.String password -> password
    org.jivesoftware.smackx.packet.MUCUser$Status status -> status
    org.jivesoftware.smackx.packet.MUCUser$Destroy destroy -> destroy
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    org.jivesoftware.smackx.packet.MUCUser$Invite getInvite() -> getInvite
    org.jivesoftware.smackx.packet.MUCUser$Apply getApply() -> getApply
    org.jivesoftware.smackx.packet.MUCUser$Decline getDecline() -> getDecline
    org.jivesoftware.smackx.packet.MUCUser$Item getItem() -> getItem
    java.lang.String getPassword() -> getPassword
    org.jivesoftware.smackx.packet.MUCUser$Status getStatus() -> getStatus
    org.jivesoftware.smackx.packet.MUCUser$Destroy getDestroy() -> getDestroy
    void setInvite(org.jivesoftware.smackx.packet.MUCUser$Invite) -> setInvite
    void setApply(org.jivesoftware.smackx.packet.MUCUser$Apply) -> setApply
    org.jivesoftware.smackx.packet.MUCUser$Accept getAccept() -> getAccept
    void setAccept(org.jivesoftware.smackx.packet.MUCUser$Accept) -> setAccept
    void setDecline(org.jivesoftware.smackx.packet.MUCUser$Decline) -> setDecline
    void setItem(org.jivesoftware.smackx.packet.MUCUser$Item) -> setItem
    void setPassword(java.lang.String) -> setPassword
    void setStatus(org.jivesoftware.smackx.packet.MUCUser$Status) -> setStatus
    void setDestroy(org.jivesoftware.smackx.packet.MUCUser$Destroy) -> setDestroy
org.jivesoftware.smackx.packet.MUCUser$Accept -> org.jivesoftware.smackx.packet.MUCUser$Accept:
    java.lang.String reason -> reason
    java.lang.String from -> from
    java.lang.String to -> to
    java.lang.String fromNick -> fromNick
    java.lang.String getFrom() -> getFrom
    java.lang.String getReason() -> getReason
    java.lang.String getTo() -> getTo
    void setFrom(java.lang.String) -> setFrom
    void setReason(java.lang.String) -> setReason
    void setTo(java.lang.String) -> setTo
    java.lang.String getFromNick() -> getFromNick
    void setFromNick(java.lang.String) -> setFromNick
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$Apply -> org.jivesoftware.smackx.packet.MUCUser$Apply:
    java.lang.String reason -> reason
    java.lang.String from -> from
    java.lang.String to -> to
    java.lang.String toNick -> toNick
    java.lang.String getFrom() -> getFrom
    java.lang.String getReason() -> getReason
    java.lang.String getTo() -> getTo
    void setFrom(java.lang.String) -> setFrom
    void setReason(java.lang.String) -> setReason
    void setTo(java.lang.String) -> setTo
    java.lang.String getToNick() -> getToNick
    void setToNick(java.lang.String) -> setToNick
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$Decline -> org.jivesoftware.smackx.packet.MUCUser$Decline:
    java.lang.String reason -> reason
    java.lang.String from -> from
    java.lang.String to -> to
    java.lang.String fromNick -> fromNick
    org.jivesoftware.smackx.packet.MUCUser$MucType type -> type
    java.lang.String getFrom() -> getFrom
    java.lang.String getReason() -> getReason
    java.lang.String getTo() -> getTo
    void setFrom(java.lang.String) -> setFrom
    void setReason(java.lang.String) -> setReason
    void setTo(java.lang.String) -> setTo
    java.lang.String getFromNick() -> getFromNick
    void setFromNick(java.lang.String) -> setFromNick
    org.jivesoftware.smackx.packet.MUCUser$MucType getType() -> getType
    void setType(org.jivesoftware.smackx.packet.MUCUser$MucType) -> setType
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$Destroy -> org.jivesoftware.smackx.packet.MUCUser$Destroy:
    java.lang.String reason -> reason
    java.lang.String jid -> jid
    java.lang.String getJid() -> getJid
    java.lang.String getReason() -> getReason
    void setJid(java.lang.String) -> setJid
    void setReason(java.lang.String) -> setReason
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$Invite -> org.jivesoftware.smackx.packet.MUCUser$Invite:
    java.lang.String reason -> reason
    java.lang.String from -> from
    java.lang.String to -> to
    java.lang.String getFrom() -> getFrom
    java.lang.String getReason() -> getReason
    java.lang.String getTo() -> getTo
    void setFrom(java.lang.String) -> setFrom
    void setReason(java.lang.String) -> setReason
    void setTo(java.lang.String) -> setTo
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$Item -> org.jivesoftware.smackx.packet.MUCUser$Item:
    java.lang.String actor -> actor
    java.lang.String reason -> reason
    java.lang.String affiliation -> affiliation
    java.lang.String jid -> jid
    java.lang.String nick -> nick
    java.lang.String role -> role
    java.lang.String getActor() -> getActor
    java.lang.String getReason() -> getReason
    java.lang.String getAffiliation() -> getAffiliation
    java.lang.String getJid() -> getJid
    java.lang.String getNick() -> getNick
    java.lang.String getRole() -> getRole
    void setActor(java.lang.String) -> setActor
    void setReason(java.lang.String) -> setReason
    void setJid(java.lang.String) -> setJid
    void setNick(java.lang.String) -> setNick
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$MucType -> org.jivesoftware.smackx.packet.MUCUser$MucType:
    org.jivesoftware.smackx.packet.MUCUser$MucType Invite -> Invite
    org.jivesoftware.smackx.packet.MUCUser$MucType Apply -> Apply
    org.jivesoftware.smackx.packet.MUCUser$MucType[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smackx.packet.MUCUser$MucType[] values() -> values
    org.jivesoftware.smackx.packet.MUCUser$MucType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.packet.MUCUser$Status -> org.jivesoftware.smackx.packet.MUCUser$Status:
    java.lang.String code -> code
    java.lang.String getCode() -> getCode
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MessageEvent -> org.jivesoftware.smackx.packet.MessageEvent:
    java.lang.String OFFLINE -> OFFLINE
    java.lang.String COMPOSING -> COMPOSING
    java.lang.String DISPLAYED -> DISPLAYED
    java.lang.String DELIVERED -> DELIVERED
    java.lang.String CANCELLED -> CANCELLED
    boolean offline -> offline
    boolean delivered -> delivered
    boolean displayed -> displayed
    boolean composing -> composing
    boolean cancelled -> cancelled
    java.lang.String packetID -> packetID
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    boolean isComposing() -> isComposing
    boolean isDelivered() -> isDelivered
    boolean isDisplayed() -> isDisplayed
    boolean isOffline() -> isOffline
    boolean isCancelled() -> isCancelled
    java.lang.String getPacketID() -> getPacketID
    java.util.Iterator getEventTypes() -> getEventTypes
    void setComposing(boolean) -> setComposing
    void setDelivered(boolean) -> setDelivered
    void setDisplayed(boolean) -> setDisplayed
    void setOffline(boolean) -> setOffline
    void setCancelled(boolean) -> setCancelled
    void setPacketID(java.lang.String) -> setPacketID
    boolean isMessageEventRequest() -> isMessageEventRequest
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MultipleAddresses -> org.jivesoftware.smackx.packet.MultipleAddresses:
    java.lang.String BCC -> BCC
    java.lang.String CC -> CC
    java.lang.String NO_REPLY -> NO_REPLY
    java.lang.String REPLY_ROOM -> REPLY_ROOM
    java.lang.String REPLY_TO -> REPLY_TO
    java.lang.String TO -> TO
    java.util.List addresses -> addresses
    void addAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String) -> addAddress
    void setNoReply() -> setNoReply
    java.util.List getAddressesOfType(java.lang.String) -> getAddressesOfType
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MultipleAddresses$Address -> org.jivesoftware.smackx.packet.MultipleAddresses$Address:
    java.lang.String type -> type
    java.lang.String jid -> jid
    java.lang.String node -> node
    java.lang.String description -> description
    boolean delivered -> delivered
    java.lang.String uri -> uri
    java.lang.String getType() -> getType
    java.lang.String getJid() -> getJid
    void setJid(java.lang.String) -> setJid
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    boolean isDelivered() -> isDelivered
    void setDelivered(boolean) -> setDelivered
    java.lang.String getUri() -> getUri
    void setUri(java.lang.String) -> setUri
    java.lang.String toXML() -> toXML
    void access$1(org.jivesoftware.smackx.packet.MultipleAddresses$Address,java.lang.String) -> access$1
    void access$2(org.jivesoftware.smackx.packet.MultipleAddresses$Address,java.lang.String) -> access$2
    void access$3(org.jivesoftware.smackx.packet.MultipleAddresses$Address,java.lang.String) -> access$3
    void access$4(org.jivesoftware.smackx.packet.MultipleAddresses$Address,boolean) -> access$4
    void access$5(org.jivesoftware.smackx.packet.MultipleAddresses$Address,java.lang.String) -> access$5
    java.lang.String access$6(org.jivesoftware.smackx.packet.MultipleAddresses$Address) -> access$6
org.jivesoftware.smackx.packet.Nick -> org.jivesoftware.smackx.packet.Nick:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String name -> name
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.Nick$Provider -> org.jivesoftware.smackx.packet.Nick$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.packet.OfflineMessageInfo -> org.jivesoftware.smackx.packet.OfflineMessageInfo:
    java.lang.String node -> node
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.OfflineMessageInfo$Provider -> org.jivesoftware.smackx.packet.OfflineMessageInfo$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.packet.OfflineMessageRequest -> org.jivesoftware.smackx.packet.OfflineMessageRequest:
    java.util.List items -> items
    boolean purge -> purge
    boolean fetch -> fetch
    java.util.Iterator getItems() -> getItems
    void addItem(org.jivesoftware.smackx.packet.OfflineMessageRequest$Item) -> addItem
    boolean isPurge() -> isPurge
    void setPurge(boolean) -> setPurge
    boolean isFetch() -> isFetch
    void setFetch(boolean) -> setFetch
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.OfflineMessageRequest$Item -> org.jivesoftware.smackx.packet.OfflineMessageRequest$Item:
    java.lang.String action -> action
    java.lang.String jid -> jid
    java.lang.String node -> node
    java.lang.String getNode() -> getNode
    java.lang.String getAction() -> getAction
    void setAction(java.lang.String) -> setAction
    java.lang.String getJid() -> getJid
    void setJid(java.lang.String) -> setJid
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.OfflineMessageRequest$Provider -> org.jivesoftware.smackx.packet.OfflineMessageRequest$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.packet.OfflineMessageRequest$Item parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
org.jivesoftware.smackx.packet.PrivateData -> org.jivesoftware.smackx.packet.PrivateData:
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.RosterExchange -> org.jivesoftware.smackx.packet.RosterExchange:
    java.util.List remoteRosterEntries -> remoteRosterEntries
    void addRosterEntry(org.jivesoftware.smack.RosterEntry) -> addRosterEntry
    void addRosterEntry(org.jivesoftware.smackx.RemoteRosterEntry) -> addRosterEntry
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.util.Iterator getRosterEntries() -> getRosterEntries
    int getEntryCount() -> getEntryCount
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.SharedGroupsInfo -> org.jivesoftware.smackx.packet.SharedGroupsInfo:
    java.util.List groups -> groups
    java.util.List getGroups() -> getGroups
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.SharedGroupsInfo$Provider -> org.jivesoftware.smackx.packet.SharedGroupsInfo$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.packet.StreamInitiation -> org.jivesoftware.smackx.packet.StreamInitiation:
    java.lang.String id -> id
    java.lang.String mimeType -> mimeType
    org.jivesoftware.smackx.packet.StreamInitiation$File file -> file
    org.jivesoftware.smackx.packet.StreamInitiation$Feature featureNegotiation -> featureNegotiation
    void setSesssionID(java.lang.String) -> setSesssionID
    java.lang.String getSessionID() -> getSessionID
    void setMimeType(java.lang.String) -> setMimeType
    java.lang.String getMimeType() -> getMimeType
    void setFile(org.jivesoftware.smackx.packet.StreamInitiation$File) -> setFile
    org.jivesoftware.smackx.packet.StreamInitiation$File getFile() -> getFile
    void setFeatureNegotiationForm(org.jivesoftware.smackx.packet.DataForm) -> setFeatureNegotiationForm
    org.jivesoftware.smackx.packet.DataForm getFeatureNegotiationForm() -> getFeatureNegotiationForm
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.StreamInitiation$Feature -> org.jivesoftware.smackx.packet.StreamInitiation$Feature:
    org.jivesoftware.smackx.packet.DataForm data -> data
    org.jivesoftware.smackx.packet.StreamInitiation this$0 -> this$0
    org.jivesoftware.smackx.packet.DataForm getData() -> getData
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getElementName() -> getElementName
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.StreamInitiation$File -> org.jivesoftware.smackx.packet.StreamInitiation$File:
    java.lang.String name -> name
    long size -> size
    java.lang.String hash -> hash
    java.util.Date date -> date
    java.lang.String desc -> desc
    boolean isRanged -> isRanged
    java.lang.String getName() -> getName
    long getSize() -> getSize
    void setHash(java.lang.String) -> setHash
    java.lang.String getHash() -> getHash
    void setDate(java.util.Date) -> setDate
    java.util.Date getDate() -> getDate
    void setDesc(java.lang.String) -> setDesc
    java.lang.String getDesc() -> getDesc
    void setRanged(boolean) -> setRanged
    boolean isRanged() -> isRanged
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.Time -> org.jivesoftware.smackx.packet.Time:
    java.text.SimpleDateFormat utcFormat -> utcFormat
    java.text.DateFormat displayFormat -> displayFormat
    java.lang.String utc -> utc
    java.lang.String tz -> tz
    java.lang.String display -> display
    java.util.Date getTime() -> getTime
    void setTime(java.util.Date) -> setTime
    java.lang.String getUtc() -> getUtc
    void setUtc(java.lang.String) -> setUtc
    java.lang.String getTz() -> getTz
    void setTz(java.lang.String) -> setTz
    java.lang.String getDisplay() -> getDisplay
    void setDisplay(java.lang.String) -> setDisplay
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.Version -> org.jivesoftware.smackx.packet.Version:
    java.lang.String name -> name
    java.lang.String version -> version
    java.lang.String os -> os
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    java.lang.String getOs() -> getOs
    void setOs(java.lang.String) -> setOs
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.ping.PingFailedListener -> org.jivesoftware.smackx.ping.PingFailedListener:
    void pingFailed() -> pingFailed
org.jivesoftware.smackx.ping.PingManager -> org.jivesoftware.smackx.ping.PingManager:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT -> ELEMENT
    java.util.Map instances -> instances
    java.util.concurrent.ScheduledExecutorService periodicPingExecutorService -> periodicPingExecutorService
    org.jivesoftware.smack.Connection connection -> connection
    int pingInterval -> pingInterval
    java.util.Set pingFailedListeners -> pingFailedListeners
    java.util.concurrent.ScheduledFuture periodicPingTask -> periodicPingTask
    long lastSuccessfulPingByTask -> lastSuccessfulPingByTask
    long pingMinDelta -> pingMinDelta
    long lastPingStamp -> lastPingStamp
    long lastSuccessfulManualPing -> lastSuccessfulManualPing
    org.jivesoftware.smackx.ping.PingManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    void setPingIntervall(int) -> setPingIntervall
    int getPingIntervall() -> getPingIntervall
    void registerPingFailedListener(org.jivesoftware.smackx.ping.PingFailedListener) -> registerPingFailedListener
    void unregisterPingFailedListener(org.jivesoftware.smackx.ping.PingFailedListener) -> unregisterPingFailedListener
    void disablePingFloodProtection() -> disablePingFloodProtection
    void setPingMinimumInterval(long) -> setPingMinimumInterval
    long getPingMinimumInterval() -> getPingMinimumInterval
    org.jivesoftware.smack.packet.IQ ping(java.lang.String,long) -> ping
    org.jivesoftware.smack.packet.IQ ping(java.lang.String) -> ping
    boolean pingEntity(java.lang.String,long) -> pingEntity
    boolean pingEntity(java.lang.String) -> pingEntity
    boolean pingMyServer(long) -> pingMyServer
    boolean pingMyServer() -> pingMyServer
    boolean isPingSupported(java.lang.String) -> isPingSupported
    long getLastSuccessfulPing() -> getLastSuccessfulPing
    java.util.Set getPingFailedListeners() -> getPingFailedListeners
    void maybeSchedulePingServerTask() -> maybeSchedulePingServerTask
    void maybeStopPingServerTask() -> maybeStopPingServerTask
    void pongReceived() -> pongReceived
    long access$0(org.jivesoftware.smackx.ping.PingManager) -> access$0
    long access$1(org.jivesoftware.smackx.ping.PingManager) -> access$1
    void access$2(org.jivesoftware.smackx.ping.PingManager,long) -> access$2
    void access$3(org.jivesoftware.smackx.ping.PingManager) -> access$3
org.jivesoftware.smackx.ping.PingManager$1 -> org.jivesoftware.smackx.ping.PingManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.ping.PingManager$2 -> org.jivesoftware.smackx.ping.PingManager$2:
    org.jivesoftware.smackx.ping.PingManager this$0 -> this$0
    org.jivesoftware.smack.Connection val$connection -> val$connection
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.ping.PingManager$3 -> org.jivesoftware.smackx.ping.PingManager$3:
    org.jivesoftware.smackx.ping.PingManager this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
org.jivesoftware.smackx.ping.ServerPingTask -> org.jivesoftware.smackx.ping.ServerPingTask:
    java.lang.ref.WeakReference weakConnection -> weakConnection
    int delta -> delta
    int tries -> tries
    void run() -> run
org.jivesoftware.smackx.ping.packet.Ping -> org.jivesoftware.smackx.ping.packet.Ping:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.ping.packet.Pong -> org.jivesoftware.smackx.ping.packet.Pong:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.ping.provider.PingProvider -> org.jivesoftware.smackx.ping.provider.PingProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.provider.CapsExtensionProvider -> org.jivesoftware.smackx.provider.CapsExtensionProvider:
    int MAX_DEPTH -> MAX_DEPTH
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.DataFormProvider -> org.jivesoftware.smackx.provider.DataFormProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smackx.FormField parseField(org.xmlpull.v1.XmlPullParser) -> parseField
    org.jivesoftware.smackx.packet.DataForm$Item parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
    org.jivesoftware.smackx.packet.DataForm$ReportedData parseReported(org.xmlpull.v1.XmlPullParser) -> parseReported
    org.jivesoftware.smackx.FormField$Option parseOption(org.xmlpull.v1.XmlPullParser) -> parseOption
org.jivesoftware.smackx.provider.DelayInfoProvider -> org.jivesoftware.smackx.provider.DelayInfoProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.DelayInformationProvider -> org.jivesoftware.smackx.provider.DelayInformationProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.DiscoverInfoProvider -> org.jivesoftware.smackx.provider.DiscoverInfoProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.provider.DiscoverItemsProvider -> org.jivesoftware.smackx.provider.DiscoverItemsProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.provider.EmbeddedExtensionProvider -> org.jivesoftware.smackx.provider.EmbeddedExtensionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.provider.HeaderProvider -> org.jivesoftware.smackx.provider.HeaderProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.HeadersProvider -> org.jivesoftware.smackx.provider.HeadersProvider:
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.provider.MUCAdminProvider -> org.jivesoftware.smackx.provider.MUCAdminProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.packet.MUCAdmin$Item parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
org.jivesoftware.smackx.provider.MUCOwnerProvider -> org.jivesoftware.smackx.provider.MUCOwnerProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.packet.MUCOwner$Item parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
    org.jivesoftware.smackx.packet.MUCOwner$Destroy parseDestroy(org.xmlpull.v1.XmlPullParser) -> parseDestroy
org.jivesoftware.smackx.provider.MUCUserProvider -> org.jivesoftware.smackx.provider.MUCUserProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smackx.packet.MUCUser$Item parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
    org.jivesoftware.smackx.packet.MUCUser$Invite parseInvite(org.xmlpull.v1.XmlPullParser) -> parseInvite
    org.jivesoftware.smackx.packet.MUCUser$Apply parseApply(org.xmlpull.v1.XmlPullParser) -> parseApply
    org.jivesoftware.smackx.packet.MUCUser$Accept parseAccept(org.xmlpull.v1.XmlPullParser) -> parseAccept
    org.jivesoftware.smackx.packet.MUCUser$Decline parseDecline(org.xmlpull.v1.XmlPullParser) -> parseDecline
    org.jivesoftware.smackx.packet.MUCUser$Destroy parseDestroy(org.xmlpull.v1.XmlPullParser) -> parseDestroy
org.jivesoftware.smackx.provider.MessageEventProvider -> org.jivesoftware.smackx.provider.MessageEventProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.MultipleAddressesProvider -> org.jivesoftware.smackx.provider.MultipleAddressesProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.PEPProvider -> org.jivesoftware.smackx.provider.PEPProvider:
    java.util.Map nodeParsers -> nodeParsers
    org.jivesoftware.smack.packet.PacketExtension pepItem -> pepItem
    void registerPEPParserExtension(java.lang.String,org.jivesoftware.smack.provider.PacketExtensionProvider) -> registerPEPParserExtension
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.PrivateDataProvider -> org.jivesoftware.smackx.provider.PrivateDataProvider:
    org.jivesoftware.smackx.packet.PrivateData parsePrivateData(org.xmlpull.v1.XmlPullParser) -> parsePrivateData
org.jivesoftware.smackx.provider.RosterExchangeProvider -> org.jivesoftware.smackx.provider.RosterExchangeProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.StreamInitiationProvider -> org.jivesoftware.smackx.provider.StreamInitiationProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.receipts.DeliveryReceipt -> org.jivesoftware.smackx.receipts.DeliveryReceipt:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT -> ELEMENT
    java.lang.String id -> id
    java.lang.String getId() -> getId
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.receipts.DeliveryReceipt$Provider -> org.jivesoftware.smackx.receipts.DeliveryReceipt$Provider:
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.receipts.DeliveryReceiptManager -> org.jivesoftware.smackx.receipts.DeliveryReceiptManager:
    java.util.Map instances -> instances
    org.jivesoftware.smack.Connection connection -> connection
    boolean auto_receipts_enabled -> auto_receipts_enabled
    java.util.Set receiptReceivedListeners -> receiptReceivedListeners
    org.jivesoftware.smackx.receipts.DeliveryReceiptManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    boolean isSupported(java.lang.String) -> isSupported
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void setAutoReceiptsEnabled(boolean) -> setAutoReceiptsEnabled
    void enableAutoReceipts() -> enableAutoReceipts
    void disableAutoReceipts() -> disableAutoReceipts
    boolean getAutoReceiptsEnabled() -> getAutoReceiptsEnabled
    void addReceiptReceivedListener(org.jivesoftware.smackx.receipts.ReceiptReceivedListener) -> addReceiptReceivedListener
    void removeReceiptReceivedListener(org.jivesoftware.smackx.receipts.ReceiptReceivedListener) -> removeReceiptReceivedListener
    boolean hasDeliveryReceiptRequest(org.jivesoftware.smack.packet.Packet) -> hasDeliveryReceiptRequest
    void addDeliveryReceiptRequest(org.jivesoftware.smack.packet.Message) -> addDeliveryReceiptRequest
org.jivesoftware.smackx.receipts.DeliveryReceiptManager$1 -> org.jivesoftware.smackx.receipts.DeliveryReceiptManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.receipts.DeliveryReceiptRequest -> org.jivesoftware.smackx.receipts.DeliveryReceiptRequest:
    java.lang.String ELEMENT -> ELEMENT
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.receipts.DeliveryReceiptRequest$Provider -> org.jivesoftware.smackx.receipts.DeliveryReceiptRequest$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.receipts.ReceiptReceivedListener -> org.jivesoftware.smackx.receipts.ReceiptReceivedListener:
    void onReceiptReceived(java.lang.String,java.lang.String,java.lang.String) -> onReceiptReceived
org.slf4j.ILoggerFactory -> org.slf4j.ILoggerFactory:
    org.slf4j.Logger getLogger(java.lang.String) -> getLogger
org.slf4j.IMarkerFactory -> org.slf4j.IMarkerFactory:
    org.slf4j.Marker getMarker(java.lang.String) -> getMarker
    boolean exists(java.lang.String) -> exists
    boolean detachMarker(java.lang.String) -> detachMarker
    org.slf4j.Marker getDetachedMarker(java.lang.String) -> getDetachedMarker
org.slf4j.Logger -> org.slf4j.Logger:
    java.lang.String ROOT_LOGGER_NAME -> ROOT_LOGGER_NAME
    java.lang.String getName() -> getName
    boolean isTraceEnabled() -> isTraceEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.String,java.lang.Throwable) -> trace
    boolean isTraceEnabled(org.slf4j.Marker) -> isTraceEnabled
    void trace(org.slf4j.Marker,java.lang.String) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> trace
    boolean isDebugEnabled() -> isDebugEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.String,java.lang.Throwable) -> debug
    boolean isDebugEnabled(org.slf4j.Marker) -> isDebugEnabled
    void debug(org.slf4j.Marker,java.lang.String) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> debug
    boolean isInfoEnabled() -> isInfoEnabled
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.String,java.lang.Throwable) -> info
    boolean isInfoEnabled(org.slf4j.Marker) -> isInfoEnabled
    void info(org.slf4j.Marker,java.lang.String) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> info
    boolean isWarnEnabled() -> isWarnEnabled
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Throwable) -> warn
    boolean isWarnEnabled(org.slf4j.Marker) -> isWarnEnabled
    void warn(org.slf4j.Marker,java.lang.String) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> warn
    boolean isErrorEnabled() -> isErrorEnabled
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
    boolean isErrorEnabled(org.slf4j.Marker) -> isErrorEnabled
    void error(org.slf4j.Marker,java.lang.String) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> error
org.slf4j.LoggerFactory -> org.slf4j.LoggerFactory:
    java.lang.String CODES_PREFIX -> CODES_PREFIX
    java.lang.String NO_STATICLOGGERBINDER_URL -> NO_STATICLOGGERBINDER_URL
    java.lang.String MULTIPLE_BINDINGS_URL -> MULTIPLE_BINDINGS_URL
    java.lang.String NULL_LF_URL -> NULL_LF_URL
    java.lang.String VERSION_MISMATCH -> VERSION_MISMATCH
    java.lang.String SUBSTITUTE_LOGGER_URL -> SUBSTITUTE_LOGGER_URL
    java.lang.String UNSUCCESSFUL_INIT_URL -> UNSUCCESSFUL_INIT_URL
    java.lang.String UNSUCCESSFUL_INIT_MSG -> UNSUCCESSFUL_INIT_MSG
    int UNINITIALIZED -> UNINITIALIZED
    int ONGOING_INITIALIZATION -> ONGOING_INITIALIZATION
    int FAILED_INITIALIZATION -> FAILED_INITIALIZATION
    int SUCCESSFUL_INITIALIZATION -> SUCCESSFUL_INITIALIZATION
    int NOP_FALLBACK_INITIALIZATION -> NOP_FALLBACK_INITIALIZATION
    int INITIALIZATION_STATE -> INITIALIZATION_STATE
    org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY -> TEMP_FACTORY
    org.slf4j.helpers.NOPLoggerFactory NOP_FALLBACK_FACTORY -> NOP_FALLBACK_FACTORY
    java.lang.String[] API_COMPATIBILITY_LIST -> API_COMPATIBILITY_LIST
    java.lang.String STATIC_LOGGER_BINDER_PATH -> STATIC_LOGGER_BINDER_PATH
    void reset() -> reset
    void performInitialization() -> performInitialization
    boolean messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String) -> messageContainsOrgSlf4jImplStaticLoggerBinder
    void bind() -> bind
    void failedBinding(java.lang.Throwable) -> failedBinding
    void emitSubstituteLoggerWarning() -> emitSubstituteLoggerWarning
    void versionSanityCheck() -> versionSanityCheck
    java.util.Set findPossibleStaticLoggerBinderPathSet() -> findPossibleStaticLoggerBinderPathSet
    boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set) -> isAmbiguousStaticLoggerBinderPathSet
    void reportMultipleBindingAmbiguity(java.util.Set) -> reportMultipleBindingAmbiguity
    void reportActualBinding(java.util.Set) -> reportActualBinding
    org.slf4j.Logger getLogger(java.lang.String) -> getLogger
    org.slf4j.Logger getLogger(java.lang.Class) -> getLogger
    org.slf4j.ILoggerFactory getILoggerFactory() -> getILoggerFactory
org.slf4j.MDC -> org.slf4j.MDC:
    java.lang.String NULL_MDCA_URL -> NULL_MDCA_URL
    java.lang.String NO_STATIC_MDC_BINDER_URL -> NO_STATIC_MDC_BINDER_URL
    org.slf4j.spi.MDCAdapter mdcAdapter -> mdcAdapter
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
    void setContextMap(java.util.Map) -> setContextMap
    org.slf4j.spi.MDCAdapter getMDCAdapter() -> getMDCAdapter
org.slf4j.Marker -> org.slf4j.Marker:
    java.lang.String ANY_MARKER -> ANY_MARKER
    java.lang.String ANY_NON_NULL_MARKER -> ANY_NON_NULL_MARKER
    java.lang.String getName() -> getName
    void add(org.slf4j.Marker) -> add
    boolean remove(org.slf4j.Marker) -> remove
    boolean hasChildren() -> hasChildren
    boolean hasReferences() -> hasReferences
    java.util.Iterator iterator() -> iterator
    boolean contains(org.slf4j.Marker) -> contains
    boolean contains(java.lang.String) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.slf4j.MarkerFactory -> org.slf4j.MarkerFactory:
    org.slf4j.IMarkerFactory markerFactory -> markerFactory
    org.slf4j.Marker getMarker(java.lang.String) -> getMarker
    org.slf4j.Marker getDetachedMarker(java.lang.String) -> getDetachedMarker
    org.slf4j.IMarkerFactory getIMarkerFactory() -> getIMarkerFactory
org.slf4j.helpers.BasicMDCAdapter -> org.slf4j.helpers.BasicMDCAdapter:
    java.lang.InheritableThreadLocal inheritableThreadLocal -> inheritableThreadLocal
    boolean IS_JDK14 -> IS_JDK14
    boolean isJDK14() -> isJDK14
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Set getKeys() -> getKeys
    java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
    void setContextMap(java.util.Map) -> setContextMap
org.slf4j.helpers.BasicMarker -> org.slf4j.helpers.BasicMarker:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.util.List refereceList -> refereceList
    java.lang.String OPEN -> OPEN
    java.lang.String CLOSE -> CLOSE
    java.lang.String SEP -> SEP
    java.lang.String getName() -> getName
    void add(org.slf4j.Marker) -> add
    boolean hasReferences() -> hasReferences
    boolean hasChildren() -> hasChildren
    java.util.Iterator iterator() -> iterator
    boolean remove(org.slf4j.Marker) -> remove
    boolean contains(org.slf4j.Marker) -> contains
    boolean contains(java.lang.String) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.slf4j.helpers.BasicMarkerFactory -> org.slf4j.helpers.BasicMarkerFactory:
    java.util.Map markerMap -> markerMap
    org.slf4j.Marker getMarker(java.lang.String) -> getMarker
    boolean exists(java.lang.String) -> exists
    boolean detachMarker(java.lang.String) -> detachMarker
    org.slf4j.Marker getDetachedMarker(java.lang.String) -> getDetachedMarker
org.slf4j.helpers.FormattingTuple -> org.slf4j.helpers.FormattingTuple:
    org.slf4j.helpers.FormattingTuple NULL -> NULL
    java.lang.String message -> message
    java.lang.Throwable throwable -> throwable
    java.lang.Object[] argArray -> argArray
    java.lang.Object[] trimmedCopy(java.lang.Object[]) -> trimmedCopy
    java.lang.String getMessage() -> getMessage
    java.lang.Object[] getArgArray() -> getArgArray
    java.lang.Throwable getThrowable() -> getThrowable
org.slf4j.helpers.MarkerIgnoringBase -> org.slf4j.helpers.MarkerIgnoringBase:
    long serialVersionUID -> serialVersionUID
    boolean isTraceEnabled(org.slf4j.Marker) -> isTraceEnabled
    void trace(org.slf4j.Marker,java.lang.String) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> trace
    boolean isDebugEnabled(org.slf4j.Marker) -> isDebugEnabled
    void debug(org.slf4j.Marker,java.lang.String) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> debug
    boolean isInfoEnabled(org.slf4j.Marker) -> isInfoEnabled
    void info(org.slf4j.Marker,java.lang.String) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> info
    boolean isWarnEnabled(org.slf4j.Marker) -> isWarnEnabled
    void warn(org.slf4j.Marker,java.lang.String) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> warn
    boolean isErrorEnabled(org.slf4j.Marker) -> isErrorEnabled
    void error(org.slf4j.Marker,java.lang.String) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> error
    java.lang.String toString() -> toString
    java.lang.String getName() -> getName
org.slf4j.helpers.MessageFormatter -> org.slf4j.helpers.MessageFormatter:
    char DELIM_START -> DELIM_START
    char DELIM_STOP -> DELIM_STOP
    java.lang.String DELIM_STR -> DELIM_STR
    char ESCAPE_CHAR -> ESCAPE_CHAR
    org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object) -> format
    org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object) -> format
    java.lang.Throwable getThrowableCandidate(java.lang.Object[]) -> getThrowableCandidate
    org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[]) -> arrayFormat
    boolean isEscapedDelimeter(java.lang.String,int) -> isEscapedDelimeter
    boolean isDoubleEscaped(java.lang.String,int) -> isDoubleEscaped
    void deeplyAppendParameter(java.lang.StringBuffer,java.lang.Object,java.util.Map) -> deeplyAppendParameter
    void safeObjectAppend(java.lang.StringBuffer,java.lang.Object) -> safeObjectAppend
    void objectArrayAppend(java.lang.StringBuffer,java.lang.Object[],java.util.Map) -> objectArrayAppend
    void booleanArrayAppend(java.lang.StringBuffer,boolean[]) -> booleanArrayAppend
    void byteArrayAppend(java.lang.StringBuffer,byte[]) -> byteArrayAppend
    void charArrayAppend(java.lang.StringBuffer,char[]) -> charArrayAppend
    void shortArrayAppend(java.lang.StringBuffer,short[]) -> shortArrayAppend
    void intArrayAppend(java.lang.StringBuffer,int[]) -> intArrayAppend
    void longArrayAppend(java.lang.StringBuffer,long[]) -> longArrayAppend
    void floatArrayAppend(java.lang.StringBuffer,float[]) -> floatArrayAppend
    void doubleArrayAppend(java.lang.StringBuffer,double[]) -> doubleArrayAppend
org.slf4j.helpers.NOPLogger -> org.slf4j.helpers.NOPLogger:
    long serialVersionUID -> serialVersionUID
    org.slf4j.helpers.NOPLogger NOP_LOGGER -> NOP_LOGGER
    java.lang.String getName() -> getName
    boolean isTraceEnabled() -> isTraceEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.String,java.lang.Throwable) -> trace
    boolean isDebugEnabled() -> isDebugEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.String,java.lang.Throwable) -> debug
    boolean isInfoEnabled() -> isInfoEnabled
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.String,java.lang.Throwable) -> info
    boolean isWarnEnabled() -> isWarnEnabled
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.String,java.lang.Throwable) -> warn
    boolean isErrorEnabled() -> isErrorEnabled
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
org.slf4j.helpers.NOPLoggerFactory -> org.slf4j.helpers.NOPLoggerFactory:
    org.slf4j.Logger getLogger(java.lang.String) -> getLogger
org.slf4j.helpers.NOPMDCAdapter -> org.slf4j.helpers.NOPMDCAdapter:
    void clear() -> clear
    java.lang.String get(java.lang.String) -> get
    void put(java.lang.String,java.lang.String) -> put
    void remove(java.lang.String) -> remove
    java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
    void setContextMap(java.util.Map) -> setContextMap
org.slf4j.helpers.NamedLoggerBase -> org.slf4j.helpers.NamedLoggerBase:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String getName() -> getName
    java.lang.Object readResolve() -> readResolve
org.slf4j.helpers.SubstituteLoggerFactory -> org.slf4j.helpers.SubstituteLoggerFactory:
    java.util.List loggerNameList -> loggerNameList
    org.slf4j.Logger getLogger(java.lang.String) -> getLogger
    java.util.List getLoggerNameList() -> getLoggerNameList
org.slf4j.helpers.Util -> org.slf4j.helpers.Util:
    void report(java.lang.String,java.lang.Throwable) -> report
    void report(java.lang.String) -> report
org.slf4j.spi.LocationAwareLogger -> org.slf4j.spi.LocationAwareLogger:
    int TRACE_INT -> TRACE_INT
    int DEBUG_INT -> DEBUG_INT
    int INFO_INT -> INFO_INT
    int WARN_INT -> WARN_INT
    int ERROR_INT -> ERROR_INT
    void log(org.slf4j.Marker,java.lang.String,int,java.lang.String,java.lang.Object[],java.lang.Throwable) -> log
org.slf4j.spi.LoggerFactoryBinder -> org.slf4j.spi.LoggerFactoryBinder:
    org.slf4j.ILoggerFactory getLoggerFactory() -> getLoggerFactory
    java.lang.String getLoggerFactoryClassStr() -> getLoggerFactoryClassStr
org.slf4j.spi.MDCAdapter -> org.slf4j.spi.MDCAdapter:
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
    void setContextMap(java.util.Map) -> setContextMap
org.slf4j.spi.MarkerFactoryBinder -> org.slf4j.spi.MarkerFactoryBinder:
    org.slf4j.IMarkerFactory getMarkerFactory() -> getMarkerFactory
    java.lang.String getMarkerFactoryClassStr() -> getMarkerFactoryClassStr
u.aly.a -> u.aly.a:
    int a -> a
    int b -> b
    java.lang.String c -> c
    java.util.List d -> d
    u.aly.ba e -> e
    boolean a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    boolean g() -> g
    u.aly.ba d() -> d
    java.util.List e() -> e
    void a(java.util.List) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String f() -> f
    void a(u.aly.bb) -> a
u.aly.aa -> u.aly.aa:
    int d -> d
    int a -> a
    int b -> b
    int e -> e
    long c -> c
    long f -> f
    long g -> g
    android.content.Context n -> h
    void b(android.content.Context) -> b
    int e() -> e
    boolean f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void k() -> k
    void l() -> l
    boolean m() -> m
    long n() -> n
    long o() -> o
    u.aly.ar a(android.content.Context) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
u.aly.ab -> u.aly.ab:
    java.lang.String a -> a
    long b -> b
u.aly.ac -> u.aly.b:
    u.aly.bo a(android.content.Context) -> a
    long[] b(android.content.Context) -> b
u.aly.ad -> u.aly.c:
    java.util.Map b -> a
    java.util.ArrayList c -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    void a(android.content.Context) -> a
    java.util.List a(android.content.SharedPreferences) -> a
u.aly.ae -> u.aly.ae:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.Map d -> d
    java.lang.String a() -> a
u.aly.af -> u.aly.e:
    java.util.HashMap b(java.util.Map) -> b
    u.aly.ae a(java.lang.String,java.lang.String,java.util.Map) -> a
    java.lang.String b(java.lang.String,java.lang.String,java.util.Map) -> b
    void a(u.aly.bp,java.lang.String) -> a
u.aly.ag -> u.aly.f:
    u.aly.ag a(boolean) -> a
    java.lang.String a(java.lang.Throwable) -> a
    void a(u.aly.bp,java.lang.String) -> a
u.aly.ah -> u.aly.g:
    java.util.HashMap b(java.util.Map) -> b
    void a(u.aly.bp,java.lang.String) -> a
u.aly.ai -> u.aly.h:
    void a(org.json.JSONArray) -> a
u.aly.aj -> u.aly.i:
    void a(u.aly.bp,java.lang.String) -> a
u.aly.ak -> u.aly.j:
    boolean a -> a
    int b -> b
    int c -> c
    int d -> d
    float e -> e
    float f -> f
    android.content.Context g -> g
    u.aly.ak h -> h
    u.aly.ak a(android.content.Context) -> a
    float b(java.lang.String,int) -> b
    void a(java.lang.String,int) -> a
    boolean a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    boolean a() -> a
    int b() -> b
    java.util.Map e() -> c
    void a(u.aly.f$a) -> a
    java.lang.String toString() -> toString
u.aly.al -> u.aly.k:
    int h -> a
    long i -> b
    u.aly.al j -> c
    u.aly.al a(android.content.Context) -> a
    u.aly.bp a(android.content.Context,u.aly.bp) -> a
    u.aly.bn b(android.content.Context) -> b
    long a() -> a
    void a(int) -> a
    boolean c() -> b
    void a(u.aly.f$a) -> a
u.aly.am -> u.aly.l:
    long a -> a
    long b -> b
    int c -> c
    int d -> d
    com.umeng.analytics.h e -> e
    u.aly.aa f -> f
    long g -> g
    int h -> h
    long i -> i
    long j -> j
    android.content.Context k -> k
    u.aly.am l -> l
    u.aly.am a(android.content.Context,u.aly.aa) -> a
    boolean a() -> a
    long b() -> b
    void a(u.aly.f$a) -> a
u.aly.an -> u.aly.an:
    u.aly.an a -> a
    u.aly.an b -> b
    u.aly.an c -> c
    u.aly.an d -> d
    int e -> e
    u.aly.an[] f -> f
    u.aly.an[] values() -> values
    u.aly.an valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.an a(int) -> a
u.aly.ao -> u.aly.ao:
    u.aly.dn c -> c
    u.aly.dd d -> d
    java.util.Map e -> e
    long a -> a
    byte g -> f
    java.util.Map b -> b
    u.aly.ao a() -> a
    void b() -> b
    long c() -> c
    u.aly.ao a(long) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    u.aly.ao$e a(int) -> a
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void f() -> f
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn h() -> h
    u.aly.dd i() -> i
u.aly.ao$1 -> u.aly.m:
u.aly.ao$a -> u.aly.n:
    void a(u.aly.di,u.aly.ao) -> a
    void b(u.aly.di,u.aly.ao) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.ao$b -> u.aly.o:
    u.aly.ao$a a() -> a
    u.aly.dq b() -> b
u.aly.ao$c -> u.aly.p:
    void a(u.aly.di,u.aly.ao) -> a
    void b(u.aly.di,u.aly.ao) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.ao$d -> u.aly.q:
    u.aly.ao$c a() -> a
    u.aly.dq b() -> b
u.aly.ao$e -> u.aly.ao$e:
    u.aly.ao$e a -> a
    java.util.Map b -> b
    short c -> c
    java.lang.String d -> d
    u.aly.ao$e[] e -> e
    u.aly.ao$e[] values() -> values
    u.aly.ao$e valueOf(java.lang.String) -> valueOf
    u.aly.ao$e a(int) -> a
    u.aly.ao$e b(int) -> b
    u.aly.ao$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.ap -> u.aly.ap:
    u.aly.dn d -> d
    u.aly.dd e -> e
    u.aly.dd f -> f
    java.util.Map g -> g
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.Map c -> c
    u.aly.ap a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.ap a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    u.aly.ap b(java.lang.String) -> b
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    u.aly.ap$e a(int) -> a
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void j() -> j
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn k() -> k
    u.aly.dd l() -> l
    u.aly.dd m() -> m
u.aly.ap$1 -> u.aly.r:
u.aly.ap$a -> u.aly.s:
    void a(u.aly.di,u.aly.ap) -> a
    void b(u.aly.di,u.aly.ap) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.ap$b -> u.aly.t:
    u.aly.ap$a a() -> a
    u.aly.dq b() -> b
u.aly.ap$c -> u.aly.u:
    void a(u.aly.di,u.aly.ap) -> a
    void b(u.aly.di,u.aly.ap) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.ap$d -> u.aly.v:
    u.aly.ap$c a() -> a
    u.aly.dq b() -> b
u.aly.ap$e -> u.aly.ap$e:
    u.aly.ap$e a -> a
    u.aly.ap$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.ap$e[] f -> f
    u.aly.ap$e[] values() -> values
    u.aly.ap$e valueOf(java.lang.String) -> valueOf
    u.aly.ap$e a(int) -> a
    u.aly.ap$e b(int) -> b
    u.aly.ap$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.aq -> u.aly.aq:
    u.aly.dn l -> l
    u.aly.dd m -> m
    u.aly.dd n -> n
    u.aly.dd o -> o
    u.aly.dd p -> p
    u.aly.dd q -> q
    u.aly.dd r -> r
    u.aly.dd s -> s
    u.aly.dd t -> t
    u.aly.dd u -> u
    u.aly.dd v -> v
    java.util.Map w -> w
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    u.aly.bm e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    byte z -> x
    u.aly.aq$e[] A -> y
    java.util.Map k -> k
    u.aly.aq a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.aq a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    u.aly.aq b(java.lang.String) -> b
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    int j() -> j
    u.aly.aq a(int) -> a
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    java.lang.String m() -> m
    u.aly.aq c(java.lang.String) -> c
    void n() -> n
    boolean o() -> o
    void d(boolean) -> d
    u.aly.bm p() -> p
    u.aly.aq a(u.aly.bm) -> a
    void q() -> q
    boolean r() -> r
    void e(boolean) -> e
    java.lang.String s() -> s
    u.aly.aq d(java.lang.String) -> d
    void t() -> t
    boolean u() -> u
    void f(boolean) -> f
    java.lang.String v() -> v
    u.aly.aq e(java.lang.String) -> e
    void w() -> w
    boolean x() -> x
    void g(boolean) -> g
    java.lang.String y() -> y
    u.aly.aq f(java.lang.String) -> f
    void z() -> z
    boolean A() -> A
    void h(boolean) -> h
    java.lang.String B() -> B
    u.aly.aq g(java.lang.String) -> g
    void C() -> C
    boolean D() -> D
    void i(boolean) -> i
    int E() -> E
    u.aly.aq c(int) -> c
    void F() -> F
    boolean G() -> G
    void j(boolean) -> j
    u.aly.aq$e d(int) -> d
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void H() -> H
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn I() -> I
    u.aly.dd J() -> J
    u.aly.dd K() -> K
    u.aly.dd L() -> L
    u.aly.dd M() -> M
    u.aly.dd N() -> N
    u.aly.dd O() -> O
    u.aly.dd P() -> P
    u.aly.dd Q() -> Q
    u.aly.dd R() -> R
    u.aly.dd S() -> S
u.aly.aq$1 -> u.aly.w:
u.aly.aq$a -> u.aly.x:
    void a(u.aly.di,u.aly.aq) -> a
    void b(u.aly.di,u.aly.aq) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.aq$b -> u.aly.y:
    u.aly.aq$a a() -> a
    u.aly.dq b() -> b
u.aly.aq$c -> u.aly.z:
    void a(u.aly.di,u.aly.aq) -> a
    void b(u.aly.di,u.aly.aq) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.aq$d -> u.aly.ac:
    u.aly.aq$c a() -> a
    u.aly.dq b() -> b
u.aly.aq$e -> u.aly.aq$e:
    u.aly.aq$e a -> a
    u.aly.aq$e b -> b
    u.aly.aq$e c -> c
    u.aly.aq$e d -> d
    u.aly.aq$e e -> e
    u.aly.aq$e f -> f
    u.aly.aq$e g -> g
    u.aly.aq$e h -> h
    u.aly.aq$e i -> i
    u.aly.aq$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.aq$e[] n -> n
    u.aly.aq$e[] values() -> values
    u.aly.aq$e valueOf(java.lang.String) -> valueOf
    u.aly.aq$e a(int) -> a
    u.aly.aq$e b(int) -> b
    u.aly.aq$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.ar -> u.aly.ar:
    u.aly.dn e -> e
    u.aly.dd f -> f
    u.aly.dd g -> g
    u.aly.dd h -> h
    java.util.Map i -> i
    int a -> a
    int b -> b
    int c -> c
    byte m -> j
    u.aly.ar$e[] n -> k
    java.util.Map d -> d
    u.aly.ar a() -> a
    void b() -> b
    int c() -> c
    u.aly.ar a(int) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    int f() -> f
    u.aly.ar c(int) -> c
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    int j() -> j
    u.aly.ar d(int) -> d
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    u.aly.ar$e e(int) -> e
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void m() -> m
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn n() -> n
    u.aly.dd o() -> o
    u.aly.dd p() -> p
    u.aly.dd q() -> q
u.aly.ar$1 -> u.aly.ad:
u.aly.ar$a -> u.aly.af:
    void a(u.aly.di,u.aly.ar) -> a
    void b(u.aly.di,u.aly.ar) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.ar$b -> u.aly.ag:
    u.aly.ar$a a() -> a
    u.aly.dq b() -> b
u.aly.ar$c -> u.aly.ah:
    void a(u.aly.di,u.aly.ar) -> a
    void b(u.aly.di,u.aly.ar) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.ar$d -> u.aly.ai:
    u.aly.ar$c a() -> a
    u.aly.dq b() -> b
u.aly.ar$e -> u.aly.ar$e:
    u.aly.ar$e a -> a
    u.aly.ar$e b -> b
    u.aly.ar$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ar$e[] g -> g
    u.aly.ar$e[] values() -> values
    u.aly.ar$e valueOf(java.lang.String) -> valueOf
    u.aly.ar$e a(int) -> a
    u.aly.ar$e b(int) -> b
    u.aly.ar$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.as -> u.aly.as:
    u.aly.dn c -> c
    u.aly.dd d -> d
    java.util.Map e -> e
    u.aly.bf a -> a
    u.aly.as$e[] f -> f
    java.util.Map b -> b
    u.aly.as a() -> a
    void b() -> b
    u.aly.bf c() -> c
    u.aly.as a(u.aly.bf) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    u.aly.as$e a(int) -> a
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void f() -> f
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn h() -> h
    u.aly.dd i() -> i
u.aly.as$1 -> u.aly.aj:
u.aly.as$a -> u.aly.ak:
    void a(u.aly.di,u.aly.as) -> a
    void b(u.aly.di,u.aly.as) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.as$b -> u.aly.al:
    u.aly.as$a a() -> a
    u.aly.dq b() -> b
u.aly.as$c -> u.aly.am:
    void a(u.aly.di,u.aly.as) -> a
    void b(u.aly.di,u.aly.as) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.as$d -> u.aly.bu:
    u.aly.as$c a() -> a
    u.aly.dq b() -> b
u.aly.as$e -> u.aly.as$e:
    u.aly.as$e a -> a
    java.util.Map b -> b
    short c -> c
    java.lang.String d -> d
    u.aly.as$e[] e -> e
    u.aly.as$e[] values() -> values
    u.aly.as$e valueOf(java.lang.String) -> valueOf
    u.aly.as$e a(int) -> a
    u.aly.as$e b(int) -> b
    u.aly.as$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.at -> u.aly.at:
    u.aly.dn s -> s
    u.aly.dd t -> t
    u.aly.dd u -> u
    u.aly.dd v -> v
    u.aly.dd w -> w
    u.aly.dd x -> x
    u.aly.dd y -> y
    u.aly.dd z -> z
    u.aly.dd A -> A
    u.aly.dd B -> B
    u.aly.dd C -> C
    u.aly.dd D -> D
    u.aly.dd E -> E
    u.aly.dd F -> F
    u.aly.dd G -> G
    u.aly.dd H -> H
    u.aly.dd I -> I
    u.aly.dd J -> J
    java.util.Map K -> K
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    u.aly.bk i -> i
    boolean j -> j
    boolean k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    long n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    byte O -> L
    u.aly.at$e[] P -> M
    java.util.Map r -> r
    u.aly.at a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.at a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    u.aly.at b(java.lang.String) -> b
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    java.lang.String j() -> j
    u.aly.at c(java.lang.String) -> c
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    java.lang.String m() -> m
    u.aly.at d(java.lang.String) -> d
    void n() -> n
    boolean o() -> o
    void d(boolean) -> d
    java.lang.String p() -> p
    u.aly.at e(java.lang.String) -> e
    void q() -> q
    boolean r() -> r
    void e(boolean) -> e
    java.lang.String s() -> s
    u.aly.at f(java.lang.String) -> f
    void t() -> t
    boolean u() -> u
    void f(boolean) -> f
    java.lang.String v() -> v
    u.aly.at g(java.lang.String) -> g
    void w() -> w
    boolean x() -> x
    void g(boolean) -> g
    java.lang.String y() -> y
    u.aly.at h(java.lang.String) -> h
    void z() -> z
    boolean A() -> A
    void h(boolean) -> h
    u.aly.bk B() -> B
    u.aly.at a(u.aly.bk) -> a
    void C() -> C
    boolean D() -> D
    void i(boolean) -> i
    boolean E() -> E
    u.aly.at j(boolean) -> j
    void F() -> F
    boolean G() -> G
    void k(boolean) -> k
    boolean H() -> H
    u.aly.at l(boolean) -> l
    void I() -> I
    boolean J() -> J
    void m(boolean) -> m
    java.lang.String K() -> K
    u.aly.at i(java.lang.String) -> i
    void L() -> L
    boolean M() -> M
    void n(boolean) -> n
    java.lang.String N() -> N
    u.aly.at j(java.lang.String) -> j
    void O() -> O
    boolean P() -> P
    void o(boolean) -> o
    long Q() -> Q
    u.aly.at a(long) -> a
    void R() -> R
    boolean S() -> S
    void p(boolean) -> p
    java.lang.String T() -> T
    u.aly.at k(java.lang.String) -> k
    void U() -> U
    boolean V() -> V
    void q(boolean) -> q
    java.lang.String W() -> W
    u.aly.at l(java.lang.String) -> l
    void X() -> X
    boolean Y() -> Y
    void r(boolean) -> r
    java.lang.String Z() -> Z
    u.aly.at m(java.lang.String) -> m
    void aa() -> aa
    boolean ab() -> ab
    void s(boolean) -> s
    u.aly.at$e a(int) -> a
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void ac() -> ac
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn ad() -> ad
    u.aly.dd ae() -> ae
    u.aly.dd af() -> af
    u.aly.dd ag() -> ag
    u.aly.dd ah() -> ah
    u.aly.dd ai() -> ai
    u.aly.dd aj() -> aj
    u.aly.dd ak() -> ak
    u.aly.dd al() -> al
    u.aly.dd am() -> am
    u.aly.dd an() -> an
    u.aly.dd ao() -> ao
    u.aly.dd ap() -> ap
    u.aly.dd aq() -> aq
    u.aly.dd ar() -> ar
    u.aly.dd as() -> as
    u.aly.dd at() -> at
    u.aly.dd au() -> au
u.aly.at$1 -> u.aly.bv:
u.aly.at$a -> u.aly.bw:
    void a(u.aly.di,u.aly.at) -> a
    void b(u.aly.di,u.aly.at) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.at$b -> u.aly.by:
    u.aly.at$a a() -> a
    u.aly.dq b() -> b
u.aly.at$c -> u.aly.bz:
    void a(u.aly.di,u.aly.at) -> a
    void b(u.aly.di,u.aly.at) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.at$d -> u.aly.ca:
    u.aly.at$c a() -> a
    u.aly.dq b() -> b
u.aly.at$e -> u.aly.at$e:
    u.aly.at$e a -> a
    u.aly.at$e b -> b
    u.aly.at$e c -> c
    u.aly.at$e d -> d
    u.aly.at$e e -> e
    u.aly.at$e f -> f
    u.aly.at$e g -> g
    u.aly.at$e h -> h
    u.aly.at$e i -> i
    u.aly.at$e j -> j
    u.aly.at$e k -> k
    u.aly.at$e l -> l
    u.aly.at$e m -> m
    u.aly.at$e n -> n
    u.aly.at$e o -> o
    u.aly.at$e p -> p
    u.aly.at$e q -> q
    java.util.Map r -> r
    short s -> s
    java.lang.String t -> t
    u.aly.at$e[] u -> u
    u.aly.at$e[] values() -> values
    u.aly.at$e valueOf(java.lang.String) -> valueOf
    u.aly.at$e a(int) -> a
    u.aly.at$e b(int) -> b
    u.aly.at$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.au -> u.aly.au:
    u.aly.dn g -> g
    u.aly.dd h -> h
    u.aly.dd i -> i
    u.aly.dd j -> j
    u.aly.dd k -> k
    u.aly.dd l -> l
    java.util.Map m -> m
    long a -> a
    java.lang.String b -> b
    java.util.Map c -> c
    long d -> d
    int e -> e
    byte q -> n
    u.aly.au$e[] r -> o
    java.util.Map f -> f
    u.aly.au a() -> a
    void b() -> b
    long c() -> c
    u.aly.au a(long) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    u.aly.au a(java.lang.String) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    int j() -> j
    void a(java.lang.String,java.lang.String) -> a
    java.util.Map k() -> k
    u.aly.au a(java.util.Map) -> a
    void l() -> l
    boolean m() -> m
    void c(boolean) -> c
    long n() -> n
    u.aly.au b(long) -> b
    void o() -> o
    boolean p() -> p
    void d(boolean) -> d
    int q() -> q
    u.aly.au a(int) -> a
    void r() -> r
    boolean s() -> s
    void e(boolean) -> e
    u.aly.au$e c(int) -> c
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void t() -> t
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn u() -> u
    u.aly.dd v() -> v
    u.aly.dd w() -> w
    u.aly.dd x() -> x
    u.aly.dd y() -> y
    u.aly.dd z() -> z
u.aly.au$1 -> u.aly.cb:
u.aly.au$a -> u.aly.cc:
    void a(u.aly.di,u.aly.au) -> a
    void b(u.aly.di,u.aly.au) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.au$b -> u.aly.cd:
    u.aly.au$a a() -> a
    u.aly.dq b() -> b
u.aly.au$c -> u.aly.cg:
    void a(u.aly.di,u.aly.au) -> a
    void b(u.aly.di,u.aly.au) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.au$d -> u.aly.ch:
    u.aly.au$c a() -> a
    u.aly.dq b() -> b
u.aly.au$e -> u.aly.au$e:
    u.aly.au$e a -> a
    u.aly.au$e b -> b
    u.aly.au$e c -> c
    u.aly.au$e d -> d
    u.aly.au$e e -> e
    java.util.Map f -> f
    short g -> g
    java.lang.String h -> h
    u.aly.au$e[] i -> i
    u.aly.au$e[] values() -> values
    u.aly.au$e valueOf(java.lang.String) -> valueOf
    u.aly.au$e a(int) -> a
    u.aly.au$e b(int) -> b
    u.aly.au$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.av -> u.aly.av:
    u.aly.dn e -> e
    u.aly.dd f -> f
    u.aly.dd g -> g
    u.aly.dd h -> h
    java.util.Map i -> i
    long a -> a
    java.lang.String b -> b
    u.aly.aw c -> c
    byte k -> j
    u.aly.av$e[] l -> k
    java.util.Map d -> d
    u.aly.av a() -> a
    void b() -> b
    long c() -> c
    u.aly.av a(long) -> a
    void d() -> d
    boolean e() -> e
    void b(boolean) -> b
    java.lang.String f() -> f
    u.aly.av a(java.lang.String) -> a
    void h() -> h
    boolean i() -> i
    void c(boolean) -> c
    u.aly.aw j() -> j
    u.aly.av a(u.aly.aw) -> a
    void k() -> k
    boolean l() -> l
    void d(boolean) -> d
    u.aly.av$e a(int) -> a
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void m() -> m
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn n() -> n
    u.aly.dd o() -> o
    u.aly.dd p() -> p
    u.aly.dd q() -> q
u.aly.av$1 -> u.aly.cj:
u.aly.av$a -> u.aly.ck:
    void a(u.aly.di,u.aly.av) -> a
    void b(u.aly.di,u.aly.av) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.av$b -> u.aly.cl:
    u.aly.av$a a() -> a
    u.aly.dq b() -> b
u.aly.av$c -> u.aly.cm:
    void a(u.aly.di,u.aly.av) -> a
    void b(u.aly.di,u.aly.av) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.av$d -> u.aly.cn:
    u.aly.av$c a() -> a
    u.aly.dq b() -> b
u.aly.av$e -> u.aly.av$e:
    u.aly.av$e a -> a
    u.aly.av$e b -> b
    u.aly.av$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.av$e[] g -> g
    u.aly.av$e[] values() -> values
    u.aly.av$e valueOf(java.lang.String) -> valueOf
    u.aly.av$e a(int) -> a
    u.aly.av$e b(int) -> b
    u.aly.av$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.aw -> u.aly.aw:
    u.aly.aw a -> a
    u.aly.aw b -> b
    int c -> c
    u.aly.aw[] d -> d
    u.aly.aw[] values() -> values
    u.aly.aw valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.aw a(int) -> a
u.aly.ax -> u.aly.ax:
    u.aly.dn g -> g
    u.aly.dd h -> h
    u.aly.dd i -> i
    u.aly.dd j -> j
    u.aly.dd k -> k
    u.aly.dd l -> l
    java.util.Map m -> m
    java.lang.String a -> a
    java.util.Map b -> b
    long c -> c
    int d -> d
    long e -> e
    byte q -> n
    u.aly.ax$e[] r -> o
    java.util.Map f -> f
    u.aly.ax a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.ax a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    int f() -> f
    void a(java.lang.String,u.aly.bj) -> a
    java.util.Map h() -> h
    u.aly.ax a(java.util.Map) -> a
    void i() -> i
    boolean j() -> j
    void b(boolean) -> b
    long k() -> k
    u.aly.ax a(long) -> a
    void l() -> l
    boolean m() -> m
    void c(boolean) -> c
    int n() -> n
    u.aly.ax a(int) -> a
    void o() -> o
    boolean p() -> p
    void d(boolean) -> d
    long q() -> q
    u.aly.ax b(long) -> b
    void r() -> r
    boolean s() -> s
    void e(boolean) -> e
    u.aly.ax$e c(int) -> c
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void t() -> t
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn u() -> u
    u.aly.dd v() -> v
    u.aly.dd w() -> w
    u.aly.dd x() -> x
    u.aly.dd y() -> y
    u.aly.dd z() -> z
u.aly.ax$1 -> u.aly.co:
u.aly.ax$a -> u.aly.cp:
    void a(u.aly.di,u.aly.ax) -> a
    void b(u.aly.di,u.aly.ax) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.ax$b -> u.aly.cq:
    u.aly.ax$a a() -> a
    u.aly.dq b() -> b
u.aly.ax$c -> u.aly.cs:
    void a(u.aly.di,u.aly.ax) -> a
    void b(u.aly.di,u.aly.ax) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.ax$d -> u.aly.ct:
    u.aly.ax$c a() -> a
    u.aly.dq b() -> b
u.aly.ax$e -> u.aly.ax$e:
    u.aly.ax$e a -> a
    u.aly.ax$e b -> b
    u.aly.ax$e c -> c
    u.aly.ax$e d -> d
    u.aly.ax$e e -> e
    java.util.Map f -> f
    short g -> g
    java.lang.String h -> h
    u.aly.ax$e[] i -> i
    u.aly.ax$e[] values() -> values
    u.aly.ax$e valueOf(java.lang.String) -> valueOf
    u.aly.ax$e a(int) -> a
    u.aly.ax$e b(int) -> b
    u.aly.ax$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.ay -> u.aly.ay:
    u.aly.ay a -> a
    u.aly.ay b -> b
    u.aly.ay c -> c
    int d -> d
    u.aly.ay[] e -> e
    u.aly.ay[] values() -> values
    u.aly.ay valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.ay a(int) -> a
u.aly.az -> u.aly.az:
    u.aly.dn f -> f
    u.aly.dd g -> g
    u.aly.dd h -> h
    u.aly.dd i -> i
    u.aly.dd j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    byte m -> l
    u.aly.az$e[] n -> m
    java.util.Map e -> e
    u.aly.az a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.az a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    u.aly.az b(java.lang.String) -> b
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    java.lang.String j() -> j
    u.aly.az c(java.lang.String) -> c
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    long m() -> m
    u.aly.az a(long) -> a
    void n() -> n
    boolean o() -> o
    void d(boolean) -> d
    u.aly.az$e a(int) -> a
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void p() -> p
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn q() -> q
    u.aly.dd r() -> r
    u.aly.dd s() -> s
    u.aly.dd t() -> t
    u.aly.dd u() -> u
u.aly.az$1 -> u.aly.db:
u.aly.az$a -> u.aly.dc:
    void a(u.aly.di,u.aly.az) -> a
    void b(u.aly.di,u.aly.az) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.az$b -> u.aly.di:
    u.aly.az$a a() -> a
    u.aly.dq b() -> b
u.aly.az$c -> u.aly.dk:
    void a(u.aly.di,u.aly.az) -> a
    void b(u.aly.di,u.aly.az) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.az$d -> u.aly.dl:
    u.aly.az$c a() -> a
    u.aly.dq b() -> b
u.aly.az$e -> u.aly.az$e:
    u.aly.az$e a -> a
    u.aly.az$e b -> b
    u.aly.az$e c -> c
    u.aly.az$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.az$e[] h -> h
    u.aly.az$e[] values() -> values
    u.aly.az$e valueOf(java.lang.String) -> valueOf
    u.aly.az$e a(int) -> a
    u.aly.az$e b(int) -> b
    u.aly.az$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.b -> u.aly.do:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.ba -> u.aly.ba:
    u.aly.dn e -> e
    u.aly.dd f -> f
    u.aly.dd g -> g
    u.aly.dd h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    int c -> c
    byte l -> j
    java.util.Map d -> d
    u.aly.ba a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.ba a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    long f() -> f
    u.aly.ba a(long) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    int j() -> j
    u.aly.ba a(int) -> a
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    u.aly.ba$e c(int) -> c
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void m() -> m
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn n() -> n
    u.aly.dd o() -> o
    u.aly.dd p() -> p
    u.aly.dd q() -> q
u.aly.ba$1 -> u.aly.dq:
u.aly.ba$a -> u.aly.dr:
    void a(u.aly.di,u.aly.ba) -> a
    void b(u.aly.di,u.aly.ba) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.ba$b -> u.aly.ds:
    u.aly.ba$a a() -> a
    u.aly.dq b() -> b
u.aly.ba$c -> u.aly.dt:
    void a(u.aly.di,u.aly.ba) -> a
    void b(u.aly.di,u.aly.ba) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.ba$d -> u.aly.du:
    u.aly.ba$c a() -> a
    u.aly.dq b() -> b
u.aly.ba$e -> u.aly.ba$e:
    u.aly.ba$e a -> a
    u.aly.ba$e b -> b
    u.aly.ba$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ba$e[] g -> g
    u.aly.ba$e[] values() -> values
    u.aly.ba$e valueOf(java.lang.String) -> valueOf
    u.aly.ba$e a(int) -> a
    u.aly.ba$e b(int) -> b
    u.aly.ba$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bb -> u.aly.bb:
    u.aly.dn e -> e
    u.aly.dd f -> f
    u.aly.dd g -> g
    u.aly.dd h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    java.util.List b -> b
    java.lang.String c -> c
    u.aly.bb$e[] j -> j
    java.util.Map d -> d
    u.aly.bb a() -> a
    void b() -> b
    int c() -> c
    void a(java.lang.String,u.aly.ba) -> a
    java.util.Map d() -> d
    u.aly.bb a(java.util.Map) -> a
    void e() -> e
    boolean f() -> f
    void a(boolean) -> a
    int h() -> h
    java.util.Iterator i() -> i
    void a(u.aly.az) -> a
    java.util.List j() -> j
    u.aly.bb a(java.util.List) -> a
    void k() -> k
    boolean l() -> l
    void b(boolean) -> b
    java.lang.String m() -> m
    u.aly.bb a(java.lang.String) -> a
    void n() -> n
    boolean o() -> o
    void c(boolean) -> c
    u.aly.bb$e a(int) -> a
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void p() -> p
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn q() -> q
    u.aly.dd r() -> r
    u.aly.dd s() -> s
    u.aly.dd t() -> t
u.aly.bb$1 -> u.aly.dv:
u.aly.bb$a -> u.aly.dw:
    void a(u.aly.di,u.aly.bb) -> a
    void b(u.aly.di,u.aly.bb) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bb$b -> u.aly.dy:
    u.aly.bb$a a() -> a
    u.aly.dq b() -> b
u.aly.bb$c -> u.aly.dz:
    void a(u.aly.di,u.aly.bb) -> a
    void b(u.aly.di,u.aly.bb) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bb$d -> u.aly.ea:
    u.aly.bb$c a() -> a
    u.aly.dq b() -> b
u.aly.bb$e -> u.aly.bb$e:
    u.aly.bb$e a -> a
    u.aly.bb$e b -> b
    u.aly.bb$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bb$e[] g -> g
    u.aly.bb$e[] values() -> values
    u.aly.bb$e valueOf(java.lang.String) -> valueOf
    u.aly.bb$e a(int) -> a
    u.aly.bb$e b(int) -> b
    u.aly.bb$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bc -> u.aly.bc:
    u.aly.dn e -> e
    u.aly.dd f -> f
    u.aly.dd g -> g
    u.aly.dd h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    int b -> b
    java.lang.String c -> c
    byte k -> j
    java.util.Map d -> d
    u.aly.bc a() -> a
    void b() -> b
    int c() -> c
    void a(java.lang.String,u.aly.bd) -> a
    java.util.Map d() -> d
    u.aly.bc a(java.util.Map) -> a
    void e() -> e
    boolean f() -> f
    void a(boolean) -> a
    int h() -> h
    u.aly.bc a(int) -> a
    void i() -> i
    boolean j() -> j
    void b(boolean) -> b
    java.lang.String k() -> k
    u.aly.bc a(java.lang.String) -> a
    void l() -> l
    boolean m() -> m
    void c(boolean) -> c
    u.aly.bc$e c(int) -> c
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void n() -> n
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn o() -> o
    u.aly.dd p() -> p
    u.aly.dd q() -> q
    u.aly.dd r() -> r
u.aly.bc$1 -> u.aly.eb:
u.aly.bc$a -> u.aly.ec:
    void a(u.aly.di,u.aly.bc) -> a
    void b(u.aly.di,u.aly.bc) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bc$b -> u.aly.ed:
    u.aly.bc$a a() -> a
    u.aly.dq b() -> b
u.aly.bc$c -> u.aly.ee:
    void a(u.aly.di,u.aly.bc) -> a
    void b(u.aly.di,u.aly.bc) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bc$d -> u.aly.ef:
    u.aly.bc$c a() -> a
    u.aly.dq b() -> b
u.aly.bc$e -> u.aly.bc$e:
    u.aly.bc$e a -> a
    u.aly.bc$e b -> b
    u.aly.bc$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bc$e[] g -> g
    u.aly.bc$e[] values() -> values
    u.aly.bc$e valueOf(java.lang.String) -> valueOf
    u.aly.bc$e a(int) -> a
    u.aly.bc$e b(int) -> b
    u.aly.bc$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bd -> u.aly.bd:
    u.aly.dn e -> e
    u.aly.dd f -> f
    u.aly.dd g -> g
    u.aly.dd h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    java.lang.String c -> c
    byte k -> j
    u.aly.bd$e[] l -> k
    java.util.Map d -> d
    u.aly.bd a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.bd a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    long f() -> f
    u.aly.bd a(long) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    java.lang.String j() -> j
    u.aly.bd b(java.lang.String) -> b
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    u.aly.bd$e a(int) -> a
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void m() -> m
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn n() -> n
    u.aly.dd o() -> o
    u.aly.dd p() -> p
    u.aly.dd q() -> q
u.aly.bd$1 -> u.aly.eg:
u.aly.bd$a -> u.aly.eh:
    void a(u.aly.di,u.aly.bd) -> a
    void b(u.aly.di,u.aly.bd) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bd$b -> u.aly.ei:
    u.aly.bd$a a() -> a
    u.aly.dq b() -> b
u.aly.bd$c -> u.aly.ej:
    void a(u.aly.di,u.aly.bd) -> a
    void b(u.aly.di,u.aly.bd) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bd$d -> u.aly.ek:
    u.aly.bd$c a() -> a
    u.aly.dq b() -> b
u.aly.bd$e -> u.aly.bd$e:
    u.aly.bd$e a -> a
    u.aly.bd$e b -> b
    u.aly.bd$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bd$e[] g -> g
    u.aly.bd$e[] values() -> values
    u.aly.bd$e valueOf(java.lang.String) -> valueOf
    u.aly.bd$e a(int) -> a
    u.aly.bd$e b(int) -> b
    u.aly.bd$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.be -> u.aly.be:
    u.aly.dn f -> f
    u.aly.dd g -> g
    u.aly.dd h -> h
    u.aly.dd i -> i
    u.aly.dd j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    u.aly.be$e[] l -> l
    java.util.Map e -> e
    u.aly.be a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.be a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    int f() -> f
    java.util.Iterator h() -> h
    void a(u.aly.av) -> a
    java.util.List i() -> i
    u.aly.be a(java.util.List) -> a
    void j() -> j
    boolean k() -> k
    void b(boolean) -> b
    int l() -> l
    java.util.Iterator m() -> m
    void a(u.aly.ax) -> a
    java.util.List n() -> n
    u.aly.be b(java.util.List) -> b
    void o() -> o
    boolean p() -> p
    void c(boolean) -> c
    int q() -> q
    java.util.Iterator r() -> r
    void b(u.aly.ax) -> b
    java.util.List s() -> s
    u.aly.be c(java.util.List) -> c
    void t() -> t
    boolean u() -> u
    void d(boolean) -> d
    u.aly.be$e a(int) -> a
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void v() -> v
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn w() -> w
    u.aly.dd x() -> x
    u.aly.dd y() -> y
    u.aly.dd z() -> z
    u.aly.dd A() -> A
u.aly.be$1 -> u.aly.el:
u.aly.be$a -> u.aly.em:
    void a(u.aly.di,u.aly.be) -> a
    void b(u.aly.di,u.aly.be) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.be$b -> u.aly.en:
    u.aly.be$a a() -> a
    u.aly.dq b() -> b
u.aly.be$c -> u.aly.eo:
    void a(u.aly.di,u.aly.be) -> a
    void b(u.aly.di,u.aly.be) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.be$d -> u.aly.ep:
    u.aly.be$c a() -> a
    u.aly.dq b() -> b
u.aly.be$e -> u.aly.be$e:
    u.aly.be$e a -> a
    u.aly.be$e b -> b
    u.aly.be$e c -> c
    u.aly.be$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.be$e[] h -> h
    u.aly.be$e[] values() -> values
    u.aly.be$e valueOf(java.lang.String) -> valueOf
    u.aly.be$e a(int) -> a
    u.aly.be$e b(int) -> b
    u.aly.be$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bf -> u.aly.bf:
    u.aly.dn d -> d
    u.aly.dd e -> e
    u.aly.dd f -> f
    java.util.Map g -> g
    int a -> a
    long b -> b
    byte j -> h
    java.util.Map c -> c
    u.aly.bf a() -> a
    void b() -> b
    int c() -> c
    u.aly.bf a(int) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    long f() -> f
    u.aly.bf a(long) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    u.aly.bf$e c(int) -> c
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void j() -> j
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn k() -> k
    u.aly.dd l() -> l
    u.aly.dd m() -> m
u.aly.bf$1 -> u.aly.eq:
u.aly.bf$a -> u.aly.er:
    void a(u.aly.di,u.aly.bf) -> a
    void b(u.aly.di,u.aly.bf) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bf$b -> u.aly.es:
    u.aly.bf$a a() -> a
    u.aly.dq b() -> b
u.aly.bf$c -> u.aly.et:
    void a(u.aly.di,u.aly.bf) -> a
    void b(u.aly.di,u.aly.bf) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bf$d -> u.aly.eu:
    u.aly.bf$c a() -> a
    u.aly.dq b() -> b
u.aly.bf$e -> u.aly.bf$e:
    u.aly.bf$e a -> a
    u.aly.bf$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bf$e[] f -> f
    u.aly.bf$e[] values() -> values
    u.aly.bf$e valueOf(java.lang.String) -> valueOf
    u.aly.bf$e a(int) -> a
    u.aly.bf$e b(int) -> b
    u.aly.bf$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bg -> u.aly.bg:
    u.aly.dn e -> e
    u.aly.dd f -> f
    u.aly.dd g -> g
    u.aly.dd h -> h
    java.util.Map i -> i
    double a -> a
    double b -> b
    long c -> c
    byte m -> j
    java.util.Map d -> d
    u.aly.bg a() -> a
    void b() -> b
    double c() -> c
    u.aly.bg a(double) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    double f() -> f
    u.aly.bg b(double) -> b
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    long j() -> j
    u.aly.bg a(long) -> a
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    u.aly.bg$e a(int) -> a
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void m() -> m
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn n() -> n
    u.aly.dd o() -> o
    u.aly.dd p() -> p
    u.aly.dd q() -> q
u.aly.bg$1 -> u.aly.ev:
u.aly.bg$a -> u.aly.ew:
    void a(u.aly.di,u.aly.bg) -> a
    void b(u.aly.di,u.aly.bg) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bg$b -> u.aly.ex:
    u.aly.bg$a a() -> a
    u.aly.dq b() -> b
u.aly.bg$c -> u.aly.ey:
    void a(u.aly.di,u.aly.bg) -> a
    void b(u.aly.di,u.aly.bg) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bg$d -> u.aly.ez:
    u.aly.bg$c a() -> a
    u.aly.dq b() -> b
u.aly.bg$e -> u.aly.bg$e:
    u.aly.bg$e a -> a
    u.aly.bg$e b -> b
    u.aly.bg$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bg$e[] g -> g
    u.aly.bg$e[] values() -> values
    u.aly.bg$e valueOf(java.lang.String) -> valueOf
    u.aly.bg$e a(int) -> a
    u.aly.bg$e b(int) -> b
    u.aly.bg$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bh -> u.aly.bh:
    u.aly.dn l -> l
    u.aly.dd m -> m
    u.aly.dd n -> n
    u.aly.dd o -> o
    u.aly.dd p -> p
    u.aly.dd q -> q
    u.aly.dd r -> r
    u.aly.dd s -> s
    u.aly.dd t -> t
    u.aly.dd u -> u
    u.aly.dd v -> v
    java.util.Map w -> w
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    double d -> d
    double e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    u.aly.an i -> i
    java.lang.String j -> j
    byte B -> x
    u.aly.bh$e[] C -> y
    java.util.Map k -> k
    u.aly.bh a() -> a
    void b() -> b
    int c() -> c
    u.aly.bh a(int) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    u.aly.bh a(java.lang.String) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    java.lang.String j() -> j
    u.aly.bh b(java.lang.String) -> b
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    double m() -> m
    u.aly.bh a(double) -> a
    void n() -> n
    boolean o() -> o
    void d(boolean) -> d
    double p() -> p
    u.aly.bh b(double) -> b
    void q() -> q
    boolean r() -> r
    void e(boolean) -> e
    java.lang.String s() -> s
    u.aly.bh c(java.lang.String) -> c
    void t() -> t
    boolean u() -> u
    void f(boolean) -> f
    int v() -> v
    u.aly.bh c(int) -> c
    void w() -> w
    boolean x() -> x
    void g(boolean) -> g
    java.lang.String y() -> y
    u.aly.bh d(java.lang.String) -> d
    void z() -> z
    boolean A() -> A
    void h(boolean) -> h
    u.aly.an B() -> B
    u.aly.bh a(u.aly.an) -> a
    void C() -> C
    boolean D() -> D
    void i(boolean) -> i
    java.lang.String E() -> E
    u.aly.bh e(java.lang.String) -> e
    void F() -> F
    boolean G() -> G
    void j(boolean) -> j
    u.aly.bh$e d(int) -> d
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void H() -> H
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn I() -> I
    u.aly.dd J() -> J
    u.aly.dd K() -> K
    u.aly.dd L() -> L
    u.aly.dd M() -> M
    u.aly.dd N() -> N
    u.aly.dd O() -> O
    u.aly.dd P() -> P
    u.aly.dd Q() -> Q
    u.aly.dd R() -> R
    u.aly.dd S() -> S
u.aly.bh$1 -> u.aly.fa:
u.aly.bh$a -> u.aly.fb:
    void a(u.aly.di,u.aly.bh) -> a
    void b(u.aly.di,u.aly.bh) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bh$b -> u.aly.fc:
    u.aly.bh$a a() -> a
    u.aly.dq b() -> b
u.aly.bh$c -> u.aly.fd:
    void a(u.aly.di,u.aly.bh) -> a
    void b(u.aly.di,u.aly.bh) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bh$d -> u.aly.fe:
    u.aly.bh$c a() -> a
    u.aly.dq b() -> b
u.aly.bh$e -> u.aly.bh$e:
    u.aly.bh$e a -> a
    u.aly.bh$e b -> b
    u.aly.bh$e c -> c
    u.aly.bh$e d -> d
    u.aly.bh$e e -> e
    u.aly.bh$e f -> f
    u.aly.bh$e g -> g
    u.aly.bh$e h -> h
    u.aly.bh$e i -> i
    u.aly.bh$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.bh$e[] n -> n
    u.aly.bh$e[] values() -> values
    u.aly.bh$e valueOf(java.lang.String) -> valueOf
    u.aly.bh$e a(int) -> a
    u.aly.bh$e b(int) -> b
    u.aly.bh$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bi -> u.aly.bi:
    u.aly.dn d -> d
    u.aly.dd e -> e
    u.aly.dd f -> f
    java.util.Map g -> g
    java.lang.String a -> a
    long b -> b
    byte i -> h
    java.util.Map c -> c
    u.aly.bi a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.bi a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    long f() -> f
    u.aly.bi a(long) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    u.aly.bi$e a(int) -> a
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void j() -> j
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn k() -> k
    u.aly.dd l() -> l
    u.aly.dd m() -> m
u.aly.bi$1 -> u.aly.ff:
u.aly.bi$a -> u.aly.fg:
    void a(u.aly.di,u.aly.bi) -> a
    void b(u.aly.di,u.aly.bi) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bi$b -> u.aly.fh:
    u.aly.bi$a a() -> a
    u.aly.dq b() -> b
u.aly.bi$c -> u.aly.fi:
    void a(u.aly.di,u.aly.bi) -> a
    void b(u.aly.di,u.aly.bi) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bi$d -> u.aly.fj:
    u.aly.bi$c a() -> a
    u.aly.dq b() -> b
u.aly.bi$e -> u.aly.bi$e:
    u.aly.bi$e a -> a
    u.aly.bi$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bi$e[] f -> f
    u.aly.bi$e[] values() -> values
    u.aly.bi$e valueOf(java.lang.String) -> valueOf
    u.aly.bi$e a(int) -> a
    u.aly.bi$e b(int) -> b
    u.aly.bi$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bj -> u.aly.bj:
    u.aly.dn d -> d
    u.aly.dd e -> e
    u.aly.dd f -> f
    java.util.Map a -> a
    u.aly.bj a() -> a
    u.aly.bj a(java.lang.String) -> a
    u.aly.bj a(long) -> a
    void a(u.aly.bj$a,java.lang.Object) -> a
    java.lang.Object a(u.aly.di,u.aly.dd) -> a
    void c(u.aly.di) -> c
    java.lang.Object a(u.aly.di,short) -> a
    void d(u.aly.di) -> d
    u.aly.dd a(u.aly.bj$a) -> a
    u.aly.dn c() -> c
    u.aly.bj$a a(short) -> a
    u.aly.bj$a a(int) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    long e() -> e
    void b(long) -> b
    boolean f() -> f
    boolean h() -> h
    boolean equals(java.lang.Object) -> equals
    boolean a(u.aly.bj) -> a
    int b(u.aly.bj) -> b
    int hashCode() -> hashCode
    u.aly.cq b(short) -> b
    u.aly.dd a(u.aly.cq) -> a
    void a(u.aly.cq,java.lang.Object) -> a
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
u.aly.bj$1 -> u.aly.fk:
    int[] a -> a
u.aly.bj$a -> u.aly.bj$a:
    u.aly.bj$a a -> a
    u.aly.bj$a b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bj$a[] f -> f
    u.aly.bj$a[] values() -> values
    u.aly.bj$a valueOf(java.lang.String) -> valueOf
    u.aly.bj$a a(int) -> a
    u.aly.bj$a b(int) -> b
    u.aly.bj$a a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bk -> u.aly.bk:
    u.aly.dn d -> d
    u.aly.dd e -> e
    u.aly.dd f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    u.aly.bk a() -> a
    void b() -> b
    int c() -> c
    u.aly.bk a(int) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    int f() -> f
    u.aly.bk c(int) -> c
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    u.aly.bk$e d(int) -> d
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void j() -> j
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn k() -> k
    u.aly.dd l() -> l
    u.aly.dd m() -> m
u.aly.bk$1 -> u.aly.fl:
u.aly.bk$a -> u.aly.fm:
    void a(u.aly.di,u.aly.bk) -> a
    void b(u.aly.di,u.aly.bk) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bk$b -> u.aly.fn:
    u.aly.bk$a a() -> a
    u.aly.dq b() -> b
u.aly.bk$c -> u.aly.fo:
    void a(u.aly.di,u.aly.bk) -> a
    void b(u.aly.di,u.aly.bk) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bk$d -> u.aly.fp:
    u.aly.bk$c a() -> a
    u.aly.dq b() -> b
u.aly.bk$e -> u.aly.bk$e:
    u.aly.bk$e a -> a
    u.aly.bk$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bk$e[] f -> f
    u.aly.bk$e[] values() -> values
    u.aly.bk$e valueOf(java.lang.String) -> valueOf
    u.aly.bk$e a(int) -> a
    u.aly.bk$e b(int) -> b
    u.aly.bk$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bl -> u.aly.bl:
    u.aly.dn e -> e
    u.aly.dd f -> f
    u.aly.dd g -> g
    u.aly.dd h -> h
    java.util.Map i -> i
    int a -> a
    java.lang.String b -> b
    u.aly.bc c -> c
    byte k -> j
    u.aly.bl$e[] l -> k
    java.util.Map d -> d
    u.aly.bl a() -> a
    void b() -> b
    int c() -> c
    u.aly.bl a(int) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    u.aly.bl a(java.lang.String) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    u.aly.bc j() -> j
    u.aly.bl a(u.aly.bc) -> a
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    u.aly.bl$e c(int) -> c
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void m() -> m
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn n() -> n
    u.aly.dd o() -> o
    u.aly.dd p() -> p
    u.aly.dd q() -> q
u.aly.bl$1 -> u.aly.fq:
u.aly.bl$a -> u.aly.fr:
    void a(u.aly.di,u.aly.bl) -> a
    void b(u.aly.di,u.aly.bl) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bl$b -> u.aly.fs:
    u.aly.bl$a a() -> a
    u.aly.dq b() -> b
u.aly.bl$c -> u.aly.ft:
    void a(u.aly.di,u.aly.bl) -> a
    void b(u.aly.di,u.aly.bl) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bl$d -> u.aly.fu:
    u.aly.bl$c a() -> a
    u.aly.dq b() -> b
u.aly.bl$e -> u.aly.bl$e:
    u.aly.bl$e a -> a
    u.aly.bl$e b -> b
    u.aly.bl$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bl$e[] g -> g
    u.aly.bl$e[] values() -> values
    u.aly.bl$e valueOf(java.lang.String) -> valueOf
    u.aly.bl$e a(int) -> a
    u.aly.bl$e b(int) -> b
    u.aly.bl$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bm -> u.aly.bm:
    u.aly.bm a -> a
    u.aly.bm b -> b
    u.aly.bm c -> c
    u.aly.bm d -> d
    int e -> e
    u.aly.bm[] f -> f
    u.aly.bm[] values() -> values
    u.aly.bm valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.bm a(int) -> a
u.aly.bn -> u.aly.bn:
    u.aly.dn i -> i
    u.aly.dd j -> j
    u.aly.dd k -> k
    u.aly.dd l -> l
    u.aly.dd m -> m
    u.aly.dd n -> n
    u.aly.dd o -> o
    u.aly.dd p -> p
    java.util.Map q -> q
    java.lang.String a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.List e -> e
    java.util.List f -> f
    u.aly.bo g -> g
    byte u -> r
    u.aly.bn$e[] v -> s
    java.util.Map h -> h
    u.aly.bn a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.bn a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    long f() -> f
    u.aly.bn a(long) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    long j() -> j
    u.aly.bn b(long) -> b
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    long m() -> m
    u.aly.bn c(long) -> c
    void n() -> n
    boolean o() -> o
    void d(boolean) -> d
    int p() -> p
    java.util.Iterator q() -> q
    void a(u.aly.bi) -> a
    java.util.List r() -> r
    u.aly.bn a(java.util.List) -> a
    void s() -> s
    boolean t() -> t
    void e(boolean) -> e
    int u() -> u
    java.util.Iterator v() -> v
    void a(u.aly.bg) -> a
    java.util.List w() -> w
    u.aly.bn b(java.util.List) -> b
    void x() -> x
    boolean y() -> y
    void f(boolean) -> f
    u.aly.bo z() -> z
    u.aly.bn a(u.aly.bo) -> a
    void A() -> A
    boolean B() -> B
    void g(boolean) -> g
    u.aly.bn$e a(int) -> a
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void C() -> C
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn D() -> D
    u.aly.dd E() -> E
    u.aly.dd F() -> F
    u.aly.dd G() -> G
    u.aly.dd H() -> H
    u.aly.dd I() -> I
    u.aly.dd J() -> J
    u.aly.dd K() -> K
u.aly.bn$1 -> u.aly.fv:
u.aly.bn$a -> u.aly.fw:
    void a(u.aly.di,u.aly.bn) -> a
    void b(u.aly.di,u.aly.bn) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bn$b -> u.aly.fx:
    u.aly.bn$a a() -> a
    u.aly.dq b() -> b
u.aly.bn$c -> u.aly.fy:
    void a(u.aly.di,u.aly.bn) -> a
    void b(u.aly.di,u.aly.bn) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bn$d -> u.aly.fz:
    u.aly.bn$c a() -> a
    u.aly.dq b() -> b
u.aly.bn$e -> u.aly.bn$e:
    u.aly.bn$e a -> a
    u.aly.bn$e b -> b
    u.aly.bn$e c -> c
    u.aly.bn$e d -> d
    u.aly.bn$e e -> e
    u.aly.bn$e f -> f
    u.aly.bn$e g -> g
    java.util.Map h -> h
    short i -> i
    java.lang.String j -> j
    u.aly.bn$e[] k -> k
    u.aly.bn$e[] values() -> values
    u.aly.bn$e valueOf(java.lang.String) -> valueOf
    u.aly.bn$e a(int) -> a
    u.aly.bn$e b(int) -> b
    u.aly.bn$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bo -> u.aly.bo:
    u.aly.dn d -> d
    u.aly.dd e -> e
    u.aly.dd f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    u.aly.bo a() -> a
    void b() -> b
    int c() -> c
    u.aly.bo a(int) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    int f() -> f
    u.aly.bo c(int) -> c
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    u.aly.bo$e d(int) -> d
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void j() -> j
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn k() -> k
    u.aly.dd l() -> l
    u.aly.dd m() -> m
u.aly.bo$1 -> u.aly.ga:
u.aly.bo$a -> u.aly.gb:
    void a(u.aly.di,u.aly.bo) -> a
    void b(u.aly.di,u.aly.bo) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bo$b -> u.aly.gc:
    u.aly.bo$a a() -> a
    u.aly.dq b() -> b
u.aly.bo$c -> u.aly.gd:
    void a(u.aly.di,u.aly.bo) -> a
    void b(u.aly.di,u.aly.bo) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bo$d -> u.aly.ge:
    u.aly.bo$c a() -> a
    u.aly.dq b() -> b
u.aly.bo$e -> u.aly.bo$e:
    u.aly.bo$e a -> a
    u.aly.bo$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bo$e[] f -> f
    u.aly.bo$e[] values() -> values
    u.aly.bo$e valueOf(java.lang.String) -> valueOf
    u.aly.bo$e a(int) -> a
    u.aly.bo$e b(int) -> b
    u.aly.bo$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bp -> u.aly.bp:
    u.aly.dn n -> n
    u.aly.dd o -> o
    u.aly.dd p -> p
    u.aly.dd q -> q
    u.aly.dd r -> r
    u.aly.dd s -> s
    u.aly.dd t -> t
    u.aly.dd u -> u
    u.aly.dd v -> v
    u.aly.dd w -> w
    u.aly.dd x -> x
    u.aly.dd y -> y
    u.aly.dd z -> z
    java.util.Map A -> A
    u.aly.ar a -> a
    u.aly.aq b -> b
    u.aly.at c -> c
    u.aly.bh d -> d
    u.aly.ao e -> e
    java.util.List f -> f
    java.util.List g -> g
    u.aly.bc h -> h
    u.aly.bb i -> i
    u.aly.ap j -> j
    u.aly.as k -> k
    java.util.Map l -> l
    u.aly.bp$e[] B -> B
    java.util.Map m -> m
    u.aly.bp a() -> a
    void b() -> b
    u.aly.ar c() -> c
    u.aly.bp a(u.aly.ar) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    u.aly.aq f() -> f
    u.aly.bp a(u.aly.aq) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    u.aly.at j() -> j
    u.aly.bp a(u.aly.at) -> a
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    u.aly.bh m() -> m
    u.aly.bp a(u.aly.bh) -> a
    void n() -> n
    boolean o() -> o
    void d(boolean) -> d
    u.aly.ao p() -> p
    u.aly.bp a(u.aly.ao) -> a
    void q() -> q
    boolean r() -> r
    void e(boolean) -> e
    int s() -> s
    java.util.Iterator t() -> t
    void a(u.aly.be) -> a
    java.util.List u() -> u
    u.aly.bp a(java.util.List) -> a
    void v() -> v
    boolean w() -> w
    void f(boolean) -> f
    int x() -> x
    java.util.Iterator y() -> y
    void a(u.aly.bn) -> a
    java.util.List z() -> z
    u.aly.bp b(java.util.List) -> b
    void A() -> A
    boolean B() -> B
    void g(boolean) -> g
    u.aly.bc C() -> C
    u.aly.bp a(u.aly.bc) -> a
    void D() -> D
    boolean E() -> E
    void h(boolean) -> h
    u.aly.bb F() -> F
    u.aly.bp a(u.aly.bb) -> a
    void G() -> G
    boolean H() -> H
    void i(boolean) -> i
    u.aly.ap I() -> I
    u.aly.bp a(u.aly.ap) -> a
    void J() -> J
    boolean K() -> K
    void j(boolean) -> j
    u.aly.as L() -> L
    u.aly.bp a(u.aly.as) -> a
    void M() -> M
    boolean N() -> N
    void k(boolean) -> k
    int O() -> O
    void a(java.lang.String,int) -> a
    java.util.Map P() -> P
    u.aly.bp a(java.util.Map) -> a
    void Q() -> Q
    boolean R() -> R
    void l(boolean) -> l
    u.aly.bp$e a(int) -> a
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void S() -> S
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn T() -> T
    u.aly.dd U() -> U
    u.aly.dd V() -> V
    u.aly.dd W() -> W
    u.aly.dd X() -> X
    u.aly.dd Y() -> Y
    u.aly.dd Z() -> Z
    u.aly.dd aa() -> aa
    u.aly.dd ab() -> ab
    u.aly.dd ac() -> ac
    u.aly.dd ad() -> ad
    u.aly.dd ae() -> ae
    u.aly.dd af() -> af
u.aly.bp$1 -> u.aly.gf:
u.aly.bp$a -> u.aly.gg:
    void a(u.aly.di,u.aly.bp) -> a
    void b(u.aly.di,u.aly.bp) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bp$b -> u.aly.gh:
    u.aly.bp$a a() -> a
    u.aly.dq b() -> b
u.aly.bp$c -> u.aly.gi:
    void a(u.aly.di,u.aly.bp) -> a
    void b(u.aly.di,u.aly.bp) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bp$d -> u.aly.gj:
    u.aly.bp$c a() -> a
    u.aly.dq b() -> b
u.aly.bp$e -> u.aly.bp$e:
    u.aly.bp$e a -> a
    u.aly.bp$e b -> b
    u.aly.bp$e c -> c
    u.aly.bp$e d -> d
    u.aly.bp$e e -> e
    u.aly.bp$e f -> f
    u.aly.bp$e g -> g
    u.aly.bp$e h -> h
    u.aly.bp$e i -> i
    u.aly.bp$e j -> j
    u.aly.bp$e k -> k
    u.aly.bp$e l -> l
    java.util.Map m -> m
    short n -> n
    java.lang.String o -> o
    u.aly.bp$e[] p -> p
    u.aly.bp$e[] values() -> values
    u.aly.bp$e valueOf(java.lang.String) -> valueOf
    u.aly.bp$e a(int) -> a
    u.aly.bp$e b(int) -> b
    u.aly.bp$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bq -> u.aly.bq:
    u.aly.dn f -> f
    u.aly.dd g -> g
    u.aly.dd h -> h
    u.aly.dd i -> i
    u.aly.dd j -> j
    java.util.Map k -> k
    u.aly.ay a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    byte m -> l
    u.aly.bq$e[] n -> m
    java.util.Map e -> e
    u.aly.bq a() -> a
    void b() -> b
    u.aly.ay c() -> c
    u.aly.bq a(u.aly.ay) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    int f() -> f
    u.aly.bq a(int) -> a
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    java.lang.String j() -> j
    u.aly.bq a(java.lang.String) -> a
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    java.lang.String m() -> m
    u.aly.bq b(java.lang.String) -> b
    void n() -> n
    boolean o() -> o
    void d(boolean) -> d
    u.aly.bq$e c(int) -> c
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void p() -> p
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn q() -> q
    u.aly.dd r() -> r
    u.aly.dd s() -> s
    u.aly.dd t() -> t
    u.aly.dd u() -> u
u.aly.bq$1 -> u.aly.gk:
u.aly.bq$a -> u.aly.gl:
    void a(u.aly.di,u.aly.bq) -> a
    void b(u.aly.di,u.aly.bq) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bq$b -> u.aly.gm:
    u.aly.bq$a a() -> a
    u.aly.dq b() -> b
u.aly.bq$c -> u.aly.gn:
    void a(u.aly.di,u.aly.bq) -> a
    void b(u.aly.di,u.aly.bq) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.bq$d -> u.aly.go:
    u.aly.bq$c a() -> a
    u.aly.dq b() -> b
u.aly.bq$e -> u.aly.bq$e:
    u.aly.bq$e a -> a
    u.aly.bq$e b -> b
    u.aly.bq$e c -> c
    u.aly.bq$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.bq$e[] h -> h
    u.aly.bq$e[] values() -> values
    u.aly.bq$e valueOf(java.lang.String) -> valueOf
    u.aly.bq$e a(int) -> a
    u.aly.bq$e b(int) -> b
    u.aly.bq$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.br -> u.aly.br:
    u.aly.dn l -> l
    u.aly.dd m -> m
    u.aly.dd n -> n
    u.aly.dd o -> o
    u.aly.dd p -> p
    u.aly.dd q -> q
    u.aly.dd r -> r
    u.aly.dd s -> s
    u.aly.dd t -> t
    u.aly.dd u -> u
    u.aly.dd v -> v
    java.util.Map w -> w
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    java.nio.ByteBuffer g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    byte B -> x
    u.aly.br$e[] C -> y
    java.util.Map k -> k
    u.aly.br a() -> a
    void b() -> b
    java.lang.String c() -> c
    u.aly.br a(java.lang.String) -> a
    void d() -> d
    boolean e() -> e
    void a(boolean) -> a
    java.lang.String f() -> f
    u.aly.br b(java.lang.String) -> b
    void h() -> h
    boolean i() -> i
    void b(boolean) -> b
    java.lang.String j() -> j
    u.aly.br c(java.lang.String) -> c
    void k() -> k
    boolean l() -> l
    void c(boolean) -> c
    int m() -> m
    u.aly.br a(int) -> a
    void n() -> n
    boolean o() -> o
    void d(boolean) -> d
    int p() -> p
    u.aly.br c(int) -> c
    void q() -> q
    boolean r() -> r
    void e(boolean) -> e
    int s() -> s
    u.aly.br d(int) -> d
    void t() -> t
    boolean u() -> u
    void f(boolean) -> f
    byte[] v() -> v
    java.nio.ByteBuffer w() -> w
    u.aly.br a(byte[]) -> a
    u.aly.br a(java.nio.ByteBuffer) -> a
    void x() -> x
    boolean y() -> y
    void g(boolean) -> g
    java.lang.String z() -> z
    u.aly.br d(java.lang.String) -> d
    void A() -> A
    boolean B() -> B
    void h(boolean) -> h
    java.lang.String C() -> C
    u.aly.br e(java.lang.String) -> e
    void D() -> D
    boolean E() -> E
    void i(boolean) -> i
    int F() -> F
    u.aly.br e(int) -> e
    void G() -> G
    boolean H() -> H
    void j(boolean) -> j
    u.aly.br$e f(int) -> f
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    java.lang.String toString() -> toString
    void I() -> I
    u.aly.cj g() -> g
    u.aly.cq b(int) -> b
    u.aly.dn J() -> J
    u.aly.dd K() -> K
    u.aly.dd L() -> L
    u.aly.dd M() -> M
    u.aly.dd N() -> N
    u.aly.dd O() -> O
    u.aly.dd P() -> P
    u.aly.dd Q() -> Q
    u.aly.dd R() -> R
    u.aly.dd S() -> S
    u.aly.dd T() -> T
u.aly.br$1 -> u.aly.gp:
u.aly.br$a -> u.aly.gq:
    void a(u.aly.di,u.aly.br) -> a
    void b(u.aly.di,u.aly.br) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.br$b -> u.aly.gr:
    u.aly.br$a a() -> a
    u.aly.dq b() -> b
u.aly.br$c -> u.aly.gs:
    void a(u.aly.di,u.aly.br) -> a
    void b(u.aly.di,u.aly.br) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.br$d -> u.aly.gt:
    u.aly.br$c a() -> a
    u.aly.dq b() -> b
u.aly.br$e -> u.aly.br$e:
    u.aly.br$e a -> a
    u.aly.br$e b -> b
    u.aly.br$e c -> c
    u.aly.br$e d -> d
    u.aly.br$e e -> e
    u.aly.br$e f -> f
    u.aly.br$e g -> g
    u.aly.br$e h -> h
    u.aly.br$e i -> i
    u.aly.br$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.br$e[] n -> n
    u.aly.br$e[] values() -> values
    u.aly.br$e valueOf(java.lang.String) -> valueOf
    u.aly.br$e a(int) -> a
    u.aly.br$e b(int) -> b
    u.aly.br$e a(java.lang.String) -> a
    short a() -> a
    java.lang.String b() -> b
u.aly.bs -> u.aly.bs:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    boolean a(java.lang.String,android.content.Context) -> a
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String e(android.content.Context) -> e
    java.lang.String[] a(javax.microedition.khronos.opengles.GL10) -> a
    java.lang.String a() -> a
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String[] j(android.content.Context) -> j
    boolean k(android.content.Context) -> k
    boolean l(android.content.Context) -> l
    boolean b() -> b
    int m(android.content.Context) -> m
    java.lang.String[] n(android.content.Context) -> n
    java.util.Locale x(android.content.Context) -> x
    java.lang.String o(android.content.Context) -> o
    java.lang.String p(android.content.Context) -> p
    java.lang.String q(android.content.Context) -> q
    int[] r(android.content.Context) -> r
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String s(android.content.Context) -> s
    java.lang.String a(java.util.Date) -> a
    java.lang.String c() -> c
    java.util.Date a(java.lang.String) -> a
    int a(java.util.Date,java.util.Date) -> a
    java.lang.String t(android.content.Context) -> t
    java.lang.String u(android.content.Context) -> u
    java.lang.String v(android.content.Context) -> v
    boolean w(android.content.Context) -> w
u.aly.bt -> u.aly.bt:
    boolean a -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Exception) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> e
u.aly.bx -> u.aly.bx:
    u.aly.bx$a a -> a
u.aly.bx$a -> u.aly.bx$a:
    u.aly.bx$a a -> a
    u.aly.bx$a b -> b
    u.aly.bx$a[] c -> c
    u.aly.bx$a[] values() -> values
    u.aly.bx$a valueOf(java.lang.String) -> valueOf
u.aly.c -> u.aly.gu:
    byte[] a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    byte[] f -> f
    byte[] g -> g
    byte[] h -> h
    int i -> i
    int j -> j
    int k -> k
    byte[] l -> l
    byte[] m -> m
    boolean n -> n
    java.lang.String a(android.content.Context) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void a(int) -> a
    void a(boolean) -> a
    u.aly.c a(android.content.Context,java.lang.String,byte[]) -> a
    u.aly.c b(android.content.Context,java.lang.String,byte[]) -> b
    void b() -> b
    byte[] a(byte[],int) -> a
    byte[] d() -> d
    byte[] e() -> e
    byte[] c() -> c
    void b(android.content.Context) -> b
    java.lang.String toString() -> toString
u.aly.ca -> u.aly.gv:
u.aly.ce -> u.aly.ce:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[]) -> a
    java.lang.String a(byte[],java.lang.String) -> a
    byte[] b(byte[]) -> b
u.aly.cf -> u.aly.cf:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(java.io.File) -> a
    java.lang.String a(android.content.Context,long) -> a
    java.lang.String c(java.lang.String) -> c
    void a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String) -> b
    boolean d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    java.lang.String a() -> a
    java.lang.String a(java.util.Date) -> a
    java.lang.String a(java.io.InputStream) -> a
    byte[] b(java.io.InputStream) -> b
    void a(java.io.File,byte[]) -> a
    void a(java.io.File,java.lang.String) -> a
    void c(java.io.InputStream) -> c
    void a(java.io.OutputStream) -> a
    boolean a(org.apache.http.Header,java.lang.String) -> a
u.aly.cg -> u.aly.gw:
    boolean a(byte,int) -> a
    boolean a(int,int) -> a
    byte b(byte,int) -> b
    int b(int,int) -> b
    byte a(byte,int,boolean) -> a
    int a(int,int,boolean) -> a
u.aly.ch -> u.aly.gx:
    short[] a -> a
    int b -> b
    short a() -> a
    void a(short) -> a
    void d() -> c
    void c() -> b
    java.lang.String toString() -> toString
u.aly.ci -> u.aly.ci:
    u.aly.dn j -> j
    u.aly.dd k -> k
    u.aly.dd l -> l
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int a() -> a
    u.aly.ci a(u.aly.di) -> a
    void b(u.aly.di) -> b
u.aly.cj -> u.aly.gy:
    void a(u.aly.di) -> a
    void b(u.aly.di) -> b
    u.aly.cj g() -> g
u.aly.ck -> u.aly.gz:
    java.util.Comparator a -> a
    int a(java.lang.Object,java.lang.Object) -> a
    int a(byte,byte) -> a
    int a(int,int) -> a
    int a(byte[],byte[]) -> a
    int a(java.lang.Comparable,java.lang.Comparable) -> a
    int a(java.util.List,java.util.List) -> a
    int a(java.util.Set,java.util.Set) -> a
    int a(java.util.Map,java.util.Map) -> a
    void a(java.nio.ByteBuffer,java.lang.StringBuilder) -> a
    java.lang.String a(byte) -> a
    byte[] a(java.nio.ByteBuffer) -> a
    boolean b(java.nio.ByteBuffer) -> b
    int a(java.nio.ByteBuffer,byte[],int) -> a
    java.nio.ByteBuffer c(java.nio.ByteBuffer) -> c
    java.nio.ByteBuffer d(java.nio.ByteBuffer) -> d
u.aly.ck$1 -> u.aly.ha:
u.aly.ck$a -> u.aly.hb:
    int compare(java.lang.Object,java.lang.Object) -> compare
u.aly.cm -> u.aly.hc:
    u.aly.di a -> a
    u.aly.dv b -> b
    void a(u.aly.cj,byte[]) -> a
u.aly.cp -> u.aly.hd:
u.aly.cq -> u.aly.he:
    short a() -> a
u.aly.cr -> u.aly.cr:
    byte a -> a
    byte b -> b
    byte c -> c
u.aly.cs -> u.aly.hf:
    java.io.ByteArrayOutputStream a -> a
    u.aly.du b -> b
    u.aly.di c -> c
    byte[] a(u.aly.cj) -> a
u.aly.ct -> u.aly.hg:
    java.lang.Object b -> b
    u.aly.cq c -> c
    java.util.Map a -> a
    java.lang.Object a(java.lang.Object) -> a
    java.util.Map a(java.util.Map) -> a
    java.util.Set a(java.util.Set) -> a
    java.util.List a(java.util.List) -> a
    u.aly.cq i() -> i
    java.lang.Object j() -> j
    java.lang.Object b(u.aly.cq) -> b
    java.lang.Object c(int) -> c
    boolean k() -> k
    boolean c(u.aly.cq) -> c
    boolean d(int) -> d
    void a(u.aly.di) -> a
    void b(u.aly.cq,java.lang.Object) -> b
    void a(int,java.lang.Object) -> a
    void b(u.aly.di) -> b
    void a(u.aly.cq,java.lang.Object) -> a
    java.lang.Object a(u.aly.di,u.aly.dd) -> a
    void c(u.aly.di) -> c
    java.lang.Object a(u.aly.di,short) -> a
    void d(u.aly.di) -> d
    u.aly.dn c() -> c
    u.aly.dd a(u.aly.cq) -> a
    u.aly.cq b(short) -> b
    java.lang.String toString() -> toString
    void b() -> b
u.aly.ct$1 -> u.aly.hh:
u.aly.ct$a -> u.aly.hi:
    void a(u.aly.di,u.aly.ct) -> a
    void b(u.aly.di,u.aly.ct) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.ct$b -> u.aly.hj:
    u.aly.ct$a a() -> a
    u.aly.dq b() -> b
u.aly.ct$c -> u.aly.hk:
    void a(u.aly.di,u.aly.ct) -> a
    void b(u.aly.di,u.aly.ct) -> b
    void a(u.aly.di,u.aly.cj) -> a
    void b(u.aly.di,u.aly.cj) -> b
u.aly.ct$d -> u.aly.hl:
    u.aly.ct$c a() -> a
    u.aly.dq b() -> b
u.aly.cu -> u.aly.cu:
    java.lang.Class a -> a
u.aly.cv -> u.aly.cv:
    java.lang.String a -> a
    byte b -> b
    u.aly.cw c -> c
    java.util.Map d -> d
    void a(java.lang.Class,java.util.Map) -> a
    java.util.Map a(java.lang.Class) -> a
u.aly.cw -> u.aly.cw:
    byte b -> b
    boolean a -> a
    java.lang.String c -> c
    boolean d -> d
    boolean a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
u.aly.cx -> u.aly.cx:
    u.aly.cw a -> a
u.aly.cy -> u.aly.cy:
    u.aly.cw a -> a
    u.aly.cw c -> c
u.aly.cz -> u.aly.cz:
    u.aly.cw a -> a
u.aly.d -> u.aly.d:
    java.lang.String b -> b
    java.io.File c -> c
    u.aly.bb d -> d
    long e -> e
    long f -> f
    java.util.Set g -> g
    u.aly.d$a h -> h
    u.aly.d a -> a
    u.aly.d a(android.content.Context) -> a
    boolean a(u.aly.a) -> a
    void a(long) -> a
    void a() -> a
    u.aly.bb b() -> b
    void g() -> g
    java.lang.String c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    u.aly.bb h() -> h
    void a(u.aly.bb) -> a
u.aly.d$a -> u.aly.hm:
    android.content.Context a -> a
    java.util.Set b -> b
    boolean a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    void b() -> b
u.aly.da -> u.aly.da:
    java.lang.Class a -> a
u.aly.db -> u.aly.hn:
    u.aly.dn h -> f
    boolean c -> a
    boolean d -> b
    int e -> c
    boolean f -> d
    byte[] i -> g
    byte[] j -> h
    byte[] k -> i
    byte[] l -> j
    byte[] m -> k
    byte[] n -> l
    byte[] o -> m
    byte[] p -> n
    void a(u.aly.dn) -> a
    void b() -> a
    void a(u.aly.dd) -> a
    void c() -> b
    void d() -> c
    void a(u.aly.df) -> a
    void e() -> d
    void a(u.aly.de) -> a
    void f() -> e
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dn j() -> f
    void k() -> g
    u.aly.dd l() -> h
    void m() -> i
    u.aly.df n() -> j
    void o() -> k
    u.aly.de p() -> l
    void q() -> m
    u.aly.dm r() -> n
    void s() -> o
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.lang.String b(int) -> b
    java.nio.ByteBuffer A() -> w
    int a(byte[],int,int) -> a
    void c(int) -> c
    void d(int) -> d
u.aly.db$a -> u.aly.ho:
    boolean a -> a
    boolean b -> b
    int c -> c
    u.aly.di a(u.aly.dw) -> a
u.aly.dc -> u.aly.hp:
    u.aly.dn d -> d
    u.aly.dd e -> f
    byte[] f -> g
    u.aly.ch m -> h
    short n -> i
    u.aly.dd o -> j
    java.lang.Boolean p -> k
    long q -> l
    byte[] a -> a
    byte[] b -> b
    byte[] r -> m
    byte[] c -> c
    void B() -> x
    void a(u.aly.dn) -> a
    void b() -> a
    void a(u.aly.dd) -> a
    void a(u.aly.dd,byte) -> a
    void d() -> c
    void a(u.aly.df) -> a
    void a(u.aly.de) -> a
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    void a(byte[],int,int) -> a
    void e() -> d
    void f() -> e
    void c() -> b
    void a(byte,int) -> a
    void b(int) -> b
    void b(long) -> b
    long c(long) -> c
    int c(int) -> c
    void a(long,byte[],int) -> a
    void b(byte) -> b
    void d(int) -> d
    u.aly.dn j() -> f
    void k() -> g
    u.aly.dd l() -> h
    u.aly.df n() -> j
    u.aly.de p() -> l
    u.aly.dm r() -> n
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.nio.ByteBuffer A() -> w
    byte[] e(int) -> e
    void f(int) -> f
    void m() -> i
    void o() -> k
    void q() -> m
    void s() -> o
    int E() -> z
    long F() -> A
    int g(int) -> g
    long d(long) -> d
    long a(byte[]) -> a
    boolean c(byte) -> c
    byte d(byte) -> d
    byte e(byte) -> e
u.aly.dc$a -> u.aly.hq:
    long a -> a
    u.aly.di a(u.aly.dw) -> a
u.aly.dd -> u.aly.dd:
    java.lang.String a -> a
    byte b -> b
    short c -> c
    java.lang.String toString() -> toString
    boolean a(u.aly.dd) -> a
u.aly.de -> u.aly.de:
    byte a -> a
    int b -> b
u.aly.df -> u.aly.df:
    byte a -> a
    byte b -> b
    int c -> c
u.aly.dg -> u.aly.dg:
    java.lang.String a -> a
    byte b -> b
    int c -> c
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    boolean a(u.aly.dg) -> a
u.aly.dh -> u.aly.dh:
    byte a -> a
    byte b -> b
    byte c -> c
    byte d -> d
u.aly.di -> u.aly.hr:
    u.aly.dw g -> e
    void a(u.aly.dn) -> a
    void b() -> a
    void a(u.aly.dd) -> a
    void c() -> b
    void d() -> c
    void a(u.aly.df) -> a
    void e() -> d
    void a(u.aly.de) -> a
    void f() -> e
    void a(boolean) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dn j() -> f
    void k() -> g
    u.aly.dd l() -> h
    void m() -> i
    u.aly.df n() -> j
    void o() -> k
    u.aly.de p() -> l
    void q() -> m
    u.aly.dm r() -> n
    void s() -> o
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.nio.ByteBuffer A() -> w
    void B() -> x
    java.lang.Class D() -> y
u.aly.dj -> u.aly.dj:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int a() -> a
u.aly.dk -> u.aly.hs:
    u.aly.di a(u.aly.dw) -> a
u.aly.dl -> u.aly.ht:
    int a -> a
    void a(u.aly.di,byte) -> a
    void a(u.aly.di,byte,int) -> a
u.aly.dm -> u.aly.dm:
    byte a -> a
    int b -> b
u.aly.dn -> u.aly.dn:
    java.lang.String a -> a
u.aly.do -> u.aly.hu:
    java.lang.Class D() -> y
    void a(java.util.BitSet,int) -> a
    java.util.BitSet b(int) -> b
    java.util.BitSet a(byte[]) -> a
    byte[] b(java.util.BitSet,int) -> b
u.aly.dp -> u.aly.dp:
    byte a -> a
    byte b -> b
    byte c -> c
    byte d -> d
    byte e -> e
    byte f -> f
    byte g -> g
    byte h -> h
    byte i -> i
    byte j -> j
    byte k -> k
    byte l -> l
    byte m -> m
    byte n -> n
u.aly.dq -> u.aly.hv:
    void b(u.aly.di,u.aly.cj) -> b
    void a(u.aly.di,u.aly.cj) -> a
u.aly.dr -> u.aly.hw:
    u.aly.dq b() -> b
u.aly.ds -> u.aly.hx:
u.aly.dt -> u.aly.hy:
u.aly.du -> u.aly.hz:
    java.io.InputStream a -> a
    java.io.OutputStream b -> b
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
u.aly.dv -> u.aly.ia:
    byte[] a -> a
    int b -> b
    int c -> c
    void a(byte[]) -> a
    void c(byte[],int,int) -> c
    void e() -> a
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.dw -> u.aly.ib:
    int a(byte[],int,int) -> a
    int d(byte[],int,int) -> d
    void b(byte[]) -> b
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.dx -> u.aly.dx:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int a() -> a
u.aly.e -> u.aly.ic:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.f -> u.aly.id:
    byte[] b -> a
    u.aly.w c -> b
    u.aly.f$a d -> c
    u.aly.bc e -> d
    u.aly.f f -> e
    android.content.Context g -> f
    u.aly.f a(android.content.Context) -> a
    void a(u.aly.w) -> a
    java.lang.String a(u.aly.bc) -> a
    boolean c(u.aly.bc) -> c
    byte[] a(u.aly.bd) -> a
    void b(u.aly.bc) -> b
    boolean a(java.lang.String,java.lang.String) -> a
    u.aly.bc a(u.aly.bc,u.aly.bc) -> a
    u.aly.bc d(u.aly.bc) -> d
    u.aly.bc a() -> a
    u.aly.f$a b() -> b
    void c() -> c
    void d() -> d
u.aly.f$a -> u.aly.ie:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    int i -> i
    int j -> j
    void a(u.aly.bc) -> a
    int a(int) -> a
    int b(int) -> b
    int c(int) -> c
    int[] a(int,int) -> a
    java.lang.String a(java.lang.String) -> a
    int d(int) -> d
    boolean a() -> a
    java.lang.String b(java.lang.String) -> b
    boolean b() -> b
    long a(long) -> a
    int a(u.aly.bc,java.lang.String) -> a
    java.lang.String b(u.aly.bc,java.lang.String) -> b
u.aly.g -> u.aly.if:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.h -> u.aly.ig:
    java.lang.String f() -> f
u.aly.i -> u.aly.ih:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.j -> u.aly.ii:
    java.util.regex.Pattern c -> a
    android.content.Context d -> b
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String b(java.lang.String) -> b
    java.io.File h() -> h
u.aly.k -> u.aly.ij:
    long a -> a
    int b -> b
    u.aly.s c -> c
    com.umeng.analytics.h d -> d
    u.aly.aa e -> e
    u.aly.al f -> f
    u.aly.ak g -> g
    u.aly.am h -> h
    u.aly.k$a i -> i
    u.aly.f$a j -> j
    int k -> k
    long l -> l
    int m -> m
    int n -> n
    android.content.Context o -> o
    void a() -> a
    void a(u.aly.q) -> a
    void b(u.aly.q) -> b
    void b() -> b
    void c() -> c
    void a(boolean) -> a
    void a(int) -> a
    void a(u.aly.bp) -> a
    u.aly.bp a(int[]) -> a
    u.aly.bp a(byte[]) -> a
    byte[] b(u.aly.bp) -> b
    boolean b(boolean) -> b
    boolean d() -> d
    void e() -> e
    boolean c(u.aly.bp) -> c
    u.aly.bp d(u.aly.bp) -> d
    void a(int,int,java.util.List) -> a
    boolean f() -> f
    void b(int) -> b
    void a(u.aly.f$a) -> a
    u.aly.f$a a(u.aly.k) -> a
    u.aly.al b(u.aly.k) -> b
    u.aly.aa c(u.aly.k) -> c
    u.aly.am d(u.aly.k) -> d
    void a(u.aly.k,int) -> a
    u.aly.ak e(u.aly.k) -> e
    android.content.Context f(u.aly.k) -> f
u.aly.k$1 -> u.aly.ik:
    u.aly.k a -> a
    void a() -> a
u.aly.k$a -> u.aly.il:
    com.umeng.analytics.ReportPolicy$i b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    u.aly.k a -> a
    void a(boolean) -> a
    com.umeng.analytics.ReportPolicy$i b(boolean) -> b
    com.umeng.analytics.ReportPolicy$i b(int,int) -> a
    void a(u.aly.f$a) -> a
u.aly.l -> u.aly.im:
    u.aly.p a -> a
    android.content.Context b -> b
    u.aly.l c -> c
    u.aly.l a(android.content.Context) -> a
    void a(u.aly.q) -> a
    void b(u.aly.q) -> b
    void a() -> a
    void b() -> b
    void c() -> c
    u.aly.p a(u.aly.l) -> a
u.aly.l$1 -> u.aly.in:
    u.aly.q a -> a
    u.aly.l b -> b
    void a() -> a
u.aly.l$2 -> u.aly.io:
    u.aly.l a -> a
    void a() -> a
u.aly.l$3 -> u.aly.ip:
    u.aly.l a -> a
    void a() -> a
u.aly.l$4 -> u.aly.iq:
    u.aly.l a -> a
    void a() -> a
u.aly.m -> u.aly.ir:
    java.lang.String a -> a
    boolean b -> b
    android.content.SharedPreferences c -> c
    java.util.Map d -> d
    void a(boolean) -> a
    void a(java.lang.String,u.aly.ae) -> a
    u.aly.ae b(java.lang.String) -> a
    void c(java.lang.String) -> b
    boolean d(java.lang.String) -> c
u.aly.n -> u.aly.is:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    u.aly.v b -> b
    void a(u.aly.v) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(java.lang.Throwable) -> a
u.aly.o -> u.aly.it:
    int a -> a
    int b -> b
    u.aly.m c -> c
    android.content.Context d -> d
    u.aly.l e -> e
    void a(java.lang.String,java.util.Map,long) -> a
    void a(java.lang.String,java.lang.String,long,int) -> a
    void a(java.lang.String,java.util.Map) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void a(java.lang.String,java.util.Map,java.lang.String) -> a
    void c(java.lang.String,java.lang.String) -> c
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    boolean a(java.util.Map) -> a
u.aly.p -> u.aly.iu:
    void b(u.aly.q) -> b
    void a(u.aly.q) -> a
    void b() -> b
    void a() -> a
    void c() -> c
u.aly.q -> u.aly.iv:
    void a(u.aly.bp,java.lang.String) -> a
u.aly.r -> u.aly.iw:
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
u.aly.s -> u.aly.ix:
    java.util.List a -> a
    u.aly.ao b -> b
    u.aly.aq c -> c
    u.aly.at d -> d
    u.aly.bh e -> e
    android.content.Context f -> f
    int b() -> a
    void a(u.aly.q) -> a
    void a(u.aly.bp) -> a
    void a(u.aly.ao) -> a
    u.aly.aq c() -> b
    u.aly.at d() -> c
    u.aly.bh e() -> d
    u.aly.bc f() -> e
    u.aly.bb g() -> f
    u.aly.ar h() -> g
    java.util.Map i() -> h
    u.aly.ap j() -> i
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
u.aly.t -> u.aly.iy:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    android.content.Context d -> d
    u.aly.r e -> e
    void a(u.aly.r) -> a
    byte[] a(byte[]) -> a
    boolean a() -> a
    byte[] a(byte[],java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
u.aly.u -> u.aly.iz:
    java.lang.String a(java.io.Serializable) -> a
    java.lang.Object a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    byte[] b(java.lang.String) -> b
u.aly.v -> u.aly.ja:
    void a(java.lang.Throwable) -> a
u.aly.w -> u.aly.jb:
    void a(u.aly.f$a) -> a
u.aly.x -> u.aly.jc:
    android.content.SharedPreferences a(android.content.Context,java.lang.String) -> a
    android.content.SharedPreferences a(android.content.Context) -> a
u.aly.y -> u.aly.jd:
    u.aly.d d -> a
    u.aly.f e -> b
    int f -> c
    android.content.Context g -> d
    u.aly.aa h -> e
    u.aly.t i -> f
    u.aly.bp j -> g
    boolean k -> h
    boolean l -> i
    void a(u.aly.bp) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void a(u.aly.w) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    int a(byte[]) -> a
    byte[] b(u.aly.bp) -> b
    u.aly.t a(u.aly.y) -> a
    int a(u.aly.y,byte[]) -> a
    u.aly.aa b(u.aly.y) -> b
    boolean c(u.aly.y) -> c
u.aly.y$1 -> u.aly.je:
    u.aly.y a -> a
    void a(java.io.File) -> a
    boolean b(java.io.File) -> b
    void c(java.io.File) -> c
u.aly.z -> u.aly.jf:
    java.lang.String d -> a
    java.lang.String e -> b
    java.lang.String g -> c
    u.aly.aj a(android.content.Context) -> a
    void a(android.content.SharedPreferences) -> a
    java.lang.String b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    boolean b(android.content.SharedPreferences) -> b
    java.lang.String a(android.content.Context,android.content.SharedPreferences) -> a
    boolean e(android.content.Context) -> e
    void f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
vi.com.gdi.bgl.android.java.EnvDrawText -> vi.com.gdi.bgl.android.java.EnvDrawText:
    java.lang.String a -> a
    android.graphics.Paint pt -> pt
    int iWordWidthMax -> iWordWidthMax
    int iWordHightMax -> iWordHightMax
    boolean bBmpChange -> bBmpChange
    android.graphics.Bitmap bmp -> bmp
    android.graphics.Canvas canvasTemp -> canvasTemp
    int[] buffer -> buffer
    android.util.SparseArray fontCache -> fontCache
    int[] drawText(java.lang.String,int,int,int[],int,int,int,int) -> drawText
    short[] getTextSize(java.lang.String,int) -> getTextSize
    void registFontCache(int,android.graphics.Typeface) -> registFontCache
    void removeFontCache(int) -> removeFontCache
vi.com.gdi.bgl.android.java.a -> vi.com.gdi.bgl.android.java.a:
    android.graphics.Typeface a -> a
    int b -> b
